public enum BigInteger.Sign
{
	// Fields
	public const BigInteger.Sign Negative = -1;
	public const BigInteger.Sign Zero = 0;
	public const BigInteger.Sign Positive = 1;
}
public enum RegistryHive
{
	// Fields
	public const RegistryHive ClassesRoot = -2147483648;
	public const RegistryHive CurrentConfig = -2147483643;
	public const RegistryHive CurrentUser = -2147483647;
	public const RegistryHive DynData = -2147483642;
	public const RegistryHive LocalMachine = -2147483646;
	public const RegistryHive PerformanceData = -2147483644;
	public const RegistryHive Users = -2147483645;
}
public enum RegistryValueKind
{
	// Fields
	public const RegistryValueKind Unknown = 0;
	public const RegistryValueKind String = 1;
	public const RegistryValueKind ExpandString = 2;
	public const RegistryValueKind Binary = 3;
	public const RegistryValueKind DWord = 4;
	public const RegistryValueKind MultiString = 7;
	public const RegistryValueKind QWord = 11;
	public const RegistryValueKind None = -1;
}
public enum RegistryValueOptions
{
	// Fields
	public const RegistryValueOptions None = 0;
	public const RegistryValueOptions DoNotExpandEnvironmentNames = 1;
}
public enum AttributeTargets
{
	// Fields
	public const AttributeTargets Assembly = 1;
	public const AttributeTargets Module = 2;
	public const AttributeTargets Class = 4;
	public const AttributeTargets Struct = 8;
	public const AttributeTargets Enum = 16;
	public const AttributeTargets Constructor = 32;
	public const AttributeTargets Method = 64;
	public const AttributeTargets Property = 128;
	public const AttributeTargets Field = 256;
	public const AttributeTargets Event = 512;
	public const AttributeTargets Interface = 1024;
	public const AttributeTargets Parameter = 2048;
	public const AttributeTargets Delegate = 4096;
	public const AttributeTargets ReturnValue = 8192;
	public const AttributeTargets GenericParameter = 16384;
	public const AttributeTargets All = 32767;
}
public enum ConsoleColor
{
	// Fields
	public const ConsoleColor Black = 0;
	public const ConsoleColor DarkBlue = 1;
	public const ConsoleColor DarkGreen = 2;
	public const ConsoleColor DarkCyan = 3;
	public const ConsoleColor DarkRed = 4;
	public const ConsoleColor DarkMagenta = 5;
	public const ConsoleColor DarkYellow = 6;
	public const ConsoleColor Gray = 7;
	public const ConsoleColor DarkGray = 8;
	public const ConsoleColor Blue = 9;
	public const ConsoleColor Green = 10;
	public const ConsoleColor Cyan = 11;
	public const ConsoleColor Red = 12;
	public const ConsoleColor Magenta = 13;
	public const ConsoleColor Yellow = 14;
	public const ConsoleColor White = 15;
}
public enum ConsoleKey
{
	// Fields
	public const ConsoleKey Backspace = 8;
	public const ConsoleKey Tab = 9;
	public const ConsoleKey Clear = 12;
	public const ConsoleKey Enter = 13;
	public const ConsoleKey Pause = 19;
	public const ConsoleKey Escape = 27;
	public const ConsoleKey Spacebar = 32;
	public const ConsoleKey PageUp = 33;
	public const ConsoleKey PageDown = 34;
	public const ConsoleKey End = 35;
	public const ConsoleKey Home = 36;
	public const ConsoleKey LeftArrow = 37;
	public const ConsoleKey UpArrow = 38;
	public const ConsoleKey RightArrow = 39;
	public const ConsoleKey DownArrow = 40;
	public const ConsoleKey Select = 41;
	public const ConsoleKey Print = 42;
	public const ConsoleKey Execute = 43;
	public const ConsoleKey PrintScreen = 44;
	public const ConsoleKey Insert = 45;
	public const ConsoleKey Delete = 46;
	public const ConsoleKey Help = 47;
	public const ConsoleKey D0 = 48;
	public const ConsoleKey D1 = 49;
	public const ConsoleKey D2 = 50;
	public const ConsoleKey D3 = 51;
	public const ConsoleKey D4 = 52;
	public const ConsoleKey D5 = 53;
	public const ConsoleKey D6 = 54;
	public const ConsoleKey D7 = 55;
	public const ConsoleKey D8 = 56;
	public const ConsoleKey D9 = 57;
	public const ConsoleKey A = 65;
	public const ConsoleKey B = 66;
	public const ConsoleKey C = 67;
	public const ConsoleKey D = 68;
	public const ConsoleKey E = 69;
	public const ConsoleKey F = 70;
	public const ConsoleKey G = 71;
	public const ConsoleKey H = 72;
	public const ConsoleKey I = 73;
	public const ConsoleKey J = 74;
	public const ConsoleKey K = 75;
	public const ConsoleKey L = 76;
	public const ConsoleKey M = 77;
	public const ConsoleKey N = 78;
	public const ConsoleKey O = 79;
	public const ConsoleKey P = 80;
	public const ConsoleKey Q = 81;
	public const ConsoleKey R = 82;
	public const ConsoleKey S = 83;
	public const ConsoleKey T = 84;
	public const ConsoleKey U = 85;
	public const ConsoleKey V = 86;
	public const ConsoleKey W = 87;
	public const ConsoleKey X = 88;
	public const ConsoleKey Y = 89;
	public const ConsoleKey Z = 90;
	public const ConsoleKey LeftWindows = 91;
	public const ConsoleKey RightWindows = 92;
	public const ConsoleKey Applications = 93;
	public const ConsoleKey Sleep = 95;
	public const ConsoleKey NumPad0 = 96;
	public const ConsoleKey NumPad1 = 97;
	public const ConsoleKey NumPad2 = 98;
	public const ConsoleKey NumPad3 = 99;
	public const ConsoleKey NumPad4 = 100;
	public const ConsoleKey NumPad5 = 101;
	public const ConsoleKey NumPad6 = 102;
	public const ConsoleKey NumPad7 = 103;
	public const ConsoleKey NumPad8 = 104;
	public const ConsoleKey NumPad9 = 105;
	public const ConsoleKey Multiply = 106;
	public const ConsoleKey Add = 107;
	public const ConsoleKey Separator = 108;
	public const ConsoleKey Subtract = 109;
	public const ConsoleKey Decimal = 110;
	public const ConsoleKey Divide = 111;
	public const ConsoleKey F1 = 112;
	public const ConsoleKey F2 = 113;
	public const ConsoleKey F3 = 114;
	public const ConsoleKey F4 = 115;
	public const ConsoleKey F5 = 116;
	public const ConsoleKey F6 = 117;
	public const ConsoleKey F7 = 118;
	public const ConsoleKey F8 = 119;
	public const ConsoleKey F9 = 120;
	public const ConsoleKey F10 = 121;
	public const ConsoleKey F11 = 122;
	public const ConsoleKey F12 = 123;
	public const ConsoleKey F13 = 124;
	public const ConsoleKey F14 = 125;
	public const ConsoleKey F15 = 126;
	public const ConsoleKey F16 = 127;
	public const ConsoleKey F17 = 128;
	public const ConsoleKey F18 = 129;
	public const ConsoleKey F19 = 130;
	public const ConsoleKey F20 = 131;
	public const ConsoleKey F21 = 132;
	public const ConsoleKey F22 = 133;
	public const ConsoleKey F23 = 134;
	public const ConsoleKey F24 = 135;
	public const ConsoleKey BrowserBack = 166;
	public const ConsoleKey BrowserForward = 167;
	public const ConsoleKey BrowserRefresh = 168;
	public const ConsoleKey BrowserStop = 169;
	public const ConsoleKey BrowserSearch = 170;
	public const ConsoleKey BrowserFavorites = 171;
	public const ConsoleKey BrowserHome = 172;
	public const ConsoleKey VolumeMute = 173;
	public const ConsoleKey VolumeDown = 174;
	public const ConsoleKey VolumeUp = 175;
	public const ConsoleKey MediaNext = 176;
	public const ConsoleKey MediaPrevious = 177;
	public const ConsoleKey MediaStop = 178;
	public const ConsoleKey MediaPlay = 179;
	public const ConsoleKey LaunchMail = 180;
	public const ConsoleKey LaunchMediaSelect = 181;
	public const ConsoleKey LaunchApp1 = 182;
	public const ConsoleKey LaunchApp2 = 183;
	public const ConsoleKey Oem1 = 186;
	public const ConsoleKey OemPlus = 187;
	public const ConsoleKey OemComma = 188;
	public const ConsoleKey OemMinus = 189;
	public const ConsoleKey OemPeriod = 190;
	public const ConsoleKey Oem2 = 191;
	public const ConsoleKey Oem3 = 192;
	public const ConsoleKey Oem4 = 219;
	public const ConsoleKey Oem5 = 220;
	public const ConsoleKey Oem6 = 221;
	public const ConsoleKey Oem7 = 222;
	public const ConsoleKey Oem8 = 223;
	public const ConsoleKey Oem102 = 226;
	public const ConsoleKey Process = 229;
	public const ConsoleKey Packet = 231;
	public const ConsoleKey Attention = 246;
	public const ConsoleKey CrSel = 247;
	public const ConsoleKey ExSel = 248;
	public const ConsoleKey EraseEndOfFile = 249;
	public const ConsoleKey Play = 250;
	public const ConsoleKey Zoom = 251;
	public const ConsoleKey NoName = 252;
	public const ConsoleKey Pa1 = 253;
	public const ConsoleKey OemClear = 254;
}
public enum ConsoleModifiers
{
	// Fields
	public const ConsoleModifiers Alt = 1;
	public const ConsoleModifiers Shift = 2;
	public const ConsoleModifiers Control = 4;
}
public enum ConsoleSpecialKey
{
	// Fields
	public const ConsoleSpecialKey ControlC = 0;
	public const ConsoleSpecialKey ControlBreak = 1;
}
public enum Base64FormattingOptions
{
	// Fields
	public const Base64FormattingOptions None = 0;
	public const Base64FormattingOptions InsertLineBreaks = 1;
}
public enum DateTimeKind
{
	// Fields
	public const DateTimeKind Unspecified = 0;
	public const DateTimeKind Utc = 1;
	public const DateTimeKind Local = 2;
}
public enum DayOfWeek
{
	// Fields
	public const DayOfWeek Sunday = 0;
	public const DayOfWeek Monday = 1;
	public const DayOfWeek Tuesday = 2;
	public const DayOfWeek Wednesday = 3;
	public const DayOfWeek Thursday = 4;
	public const DayOfWeek Friday = 5;
	public const DayOfWeek Saturday = 6;
}
public enum MidpointRounding
{
	// Fields
	public const MidpointRounding ToEven = 0;
	public const MidpointRounding AwayFromZero = 1;
}
public enum StringSplitOptions
{
	// Fields
	public const StringSplitOptions None = 0;
	public const StringSplitOptions RemoveEmptyEntries = 1;
}
public enum Environment.SpecialFolder
{
	// Fields
	public const Environment.SpecialFolder MyDocuments = 5;
	public const Environment.SpecialFolder Desktop = 0;
	public const Environment.SpecialFolder MyComputer = 17;
	public const Environment.SpecialFolder Programs = 2;
	public const Environment.SpecialFolder Personal = 5;
	public const Environment.SpecialFolder Favorites = 6;
	public const Environment.SpecialFolder Startup = 7;
	public const Environment.SpecialFolder Recent = 8;
	public const Environment.SpecialFolder SendTo = 9;
	public const Environment.SpecialFolder StartMenu = 11;
	public const Environment.SpecialFolder MyMusic = 13;
	public const Environment.SpecialFolder DesktopDirectory = 16;
	public const Environment.SpecialFolder Templates = 21;
	public const Environment.SpecialFolder ApplicationData = 26;
	public const Environment.SpecialFolder LocalApplicationData = 28;
	public const Environment.SpecialFolder InternetCache = 32;
	public const Environment.SpecialFolder Cookies = 33;
	public const Environment.SpecialFolder History = 34;
	public const Environment.SpecialFolder CommonApplicationData = 35;
	public const Environment.SpecialFolder System = 37;
	public const Environment.SpecialFolder ProgramFiles = 38;
	public const Environment.SpecialFolder MyPictures = 39;
	public const Environment.SpecialFolder CommonProgramFiles = 43;
	public const Environment.SpecialFolder MyVideos = 14;
	public const Environment.SpecialFolder NetworkShortcuts = 19;
	public const Environment.SpecialFolder Fonts = 20;
	public const Environment.SpecialFolder CommonStartMenu = 22;
	public const Environment.SpecialFolder CommonPrograms = 23;
	public const Environment.SpecialFolder CommonStartup = 24;
	public const Environment.SpecialFolder CommonDesktopDirectory = 25;
	public const Environment.SpecialFolder PrinterShortcuts = 27;
	public const Environment.SpecialFolder Windows = 36;
	public const Environment.SpecialFolder UserProfile = 40;
	public const Environment.SpecialFolder SystemX86 = 41;
	public const Environment.SpecialFolder ProgramFilesX86 = 42;
	public const Environment.SpecialFolder CommonProgramFilesX86 = 44;
	public const Environment.SpecialFolder CommonTemplates = 45;
	public const Environment.SpecialFolder CommonDocuments = 46;
	public const Environment.SpecialFolder CommonAdminTools = 47;
	public const Environment.SpecialFolder AdminTools = 48;
	public const Environment.SpecialFolder CommonMusic = 53;
	public const Environment.SpecialFolder CommonPictures = 54;
	public const Environment.SpecialFolder CommonVideos = 55;
	public const Environment.SpecialFolder Resources = 56;
	public const Environment.SpecialFolder LocalizedResources = 57;
	public const Environment.SpecialFolder CommonOemLinks = 58;
	public const Environment.SpecialFolder CDBurning = 59;
}
public enum Environment.SpecialFolderOption
{
	// Fields
	public const Environment.SpecialFolderOption None = 0;
	public const Environment.SpecialFolderOption DoNotVerify = 16384;
	public const Environment.SpecialFolderOption Create = 32768;
}
public enum PlatformID
{
	// Fields
	public const PlatformID Win32S = 0;
	public const PlatformID Win32Windows = 1;
	public const PlatformID Win32NT = 2;
	public const PlatformID WinCE = 3;
	public const PlatformID Unix = 4;
	public const PlatformID Xbox = 5;
	public const PlatformID MacOSX = 6;
}
public enum StringComparison
{
	// Fields
	public const StringComparison CurrentCulture = 0;
	public const StringComparison CurrentCultureIgnoreCase = 1;
	public const StringComparison InvariantCulture = 2;
	public const StringComparison InvariantCultureIgnoreCase = 3;
	public const StringComparison Ordinal = 4;
	public const StringComparison OrdinalIgnoreCase = 5;
}
public enum TypeCode
{
	// Fields
	public const TypeCode Empty = 0;
	public const TypeCode Object = 1;
	public const TypeCode DBNull = 2;
	public const TypeCode Boolean = 3;
	public const TypeCode Char = 4;
	public const TypeCode SByte = 5;
	public const TypeCode Byte = 6;
	public const TypeCode Int16 = 7;
	public const TypeCode UInt16 = 8;
	public const TypeCode Int32 = 9;
	public const TypeCode UInt32 = 10;
	public const TypeCode Int64 = 11;
	public const TypeCode UInt64 = 12;
	public const TypeCode Single = 13;
	public const TypeCode Double = 14;
	public const TypeCode Decimal = 15;
	public const TypeCode DateTime = 16;
	public const TypeCode String = 18;
}
public enum AssemblyHashAlgorithm
{
	// Fields
	public const AssemblyHashAlgorithm None = 0;
	public const AssemblyHashAlgorithm MD5 = 32771;
	public const AssemblyHashAlgorithm SHA1 = 32772;
	public const AssemblyHashAlgorithm SHA256 = 32780;
	public const AssemblyHashAlgorithm SHA384 = 32781;
	public const AssemblyHashAlgorithm SHA512 = 32782;
}
public enum AssemblyVersionCompatibility
{
	// Fields
	public const AssemblyVersionCompatibility SameMachine = 1;
	public const AssemblyVersionCompatibility SameProcess = 2;
	public const AssemblyVersionCompatibility SameDomain = 3;
}
public enum NormalizationForm
{
	// Fields
	public const NormalizationForm FormC = 1;
	public const NormalizationForm FormD = 2;
	public const NormalizationForm FormKC = 5;
	public const NormalizationForm FormKD = 6;
}
public enum AssemblyNameFlags
{
	// Fields
	public const AssemblyNameFlags None = 0;
	public const AssemblyNameFlags PublicKey = 1;
	public const AssemblyNameFlags EnableJITcompileOptimizer = 16384;
	public const AssemblyNameFlags EnableJITcompileTracking = 32768;
	public const AssemblyNameFlags Retargetable = 256;
}
public enum AssemblyContentType
{
	// Fields
	public const AssemblyContentType Default = 0;
	public const AssemblyContentType WindowsRuntime = 1;
}
public enum ProcessorArchitecture
{
	// Fields
	public const ProcessorArchitecture None = 0;
	public const ProcessorArchitecture MSIL = 1;
	public const ProcessorArchitecture X86 = 2;
	public const ProcessorArchitecture IA64 = 3;
	public const ProcessorArchitecture Amd64 = 4;
	public const ProcessorArchitecture Arm = 5;
}
public enum BindingFlags
{
	// Fields
	public const BindingFlags Default = 0;
	public const BindingFlags IgnoreCase = 1;
	public const BindingFlags DeclaredOnly = 2;
	public const BindingFlags Instance = 4;
	public const BindingFlags Static = 8;
	public const BindingFlags Public = 16;
	public const BindingFlags NonPublic = 32;
	public const BindingFlags FlattenHierarchy = 64;
	public const BindingFlags InvokeMethod = 256;
	public const BindingFlags CreateInstance = 512;
	public const BindingFlags GetField = 1024;
	public const BindingFlags SetField = 2048;
	public const BindingFlags GetProperty = 4096;
	public const BindingFlags SetProperty = 8192;
	public const BindingFlags PutDispProperty = 16384;
	public const BindingFlags PutRefDispProperty = 32768;
	public const BindingFlags ExactBinding = 65536;
	public const BindingFlags SuppressChangeType = 131072;
	public const BindingFlags OptionalParamBinding = 262144;
	public const BindingFlags IgnoreReturn = 16777216;
}
public enum CallingConventions
{
	// Fields
	public const CallingConventions Standard = 1;
	public const CallingConventions VarArgs = 2;
	public const CallingConventions Any = 3;
	public const CallingConventions HasThis = 32;
	public const CallingConventions ExplicitThis = 64;
}
public enum EventAttributes
{
	// Fields
	public const EventAttributes None = 0;
	public const EventAttributes SpecialName = 512;
	public const EventAttributes ReservedMask = 1024;
	public const EventAttributes RTSpecialName = 1024;
}
public enum FieldAttributes
{
	// Fields
	public const FieldAttributes FieldAccessMask = 7;
	public const FieldAttributes PrivateScope = 0;
	public const FieldAttributes Private = 1;
	public const FieldAttributes FamANDAssem = 2;
	public const FieldAttributes Assembly = 3;
	public const FieldAttributes Family = 4;
	public const FieldAttributes FamORAssem = 5;
	public const FieldAttributes Public = 6;
	public const FieldAttributes Static = 16;
	public const FieldAttributes InitOnly = 32;
	public const FieldAttributes Literal = 64;
	public const FieldAttributes NotSerialized = 128;
	public const FieldAttributes SpecialName = 512;
	public const FieldAttributes PinvokeImpl = 8192;
	public const FieldAttributes ReservedMask = 38144;
	public const FieldAttributes RTSpecialName = 1024;
	public const FieldAttributes HasFieldMarshal = 4096;
	public const FieldAttributes HasDefault = 32768;
	public const FieldAttributes HasFieldRVA = 256;
}
public enum GenericParameterAttributes
{
	// Fields
	public const GenericParameterAttributes None = 0;
	public const GenericParameterAttributes VarianceMask = 3;
	public const GenericParameterAttributes Covariant = 1;
	public const GenericParameterAttributes Contravariant = 2;
	public const GenericParameterAttributes SpecialConstraintMask = 28;
	public const GenericParameterAttributes ReferenceTypeConstraint = 4;
	public const GenericParameterAttributes NotNullableValueTypeConstraint = 8;
	public const GenericParameterAttributes DefaultConstructorConstraint = 16;
}
public enum ResourceLocation
{
	// Fields
	public const ResourceLocation Embedded = 1;
	public const ResourceLocation ContainedInAnotherAssembly = 2;
	public const ResourceLocation ContainedInManifestFile = 4;
}
public enum MemberTypes
{
	// Fields
	public const MemberTypes Constructor = 1;
	public const MemberTypes Event = 2;
	public const MemberTypes Field = 4;
	public const MemberTypes Method = 8;
	public const MemberTypes Property = 16;
	public const MemberTypes TypeInfo = 32;
	public const MemberTypes Custom = 64;
	public const MemberTypes NestedType = 128;
	public const MemberTypes All = 191;
}
public enum MethodAttributes
{
	// Fields
	public const MethodAttributes MemberAccessMask = 7;
	public const MethodAttributes PrivateScope = 0;
	public const MethodAttributes Private = 1;
	public const MethodAttributes FamANDAssem = 2;
	public const MethodAttributes Assembly = 3;
	public const MethodAttributes Family = 4;
	public const MethodAttributes FamORAssem = 5;
	public const MethodAttributes Public = 6;
	public const MethodAttributes Static = 16;
	public const MethodAttributes Final = 32;
	public const MethodAttributes Virtual = 64;
	public const MethodAttributes HideBySig = 128;
	public const MethodAttributes CheckAccessOnOverride = 512;
	public const MethodAttributes VtableLayoutMask = 256;
	public const MethodAttributes ReuseSlot = 0;
	public const MethodAttributes NewSlot = 256;
	public const MethodAttributes Abstract = 1024;
	public const MethodAttributes SpecialName = 2048;
	public const MethodAttributes PinvokeImpl = 8192;
	public const MethodAttributes UnmanagedExport = 8;
	public const MethodAttributes RTSpecialName = 4096;
	public const MethodAttributes ReservedMask = 53248;
	public const MethodAttributes HasSecurity = 16384;
	public const MethodAttributes RequireSecObject = 32768;
}
public enum ExceptionHandlingClauseOptions
{
	// Fields
	public const ExceptionHandlingClauseOptions Clause = 0;
	public const ExceptionHandlingClauseOptions Filter = 1;
	public const ExceptionHandlingClauseOptions Finally = 2;
	public const ExceptionHandlingClauseOptions Fault = 4;
}
public enum MethodImplAttributes
{
	// Fields
	public const MethodImplAttributes CodeTypeMask = 3;
	public const MethodImplAttributes IL = 0;
	public const MethodImplAttributes Native = 1;
	public const MethodImplAttributes OPTIL = 2;
	public const MethodImplAttributes Runtime = 3;
	public const MethodImplAttributes ManagedMask = 4;
	public const MethodImplAttributes Unmanaged = 4;
	public const MethodImplAttributes Managed = 0;
	public const MethodImplAttributes ForwardRef = 16;
	public const MethodImplAttributes PreserveSig = 128;
	public const MethodImplAttributes InternalCall = 4096;
	public const MethodImplAttributes Synchronized = 32;
	public const MethodImplAttributes NoInlining = 8;
	[ComVisibleAttribute]
	public const MethodImplAttributes AggressiveInlining = 256;
	public const MethodImplAttributes NoOptimization = 64;
	public const MethodImplAttributes MaxMethodImplVal = 65535;
}
public enum ParameterAttributes
{
	// Fields
	public const ParameterAttributes None = 0;
	public const ParameterAttributes In = 1;
	public const ParameterAttributes Out = 2;
	public const ParameterAttributes Lcid = 4;
	public const ParameterAttributes Retval = 8;
	public const ParameterAttributes Optional = 16;
	public const ParameterAttributes ReservedMask = 61440;
	public const ParameterAttributes HasDefault = 4096;
	public const ParameterAttributes HasFieldMarshal = 8192;
	public const ParameterAttributes Reserved3 = 16384;
	public const ParameterAttributes Reserved4 = 32768;
}
public enum PropertyAttributes
{
	// Fields
	public const PropertyAttributes None = 0;
	public const PropertyAttributes SpecialName = 512;
	public const PropertyAttributes ReservedMask = 62464;
	public const PropertyAttributes RTSpecialName = 1024;
	public const PropertyAttributes HasDefault = 4096;
	public const PropertyAttributes Reserved2 = 8192;
	public const PropertyAttributes Reserved3 = 16384;
	public const PropertyAttributes Reserved4 = 32768;
}
public enum TypeAttributes
{
	// Fields
	public const TypeAttributes VisibilityMask = 7;
	public const TypeAttributes NotPublic = 0;
	public const TypeAttributes Public = 1;
	public const TypeAttributes NestedPublic = 2;
	public const TypeAttributes NestedPrivate = 3;
	public const TypeAttributes NestedFamily = 4;
	public const TypeAttributes NestedAssembly = 5;
	public const TypeAttributes NestedFamANDAssem = 6;
	public const TypeAttributes NestedFamORAssem = 7;
	public const TypeAttributes LayoutMask = 24;
	public const TypeAttributes AutoLayout = 0;
	public const TypeAttributes SequentialLayout = 8;
	public const TypeAttributes ExplicitLayout = 16;
	public const TypeAttributes ClassSemanticsMask = 32;
	public const TypeAttributes Class = 0;
	public const TypeAttributes Interface = 32;
	public const TypeAttributes Abstract = 128;
	public const TypeAttributes Sealed = 256;
	public const TypeAttributes SpecialName = 1024;
	public const TypeAttributes Import = 4096;
	public const TypeAttributes Serializable = 8192;
	[ComVisibleAttribute]
	public const TypeAttributes WindowsRuntime = 16384;
	public const TypeAttributes StringFormatMask = 196608;
	public const TypeAttributes AnsiClass = 0;
	public const TypeAttributes UnicodeClass = 65536;
	public const TypeAttributes AutoClass = 131072;
	public const TypeAttributes CustomFormatClass = 196608;
	public const TypeAttributes CustomFormatMask = 12582912;
	public const TypeAttributes BeforeFieldInit = 1048576;
	public const TypeAttributes ReservedMask = 264192;
	public const TypeAttributes RTSpecialName = 2048;
	public const TypeAttributes HasSecurity = 262144;
}
public enum FileAccess
{
	// Fields
	public const FileAccess Read = 1;
	public const FileAccess Write = 2;
	public const FileAccess ReadWrite = 3;
}
public enum FileAttributes
{
	// Fields
	public const FileAttributes Archive = 32;
	public const FileAttributes Compressed = 2048;
	public const FileAttributes Device = 64;
	public const FileAttributes Directory = 16;
	public const FileAttributes Encrypted = 16384;
	public const FileAttributes Hidden = 2;
	public const FileAttributes Normal = 128;
	public const FileAttributes NotContentIndexed = 8192;
	public const FileAttributes Offline = 4096;
	public const FileAttributes ReadOnly = 1;
	public const FileAttributes ReparsePoint = 1024;
	public const FileAttributes SparseFile = 512;
	public const FileAttributes System = 4;
	public const FileAttributes Temporary = 256;
	public const FileAttributes IntegrityStream = 32768;
	public const FileAttributes NoScrubData = 131072;
}
public enum FileMode
{
	// Fields
	public const FileMode CreateNew = 1;
	public const FileMode Create = 2;
	public const FileMode Open = 3;
	public const FileMode OpenOrCreate = 4;
	public const FileMode Truncate = 5;
	public const FileMode Append = 6;
}
public enum FileOptions
{
	// Fields
	public const FileOptions None = 0;
	public const FileOptions Encrypted = 16384;
	public const FileOptions DeleteOnClose = 67108864;
	public const FileOptions SequentialScan = 134217728;
	public const FileOptions RandomAccess = 268435456;
	public const FileOptions Asynchronous = 1073741824;
	public const FileOptions WriteThrough = -2147483648;
}
public enum FileShare
{
	// Fields
	public const FileShare None = 0;
	public const FileShare Read = 1;
	public const FileShare Write = 2;
	public const FileShare ReadWrite = 3;
	public const FileShare Delete = 4;
	public const FileShare Inheritable = 16;
}
public enum SearchOption
{
	// Fields
	public const SearchOption TopDirectoryOnly = 0;
	public const SearchOption AllDirectories = 1;
}
public enum SeekOrigin
{
	// Fields
	public const SeekOrigin Begin = 0;
	public const SeekOrigin Current = 1;
	public const SeekOrigin End = 2;
}
public enum CalendarAlgorithmType
{
	// Fields
	public const CalendarAlgorithmType Unknown = 0;
	public const CalendarAlgorithmType SolarCalendar = 1;
	public const CalendarAlgorithmType LunarCalendar = 2;
	public const CalendarAlgorithmType LunisolarCalendar = 3;
}
public enum CalendarWeekRule
{
	// Fields
	public const CalendarWeekRule FirstDay = 0;
	public const CalendarWeekRule FirstFullWeek = 1;
	public const CalendarWeekRule FirstFourDayWeek = 2;
}
public enum CompareOptions
{
	// Fields
	public const CompareOptions None = 0;
	public const CompareOptions IgnoreCase = 1;
	public const CompareOptions IgnoreNonSpace = 2;
	public const CompareOptions IgnoreSymbols = 4;
	public const CompareOptions IgnoreKanaType = 8;
	public const CompareOptions IgnoreWidth = 16;
	public const CompareOptions OrdinalIgnoreCase = 268435456;
	public const CompareOptions StringSort = 536870912;
	public const CompareOptions Ordinal = 1073741824;
}
public enum CultureTypes
{
	// Fields
	public const CultureTypes NeutralCultures = 1;
	public const CultureTypes SpecificCultures = 2;
	public const CultureTypes InstalledWin32Cultures = 4;
	public const CultureTypes AllCultures = 7;
	public const CultureTypes UserCustomCulture = 8;
	public const CultureTypes ReplacementCultures = 16;
	public const CultureTypes WindowsOnlyCultures = 32;
	public const CultureTypes FrameworkCultures = 64;
}
public enum DateTimeStyles
{
	// Fields
	public const DateTimeStyles None = 0;
	public const DateTimeStyles AllowLeadingWhite = 1;
	public const DateTimeStyles AllowTrailingWhite = 2;
	public const DateTimeStyles AllowInnerWhite = 4;
	public const DateTimeStyles AllowWhiteSpaces = 7;
	public const DateTimeStyles NoCurrentDateDefault = 8;
	public const DateTimeStyles AdjustToUniversal = 16;
	public const DateTimeStyles AssumeLocal = 32;
	public const DateTimeStyles AssumeUniversal = 64;
	public const DateTimeStyles RoundtripKind = 128;
}
public enum DigitShapes
{
	// Fields
	public const DigitShapes Context = 0;
	public const DigitShapes None = 1;
	public const DigitShapes NativeNational = 2;
}
public enum GregorianCalendarTypes
{
	// Fields
	public const GregorianCalendarTypes Localized = 1;
	public const GregorianCalendarTypes USEnglish = 2;
	public const GregorianCalendarTypes MiddleEastFrench = 9;
	public const GregorianCalendarTypes Arabic = 10;
	public const GregorianCalendarTypes TransliteratedEnglish = 11;
	public const GregorianCalendarTypes TransliteratedFrench = 12;
}
public enum NumberStyles
{
	// Fields
	public const NumberStyles None = 0;
	public const NumberStyles AllowLeadingWhite = 1;
	public const NumberStyles AllowTrailingWhite = 2;
	public const NumberStyles AllowLeadingSign = 4;
	public const NumberStyles AllowTrailingSign = 8;
	public const NumberStyles AllowParentheses = 16;
	public const NumberStyles AllowDecimalPoint = 32;
	public const NumberStyles AllowThousands = 64;
	public const NumberStyles AllowExponent = 128;
	public const NumberStyles AllowCurrencySymbol = 256;
	public const NumberStyles AllowHexSpecifier = 512;
	public const NumberStyles Integer = 7;
	public const NumberStyles HexNumber = 515;
	public const NumberStyles Number = 111;
	public const NumberStyles Float = 167;
	public const NumberStyles Currency = 383;
	public const NumberStyles Any = 511;
}
public enum TimeSpanStyles
{
	// Fields
	public const TimeSpanStyles None = 0;
	public const TimeSpanStyles AssumeNegative = 1;
}
public enum UnicodeCategory
{
	// Fields
	public const UnicodeCategory UppercaseLetter = 0;
	public const UnicodeCategory LowercaseLetter = 1;
	public const UnicodeCategory TitlecaseLetter = 2;
	public const UnicodeCategory ModifierLetter = 3;
	public const UnicodeCategory OtherLetter = 4;
	public const UnicodeCategory NonSpacingMark = 5;
	public const UnicodeCategory SpacingCombiningMark = 6;
	public const UnicodeCategory EnclosingMark = 7;
	public const UnicodeCategory DecimalDigitNumber = 8;
	public const UnicodeCategory LetterNumber = 9;
	public const UnicodeCategory OtherNumber = 10;
	public const UnicodeCategory SpaceSeparator = 11;
	public const UnicodeCategory LineSeparator = 12;
	public const UnicodeCategory ParagraphSeparator = 13;
	public const UnicodeCategory Control = 14;
	public const UnicodeCategory Format = 15;
	public const UnicodeCategory Surrogate = 16;
	public const UnicodeCategory PrivateUse = 17;
	public const UnicodeCategory ConnectorPunctuation = 18;
	public const UnicodeCategory DashPunctuation = 19;
	public const UnicodeCategory OpenPunctuation = 20;
	public const UnicodeCategory ClosePunctuation = 21;
	public const UnicodeCategory InitialQuotePunctuation = 22;
	public const UnicodeCategory FinalQuotePunctuation = 23;
	public const UnicodeCategory OtherPunctuation = 24;
	public const UnicodeCategory MathSymbol = 25;
	public const UnicodeCategory CurrencySymbol = 26;
	public const UnicodeCategory ModifierSymbol = 27;
	public const UnicodeCategory OtherSymbol = 28;
	public const UnicodeCategory OtherNotAssigned = 29;
}
public enum EventResetMode
{
	// Fields
	public const EventResetMode AutoReset = 0;
	public const EventResetMode ManualReset = 1;
}
public enum ThreadPriority
{
	// Fields
	public const ThreadPriority Lowest = 0;
	public const ThreadPriority BelowNormal = 1;
	public const ThreadPriority Normal = 2;
	public const ThreadPriority AboveNormal = 3;
	public const ThreadPriority Highest = 4;
}
public enum ThreadState
{
	// Fields
	public const ThreadState Running = 0;
	public const ThreadState StopRequested = 1;
	public const ThreadState SuspendRequested = 2;
	public const ThreadState Background = 4;
	public const ThreadState Unstarted = 8;
	public const ThreadState Stopped = 16;
	public const ThreadState WaitSleepJoin = 32;
	public const ThreadState Suspended = 64;
	public const ThreadState AbortRequested = 128;
	public const ThreadState Aborted = 256;
}
public enum TaskStatus
{
	// Fields
	public const TaskStatus Created = 0;
	public const TaskStatus WaitingForActivation = 1;
	public const TaskStatus WaitingToRun = 2;
	public const TaskStatus Running = 3;
	public const TaskStatus WaitingForChildrenToComplete = 4;
	public const TaskStatus RanToCompletion = 5;
	public const TaskStatus Canceled = 6;
	public const TaskStatus Faulted = 7;
}
public enum TaskCreationOptions
{
	// Fields
	public const TaskCreationOptions None = 0;
	public const TaskCreationOptions PreferFairness = 1;
	public const TaskCreationOptions LongRunning = 2;
	public const TaskCreationOptions AttachedToParent = 4;
	public const TaskCreationOptions DenyChildAttach = 8;
	public const TaskCreationOptions HideScheduler = 16;
	public const TaskCreationOptions RunContinuationsAsynchronously = 64;
}
public enum TaskContinuationOptions
{
	// Fields
	public const TaskContinuationOptions None = 0;
	public const TaskContinuationOptions PreferFairness = 1;
	public const TaskContinuationOptions LongRunning = 2;
	public const TaskContinuationOptions AttachedToParent = 4;
	public const TaskContinuationOptions DenyChildAttach = 8;
	public const TaskContinuationOptions HideScheduler = 16;
	public const TaskContinuationOptions LazyCancellation = 32;
	public const TaskContinuationOptions RunContinuationsAsynchronously = 64;
	public const TaskContinuationOptions NotOnRanToCompletion = 65536;
	public const TaskContinuationOptions NotOnFaulted = 131072;
	public const TaskContinuationOptions NotOnCanceled = 262144;
	public const TaskContinuationOptions OnlyOnRanToCompletion = 393216;
	public const TaskContinuationOptions OnlyOnFaulted = 327680;
	public const TaskContinuationOptions OnlyOnCanceled = 196608;
	public const TaskContinuationOptions ExecuteSynchronously = 524288;
}
public enum PolicyLevelType
{
	// Fields
	public const PolicyLevelType User = 0;
	public const PolicyLevelType Machine = 1;
	public const PolicyLevelType Enterprise = 2;
	public const PolicyLevelType AppDomain = 3;
}
public enum SecurityZone
{
	// Fields
	public const SecurityZone MyComputer = 0;
	public const SecurityZone Intranet = 1;
	public const SecurityZone Trusted = 2;
	public const SecurityZone Internet = 3;
	public const SecurityZone Untrusted = 4;
	public const SecurityZone NoZone = -1;
}
public enum PolicyStatementAttribute
{
	// Fields
	public const PolicyStatementAttribute Nothing = 0;
	public const PolicyStatementAttribute Exclusive = 1;
	public const PolicyStatementAttribute LevelFinal = 2;
	public const PolicyStatementAttribute All = 3;
}
public enum PermissionState
{
	// Fields
	public const PermissionState Unrestricted = 1;
	public const PermissionState None = 0;
}
public enum SecurityAction
{
	// Fields
	public const SecurityAction Demand = 2;
	public const SecurityAction Assert = 3;
	public const SecurityAction Deny = 4;
	public const SecurityAction PermitOnly = 5;
	public const SecurityAction LinkDemand = 6;
	public const SecurityAction InheritanceDemand = 7;
	public const SecurityAction RequestMinimum = 8;
	public const SecurityAction RequestOptional = 9;
	public const SecurityAction RequestRefuse = 10;
}
public enum SecurityPermissionFlag
{
	// Fields
	public const SecurityPermissionFlag NoFlags = 0;
	public const SecurityPermissionFlag Assertion = 1;
	public const SecurityPermissionFlag UnmanagedCode = 2;
	public const SecurityPermissionFlag SkipVerification = 4;
	public const SecurityPermissionFlag Execution = 8;
	public const SecurityPermissionFlag ControlThread = 16;
	public const SecurityPermissionFlag ControlEvidence = 32;
	public const SecurityPermissionFlag ControlPolicy = 64;
	public const SecurityPermissionFlag SerializationFormatter = 128;
	public const SecurityPermissionFlag ControlDomainPolicy = 256;
	public const SecurityPermissionFlag ControlPrincipal = 512;
	public const SecurityPermissionFlag ControlAppDomain = 1024;
	public const SecurityPermissionFlag RemotingConfiguration = 2048;
	public const SecurityPermissionFlag Infrastructure = 4096;
	public const SecurityPermissionFlag BindingRedirects = 8192;
	public const SecurityPermissionFlag AllFlags = 16383;
}
public enum TokenImpersonationLevel
{
	// Fields
	public const TokenImpersonationLevel Anonymous = 1;
	public const TokenImpersonationLevel Delegation = 4;
	public const TokenImpersonationLevel Identification = 2;
	public const TokenImpersonationLevel Impersonation = 3;
	public const TokenImpersonationLevel None = 0;
}
public enum WindowsAccountType
{
	// Fields
	public const WindowsAccountType Normal = 0;
	public const WindowsAccountType Guest = 1;
	public const WindowsAccountType System = 2;
	public const WindowsAccountType Anonymous = 3;
}
public enum RSAEncryptionPaddingMode
{
	// Fields
	public const RSAEncryptionPaddingMode Pkcs1 = 0;
	public const RSAEncryptionPaddingMode Oaep = 1;
}
public enum RSASignaturePaddingMode
{
	// Fields
	public const RSASignaturePaddingMode Pkcs1 = 0;
	public const RSASignaturePaddingMode Pss = 1;
}
public enum CipherMode
{
	// Fields
	public const CipherMode CBC = 1;
	public const CipherMode ECB = 2;
	public const CipherMode OFB = 3;
	public const CipherMode CFB = 4;
	public const CipherMode CTS = 5;
}
public enum PaddingMode
{
	// Fields
	public const PaddingMode None = 1;
	public const PaddingMode PKCS7 = 2;
	public const PaddingMode Zeros = 3;
	public const PaddingMode ANSIX923 = 4;
	public const PaddingMode ISO10126 = 5;
}
public enum CspProviderFlags
{
	// Fields
	public const CspProviderFlags NoFlags = 0;
	public const CspProviderFlags UseMachineKeyStore = 1;
	public const CspProviderFlags UseDefaultKeyContainer = 2;
	public const CspProviderFlags UseNonExportableKey = 4;
	public const CspProviderFlags UseExistingKey = 8;
	public const CspProviderFlags UseArchivableKey = 16;
	public const CspProviderFlags UseUserProtectedKey = 32;
	public const CspProviderFlags NoPrompt = 64;
	public const CspProviderFlags CreateEphemeralKey = 128;
}
public enum CryptoStreamMode
{
	// Fields
	public const CryptoStreamMode Read = 0;
	public const CryptoStreamMode Write = 1;
}
public enum X509KeyStorageFlags
{
	// Fields
	public const X509KeyStorageFlags DefaultKeySet = 0;
	public const X509KeyStorageFlags UserKeySet = 1;
	public const X509KeyStorageFlags MachineKeySet = 2;
	public const X509KeyStorageFlags Exportable = 4;
	public const X509KeyStorageFlags UserProtected = 8;
	public const X509KeyStorageFlags PersistKeySet = 16;
	public const X509KeyStorageFlags EphemeralKeySet = 32;
}
public enum StreamingContextStates
{
	// Fields
	public const StreamingContextStates CrossProcess = 1;
	public const StreamingContextStates CrossMachine = 2;
	public const StreamingContextStates File = 4;
	public const StreamingContextStates Persistence = 8;
	public const StreamingContextStates Remoting = 16;
	public const StreamingContextStates Other = 32;
	public const StreamingContextStates Clone = 64;
	public const StreamingContextStates CrossAppDomain = 128;
	public const StreamingContextStates All = 255;
}
public enum FormatterTypeStyle
{
	// Fields
	public const FormatterTypeStyle TypesWhenNeeded = 0;
	public const FormatterTypeStyle TypesAlways = 1;
	public const FormatterTypeStyle XsdString = 2;
}
public enum FormatterAssemblyStyle
{
	// Fields
	public const FormatterAssemblyStyle Simple = 0;
	public const FormatterAssemblyStyle Full = 1;
}
public enum TypeFilterLevel
{
	// Fields
	public const TypeFilterLevel Low = 2;
	public const TypeFilterLevel Full = 3;
}
public enum WellKnownObjectMode
{
	// Fields
	public const WellKnownObjectMode Singleton = 1;
	public const WellKnownObjectMode SingleCall = 2;
}
public enum LeaseState
{
	// Fields
	public const LeaseState Null = 0;
	public const LeaseState Initial = 1;
	public const LeaseState Active = 2;
	public const LeaseState Renewing = 3;
	public const LeaseState Expired = 4;
}
public enum VarEnum
{
	// Fields
	public const VarEnum VT_EMPTY = 0;
	public const VarEnum VT_NULL = 1;
	public const VarEnum VT_I2 = 2;
	public const VarEnum VT_I4 = 3;
	public const VarEnum VT_R4 = 4;
	public const VarEnum VT_R8 = 5;
	public const VarEnum VT_CY = 6;
	public const VarEnum VT_DATE = 7;
	public const VarEnum VT_BSTR = 8;
	public const VarEnum VT_DISPATCH = 9;
	public const VarEnum VT_ERROR = 10;
	public const VarEnum VT_BOOL = 11;
	public const VarEnum VT_VARIANT = 12;
	public const VarEnum VT_UNKNOWN = 13;
	public const VarEnum VT_DECIMAL = 14;
	public const VarEnum VT_I1 = 16;
	public const VarEnum VT_UI1 = 17;
	public const VarEnum VT_UI2 = 18;
	public const VarEnum VT_UI4 = 19;
	public const VarEnum VT_I8 = 20;
	public const VarEnum VT_UI8 = 21;
	public const VarEnum VT_INT = 22;
	public const VarEnum VT_UINT = 23;
	public const VarEnum VT_VOID = 24;
	public const VarEnum VT_HRESULT = 25;
	public const VarEnum VT_PTR = 26;
	public const VarEnum VT_SAFEARRAY = 27;
	public const VarEnum VT_CARRAY = 28;
	public const VarEnum VT_USERDEFINED = 29;
	public const VarEnum VT_LPSTR = 30;
	public const VarEnum VT_LPWSTR = 31;
	public const VarEnum VT_RECORD = 36;
	public const VarEnum VT_FILETIME = 64;
	public const VarEnum VT_BLOB = 65;
	public const VarEnum VT_STREAM = 66;
	public const VarEnum VT_STORAGE = 67;
	public const VarEnum VT_STREAMED_OBJECT = 68;
	public const VarEnum VT_STORED_OBJECT = 69;
	public const VarEnum VT_BLOB_OBJECT = 70;
	public const VarEnum VT_CF = 71;
	public const VarEnum VT_CLSID = 72;
	public const VarEnum VT_VECTOR = 4096;
	public const VarEnum VT_ARRAY = 8192;
	public const VarEnum VT_BYREF = 16384;
}
public enum UnmanagedType
{
	// Fields
	public const UnmanagedType Bool = 2;
	public const UnmanagedType I1 = 3;
	public const UnmanagedType U1 = 4;
	public const UnmanagedType I2 = 5;
	public const UnmanagedType U2 = 6;
	public const UnmanagedType I4 = 7;
	public const UnmanagedType U4 = 8;
	public const UnmanagedType I8 = 9;
	public const UnmanagedType U8 = 10;
	public const UnmanagedType R4 = 11;
	public const UnmanagedType R8 = 12;
	public const UnmanagedType Currency = 15;
	public const UnmanagedType BStr = 19;
	public const UnmanagedType LPStr = 20;
	public const UnmanagedType LPWStr = 21;
	public const UnmanagedType LPTStr = 22;
	public const UnmanagedType ByValTStr = 23;
	public const UnmanagedType IUnknown = 25;
	public const UnmanagedType IDispatch = 26;
	public const UnmanagedType Struct = 27;
	public const UnmanagedType Interface = 28;
	public const UnmanagedType SafeArray = 29;
	public const UnmanagedType ByValArray = 30;
	public const UnmanagedType SysInt = 31;
	public const UnmanagedType SysUInt = 32;
	public const UnmanagedType VBByRefStr = 34;
	public const UnmanagedType AnsiBStr = 35;
	public const UnmanagedType TBStr = 36;
	public const UnmanagedType VariantBool = 37;
	public const UnmanagedType FunctionPtr = 38;
	public const UnmanagedType AsAny = 40;
	public const UnmanagedType LPArray = 42;
	public const UnmanagedType LPStruct = 43;
	public const UnmanagedType CustomMarshaler = 44;
	public const UnmanagedType Error = 45;
	[ComVisibleAttribute]
	public const UnmanagedType IInspectable = 46;
	[ComVisibleAttribute]
	public const UnmanagedType HString = 47;
	[ComVisibleAttribute]
	public const UnmanagedType LPUTF8Str = 48;
}
public enum CallingConvention
{
	// Fields
	public const CallingConvention Winapi = 1;
	public const CallingConvention Cdecl = 2;
	public const CallingConvention StdCall = 3;
	public const CallingConvention ThisCall = 4;
	public const CallingConvention FastCall = 5;
}
public enum CharSet
{
	// Fields
	public const CharSet None = 1;
	public const CharSet Ansi = 2;
	public const CharSet Unicode = 3;
	public const CharSet Auto = 4;
}
public enum GCHandleType
{
	// Fields
	public const GCHandleType Weak = 0;
	public const GCHandleType WeakTrackResurrection = 1;
	public const GCHandleType Normal = 2;
	public const GCHandleType Pinned = 3;
}
public enum NtlmAuthLevel
{
	// Fields
	public const NtlmAuthLevel LM_and_NTLM = 0;
	public const NtlmAuthLevel LM_and_NTLM_and_try_NTLMv2_Session = 1;
	public const NtlmAuthLevel NTLM_only = 2;
	public const NtlmAuthLevel NTLMv2_only = 3;
}
public enum NtlmFlags
{
	// Fields
	public const NtlmFlags NegotiateUnicode = 1;
	public const NtlmFlags NegotiateOem = 2;
	public const NtlmFlags RequestTarget = 4;
	public const NtlmFlags NegotiateNtlm = 512;
	public const NtlmFlags NegotiateDomainSupplied = 4096;
	public const NtlmFlags NegotiateWorkstationSupplied = 8192;
	public const NtlmFlags NegotiateAlwaysSign = 32768;
	public const NtlmFlags NegotiateNtlm2Key = 524288;
	public const NtlmFlags Negotiate128 = 536870912;
	public const NtlmFlags Negotiate56 = -2147483648;
}
public enum AlertLevel
{
	// Fields
	public byte value__; // 0x10
	public const AlertLevel Warning = 1;
	public const AlertLevel Fatal = 2;
}
public enum AlertDescription
{
	// Fields
	public byte value__; // 0x10
	public const AlertDescription CloseNotify = 0;
	public const AlertDescription UnexpectedMessage = 10;
	public const AlertDescription BadRecordMAC = 20;
	public const AlertDescription DecryptionFailed_RESERVED = 21;
	public const AlertDescription RecordOverflow = 22;
	public const AlertDescription DecompressionFailure = 30;
	public const AlertDescription HandshakeFailure = 40;
	public const AlertDescription NoCertificate_RESERVED = 41;
	public const AlertDescription BadCertificate = 42;
	public const AlertDescription UnsupportedCertificate = 43;
	public const AlertDescription CertificateRevoked = 44;
	public const AlertDescription CertificateExpired = 45;
	public const AlertDescription CertificateUnknown = 46;
	public const AlertDescription IlegalParameter = 47;
	public const AlertDescription UnknownCA = 48;
	public const AlertDescription AccessDenied = 49;
	public const AlertDescription DecodeError = 50;
	public const AlertDescription DecryptError = 51;
	public const AlertDescription ExportRestriction = 60;
	public const AlertDescription ProtocolVersion = 70;
	public const AlertDescription InsuficientSecurity = 71;
	public const AlertDescription InternalError = 80;
	public const AlertDescription UserCancelled = 90;
	public const AlertDescription NoRenegotiation = 100;
	public const AlertDescription UnsupportedExtension = 110;
}
public enum CipherSuiteCode
{
	// Fields
	public ushort value__; // 0x10
	public const CipherSuiteCode TLS_NULL_WITH_NULL_NULL = 0;
	public const CipherSuiteCode TLS_RSA_WITH_NULL_MD5 = 1;
	public const CipherSuiteCode TLS_RSA_WITH_NULL_SHA = 2;
	public const CipherSuiteCode TLS_RSA_EXPORT_WITH_RC4_40_MD5 = 3;
	public const CipherSuiteCode TLS_RSA_WITH_RC4_128_MD5 = 4;
	public const CipherSuiteCode TLS_RSA_WITH_RC4_128_SHA = 5;
	public const CipherSuiteCode TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = 6;
	public const CipherSuiteCode TLS_RSA_WITH_IDEA_CBC_SHA = 7;
	public const CipherSuiteCode TLS_RSA_EXPORT_WITH_DES40_CBC_SHA = 8;
	public const CipherSuiteCode TLS_RSA_WITH_DES_CBC_SHA = 9;
	public const CipherSuiteCode TLS_RSA_WITH_3DES_EDE_CBC_SHA = 10;
	public const CipherSuiteCode TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = 11;
	public const CipherSuiteCode TLS_DH_DSS_WITH_DES_CBC_SHA = 12;
	public const CipherSuiteCode TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = 13;
	public const CipherSuiteCode TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = 14;
	public const CipherSuiteCode TLS_DH_RSA_WITH_DES_CBC_SHA = 15;
	public const CipherSuiteCode TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = 16;
	public const CipherSuiteCode TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = 17;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_DES_CBC_SHA = 18;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 19;
	public const CipherSuiteCode TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = 20;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_DES_CBC_SHA = 21;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 22;
	public const CipherSuiteCode TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 = 23;
	public const CipherSuiteCode TLS_DH_anon_WITH_RC4_128_MD5 = 24;
	public const CipherSuiteCode TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 25;
	public const CipherSuiteCode TLS_DH_anon_WITH_DES_CBC_SHA = 26;
	public const CipherSuiteCode TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 27;
	public const CipherSuiteCode TLS_RSA_WITH_AES_128_CBC_SHA = 47;
	public const CipherSuiteCode TLS_DH_DSS_WITH_AES_128_CBC_SHA = 48;
	public const CipherSuiteCode TLS_DH_RSA_WITH_AES_128_CBC_SHA = 49;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 50;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 51;
	public const CipherSuiteCode TLS_DH_anon_WITH_AES_128_CBC_SHA = 52;
	public const CipherSuiteCode TLS_RSA_WITH_AES_256_CBC_SHA = 53;
	public const CipherSuiteCode TLS_DH_DSS_WITH_AES_256_CBC_SHA = 54;
	public const CipherSuiteCode TLS_DH_RSA_WITH_AES_256_CBC_SHA = 55;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 56;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 57;
	public const CipherSuiteCode TLS_DH_anon_WITH_AES_256_CBC_SHA = 58;
	public const CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_CBC_SHA = 65;
	public const CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA = 66;
	public const CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA = 67;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA = 68;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = 69;
	public const CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA = 70;
	public const CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_CBC_SHA = 132;
	public const CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA = 133;
	public const CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA = 134;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA = 135;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = 136;
	public const CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA = 137;
	public const CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 186;
	public const CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 = 187;
	public const CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 188;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 = 189;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 190;
	public const CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 = 191;
	public const CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 192;
	public const CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 = 193;
	public const CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 194;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 = 195;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 196;
	public const CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 = 197;
	public const CipherSuiteCode TLS_RSA_WITH_SEED_CBC_SHA = 150;
	public const CipherSuiteCode TLS_DH_DSS_WITH_SEED_CBC_SHA = 151;
	public const CipherSuiteCode TLS_DH_RSA_WITH_SEED_CBC_SHA = 152;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_SEED_CBC_SHA = 153;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_SEED_CBC_SHA = 154;
	public const CipherSuiteCode TLS_DH_anon_WITH_SEED_CBC_SHA = 155;
	public const CipherSuiteCode TLS_PSK_WITH_RC4_128_SHA = 138;
	public const CipherSuiteCode TLS_PSK_WITH_3DES_EDE_CBC_SHA = 139;
	public const CipherSuiteCode TLS_PSK_WITH_AES_128_CBC_SHA = 140;
	public const CipherSuiteCode TLS_PSK_WITH_AES_256_CBC_SHA = 141;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_RC4_128_SHA = 142;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = 143;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CBC_SHA = 144;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CBC_SHA = 145;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_RC4_128_SHA = 146;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = 147;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_CBC_SHA = 148;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_CBC_SHA = 149;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_NULL_SHA = 49153;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 49154;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 49155;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 49156;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 49157;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_NULL_SHA = 49158;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 49159;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 49160;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 49161;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 49162;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_NULL_SHA = 49163;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_RC4_128_SHA = 49164;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 49165;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 49166;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 49167;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_NULL_SHA = 49168;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_RC4_128_SHA = 49169;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 49170;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 49171;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 49172;
	public const CipherSuiteCode TLS_ECDH_anon_WITH_NULL_SHA = 49173;
	public const CipherSuiteCode TLS_ECDH_anon_WITH_RC4_128_SHA = 49174;
	public const CipherSuiteCode TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 49175;
	public const CipherSuiteCode TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 49176;
	public const CipherSuiteCode TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 49177;
	public const CipherSuiteCode TLS_PSK_WITH_NULL_SHA = 44;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA = 45;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA = 46;
	public const CipherSuiteCode TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA = 49178;
	public const CipherSuiteCode TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA = 49179;
	public const CipherSuiteCode TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA = 49180;
	public const CipherSuiteCode TLS_SRP_SHA_WITH_AES_128_CBC_SHA = 49181;
	public const CipherSuiteCode TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA = 49182;
	public const CipherSuiteCode TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA = 49183;
	public const CipherSuiteCode TLS_SRP_SHA_WITH_AES_256_CBC_SHA = 49184;
	public const CipherSuiteCode TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA = 49185;
	public const CipherSuiteCode TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA = 49186;
	public const CipherSuiteCode TLS_RSA_WITH_NULL_SHA256 = 59;
	public const CipherSuiteCode TLS_RSA_WITH_AES_128_CBC_SHA256 = 60;
	public const CipherSuiteCode TLS_RSA_WITH_AES_256_CBC_SHA256 = 61;
	public const CipherSuiteCode TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = 62;
	public const CipherSuiteCode TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = 63;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 64;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = 103;
	public const CipherSuiteCode TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = 104;
	public const CipherSuiteCode TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = 105;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 106;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = 107;
	public const CipherSuiteCode TLS_DH_anon_WITH_AES_128_CBC_SHA256 = 108;
	public const CipherSuiteCode TLS_DH_anon_WITH_AES_256_CBC_SHA256 = 109;
	public const CipherSuiteCode TLS_RSA_WITH_AES_128_GCM_SHA256 = 156;
	public const CipherSuiteCode TLS_RSA_WITH_AES_256_GCM_SHA384 = 157;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 158;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 159;
	public const CipherSuiteCode TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = 160;
	public const CipherSuiteCode TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = 161;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = 162;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = 163;
	public const CipherSuiteCode TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = 164;
	public const CipherSuiteCode TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = 165;
	public const CipherSuiteCode TLS_DH_anon_WITH_AES_128_GCM_SHA256 = 166;
	public const CipherSuiteCode TLS_DH_anon_WITH_AES_256_GCM_SHA384 = 167;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 49187;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 49188;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = 49189;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = 49190;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 49191;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 49192;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = 49193;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = 49194;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 49195;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 49196;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = 49197;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = 49198;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 49199;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 49200;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = 49201;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = 49202;
	public const CipherSuiteCode TLS_PSK_WITH_AES_128_GCM_SHA256 = 168;
	public const CipherSuiteCode TLS_PSK_WITH_AES_256_GCM_SHA384 = 169;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = 170;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = 171;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = 172;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = 173;
	public const CipherSuiteCode TLS_PSK_WITH_AES_128_CBC_SHA256 = 174;
	public const CipherSuiteCode TLS_PSK_WITH_AES_256_CBC_SHA384 = 175;
	public const CipherSuiteCode TLS_PSK_WITH_NULL_SHA256 = 176;
	public const CipherSuiteCode TLS_PSK_WITH_NULL_SHA384 = 177;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = 178;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = 179;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA256 = 180;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA384 = 181;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = 182;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = 183;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA256 = 184;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA384 = 185;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_RC4_128_SHA = 49203;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA = 49204;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = 49205;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = 49206;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 = 49207;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 = 49208;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA = 49209;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA256 = 49210;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA384 = 49211;
	public const CipherSuiteCode TLS_EMPTY_RENEGOTIATION_INFO_SCSV = 255;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = 49266;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = 49267;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = 49268;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = 49269;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 49270;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 = 49271;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 49272;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 = 49273;
	public const CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 49274;
	public const CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 49275;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 49276;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 49277;
	public const CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 49278;
	public const CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 49279;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 = 49280;
	public const CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 = 49281;
	public const CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 = 49282;
	public const CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 = 49283;
	public const CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 = 49284;
	public const CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 = 49285;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = 49286;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = 49287;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = 49288;
	public const CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = 49289;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 49290;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 49291;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 49292;
	public const CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 49293;
	public const CipherSuiteCode TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 49294;
	public const CipherSuiteCode TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 49295;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 49296;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 49297;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 49298;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 49299;
	public const CipherSuiteCode TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 49300;
	public const CipherSuiteCode TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 49301;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 49302;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 49303;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 49304;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 49305;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 49306;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 49307;
	public const CipherSuiteCode TLS_RSA_WITH_AES_128_CCM = 49308;
	public const CipherSuiteCode TLS_RSA_WITH_AES_256_CCM = 49309;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CCM = 49310;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CCM = 49311;
	public const CipherSuiteCode TLS_RSA_WITH_AES_128_CCM_8 = 49312;
	public const CipherSuiteCode TLS_RSA_WITH_AES_256_CCM_8 = 49313;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CCM_8 = 49314;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CCM_8 = 49315;
	public const CipherSuiteCode TLS_PSK_WITH_AES_128_CCM = 49316;
	public const CipherSuiteCode TLS_PSK_WITH_AES_256_CCM = 49317;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CCM = 49318;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CCM = 49319;
	public const CipherSuiteCode TLS_PSK_WITH_AES_128_CCM_8 = 49320;
	public const CipherSuiteCode TLS_PSK_WITH_AES_256_CCM_8 = 49321;
	public const CipherSuiteCode TLS_PSK_DHE_WITH_AES_128_CCM_8 = 49322;
	public const CipherSuiteCode TLS_PSK_DHE_WITH_AES_256_CCM_8 = 49323;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 52243;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = 52244;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 52245;
	public const CipherSuiteCode TLS_RSA_WITH_ESTREAM_SALSA20_SHA1 = 58384;
	public const CipherSuiteCode TLS_RSA_WITH_SALSA20_SHA1 = 58385;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1 = 58386;
	public const CipherSuiteCode TLS_ECDHE_RSA_WITH_SALSA20_SHA1 = 58387;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1 = 58388;
	public const CipherSuiteCode TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1 = 58389;
	public const CipherSuiteCode TLS_PSK_WITH_ESTREAM_SALSA20_SHA1 = 58390;
	public const CipherSuiteCode TLS_PSK_WITH_SALSA20_SHA1 = 58391;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1 = 58392;
	public const CipherSuiteCode TLS_ECDHE_PSK_WITH_SALSA20_SHA1 = 58393;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1 = 58394;
	public const CipherSuiteCode TLS_RSA_PSK_WITH_SALSA20_SHA1 = 58395;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1 = 58396;
	public const CipherSuiteCode TLS_DHE_PSK_WITH_SALSA20_SHA1 = 58397;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1 = 58398;
	public const CipherSuiteCode TLS_DHE_RSA_WITH_SALSA20_SHA1 = 58399;
	public const CipherSuiteCode TLS_FALLBACK_SCSV = 22016;
}
public enum MonoSslPolicyErrors
{
	// Fields
	public const MonoSslPolicyErrors None = 0;
	public const MonoSslPolicyErrors RemoteCertificateNotAvailable = 1;
	public const MonoSslPolicyErrors RemoteCertificateNameMismatch = 2;
	public const MonoSslPolicyErrors RemoteCertificateChainErrors = 4;
}
public enum TlsProtocols
{
	// Fields
	public const TlsProtocols Zero = 0;
	public const TlsProtocols Tls10Client = 128;
	public const TlsProtocols Tls10Server = 64;
	public const TlsProtocols Tls10 = 192;
	public const TlsProtocols Tls11Client = 512;
	public const TlsProtocols Tls11Server = 256;
	public const TlsProtocols Tls11 = 768;
	public const TlsProtocols Tls12Client = 2048;
	public const TlsProtocols Tls12Server = 1024;
	public const TlsProtocols Tls12 = 3072;
	public const TlsProtocols ClientMask = 2688;
	public const TlsProtocols ServerMask = 1344;
}
public enum BigInteger.Sign
{
	// Fields
	public const BigInteger.Sign Negative = -1;
	public const BigInteger.Sign Zero = 0;
	public const BigInteger.Sign Positive = 1;
}
public enum ConfidenceFactor
{
	// Fields
	public const ConfidenceFactor ExtraLow = 0;
	public const ConfidenceFactor Low = 1;
	public const ConfidenceFactor Medium = 2;
	public const ConfidenceFactor High = 3;
	public const ConfidenceFactor ExtraHigh = 4;
	public const ConfidenceFactor Provable = 5;
}
public enum AstNode.AstType
{
	// Fields
	public const AstNode.AstType Axis = 0;
	public const AstNode.AstType Operator = 1;
	public const AstNode.AstType Filter = 2;
	public const AstNode.AstType ConstantOperand = 3;
	public const AstNode.AstType Function = 4;
	public const AstNode.AstType Group = 5;
	public const AstNode.AstType Root = 6;
	public const AstNode.AstType Variable = 7;
	public const AstNode.AstType Error = 8;
}
public enum Axis.AxisType
{
	// Fields
	public const Axis.AxisType Ancestor = 0;
	public const Axis.AxisType AncestorOrSelf = 1;
	public const Axis.AxisType Attribute = 2;
	public const Axis.AxisType Child = 3;
	public const Axis.AxisType Descendant = 4;
	public const Axis.AxisType DescendantOrSelf = 5;
	public const Axis.AxisType Following = 6;
	public const Axis.AxisType FollowingSibling = 7;
	public const Axis.AxisType Namespace = 8;
	public const Axis.AxisType Parent = 9;
	public const Axis.AxisType Preceding = 10;
	public const Axis.AxisType PrecedingSibling = 11;
	public const Axis.AxisType Self = 12;
	public const Axis.AxisType None = 13;
}
public enum Function.FunctionType
{
	// Fields
	public const Function.FunctionType FuncLast = 0;
	public const Function.FunctionType FuncPosition = 1;
	public const Function.FunctionType FuncCount = 2;
	public const Function.FunctionType FuncID = 3;
	public const Function.FunctionType FuncLocalName = 4;
	public const Function.FunctionType FuncNameSpaceUri = 5;
	public const Function.FunctionType FuncName = 6;
	public const Function.FunctionType FuncString = 7;
	public const Function.FunctionType FuncBoolean = 8;
	public const Function.FunctionType FuncNumber = 9;
	public const Function.FunctionType FuncTrue = 10;
	public const Function.FunctionType FuncFalse = 11;
	public const Function.FunctionType FuncNot = 12;
	public const Function.FunctionType FuncConcat = 13;
	public const Function.FunctionType FuncStartsWith = 14;
	public const Function.FunctionType FuncContains = 15;
	public const Function.FunctionType FuncSubstringBefore = 16;
	public const Function.FunctionType FuncSubstringAfter = 17;
	public const Function.FunctionType FuncSubstring = 18;
	public const Function.FunctionType FuncStringLength = 19;
	public const Function.FunctionType FuncNormalize = 20;
	public const Function.FunctionType FuncTranslate = 21;
	public const Function.FunctionType FuncLang = 22;
	public const Function.FunctionType FuncSum = 23;
	public const Function.FunctionType FuncFloor = 24;
	public const Function.FunctionType FuncCeiling = 25;
	public const Function.FunctionType FuncRound = 26;
	public const Function.FunctionType FuncUserDefined = 27;
}
public enum Operator.Op
{
	// Fields
	public const Operator.Op INVALID = 0;
	public const Operator.Op OR = 1;
	public const Operator.Op AND = 2;
	public const Operator.Op EQ = 3;
	public const Operator.Op NE = 4;
	public const Operator.Op LT = 5;
	public const Operator.Op LE = 6;
	public const Operator.Op GT = 7;
	public const Operator.Op GE = 8;
	public const Operator.Op PLUS = 9;
	public const Operator.Op MINUS = 10;
	public const Operator.Op MUL = 11;
	public const Operator.Op DIV = 12;
	public const Operator.Op MOD = 13;
	public const Operator.Op UNION = 14;
}
public enum XPathScanner.LexKind
{
	// Fields
	public const XPathScanner.LexKind Comma = 44;
	public const XPathScanner.LexKind Slash = 47;
	public const XPathScanner.LexKind At = 64;
	public const XPathScanner.LexKind Dot = 46;
	public const XPathScanner.LexKind LParens = 40;
	public const XPathScanner.LexKind RParens = 41;
	public const XPathScanner.LexKind LBracket = 91;
	public const XPathScanner.LexKind RBracket = 93;
	public const XPathScanner.LexKind Star = 42;
	public const XPathScanner.LexKind Plus = 43;
	public const XPathScanner.LexKind Minus = 45;
	public const XPathScanner.LexKind Eq = 61;
	public const XPathScanner.LexKind Lt = 60;
	public const XPathScanner.LexKind Gt = 62;
	public const XPathScanner.LexKind Bang = 33;
	public const XPathScanner.LexKind Dollar = 36;
	public const XPathScanner.LexKind Apos = 39;
	public const XPathScanner.LexKind Quote = 34;
	public const XPathScanner.LexKind Union = 124;
	public const XPathScanner.LexKind Ne = 78;
	public const XPathScanner.LexKind Le = 76;
	public const XPathScanner.LexKind Ge = 71;
	public const XPathScanner.LexKind And = 65;
	public const XPathScanner.LexKind Or = 79;
	public const XPathScanner.LexKind DotDot = 68;
	public const XPathScanner.LexKind SlashSlash = 83;
	public const XPathScanner.LexKind Name = 110;
	public const XPathScanner.LexKind String = 115;
	public const XPathScanner.LexKind Number = 100;
	public const XPathScanner.LexKind Axe = 97;
	public const XPathScanner.LexKind Eof = 69;
}
public enum ConformanceLevel
{
	// Fields
	public const ConformanceLevel Auto = 0;
	public const ConformanceLevel Fragment = 1;
	public const ConformanceLevel Document = 2;
}
public enum DtdProcessing
{
	// Fields
	public const DtdProcessing Prohibit = 0;
	public const DtdProcessing Ignore = 1;
	public const DtdProcessing Parse = 2;
}
public enum EntityHandling
{
	// Fields
	public const EntityHandling ExpandEntities = 1;
	public const EntityHandling ExpandCharEntities = 2;
}
public enum NamespaceHandling
{
	// Fields
	public const NamespaceHandling Default = 0;
	public const NamespaceHandling OmitDuplicates = 1;
}
public enum NewLineHandling
{
	// Fields
	public const NewLineHandling Replace = 0;
	public const NewLineHandling Entitize = 1;
	public const NewLineHandling None = 2;
}
public enum ReadState
{
	// Fields
	public const ReadState Initial = 0;
	public const ReadState Interactive = 1;
	public const ReadState Error = 2;
	public const ReadState EndOfFile = 3;
	public const ReadState Closed = 4;
}
public enum ValidationType
{
	// Fields
	public const ValidationType None = 0;
	public const ValidationType Auto = 1;
	public const ValidationType DTD = 2;
	public const ValidationType XDR = 3;
	public const ValidationType Schema = 4;
}
public enum WhitespaceHandling
{
	// Fields
	public const WhitespaceHandling All = 0;
	public const WhitespaceHandling Significant = 1;
	public const WhitespaceHandling None = 2;
}
public enum XmlSpace
{
	// Fields
	public const XmlSpace None = 0;
	public const XmlSpace Default = 1;
	public const XmlSpace Preserve = 2;
}
public enum WriteState
{
	// Fields
	public const WriteState Start = 0;
	public const WriteState Prolog = 1;
	public const WriteState Element = 2;
	public const WriteState Attribute = 3;
	public const WriteState Content = 4;
	public const WriteState Closed = 5;
	public const WriteState Error = 6;
}
public enum XmlOutputMethod
{
	// Fields
	public const XmlOutputMethod Xml = 0;
	public const XmlOutputMethod Html = 1;
	public const XmlOutputMethod Text = 2;
	public const XmlOutputMethod AutoDetect = 3;
}
public enum XmlNodeChangedAction
{
	// Fields
	public const XmlNodeChangedAction Insert = 0;
	public const XmlNodeChangedAction Remove = 1;
	public const XmlNodeChangedAction Change = 2;
}
public enum XmlTokenizedType
{
	// Fields
	public const XmlTokenizedType CDATA = 0;
	public const XmlTokenizedType ID = 1;
	public const XmlTokenizedType IDREF = 2;
	public const XmlTokenizedType IDREFS = 3;
	public const XmlTokenizedType ENTITY = 4;
	public const XmlTokenizedType ENTITIES = 5;
	public const XmlTokenizedType NMTOKEN = 6;
	public const XmlTokenizedType NMTOKENS = 7;
	public const XmlTokenizedType NOTATION = 8;
	public const XmlTokenizedType ENUMERATION = 9;
	public const XmlTokenizedType QName = 10;
	public const XmlTokenizedType NCName = 11;
	public const XmlTokenizedType None = 12;
}
public enum XmlDateTimeSerializationMode
{
	// Fields
	public const XmlDateTimeSerializationMode Local = 0;
	public const XmlDateTimeSerializationMode Utc = 1;
	public const XmlDateTimeSerializationMode Unspecified = 2;
	public const XmlDateTimeSerializationMode RoundtripKind = 3;
}
public enum XmlNamespaceScope
{
	// Fields
	public const XmlNamespaceScope All = 0;
	public const XmlNamespaceScope ExcludeXml = 1;
	public const XmlNamespaceScope Local = 2;
}
public enum XmlNodeType
{
	// Fields
	public const XmlNodeType None = 0;
	public const XmlNodeType Element = 1;
	public const XmlNodeType Attribute = 2;
	public const XmlNodeType Text = 3;
	public const XmlNodeType CDATA = 4;
	public const XmlNodeType EntityReference = 5;
	public const XmlNodeType Entity = 6;
	public const XmlNodeType ProcessingInstruction = 7;
	public const XmlNodeType Comment = 8;
	public const XmlNodeType Document = 9;
	public const XmlNodeType DocumentType = 10;
	public const XmlNodeType DocumentFragment = 11;
	public const XmlNodeType Notation = 12;
	public const XmlNodeType Whitespace = 13;
	public const XmlNodeType SignificantWhitespace = 14;
	public const XmlNodeType EndElement = 15;
	public const XmlNodeType EndEntity = 16;
	public const XmlNodeType XmlDeclaration = 17;
}
public enum XPathResultType
{
	// Fields
	public const XPathResultType Number = 0;
	public const XPathResultType String = 1;
	public const XPathResultType Boolean = 2;
	public const XPathResultType NodeSet = 3;
	public const XPathResultType Navigator = 1;
	public const XPathResultType Any = 5;
	public const XPathResultType Error = 6;
}
public enum XPathNamespaceScope
{
	// Fields
	public const XPathNamespaceScope All = 0;
	public const XPathNamespaceScope ExcludeXml = 1;
	public const XPathNamespaceScope Local = 2;
}
public enum XPathNodeType
{
	// Fields
	public const XPathNodeType Root = 0;
	public const XPathNodeType Element = 1;
	public const XPathNodeType Attribute = 2;
	public const XPathNodeType Namespace = 3;
	public const XPathNodeType Text = 4;
	public const XPathNodeType SignificantWhitespace = 5;
	public const XPathNodeType Whitespace = 6;
	public const XPathNodeType ProcessingInstruction = 7;
	public const XPathNodeType Comment = 8;
	public const XPathNodeType All = 9;
}
public enum CompiledIdentityConstraint.ConstraintRole
{
	// Fields
	public const CompiledIdentityConstraint.ConstraintRole Unique = 0;
	public const CompiledIdentityConstraint.ConstraintRole Key = 1;
	public const CompiledIdentityConstraint.ConstraintRole Keyref = 2;
}
public enum XmlSchemaDatatypeVariety
{
	// Fields
	public const XmlSchemaDatatypeVariety Atomic = 0;
	public const XmlSchemaDatatypeVariety List = 1;
	public const XmlSchemaDatatypeVariety Union = 2;
}
public enum NamespaceList.ListType
{
	// Fields
	public const NamespaceList.ListType Any = 0;
	public const NamespaceList.ListType Other = 1;
	public const NamespaceList.ListType Set = 2;
}
public enum SchemaNames.Token
{
	// Fields
	public const SchemaNames.Token Empty = 0;
	public const SchemaNames.Token SchemaName = 1;
	public const SchemaNames.Token SchemaType = 2;
	public const SchemaNames.Token SchemaMaxOccurs = 3;
	public const SchemaNames.Token SchemaMinOccurs = 4;
	public const SchemaNames.Token SchemaInfinite = 5;
	public const SchemaNames.Token SchemaModel = 6;
	public const SchemaNames.Token SchemaOpen = 7;
	public const SchemaNames.Token SchemaClosed = 8;
	public const SchemaNames.Token SchemaContent = 9;
	public const SchemaNames.Token SchemaMixed = 10;
	public const SchemaNames.Token SchemaEmpty = 11;
	public const SchemaNames.Token SchemaElementOnly = 12;
	public const SchemaNames.Token SchemaTextOnly = 13;
	public const SchemaNames.Token SchemaOrder = 14;
	public const SchemaNames.Token SchemaSeq = 15;
	public const SchemaNames.Token SchemaOne = 16;
	public const SchemaNames.Token SchemaMany = 17;
	public const SchemaNames.Token SchemaRequired = 18;
	public const SchemaNames.Token SchemaYes = 19;
	public const SchemaNames.Token SchemaNo = 20;
	public const SchemaNames.Token SchemaString = 21;
	public const SchemaNames.Token SchemaId = 22;
	public const SchemaNames.Token SchemaIdref = 23;
	public const SchemaNames.Token SchemaIdrefs = 24;
	public const SchemaNames.Token SchemaEntity = 25;
	public const SchemaNames.Token SchemaEntities = 26;
	public const SchemaNames.Token SchemaNmtoken = 27;
	public const SchemaNames.Token SchemaNmtokens = 28;
	public const SchemaNames.Token SchemaEnumeration = 29;
	public const SchemaNames.Token SchemaDefault = 30;
	public const SchemaNames.Token XdrRoot = 31;
	public const SchemaNames.Token XdrElementType = 32;
	public const SchemaNames.Token XdrElement = 33;
	public const SchemaNames.Token XdrGroup = 34;
	public const SchemaNames.Token XdrAttributeType = 35;
	public const SchemaNames.Token XdrAttribute = 36;
	public const SchemaNames.Token XdrDatatype = 37;
	public const SchemaNames.Token XdrDescription = 38;
	public const SchemaNames.Token XdrExtends = 39;
	public const SchemaNames.Token SchemaXdrRootAlias = 40;
	public const SchemaNames.Token SchemaDtType = 41;
	public const SchemaNames.Token SchemaDtValues = 42;
	public const SchemaNames.Token SchemaDtMaxLength = 43;
	public const SchemaNames.Token SchemaDtMinLength = 44;
	public const SchemaNames.Token SchemaDtMax = 45;
	public const SchemaNames.Token SchemaDtMin = 46;
	public const SchemaNames.Token SchemaDtMinExclusive = 47;
	public const SchemaNames.Token SchemaDtMaxExclusive = 48;
	public const SchemaNames.Token SchemaTargetNamespace = 49;
	public const SchemaNames.Token SchemaVersion = 50;
	public const SchemaNames.Token SchemaFinalDefault = 51;
	public const SchemaNames.Token SchemaBlockDefault = 52;
	public const SchemaNames.Token SchemaFixed = 53;
	public const SchemaNames.Token SchemaAbstract = 54;
	public const SchemaNames.Token SchemaBlock = 55;
	public const SchemaNames.Token SchemaSubstitutionGroup = 56;
	public const SchemaNames.Token SchemaFinal = 57;
	public const SchemaNames.Token SchemaNillable = 58;
	public const SchemaNames.Token SchemaRef = 59;
	public const SchemaNames.Token SchemaBase = 60;
	public const SchemaNames.Token SchemaDerivedBy = 61;
	public const SchemaNames.Token SchemaNamespace = 62;
	public const SchemaNames.Token SchemaProcessContents = 63;
	public const SchemaNames.Token SchemaRefer = 64;
	public const SchemaNames.Token SchemaPublic = 65;
	public const SchemaNames.Token SchemaSystem = 66;
	public const SchemaNames.Token SchemaSchemaLocation = 67;
	public const SchemaNames.Token SchemaValue = 68;
	public const SchemaNames.Token SchemaSource = 69;
	public const SchemaNames.Token SchemaAttributeFormDefault = 70;
	public const SchemaNames.Token SchemaElementFormDefault = 71;
	public const SchemaNames.Token SchemaUse = 72;
	public const SchemaNames.Token SchemaForm = 73;
	public const SchemaNames.Token XsdSchema = 74;
	public const SchemaNames.Token XsdAnnotation = 75;
	public const SchemaNames.Token XsdInclude = 76;
	public const SchemaNames.Token XsdImport = 77;
	public const SchemaNames.Token XsdElement = 78;
	public const SchemaNames.Token XsdAttribute = 79;
	public const SchemaNames.Token xsdAttributeGroup = 80;
	public const SchemaNames.Token XsdAnyAttribute = 81;
	public const SchemaNames.Token XsdGroup = 82;
	public const SchemaNames.Token XsdAll = 83;
	public const SchemaNames.Token XsdChoice = 84;
	public const SchemaNames.Token XsdSequence = 85;
	public const SchemaNames.Token XsdAny = 86;
	public const SchemaNames.Token XsdNotation = 87;
	public const SchemaNames.Token XsdSimpleType = 88;
	public const SchemaNames.Token XsdComplexType = 89;
	public const SchemaNames.Token XsdUnique = 90;
	public const SchemaNames.Token XsdKey = 91;
	public const SchemaNames.Token XsdKeyref = 92;
	public const SchemaNames.Token XsdSelector = 93;
	public const SchemaNames.Token XsdField = 94;
	public const SchemaNames.Token XsdMinExclusive = 95;
	public const SchemaNames.Token XsdMinInclusive = 96;
	public const SchemaNames.Token XsdMaxExclusive = 97;
	public const SchemaNames.Token XsdMaxInclusive = 98;
	public const SchemaNames.Token XsdTotalDigits = 99;
	public const SchemaNames.Token XsdFractionDigits = 100;
	public const SchemaNames.Token XsdLength = 101;
	public const SchemaNames.Token XsdMinLength = 102;
	public const SchemaNames.Token XsdMaxLength = 103;
	public const SchemaNames.Token XsdEnumeration = 104;
	public const SchemaNames.Token XsdPattern = 105;
	public const SchemaNames.Token XsdDocumentation = 106;
	public const SchemaNames.Token XsdAppInfo = 107;
	public const SchemaNames.Token XsdComplexContent = 108;
	public const SchemaNames.Token XsdComplexContentExtension = 109;
	public const SchemaNames.Token XsdComplexContentRestriction = 110;
	public const SchemaNames.Token XsdSimpleContent = 111;
	public const SchemaNames.Token XsdSimpleContentExtension = 112;
	public const SchemaNames.Token XsdSimpleContentRestriction = 113;
	public const SchemaNames.Token XsdSimpleTypeList = 114;
	public const SchemaNames.Token XsdSimpleTypeRestriction = 115;
	public const SchemaNames.Token XsdSimpleTypeUnion = 116;
	public const SchemaNames.Token XsdWhitespace = 117;
	public const SchemaNames.Token XsdRedefine = 118;
	public const SchemaNames.Token SchemaItemType = 119;
	public const SchemaNames.Token SchemaMemberTypes = 120;
	public const SchemaNames.Token SchemaXPath = 121;
	public const SchemaNames.Token XmlLang = 122;
}
public enum XmlSchemaContentProcessing
{
	// Fields
	public const XmlSchemaContentProcessing None = 0;
	public const XmlSchemaContentProcessing Skip = 1;
	public const XmlSchemaContentProcessing Lax = 2;
	public const XmlSchemaContentProcessing Strict = 3;
}
public enum XmlSchemaContentType
{
	// Fields
	public const XmlSchemaContentType TextOnly = 0;
	public const XmlSchemaContentType Empty = 1;
	public const XmlSchemaContentType ElementOnly = 2;
	public const XmlSchemaContentType Mixed = 3;
}
public enum XmlSchemaDerivationMethod
{
	// Fields
	public const XmlSchemaDerivationMethod Empty = 0;
	public const XmlSchemaDerivationMethod Substitution = 1;
	public const XmlSchemaDerivationMethod Extension = 2;
	public const XmlSchemaDerivationMethod Restriction = 4;
	public const XmlSchemaDerivationMethod List = 8;
	public const XmlSchemaDerivationMethod Union = 16;
	public const XmlSchemaDerivationMethod All = 255;
	public const XmlSchemaDerivationMethod None = 256;
}
public enum XmlSchemaForm
{
	// Fields
	public const XmlSchemaForm None = 0;
	public const XmlSchemaForm Qualified = 1;
	public const XmlSchemaForm Unqualified = 2;
}
public enum XmlSchemaUse
{
	// Fields
	public const XmlSchemaUse None = 0;
	public const XmlSchemaUse Optional = 1;
	public const XmlSchemaUse Prohibited = 2;
	public const XmlSchemaUse Required = 3;
}
public enum XmlSchemaValidationFlags
{
	// Fields
	public const XmlSchemaValidationFlags None = 0;
	public const XmlSchemaValidationFlags ProcessInlineSchema = 1;
	public const XmlSchemaValidationFlags ProcessSchemaLocation = 2;
	public const XmlSchemaValidationFlags ReportValidationWarnings = 4;
	public const XmlSchemaValidationFlags ProcessIdentityConstraints = 8;
	public const XmlSchemaValidationFlags AllowXmlAttributes = 16;
}
public enum XmlSchemaValidity
{
	// Fields
	public const XmlSchemaValidity NotKnown = 0;
	public const XmlSchemaValidity Valid = 1;
	public const XmlSchemaValidity Invalid = 2;
}
public enum XmlSeverityType
{
	// Fields
	public const XmlSeverityType Error = 0;
	public const XmlSeverityType Warning = 1;
}
public enum XmlTypeCode
{
	// Fields
	public const XmlTypeCode None = 0;
	public const XmlTypeCode Item = 1;
	public const XmlTypeCode Node = 2;
	public const XmlTypeCode Document = 3;
	public const XmlTypeCode Element = 4;
	public const XmlTypeCode Attribute = 5;
	public const XmlTypeCode Namespace = 6;
	public const XmlTypeCode ProcessingInstruction = 7;
	public const XmlTypeCode Comment = 8;
	public const XmlTypeCode Text = 9;
	public const XmlTypeCode AnyAtomicType = 10;
	public const XmlTypeCode UntypedAtomic = 11;
	public const XmlTypeCode String = 12;
	public const XmlTypeCode Boolean = 13;
	public const XmlTypeCode Decimal = 14;
	public const XmlTypeCode Float = 15;
	public const XmlTypeCode Double = 16;
	public const XmlTypeCode Duration = 17;
	public const XmlTypeCode DateTime = 18;
	public const XmlTypeCode Time = 19;
	public const XmlTypeCode Date = 20;
	public const XmlTypeCode GYearMonth = 21;
	public const XmlTypeCode GYear = 22;
	public const XmlTypeCode GMonthDay = 23;
	public const XmlTypeCode GDay = 24;
	public const XmlTypeCode GMonth = 25;
	public const XmlTypeCode HexBinary = 26;
	public const XmlTypeCode Base64Binary = 27;
	public const XmlTypeCode AnyUri = 28;
	public const XmlTypeCode QName = 29;
	public const XmlTypeCode Notation = 30;
	public const XmlTypeCode NormalizedString = 31;
	public const XmlTypeCode Token = 32;
	public const XmlTypeCode Language = 33;
	public const XmlTypeCode NmToken = 34;
	public const XmlTypeCode Name = 35;
	public const XmlTypeCode NCName = 36;
	public const XmlTypeCode Id = 37;
	public const XmlTypeCode Idref = 38;
	public const XmlTypeCode Entity = 39;
	public const XmlTypeCode Integer = 40;
	public const XmlTypeCode NonPositiveInteger = 41;
	public const XmlTypeCode NegativeInteger = 42;
	public const XmlTypeCode Long = 43;
	public const XmlTypeCode Int = 44;
	public const XmlTypeCode Short = 45;
	public const XmlTypeCode Byte = 46;
	public const XmlTypeCode NonNegativeInteger = 47;
	public const XmlTypeCode UnsignedLong = 48;
	public const XmlTypeCode UnsignedInt = 49;
	public const XmlTypeCode UnsignedShort = 50;
	public const XmlTypeCode UnsignedByte = 51;
	public const XmlTypeCode PositiveInteger = 52;
	public const XmlTypeCode YearMonthDuration = 53;
	public const XmlTypeCode DayTimeDuration = 54;
}
public enum XsdDuration.DurationType
{
	// Fields
	public const XsdDuration.DurationType Duration = 0;
	public const XsdDuration.DurationType YearMonthDuration = 1;
	public const XsdDuration.DurationType DayTimeDuration = 2;
}
public enum UnityTls.unitytls_error_code
{
	// Fields
	public uint value__; // 0x10
	public const UnityTls.unitytls_error_code UNITYTLS_SUCCESS = 0;
	public const UnityTls.unitytls_error_code UNITYTLS_INVALID_ARGUMENT = 1;
	public const UnityTls.unitytls_error_code UNITYTLS_INVALID_FORMAT = 2;
	public const UnityTls.unitytls_error_code UNITYTLS_INVALID_PASSWORD = 3;
	public const UnityTls.unitytls_error_code UNITYTLS_INVALID_STATE = 4;
	public const UnityTls.unitytls_error_code UNITYTLS_BUFFER_OVERFLOW = 5;
	public const UnityTls.unitytls_error_code UNITYTLS_OUT_OF_MEMORY = 6;
	public const UnityTls.unitytls_error_code UNITYTLS_INTERNAL_ERROR = 7;
	public const UnityTls.unitytls_error_code UNITYTLS_NOT_SUPPORTED = 8;
	public const UnityTls.unitytls_error_code UNITYTLS_ENTROPY_SOURCE_FAILED = 9;
	public const UnityTls.unitytls_error_code UNITYTLS_STREAM_CLOSED = 10;
	public const UnityTls.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_START = 1048576;
	public const UnityTls.unitytls_error_code UNITYTLS_USER_WOULD_BLOCK = 1048577;
	public const UnityTls.unitytls_error_code UNITYTLS_USER_READ_FAILED = 1048578;
	public const UnityTls.unitytls_error_code UNITYTLS_USER_WRITE_FAILED = 1048579;
	public const UnityTls.unitytls_error_code UNITYTLS_USER_UNKNOWN_ERROR = 1048580;
	public const UnityTls.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_END = 2097152;
}
public enum UnityTls.unitytls_x509verify_result
{
	// Fields
	public uint value__; // 0x10
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_SUCCESS = 0;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_NOT_DONE = 2147483648;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FATAL_ERROR = 4294967295;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_EXPIRED = 1;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_REVOKED = 2;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH = 4;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED = 8;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR1 = 65536;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR2 = 131072;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR3 = 262144;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR4 = 524288;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR5 = 1048576;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR6 = 2097152;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR7 = 4194304;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR8 = 8388608;
	public const UnityTls.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR = 134217728;
}
public enum UnityTls.unitytls_ciphersuite
{
	// Fields
	public uint value__; // 0x10
	public const UnityTls.unitytls_ciphersuite UNITYTLS_CIPHERSUITE_INVALID = 16777215;
}
public enum UnityTls.unitytls_protocol
{
	// Fields
	public uint value__; // 0x10
	public const UnityTls.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_0 = 0;
	public const UnityTls.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_1 = 1;
	public const UnityTls.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_2 = 2;
	public const UnityTls.unitytls_protocol UNITYTLS_PROTOCOL_INVALID = 3;
}
public enum UriKind
{
	// Fields
	public const UriKind RelativeOrAbsolute = 0;
	public const UriKind Absolute = 1;
	public const UriKind Relative = 2;
}
public enum UriComponents
{
	// Fields
	public const UriComponents Scheme = 1;
	public const UriComponents UserInfo = 2;
	public const UriComponents Host = 4;
	public const UriComponents Port = 8;
	public const UriComponents Path = 16;
	public const UriComponents Query = 32;
	public const UriComponents Fragment = 64;
	public const UriComponents StrongPort = 128;
	public const UriComponents NormalizedHost = 256;
	public const UriComponents KeepDelimiter = 1073741824;
	public const UriComponents SerializationInfoString = -2147483648;
	public const UriComponents AbsoluteUri = 127;
	public const UriComponents HostAndPort = 132;
	public const UriComponents StrongAuthority = 134;
	public const UriComponents SchemeAndServer = 13;
	public const UriComponents HttpRequestUrl = 61;
	public const UriComponents PathAndQuery = 48;
}
public enum UriFormat
{
	// Fields
	public const UriFormat UriEscaped = 1;
	public const UriFormat Unescaped = 2;
	public const UriFormat SafeUnescaped = 3;
}
public enum UriIdnScope
{
	// Fields
	public const UriIdnScope None = 0;
	public const UriIdnScope AllExceptIntranet = 1;
	public const UriIdnScope All = 2;
}
public enum UriHostNameType
{
	// Fields
	public const UriHostNameType Unknown = 0;
	public const UriHostNameType Basic = 1;
	public const UriHostNameType Dns = 2;
	public const UriHostNameType IPv4 = 3;
	public const UriHostNameType IPv6 = 4;
}
public enum RegexOptions
{
	// Fields
	public const RegexOptions None = 0;
	public const RegexOptions IgnoreCase = 1;
	public const RegexOptions Multiline = 2;
	public const RegexOptions ExplicitCapture = 4;
	public const RegexOptions Compiled = 8;
	public const RegexOptions Singleline = 16;
	public const RegexOptions IgnorePatternWhitespace = 32;
	public const RegexOptions RightToLeft = 64;
	public const RegexOptions ECMAScript = 256;
	public const RegexOptions CultureInvariant = 512;
}
public enum TraceEventType
{
	// Fields
	public const TraceEventType Critical = 1;
	public const TraceEventType Error = 2;
	public const TraceEventType Warning = 4;
	public const TraceEventType Information = 8;
	public const TraceEventType Verbose = 16;
	public const TraceEventType Start = 256;
	public const TraceEventType Stop = 512;
	public const TraceEventType Suspend = 1024;
	public const TraceEventType Resume = 2048;
	public const TraceEventType Transfer = 4096;
}
public enum TraceLevel
{
	// Fields
	public const TraceLevel Off = 0;
	public const TraceLevel Error = 1;
	public const TraceLevel Warning = 2;
	public const TraceLevel Info = 3;
	public const TraceLevel Verbose = 4;
}
public enum TraceOptions
{
	// Fields
	public const TraceOptions None = 0;
	public const TraceOptions LogicalOperationStack = 1;
	public const TraceOptions DateTime = 2;
	public const TraceOptions Timestamp = 4;
	public const TraceOptions ProcessId = 8;
	public const TraceOptions ThreadId = 16;
	public const TraceOptions Callstack = 32;
}
public enum ListChangedType
{
	// Fields
	public const ListChangedType Reset = 0;
	public const ListChangedType ItemAdded = 1;
	public const ListChangedType ItemDeleted = 2;
	public const ListChangedType ItemMoved = 3;
	public const ListChangedType ItemChanged = 4;
	public const ListChangedType PropertyDescriptorAdded = 5;
	public const ListChangedType PropertyDescriptorDeleted = 6;
	public const ListChangedType PropertyDescriptorChanged = 7;
}
public enum SslProtocols
{
	// Fields
	public const SslProtocols None = 0;
	public const SslProtocols Ssl2 = 12;
	public const SslProtocols Ssl3 = 48;
	public const SslProtocols Tls = 192;
	public const SslProtocols Tls11 = 768;
	public const SslProtocols Tls12 = 3072;
	public const SslProtocols Default = 240;
}
public enum PolicyEnforcement
{
	// Fields
	public const PolicyEnforcement Never = 0;
	public const PolicyEnforcement WhenSupported = 1;
	public const PolicyEnforcement Always = 2;
}
public enum OidGroup
{
	// Fields
	public const OidGroup All = 0;
	public const OidGroup HashAlgorithm = 1;
	public const OidGroup EncryptionAlgorithm = 2;
	public const OidGroup PublicKeyAlgorithm = 3;
	public const OidGroup SignatureAlgorithm = 4;
	public const OidGroup Attribute = 5;
	public const OidGroup ExtensionOrAttribute = 6;
	public const OidGroup EnhancedKeyUsage = 7;
	public const OidGroup Policy = 8;
	public const OidGroup Template = 9;
	public const OidGroup KeyDerivationFunction = 10;
}
public enum OpenFlags
{
	// Fields
	public const OpenFlags ReadOnly = 0;
	public const OpenFlags ReadWrite = 1;
	public const OpenFlags MaxAllowed = 2;
	public const OpenFlags OpenExistingOnly = 4;
	public const OpenFlags IncludeArchived = 8;
}
public enum StoreLocation
{
	// Fields
	public const StoreLocation CurrentUser = 1;
	public const StoreLocation LocalMachine = 2;
}
public enum StoreName
{
	// Fields
	public const StoreName AddressBook = 1;
	public const StoreName AuthRoot = 2;
	public const StoreName CertificateAuthority = 3;
	public const StoreName Disallowed = 4;
	public const StoreName My = 5;
	public const StoreName Root = 6;
	public const StoreName TrustedPeople = 7;
	public const StoreName TrustedPublisher = 8;
}
public enum X500DistinguishedNameFlags
{
	// Fields
	public const X500DistinguishedNameFlags None = 0;
	public const X500DistinguishedNameFlags Reversed = 1;
	public const X500DistinguishedNameFlags UseSemicolons = 16;
	public const X500DistinguishedNameFlags DoNotUsePlusSign = 32;
	public const X500DistinguishedNameFlags DoNotUseQuotes = 64;
	public const X500DistinguishedNameFlags UseCommas = 128;
	public const X500DistinguishedNameFlags UseNewLines = 256;
	public const X500DistinguishedNameFlags UseUTF8Encoding = 4096;
	public const X500DistinguishedNameFlags UseT61Encoding = 8192;
	public const X500DistinguishedNameFlags ForceUTF8Encoding = 16384;
}
public enum X509ChainStatusFlags
{
	// Fields
	public const X509ChainStatusFlags NoError = 0;
	public const X509ChainStatusFlags NotTimeValid = 1;
	public const X509ChainStatusFlags NotTimeNested = 2;
	public const X509ChainStatusFlags Revoked = 4;
	public const X509ChainStatusFlags NotSignatureValid = 8;
	public const X509ChainStatusFlags NotValidForUsage = 16;
	public const X509ChainStatusFlags UntrustedRoot = 32;
	public const X509ChainStatusFlags RevocationStatusUnknown = 64;
	public const X509ChainStatusFlags Cyclic = 128;
	public const X509ChainStatusFlags InvalidExtension = 256;
	public const X509ChainStatusFlags InvalidPolicyConstraints = 512;
	public const X509ChainStatusFlags InvalidBasicConstraints = 1024;
	public const X509ChainStatusFlags InvalidNameConstraints = 2048;
	public const X509ChainStatusFlags HasNotSupportedNameConstraint = 4096;
	public const X509ChainStatusFlags HasNotDefinedNameConstraint = 8192;
	public const X509ChainStatusFlags HasNotPermittedNameConstraint = 16384;
	public const X509ChainStatusFlags HasExcludedNameConstraint = 32768;
	public const X509ChainStatusFlags PartialChain = 65536;
	public const X509ChainStatusFlags CtlNotTimeValid = 131072;
	public const X509ChainStatusFlags CtlNotSignatureValid = 262144;
	public const X509ChainStatusFlags CtlNotValidForUsage = 524288;
	public const X509ChainStatusFlags OfflineRevocation = 16777216;
	public const X509ChainStatusFlags NoIssuanceChainPolicy = 33554432;
	public const X509ChainStatusFlags ExplicitDistrust = 67108864;
	public const X509ChainStatusFlags HasNotSupportedCriticalExtension = 134217728;
	public const X509ChainStatusFlags HasWeakSignature = 1048576;
}
public enum X509FindType
{
	// Fields
	public const X509FindType FindByThumbprint = 0;
	public const X509FindType FindBySubjectName = 1;
	public const X509FindType FindBySubjectDistinguishedName = 2;
	public const X509FindType FindByIssuerName = 3;
	public const X509FindType FindByIssuerDistinguishedName = 4;
	public const X509FindType FindBySerialNumber = 5;
	public const X509FindType FindByTimeValid = 6;
	public const X509FindType FindByTimeNotYetValid = 7;
	public const X509FindType FindByTimeExpired = 8;
	public const X509FindType FindByTemplateName = 9;
	public const X509FindType FindByApplicationPolicy = 10;
	public const X509FindType FindByCertificatePolicy = 11;
	public const X509FindType FindByExtension = 12;
	public const X509FindType FindByKeyUsage = 13;
	public const X509FindType FindBySubjectKeyIdentifier = 14;
}
public enum X509KeyUsageFlags
{
	// Fields
	public const X509KeyUsageFlags None = 0;
	public const X509KeyUsageFlags EncipherOnly = 1;
	public const X509KeyUsageFlags CrlSign = 2;
	public const X509KeyUsageFlags KeyCertSign = 4;
	public const X509KeyUsageFlags KeyAgreement = 8;
	public const X509KeyUsageFlags DataEncipherment = 16;
	public const X509KeyUsageFlags KeyEncipherment = 32;
	public const X509KeyUsageFlags NonRepudiation = 64;
	public const X509KeyUsageFlags DigitalSignature = 128;
	public const X509KeyUsageFlags DecipherOnly = 32768;
}
public enum X509NameType
{
	// Fields
	public const X509NameType SimpleName = 0;
	public const X509NameType EmailName = 1;
	public const X509NameType UpnName = 2;
	public const X509NameType DnsName = 3;
	public const X509NameType DnsFromAlternativeName = 4;
	public const X509NameType UrlName = 5;
}
public enum X509RevocationFlag
{
	// Fields
	public const X509RevocationFlag EndCertificateOnly = 0;
	public const X509RevocationFlag EntireChain = 1;
	public const X509RevocationFlag ExcludeRoot = 2;
}
public enum X509RevocationMode
{
	// Fields
	public const X509RevocationMode NoCheck = 0;
	public const X509RevocationMode Online = 1;
	public const X509RevocationMode Offline = 2;
}
public enum X509VerificationFlags
{
	// Fields
	public const X509VerificationFlags NoFlag = 0;
	public const X509VerificationFlags IgnoreNotTimeValid = 1;
	public const X509VerificationFlags IgnoreCtlNotTimeValid = 2;
	public const X509VerificationFlags IgnoreNotTimeNested = 4;
	public const X509VerificationFlags IgnoreInvalidBasicConstraints = 8;
	public const X509VerificationFlags AllowUnknownCertificateAuthority = 16;
	public const X509VerificationFlags IgnoreWrongUsage = 32;
	public const X509VerificationFlags IgnoreInvalidName = 64;
	public const X509VerificationFlags IgnoreInvalidPolicy = 128;
	public const X509VerificationFlags IgnoreEndRevocationUnknown = 256;
	public const X509VerificationFlags IgnoreCtlSignerRevocationUnknown = 512;
	public const X509VerificationFlags IgnoreCertificateAuthorityRevocationUnknown = 1024;
	public const X509VerificationFlags IgnoreRootRevocationUnknown = 2048;
	public const X509VerificationFlags AllFlags = 4095;
}
public enum CompressionMode
{
	// Fields
	public const CompressionMode Decompress = 0;
	public const CompressionMode Compress = 1;
}
public enum SecurityProtocolType
{
	// Fields
	public const SecurityProtocolType SystemDefault = 0;
	public const SecurityProtocolType Ssl3 = 48;
	public const SecurityProtocolType Tls = 192;
	public const SecurityProtocolType Tls11 = 768;
	public const SecurityProtocolType Tls12 = 3072;
}
public enum AuthenticationSchemes
{
	// Fields
	public const AuthenticationSchemes None = 0;
	public const AuthenticationSchemes Digest = 1;
	public const AuthenticationSchemes Negotiate = 2;
	public const AuthenticationSchemes Ntlm = 4;
	public const AuthenticationSchemes Basic = 8;
	public const AuthenticationSchemes Anonymous = 32768;
	public const AuthenticationSchemes IntegratedWindowsAuthentication = 6;
}
public enum FtpStatusCode
{
	// Fields
	public const FtpStatusCode Undefined = 0;
	public const FtpStatusCode RestartMarker = 110;
	public const FtpStatusCode ServiceTemporarilyNotAvailable = 120;
	public const FtpStatusCode DataAlreadyOpen = 125;
	public const FtpStatusCode OpeningData = 150;
	public const FtpStatusCode CommandOK = 200;
	public const FtpStatusCode CommandExtraneous = 202;
	public const FtpStatusCode DirectoryStatus = 212;
	public const FtpStatusCode FileStatus = 213;
	public const FtpStatusCode SystemType = 215;
	public const FtpStatusCode SendUserCommand = 220;
	public const FtpStatusCode ClosingControl = 221;
	public const FtpStatusCode ClosingData = 226;
	public const FtpStatusCode EnteringPassive = 227;
	public const FtpStatusCode LoggedInProceed = 230;
	public const FtpStatusCode ServerWantsSecureSession = 234;
	public const FtpStatusCode FileActionOK = 250;
	public const FtpStatusCode PathnameCreated = 257;
	public const FtpStatusCode SendPasswordCommand = 331;
	public const FtpStatusCode NeedLoginAccount = 332;
	public const FtpStatusCode FileCommandPending = 350;
	public const FtpStatusCode ServiceNotAvailable = 421;
	public const FtpStatusCode CantOpenData = 425;
	public const FtpStatusCode ConnectionClosed = 426;
	public const FtpStatusCode ActionNotTakenFileUnavailableOrBusy = 450;
	public const FtpStatusCode ActionAbortedLocalProcessingError = 451;
	public const FtpStatusCode ActionNotTakenInsufficientSpace = 452;
	public const FtpStatusCode CommandSyntaxError = 500;
	public const FtpStatusCode ArgumentSyntaxError = 501;
	public const FtpStatusCode CommandNotImplemented = 502;
	public const FtpStatusCode BadCommandSequence = 503;
	public const FtpStatusCode NotLoggedIn = 530;
	public const FtpStatusCode AccountNeeded = 532;
	public const FtpStatusCode ActionNotTakenFileUnavailable = 550;
	public const FtpStatusCode ActionAbortedUnknownPageType = 551;
	public const FtpStatusCode FileActionAborted = 552;
	public const FtpStatusCode ActionNotTakenFilenameNotAllowed = 553;
}
public enum HttpRequestHeader
{
	// Fields
	public const HttpRequestHeader CacheControl = 0;
	public const HttpRequestHeader Connection = 1;
	public const HttpRequestHeader Date = 2;
	public const HttpRequestHeader KeepAlive = 3;
	public const HttpRequestHeader Pragma = 4;
	public const HttpRequestHeader Trailer = 5;
	public const HttpRequestHeader TransferEncoding = 6;
	public const HttpRequestHeader Upgrade = 7;
	public const HttpRequestHeader Via = 8;
	public const HttpRequestHeader Warning = 9;
	public const HttpRequestHeader Allow = 10;
	public const HttpRequestHeader ContentLength = 11;
	public const HttpRequestHeader ContentType = 12;
	public const HttpRequestHeader ContentEncoding = 13;
	public const HttpRequestHeader ContentLanguage = 14;
	public const HttpRequestHeader ContentLocation = 15;
	public const HttpRequestHeader ContentMd5 = 16;
	public const HttpRequestHeader ContentRange = 17;
	public const HttpRequestHeader Expires = 18;
	public const HttpRequestHeader LastModified = 19;
	public const HttpRequestHeader Accept = 20;
	public const HttpRequestHeader AcceptCharset = 21;
	public const HttpRequestHeader AcceptEncoding = 22;
	public const HttpRequestHeader AcceptLanguage = 23;
	public const HttpRequestHeader Authorization = 24;
	public const HttpRequestHeader Cookie = 25;
	public const HttpRequestHeader Expect = 26;
	public const HttpRequestHeader From = 27;
	public const HttpRequestHeader Host = 28;
	public const HttpRequestHeader IfMatch = 29;
	public const HttpRequestHeader IfModifiedSince = 30;
	public const HttpRequestHeader IfNoneMatch = 31;
	public const HttpRequestHeader IfRange = 32;
	public const HttpRequestHeader IfUnmodifiedSince = 33;
	public const HttpRequestHeader MaxForwards = 34;
	public const HttpRequestHeader ProxyAuthorization = 35;
	public const HttpRequestHeader Referer = 36;
	public const HttpRequestHeader Range = 37;
	public const HttpRequestHeader Te = 38;
	public const HttpRequestHeader Translate = 39;
	public const HttpRequestHeader UserAgent = 40;
}
public enum HttpStatusCode
{
	// Fields
	public const HttpStatusCode Continue = 100;
	public const HttpStatusCode SwitchingProtocols = 101;
	public const HttpStatusCode OK = 200;
	public const HttpStatusCode Created = 201;
	public const HttpStatusCode Accepted = 202;
	public const HttpStatusCode NonAuthoritativeInformation = 203;
	public const HttpStatusCode NoContent = 204;
	public const HttpStatusCode ResetContent = 205;
	public const HttpStatusCode PartialContent = 206;
	public const HttpStatusCode MultipleChoices = 300;
	public const HttpStatusCode Ambiguous = 300;
	public const HttpStatusCode MovedPermanently = 301;
	public const HttpStatusCode Moved = 301;
	public const HttpStatusCode Found = 302;
	public const HttpStatusCode Redirect = 302;
	public const HttpStatusCode SeeOther = 303;
	public const HttpStatusCode RedirectMethod = 303;
	public const HttpStatusCode NotModified = 304;
	public const HttpStatusCode UseProxy = 305;
	public const HttpStatusCode Unused = 306;
	public const HttpStatusCode TemporaryRedirect = 307;
	public const HttpStatusCode RedirectKeepVerb = 307;
	public const HttpStatusCode BadRequest = 400;
	public const HttpStatusCode Unauthorized = 401;
	public const HttpStatusCode PaymentRequired = 402;
	public const HttpStatusCode Forbidden = 403;
	public const HttpStatusCode NotFound = 404;
	public const HttpStatusCode MethodNotAllowed = 405;
	public const HttpStatusCode NotAcceptable = 406;
	public const HttpStatusCode ProxyAuthenticationRequired = 407;
	public const HttpStatusCode RequestTimeout = 408;
	public const HttpStatusCode Conflict = 409;
	public const HttpStatusCode Gone = 410;
	public const HttpStatusCode LengthRequired = 411;
	public const HttpStatusCode PreconditionFailed = 412;
	public const HttpStatusCode RequestEntityTooLarge = 413;
	public const HttpStatusCode RequestUriTooLong = 414;
	public const HttpStatusCode UnsupportedMediaType = 415;
	public const HttpStatusCode RequestedRangeNotSatisfiable = 416;
	public const HttpStatusCode ExpectationFailed = 417;
	public const HttpStatusCode UpgradeRequired = 426;
	public const HttpStatusCode InternalServerError = 500;
	public const HttpStatusCode NotImplemented = 501;
	public const HttpStatusCode BadGateway = 502;
	public const HttpStatusCode ServiceUnavailable = 503;
	public const HttpStatusCode GatewayTimeout = 504;
	public const HttpStatusCode HttpVersionNotSupported = 505;
}
public enum WebExceptionStatus
{
	// Fields
	public const WebExceptionStatus Success = 0;
	public const WebExceptionStatus NameResolutionFailure = 1;
	public const WebExceptionStatus ConnectFailure = 2;
	public const WebExceptionStatus ReceiveFailure = 3;
	public const WebExceptionStatus SendFailure = 4;
	public const WebExceptionStatus PipelineFailure = 5;
	public const WebExceptionStatus RequestCanceled = 6;
	public const WebExceptionStatus ProtocolError = 7;
	public const WebExceptionStatus ConnectionClosed = 8;
	public const WebExceptionStatus TrustFailure = 9;
	public const WebExceptionStatus SecureChannelFailure = 10;
	public const WebExceptionStatus ServerProtocolViolation = 11;
	public const WebExceptionStatus KeepAliveFailure = 12;
	public const WebExceptionStatus Pending = 13;
	public const WebExceptionStatus Timeout = 14;
	public const WebExceptionStatus ProxyNameResolutionFailure = 15;
	public const WebExceptionStatus UnknownError = 16;
	public const WebExceptionStatus MessageLengthLimitExceeded = 17;
	public const WebExceptionStatus CacheEntryNotFound = 18;
	public const WebExceptionStatus RequestProhibitedByCachePolicy = 19;
	public const WebExceptionStatus RequestProhibitedByProxy = 20;
}
public enum DecompressionMethods
{
	// Fields
	public const DecompressionMethods None = 0;
	public const DecompressionMethods GZip = 1;
	public const DecompressionMethods Deflate = 2;
}
public enum AddressFamily
{
	// Fields
	public const AddressFamily Unknown = -1;
	public const AddressFamily Unspecified = 0;
	public const AddressFamily Unix = 1;
	public const AddressFamily InterNetwork = 2;
	public const AddressFamily ImpLink = 3;
	public const AddressFamily Pup = 4;
	public const AddressFamily Chaos = 5;
	public const AddressFamily NS = 6;
	public const AddressFamily Ipx = 6;
	public const AddressFamily Iso = 7;
	public const AddressFamily Osi = 7;
	public const AddressFamily Ecma = 8;
	public const AddressFamily DataKit = 9;
	public const AddressFamily Ccitt = 10;
	public const AddressFamily Sna = 11;
	public const AddressFamily DecNet = 12;
	public const AddressFamily DataLink = 13;
	public const AddressFamily Lat = 14;
	public const AddressFamily HyperChannel = 15;
	public const AddressFamily AppleTalk = 16;
	public const AddressFamily NetBios = 17;
	public const AddressFamily VoiceView = 18;
	public const AddressFamily FireFox = 19;
	public const AddressFamily Banyan = 21;
	public const AddressFamily Atm = 22;
	public const AddressFamily InterNetworkV6 = 23;
	public const AddressFamily Cluster = 24;
	public const AddressFamily Ieee12844 = 25;
	public const AddressFamily Irda = 26;
	public const AddressFamily NetworkDesigners = 28;
	public const AddressFamily Max = 29;
}
public enum IOControlCode
{
	// Fields
	public long value__; // 0x10
	public const IOControlCode AsyncIO = 2147772029;
	public const IOControlCode NonBlockingIO = 2147772030;
	public const IOControlCode DataToRead = 1074030207;
	public const IOControlCode OobDataRead = 1074033415;
	public const IOControlCode AssociateHandle = 2281701377;
	public const IOControlCode EnableCircularQueuing = 671088642;
	public const IOControlCode Flush = 671088644;
	public const IOControlCode GetBroadcastAddress = 1207959557;
	public const IOControlCode GetExtensionFunctionPointer = 3355443206;
	public const IOControlCode GetQos = 3355443207;
	public const IOControlCode GetGroupQos = 3355443208;
	public const IOControlCode MultipointLoopback = 2281701385;
	public const IOControlCode MulticastScope = 2281701386;
	public const IOControlCode SetQos = 2281701387;
	public const IOControlCode SetGroupQos = 2281701388;
	public const IOControlCode TranslateHandle = 3355443213;
	public const IOControlCode RoutingInterfaceQuery = 3355443220;
	public const IOControlCode RoutingInterfaceChange = 2281701397;
	public const IOControlCode AddressListQuery = 1207959574;
	public const IOControlCode AddressListChange = 671088663;
	public const IOControlCode QueryTargetPnpHandle = 1207959576;
	public const IOControlCode NamespaceChange = 2281701401;
	public const IOControlCode AddressListSort = 3355443225;
	public const IOControlCode ReceiveAll = 2550136833;
	public const IOControlCode ReceiveAllMulticast = 2550136834;
	public const IOControlCode ReceiveAllIgmpMulticast = 2550136835;
	public const IOControlCode KeepAliveValues = 2550136836;
	public const IOControlCode AbsorbRouterAlert = 2550136837;
	public const IOControlCode UnicastInterface = 2550136838;
	public const IOControlCode LimitBroadcasts = 2550136839;
	public const IOControlCode BindToInterface = 2550136840;
	public const IOControlCode MulticastInterface = 2550136841;
	public const IOControlCode AddMulticastGroupOnInterface = 2550136842;
	public const IOControlCode DeleteMulticastGroupFromInterface = 2550136843;
}
public enum IPProtectionLevel
{
	// Fields
	public const IPProtectionLevel Unspecified = -1;
	public const IPProtectionLevel Unrestricted = 10;
	public const IPProtectionLevel EdgeRestricted = 20;
	public const IPProtectionLevel Restricted = 30;
}
public enum ProtocolType
{
	// Fields
	public const ProtocolType IP = 0;
	public const ProtocolType IPv6HopByHopOptions = 0;
	public const ProtocolType Icmp = 1;
	public const ProtocolType Igmp = 2;
	public const ProtocolType Ggp = 3;
	public const ProtocolType IPv4 = 4;
	public const ProtocolType Tcp = 6;
	public const ProtocolType Pup = 12;
	public const ProtocolType Udp = 17;
	public const ProtocolType Idp = 22;
	public const ProtocolType IPv6 = 41;
	public const ProtocolType IPv6RoutingHeader = 43;
	public const ProtocolType IPv6FragmentHeader = 44;
	public const ProtocolType IPSecEncapsulatingSecurityPayload = 50;
	public const ProtocolType IPSecAuthenticationHeader = 51;
	public const ProtocolType IcmpV6 = 58;
	public const ProtocolType IPv6NoNextHeader = 59;
	public const ProtocolType IPv6DestinationOptions = 60;
	public const ProtocolType ND = 77;
	public const ProtocolType Raw = 255;
	public const ProtocolType Unspecified = 0;
	public const ProtocolType Ipx = 1000;
	public const ProtocolType Spx = 1256;
	public const ProtocolType SpxII = 1257;
	public const ProtocolType Unknown = -1;
}
public enum SelectMode
{
	// Fields
	public const SelectMode SelectRead = 0;
	public const SelectMode SelectWrite = 1;
	public const SelectMode SelectError = 2;
}
public enum SocketAsyncOperation
{
	// Fields
	public const SocketAsyncOperation None = 0;
	public const SocketAsyncOperation Accept = 1;
	public const SocketAsyncOperation Connect = 2;
	public const SocketAsyncOperation Disconnect = 3;
	public const SocketAsyncOperation Receive = 4;
	public const SocketAsyncOperation ReceiveFrom = 5;
	public const SocketAsyncOperation ReceiveMessageFrom = 6;
	public const SocketAsyncOperation Send = 7;
	public const SocketAsyncOperation SendPackets = 8;
	public const SocketAsyncOperation SendTo = 9;
}
public enum SocketError
{
	// Fields
	public const SocketError Success = 0;
	public const SocketError SocketError = -1;
	public const SocketError Interrupted = 10004;
	public const SocketError AccessDenied = 10013;
	public const SocketError Fault = 10014;
	public const SocketError InvalidArgument = 10022;
	public const SocketError TooManyOpenSockets = 10024;
	public const SocketError WouldBlock = 10035;
	public const SocketError InProgress = 10036;
	public const SocketError AlreadyInProgress = 10037;
	public const SocketError NotSocket = 10038;
	public const SocketError DestinationAddressRequired = 10039;
	public const SocketError MessageSize = 10040;
	public const SocketError ProtocolType = 10041;
	public const SocketError ProtocolOption = 10042;
	public const SocketError ProtocolNotSupported = 10043;
	public const SocketError SocketNotSupported = 10044;
	public const SocketError OperationNotSupported = 10045;
	public const SocketError ProtocolFamilyNotSupported = 10046;
	public const SocketError AddressFamilyNotSupported = 10047;
	public const SocketError AddressAlreadyInUse = 10048;
	public const SocketError AddressNotAvailable = 10049;
	public const SocketError NetworkDown = 10050;
	public const SocketError NetworkUnreachable = 10051;
	public const SocketError NetworkReset = 10052;
	public const SocketError ConnectionAborted = 10053;
	public const SocketError ConnectionReset = 10054;
	public const SocketError NoBufferSpaceAvailable = 10055;
	public const SocketError IsConnected = 10056;
	public const SocketError NotConnected = 10057;
	public const SocketError Shutdown = 10058;
	public const SocketError TimedOut = 10060;
	public const SocketError ConnectionRefused = 10061;
	public const SocketError HostDown = 10064;
	public const SocketError HostUnreachable = 10065;
	public const SocketError ProcessLimit = 10067;
	public const SocketError SystemNotReady = 10091;
	public const SocketError VersionNotSupported = 10092;
	public const SocketError NotInitialized = 10093;
	public const SocketError Disconnecting = 10101;
	public const SocketError TypeNotFound = 10109;
	public const SocketError HostNotFound = 11001;
	public const SocketError TryAgain = 11002;
	public const SocketError NoRecovery = 11003;
	public const SocketError NoData = 11004;
	public const SocketError IOPending = 997;
	public const SocketError OperationAborted = 995;
}
public enum SocketFlags
{
	// Fields
	public const SocketFlags None = 0;
	public const SocketFlags OutOfBand = 1;
	public const SocketFlags Peek = 2;
	public const SocketFlags DontRoute = 4;
	public const SocketFlags MaxIOVectorLength = 16;
	public const SocketFlags Truncated = 256;
	public const SocketFlags ControlDataTruncated = 512;
	public const SocketFlags Broadcast = 1024;
	public const SocketFlags Multicast = 2048;
	public const SocketFlags Partial = 32768;
}
public enum SocketOptionLevel
{
	// Fields
	public const SocketOptionLevel Socket = 65535;
	public const SocketOptionLevel IP = 0;
	public const SocketOptionLevel IPv6 = 41;
	public const SocketOptionLevel Tcp = 6;
	public const SocketOptionLevel Udp = 17;
}
public enum SocketOptionName
{
	// Fields
	public const SocketOptionName Debug = 1;
	public const SocketOptionName AcceptConnection = 2;
	public const SocketOptionName ReuseAddress = 4;
	public const SocketOptionName KeepAlive = 8;
	public const SocketOptionName DontRoute = 16;
	public const SocketOptionName Broadcast = 32;
	public const SocketOptionName UseLoopback = 64;
	public const SocketOptionName Linger = 128;
	public const SocketOptionName OutOfBandInline = 256;
	public const SocketOptionName DontLinger = -129;
	public const SocketOptionName ExclusiveAddressUse = -5;
	public const SocketOptionName SendBuffer = 4097;
	public const SocketOptionName ReceiveBuffer = 4098;
	public const SocketOptionName SendLowWater = 4099;
	public const SocketOptionName ReceiveLowWater = 4100;
	public const SocketOptionName SendTimeout = 4101;
	public const SocketOptionName ReceiveTimeout = 4102;
	public const SocketOptionName Error = 4103;
	public const SocketOptionName Type = 4104;
	public const SocketOptionName ReuseUnicastPort = 12295;
	public const SocketOptionName MaxConnections = 2147483647;
	public const SocketOptionName IPOptions = 1;
	public const SocketOptionName HeaderIncluded = 2;
	public const SocketOptionName TypeOfService = 3;
	public const SocketOptionName IpTimeToLive = 4;
	public const SocketOptionName MulticastInterface = 9;
	public const SocketOptionName MulticastTimeToLive = 10;
	public const SocketOptionName MulticastLoopback = 11;
	public const SocketOptionName AddMembership = 12;
	public const SocketOptionName DropMembership = 13;
	public const SocketOptionName DontFragment = 14;
	public const SocketOptionName AddSourceMembership = 15;
	public const SocketOptionName DropSourceMembership = 16;
	public const SocketOptionName BlockSource = 17;
	public const SocketOptionName UnblockSource = 18;
	public const SocketOptionName PacketInformation = 19;
	public const SocketOptionName HopLimit = 21;
	public const SocketOptionName IPProtectionLevel = 23;
	public const SocketOptionName IPv6Only = 27;
	public const SocketOptionName NoDelay = 1;
	public const SocketOptionName BsdUrgent = 2;
	public const SocketOptionName Expedited = 2;
	public const SocketOptionName NoChecksum = 1;
	public const SocketOptionName ChecksumCoverage = 20;
	public const SocketOptionName UpdateAcceptContext = 28683;
	public const SocketOptionName UpdateConnectContext = 28688;
}
public enum SocketShutdown
{
	// Fields
	public const SocketShutdown Receive = 0;
	public const SocketShutdown Send = 1;
	public const SocketShutdown Both = 2;
}
public enum SocketType
{
	// Fields
	public const SocketType Stream = 1;
	public const SocketType Dgram = 2;
	public const SocketType Raw = 3;
	public const SocketType Rdm = 4;
	public const SocketType Seqpacket = 5;
	public const SocketType Unknown = -1;
}
public enum AuthenticationLevel
{
	// Fields
	public const AuthenticationLevel None = 0;
	public const AuthenticationLevel MutualAuthRequested = 1;
	public const AuthenticationLevel MutualAuthRequired = 2;
}
public enum SslPolicyErrors
{
	// Fields
	public const SslPolicyErrors None = 0;
	public const SslPolicyErrors RemoteCertificateNotAvailable = 1;
	public const SslPolicyErrors RemoteCertificateNameMismatch = 2;
	public const SslPolicyErrors RemoteCertificateChainErrors = 4;
}
public enum NetworkInterfaceComponent
{
	// Fields
	public const NetworkInterfaceComponent IPv4 = 0;
	public const NetworkInterfaceComponent IPv6 = 1;
}
public enum OperationalStatus
{
	// Fields
	public const OperationalStatus Up = 1;
	public const OperationalStatus Down = 2;
	public const OperationalStatus Testing = 3;
	public const OperationalStatus Unknown = 4;
	public const OperationalStatus Dormant = 5;
	public const OperationalStatus NotPresent = 6;
	public const OperationalStatus LowerLayerDown = 7;
}
public enum NetworkInterfaceType
{
	// Fields
	public const NetworkInterfaceType Unknown = 1;
	public const NetworkInterfaceType Ethernet = 6;
	public const NetworkInterfaceType TokenRing = 9;
	public const NetworkInterfaceType Fddi = 15;
	public const NetworkInterfaceType BasicIsdn = 20;
	public const NetworkInterfaceType PrimaryIsdn = 21;
	public const NetworkInterfaceType Ppp = 23;
	public const NetworkInterfaceType Loopback = 24;
	public const NetworkInterfaceType Ethernet3Megabit = 26;
	public const NetworkInterfaceType Slip = 28;
	public const NetworkInterfaceType Atm = 37;
	public const NetworkInterfaceType GenericModem = 48;
	public const NetworkInterfaceType FastEthernetT = 62;
	public const NetworkInterfaceType Isdn = 63;
	public const NetworkInterfaceType FastEthernetFx = 69;
	public const NetworkInterfaceType Wireless80211 = 71;
	public const NetworkInterfaceType AsymmetricDsl = 94;
	public const NetworkInterfaceType RateAdaptDsl = 95;
	public const NetworkInterfaceType SymmetricDsl = 96;
	public const NetworkInterfaceType VeryHighSpeedDsl = 97;
	public const NetworkInterfaceType IPOverAtm = 114;
	public const NetworkInterfaceType GigabitEthernet = 117;
	public const NetworkInterfaceType Tunnel = 131;
	public const NetworkInterfaceType MultiRateSymmetricDsl = 143;
	public const NetworkInterfaceType HighPerformanceSerialBus = 144;
	public const NetworkInterfaceType Wman = 237;
	public const NetworkInterfaceType Wwanpp = 243;
	public const NetworkInterfaceType Wwanpp2 = 244;
}
public enum NetBiosNodeType
{
	// Fields
	public const NetBiosNodeType Unknown = 0;
	public const NetBiosNodeType Broadcast = 1;
	public const NetBiosNodeType Peer2Peer = 2;
	public const NetBiosNodeType Mixed = 4;
	public const NetBiosNodeType Hybrid = 8;
}
public enum UnicodeDecodingConformance
{
	// Fields
	public const UnicodeDecodingConformance Auto = 0;
	public const UnicodeDecodingConformance Strict = 1;
	public const UnicodeDecodingConformance Compat = 2;
	public const UnicodeDecodingConformance Loose = 3;
}
public enum UnicodeEncodingConformance
{
	// Fields
	public const UnicodeEncodingConformance Auto = 0;
	public const UnicodeEncodingConformance Strict = 1;
	public const UnicodeEncodingConformance Compat = 2;
}
public enum RequestCacheLevel
{
	// Fields
	public const RequestCacheLevel Default = 0;
	public const RequestCacheLevel BypassCache = 1;
	public const RequestCacheLevel CacheOnly = 2;
	public const RequestCacheLevel CacheIfAvailable = 3;
	public const RequestCacheLevel Revalidate = 4;
	public const RequestCacheLevel Reload = 5;
	public const RequestCacheLevel NoCacheNoStore = 6;
}
public enum LockRecursionPolicy
{
	// Fields
	public const LockRecursionPolicy NoRecursion = 0;
	public const LockRecursionPolicy SupportsRecursion = 1;
}
public enum ExpressionType
{
	// Fields
	public const ExpressionType Add = 0;
	public const ExpressionType AddChecked = 1;
	public const ExpressionType And = 2;
	public const ExpressionType AndAlso = 3;
	public const ExpressionType ArrayLength = 4;
	public const ExpressionType ArrayIndex = 5;
	public const ExpressionType Call = 6;
	public const ExpressionType Coalesce = 7;
	public const ExpressionType Conditional = 8;
	public const ExpressionType Constant = 9;
	public const ExpressionType Convert = 10;
	public const ExpressionType ConvertChecked = 11;
	public const ExpressionType Divide = 12;
	public const ExpressionType Equal = 13;
	public const ExpressionType ExclusiveOr = 14;
	public const ExpressionType GreaterThan = 15;
	public const ExpressionType GreaterThanOrEqual = 16;
	public const ExpressionType Invoke = 17;
	public const ExpressionType Lambda = 18;
	public const ExpressionType LeftShift = 19;
	public const ExpressionType LessThan = 20;
	public const ExpressionType LessThanOrEqual = 21;
	public const ExpressionType ListInit = 22;
	public const ExpressionType MemberAccess = 23;
	public const ExpressionType MemberInit = 24;
	public const ExpressionType Modulo = 25;
	public const ExpressionType Multiply = 26;
	public const ExpressionType MultiplyChecked = 27;
	public const ExpressionType Negate = 28;
	public const ExpressionType UnaryPlus = 29;
	public const ExpressionType NegateChecked = 30;
	public const ExpressionType New = 31;
	public const ExpressionType NewArrayInit = 32;
	public const ExpressionType NewArrayBounds = 33;
	public const ExpressionType Not = 34;
	public const ExpressionType NotEqual = 35;
	public const ExpressionType Or = 36;
	public const ExpressionType OrElse = 37;
	public const ExpressionType Parameter = 38;
	public const ExpressionType Power = 39;
	public const ExpressionType Quote = 40;
	public const ExpressionType RightShift = 41;
	public const ExpressionType Subtract = 42;
	public const ExpressionType SubtractChecked = 43;
	public const ExpressionType TypeAs = 44;
	public const ExpressionType TypeIs = 45;
	public const ExpressionType Assign = 46;
	public const ExpressionType Block = 47;
	public const ExpressionType DebugInfo = 48;
	public const ExpressionType Decrement = 49;
	public const ExpressionType Dynamic = 50;
	public const ExpressionType Default = 51;
	public const ExpressionType Extension = 52;
	public const ExpressionType Goto = 53;
	public const ExpressionType Increment = 54;
	public const ExpressionType Index = 55;
	public const ExpressionType Label = 56;
	public const ExpressionType RuntimeVariables = 57;
	public const ExpressionType Loop = 58;
	public const ExpressionType Switch = 59;
	public const ExpressionType Throw = 60;
	public const ExpressionType Try = 61;
	public const ExpressionType Unbox = 62;
	public const ExpressionType AddAssign = 63;
	public const ExpressionType AndAssign = 64;
	public const ExpressionType DivideAssign = 65;
	public const ExpressionType ExclusiveOrAssign = 66;
	public const ExpressionType LeftShiftAssign = 67;
	public const ExpressionType ModuloAssign = 68;
	public const ExpressionType MultiplyAssign = 69;
	public const ExpressionType OrAssign = 70;
	public const ExpressionType PowerAssign = 71;
	public const ExpressionType RightShiftAssign = 72;
	public const ExpressionType SubtractAssign = 73;
	public const ExpressionType AddAssignChecked = 74;
	public const ExpressionType MultiplyAssignChecked = 75;
	public const ExpressionType SubtractAssignChecked = 76;
	public const ExpressionType PreIncrementAssign = 77;
	public const ExpressionType PreDecrementAssign = 78;
	public const ExpressionType PostIncrementAssign = 79;
	public const ExpressionType PostDecrementAssign = 80;
	public const ExpressionType TypeEqual = 81;
	public const ExpressionType OnesComplement = 82;
	public const ExpressionType IsTrue = 83;
	public const ExpressionType IsFalse = 84;
}
public enum NetworkReachability
{
	// Fields
	public const NetworkReachability NotReachable = 0;
	public const NetworkReachability ReachableViaCarrierDataNetwork = 1;
	public const NetworkReachability ReachableViaLocalAreaNetwork = 2;
}
public enum ProfilerRendererType
{
	// Fields
	public const ProfilerRendererType ProfilerRendererUnknown = 0;
	public const ProfilerRendererType ProfilerRendererMesh = 1;
	public const ProfilerRendererType ProfilerRendererSkinnedMesh = 2;
	public const ProfilerRendererType ProfilerRendererSprite = 3;
	public const ProfilerRendererType ProfilerRendererTilemap = 4;
	public const ProfilerRendererType ProfilerRendererParticle = 5;
	public const ProfilerRendererType ProfilerRendererTrail = 6;
	public const ProfilerRendererType ProfilerRendererLine = 7;
	public const ProfilerRendererType ProfilerRendererParticleSystem = 8;
	public const ProfilerRendererType ProfilerRendererBillboard = 9;
	public const ProfilerRendererType ProfilerRendererSpriteMask = 10;
	public const ProfilerRendererType ProfilerRendererIntermediate = 11;
	public const ProfilerRendererType ProfilerRendererCanvasBatchIntermediate = 12;
	public const ProfilerRendererType ProfilerRendererTerrain = 13;
	public const ProfilerRendererType ProfilerRendererTypeCount = 14;
}
public enum MHYGPUTimePassType
{
	// Fields
	public const MHYGPUTimePassType FrameBegin = 0;
	public const MHYGPUTimePassType GPUSkinning = 1;
	public const MHYGPUTimePassType GeometryPass = 2;
	public const MHYGPUTimePassType HybridDeferredPass = 3;
	public const MHYGPUTimePassType MainLightShadowMapPass = 4;
	public const MHYGPUTimePassType LocalLightShadowMapPass = 5;
	public const MHYGPUTimePassType ShadowMaskPass = 6;
	public const MHYGPUTimePassType WaterSSRPass = 7;
	public const MHYGPUTimePassType HalfParticlePass = 8;
	public const MHYGPUTimePassType FinalPass = 9;
	public const MHYGPUTimePassType DecalFinalPass = 10;
	public const MHYGPUTimePassType OpaquePass = 11;
	public const MHYGPUTimePassType HeightFogPass = 12;
	public const MHYGPUTimePassType TransparentPass = 13;
	public const MHYGPUTimePassType BeforImageEffectsPass = 14;
	public const MHYGPUTimePassType AfterPostProcessPass = 15;
	public const MHYGPUTimePassType BetweenPass = 16;
	public const MHYGPUTimePassType FrameEnd = 17;
	public const MHYGPUTimePassType MHYGPUTimePassTypeCount = 18;
}
public enum RuntimeProfiler.GfxProfilerType
{
	// Fields
	public const RuntimeProfiler.GfxProfilerType LocalLightShadowMapGenerate = 0;
}
public enum RuntimeProfiler.ProfilerThreadMask
{
	// Fields
	public const RuntimeProfiler.ProfilerThreadMask MainThread = 1;
	public const RuntimeProfiler.ProfilerThreadMask RenderThread = 2;
	public const RuntimeProfiler.ProfilerThreadMask All = 3;
}
public enum ApplicationInstallMode
{
	// Fields
	public const ApplicationInstallMode Unknown = 0;
	public const ApplicationInstallMode Store = 1;
	public const ApplicationInstallMode DeveloperBuild = 2;
	public const ApplicationInstallMode Adhoc = 3;
	public const ApplicationInstallMode Enterprise = 4;
	public const ApplicationInstallMode Editor = 5;
}
public enum Camera.MonoOrStereoscopicEye
{
	// Fields
	public const Camera.MonoOrStereoscopicEye Left = 0;
	public const Camera.MonoOrStereoscopicEye Right = 1;
	public const Camera.MonoOrStereoscopicEye Mono = 2;
}
public enum Camera.SkyCaptureTextureStatus
{
	// Fields
	public const Camera.SkyCaptureTextureStatus Free = 0;
	public const Camera.SkyCaptureTextureStatus Capture = 1;
	public const Camera.SkyCaptureTextureStatus CaptureEnd = 2;
	public const Camera.SkyCaptureTextureStatus UpdateSH = 3;
}
public enum CursorMode
{
	// Fields
	public const CursorMode Auto = 0;
	public const CursorMode ForceSoftware = 1;
}
public enum CursorLockMode
{
	// Fields
	public const CursorLockMode None = 0;
	public const CursorLockMode Locked = 1;
	public const CursorLockMode Confined = 2;
}
public enum GradientMode
{
	// Fields
	public const GradientMode Blend = 0;
	public const GradientMode Fixed = 1;
	public const GradientMode BlendHSV = 2;
}
public enum RenderReflectionRefractionMode
{
	// Fields
	public const RenderReflectionRefractionMode ReflectOffRefractOff = 0;
	public const RenderReflectionRefractionMode ReflectOnRefractOn = 1;
	public const RenderReflectionRefractionMode ReflectOffRefractOn = 2;
}
public enum SSSProfileFlags
{
	// Fields
	public uint value__; // 0x10
	public const SSSProfileFlags None = 0;
	public const SSSProfileFlags UseTranslucencyMap = 1;
}
public enum MaterialLayer
{
	// Fields
	public const MaterialLayer Default = 0;
	public const MaterialLayer Character = 1;
	public const MaterialLayer GrassOrEmission = 2;
}
public enum CullStatus
{
	// Fields
	public const CullStatus NoCulling = 0;
	public const CullStatus DefaultCulling = 1;
	public const CullStatus PlaneCulling = 2;
	public const CullStatus DistanceCulling = 3;
	public const CullStatus GPUCulling = 4;
}
public enum TouchPhase
{
	// Fields
	public const TouchPhase Began = 0;
	public const TouchPhase Moved = 1;
	public const TouchPhase Stationary = 2;
	public const TouchPhase Ended = 3;
	public const TouchPhase Canceled = 4;
}
public enum IMECompositionMode
{
	// Fields
	public const IMECompositionMode Auto = 0;
	public const IMECompositionMode On = 1;
	public const IMECompositionMode Off = 2;
}
public enum TouchType
{
	// Fields
	public const TouchType Direct = 0;
	public const TouchType Indirect = 1;
	public const TouchType Stylus = 2;
}
public enum LODFadeMode
{
	// Fields
	public const LODFadeMode None = 0;
	public const LODFadeMode CrossFade = 1;
	public const LODFadeMode SpeedTree = 2;
}
public enum WrapMode
{
	// Fields
	public const WrapMode Once = 1;
	public const WrapMode Loop = 2;
	public const WrapMode PingPong = 4;
	public const WrapMode Default = 0;
	public const WrapMode ClampForever = 8;
	public const WrapMode Clamp = 1;
}
public enum SpritePackingRotation
{
	// Fields
	public const SpritePackingRotation None = 0;
	public const SpritePackingRotation Any = 15;
}
public enum SpriteMeshType
{
	// Fields
	public const SpriteMeshType FullRect = 0;
	public const SpriteMeshType Tight = 1;
}
public enum SpriteMaskInteraction
{
	// Fields
	public const SpriteMaskInteraction None = 0;
	public const SpriteMaskInteraction VisibleInsideMask = 1;
	public const SpriteMaskInteraction VisibleOutsideMask = 2;
}
public enum ProceduralOutputType
{
	// Fields
	public const ProceduralOutputType Unknown = 0;
	public const ProceduralOutputType Diffuse = 1;
	public const ProceduralOutputType Normal = 2;
	public const ProceduralOutputType Height = 3;
	public const ProceduralOutputType Emissive = 4;
	public const ProceduralOutputType Specular = 5;
	public const ProceduralOutputType Opacity = 6;
	public const ProceduralOutputType Smoothness = 7;
	public const ProceduralOutputType AmbientOcclusion = 8;
	public const ProceduralOutputType DetailMask = 9;
	public const ProceduralOutputType Metallic = 10;
	public const ProceduralOutputType Roughness = 11;
}
public enum StatisticTextureType
{
	// Fields
	public const StatisticTextureType Tex2D = 0;
	public const StatisticTextureType Tex2DArray = 1;
	public const StatisticTextureType TexCube = 2;
	public const StatisticTextureType TexCubeArray = 3;
	public const StatisticTextureType Tex3D = 4;
	public const StatisticTextureType RenderTexture = 6;
}
public enum HideFlags
{
	// Fields
	public const HideFlags None = 0;
	public const HideFlags HideInHierarchy = 1;
	public const HideFlags HideInInspector = 2;
	public const HideFlags DontSaveInEditor = 4;
	public const HideFlags NotEditable = 8;
	public const HideFlags DontSaveInBuild = 16;
	public const HideFlags DontUnloadUnusedAsset = 32;
	public const HideFlags DontSave = 52;
	public const HideFlags HideAndDontSave = 61;
}
public enum DrivenTransformProperties
{
	// Fields
	public const DrivenTransformProperties None = 0;
	public const DrivenTransformProperties All = -1;
	public const DrivenTransformProperties AnchoredPositionX = 2;
	public const DrivenTransformProperties AnchoredPositionY = 4;
	public const DrivenTransformProperties AnchoredPositionZ = 8;
	public const DrivenTransformProperties Rotation = 16;
	public const DrivenTransformProperties ScaleX = 32;
	public const DrivenTransformProperties ScaleY = 64;
	public const DrivenTransformProperties ScaleZ = 128;
	public const DrivenTransformProperties AnchorMinX = 256;
	public const DrivenTransformProperties AnchorMinY = 512;
	public const DrivenTransformProperties AnchorMaxX = 1024;
	public const DrivenTransformProperties AnchorMaxY = 2048;
	public const DrivenTransformProperties SizeDeltaX = 4096;
	public const DrivenTransformProperties SizeDeltaY = 8192;
	public const DrivenTransformProperties PivotX = 16384;
	public const DrivenTransformProperties PivotY = 32768;
	public const DrivenTransformProperties AnchoredPosition = 6;
	public const DrivenTransformProperties AnchoredPosition3D = 14;
	public const DrivenTransformProperties Scale = 224;
	public const DrivenTransformProperties AnchorMin = 768;
	public const DrivenTransformProperties AnchorMax = 3072;
	public const DrivenTransformProperties Anchors = 3840;
	public const DrivenTransformProperties SizeDelta = 12288;
	public const DrivenTransformProperties Pivot = 49152;
}
public enum RectTransform.Edge
{
	// Fields
	public const RectTransform.Edge Left = 0;
	public const RectTransform.Edge Right = 1;
	public const RectTransform.Edge Top = 2;
	public const RectTransform.Edge Bottom = 3;
}
public enum RectTransform.Axis
{
	// Fields
	public const RectTransform.Axis Horizontal = 0;
	public const RectTransform.Axis Vertical = 1;
}
public enum StackTraceLogType
{
	// Fields
	public const StackTraceLogType None = 0;
	public const StackTraceLogType ScriptOnly = 1;
	public const StackTraceLogType Full = 2;
}
public enum SendMessageOptions
{
	// Fields
	public const SendMessageOptions RequireReceiver = 0;
	public const SendMessageOptions DontRequireReceiver = 1;
}
public enum PrimitiveType
{
	// Fields
	public const PrimitiveType Sphere = 0;
	public const PrimitiveType Capsule = 1;
	public const PrimitiveType Cylinder = 2;
	public const PrimitiveType Cube = 3;
	public const PrimitiveType Plane = 4;
	public const PrimitiveType Quad = 5;
}
public enum Space
{
	// Fields
	public const Space World = 0;
	public const Space Self = 1;
}
public enum RuntimePlatform
{
	// Fields
	public const RuntimePlatform OSXEditor = 0;
	public const RuntimePlatform OSXPlayer = 1;
	public const RuntimePlatform WindowsPlayer = 2;
	public const RuntimePlatform OSXWebPlayer = 3;
	public const RuntimePlatform OSXDashboardPlayer = 4;
	public const RuntimePlatform WindowsWebPlayer = 5;
	public const RuntimePlatform WindowsEditor = 7;
	public const RuntimePlatform IPhonePlayer = 8;
	public const RuntimePlatform XBOX360 = 10;
	public const RuntimePlatform PS3 = 9;
	public const RuntimePlatform Android = 11;
	public const RuntimePlatform NaCl = 12;
	public const RuntimePlatform FlashPlayer = 15;
	public const RuntimePlatform LinuxPlayer = 13;
	public const RuntimePlatform LinuxEditor = 16;
	public const RuntimePlatform WebGLPlayer = 17;
	public const RuntimePlatform MetroPlayerX86 = 18;
	public const RuntimePlatform WSAPlayerX86 = 18;
	public const RuntimePlatform MetroPlayerX64 = 19;
	public const RuntimePlatform WSAPlayerX64 = 19;
	public const RuntimePlatform MetroPlayerARM = 20;
	public const RuntimePlatform WSAPlayerARM = 20;
	public const RuntimePlatform WP8Player = 21;
	public const RuntimePlatform BlackBerryPlayer = 22;
	public const RuntimePlatform TizenPlayer = 23;
	public const RuntimePlatform PSP2 = 24;
	public const RuntimePlatform PS4 = 25;
	public const RuntimePlatform PSM = 26;
	public const RuntimePlatform XboxOne = 27;
	public const RuntimePlatform SamsungTVPlayer = 28;
	public const RuntimePlatform WiiU = 30;
	public const RuntimePlatform tvOS = 31;
	public const RuntimePlatform Switch = 32;
	public const RuntimePlatform PS5 = 33;
}
public enum OperatingSystemFamily
{
	// Fields
	public const OperatingSystemFamily Other = 0;
	public const OperatingSystemFamily MacOSX = 1;
	public const OperatingSystemFamily Windows = 2;
	public const OperatingSystemFamily Linux = 3;
}
public enum SystemLanguage
{
	// Fields
	public const SystemLanguage Afrikaans = 0;
	public const SystemLanguage Arabic = 1;
	public const SystemLanguage Basque = 2;
	public const SystemLanguage Belarusian = 3;
	public const SystemLanguage Bulgarian = 4;
	public const SystemLanguage Catalan = 5;
	public const SystemLanguage Chinese = 6;
	public const SystemLanguage Czech = 7;
	public const SystemLanguage Danish = 8;
	public const SystemLanguage Dutch = 9;
	public const SystemLanguage English = 10;
	public const SystemLanguage Estonian = 11;
	public const SystemLanguage Faroese = 12;
	public const SystemLanguage Finnish = 13;
	public const SystemLanguage French = 14;
	public const SystemLanguage German = 15;
	public const SystemLanguage Greek = 16;
	public const SystemLanguage Hebrew = 17;
	public const SystemLanguage Icelandic = 19;
	public const SystemLanguage Indonesian = 20;
	public const SystemLanguage Italian = 21;
	public const SystemLanguage Japanese = 22;
	public const SystemLanguage Korean = 23;
	public const SystemLanguage Latvian = 24;
	public const SystemLanguage Lithuanian = 25;
	public const SystemLanguage Norwegian = 26;
	public const SystemLanguage Polish = 27;
	public const SystemLanguage Portuguese = 28;
	public const SystemLanguage Romanian = 29;
	public const SystemLanguage Russian = 30;
	public const SystemLanguage SerboCroatian = 31;
	public const SystemLanguage Slovak = 32;
	public const SystemLanguage Slovenian = 33;
	public const SystemLanguage Spanish = 34;
	public const SystemLanguage Swedish = 35;
	public const SystemLanguage Thai = 36;
	public const SystemLanguage Turkish = 37;
	public const SystemLanguage Ukrainian = 38;
	public const SystemLanguage Vietnamese = 39;
	public const SystemLanguage ChineseSimplified = 40;
	public const SystemLanguage ChineseTraditional = 41;
	public const SystemLanguage Unknown = 42;
	public const SystemLanguage Hungarian = 18;
}
public enum LogType
{
	// Fields
	public const LogType Error = 0;
	public const LogType Assert = 1;
	public const LogType Warning = 2;
	public const LogType Log = 3;
	public const LogType Exception = 4;
}
public enum DeviceType
{
	// Fields
	public const DeviceType Unknown = 0;
	public const DeviceType Handheld = 1;
	public const DeviceType Console = 2;
	public const DeviceType Desktop = 3;
}
public enum RenderingPath
{
	// Fields
	public const RenderingPath UsePlayerSettings = -1;
	public const RenderingPath VertexLit = 0;
	public const RenderingPath Forward = 1;
	public const RenderingPath DeferredLighting = 2;
	public const RenderingPath DeferredShading = 3;
}
public enum TransparencySortMode
{
	// Fields
	public const TransparencySortMode Default = 0;
	public const TransparencySortMode Perspective = 1;
	public const TransparencySortMode Orthographic = 2;
	public const TransparencySortMode CustomAxis = 3;
}
public enum CameraType
{
	// Fields
	public const CameraType Game = 1;
	public const CameraType SceneView = 2;
	public const CameraType Preview = 4;
	public const CameraType VR = 8;
	public const CameraType Reflection = 16;
}
public enum ComputeBufferType
{
	// Fields
	public const ComputeBufferType Default = 0;
	public const ComputeBufferType Raw = 1;
	public const ComputeBufferType Append = 2;
	public const ComputeBufferType Counter = 4;
	public const ComputeBufferType DrawIndirect = 256;
	public const ComputeBufferType IndirectArguments = 256;
	public const ComputeBufferType GPUMemory = 512;
}
public enum LightType
{
	// Fields
	public const LightType Spot = 0;
	public const LightType Directional = 1;
	public const LightType Point = 2;
	public const LightType Area = 3;
}
public enum LightShadows
{
	// Fields
	public const LightShadows None = 0;
	public const LightShadows Hard = 1;
	public const LightShadows Soft = 2;
}
public enum FogMode
{
	// Fields
	public const FogMode Linear = 1;
	public const FogMode Exponential = 2;
	public const FogMode ExponentialSquared = 3;
	public const FogMode Height = 4;
}
public enum ShadowQuality
{
	// Fields
	public const ShadowQuality Disable = 0;
	public const ShadowQuality HardOnly = 1;
	public const ShadowQuality All = 2;
	public const ShadowQuality ShadowsPCSS = 3;
	public const ShadowQuality ShadowsPCSSHigh = 4;
	public const ShadowQuality ShadowsPV = 5;
}
public enum ShadowResolution
{
	// Fields
	public const ShadowResolution Low = 0;
	public const ShadowResolution Medium = 1;
	public const ShadowResolution High = 2;
	public const ShadowResolution VeryHigh = 3;
}
public enum CameraClearFlags
{
	// Fields
	public const CameraClearFlags Skybox = 1;
	public const CameraClearFlags Color = 2;
	public const CameraClearFlags SolidColor = 2;
	public const CameraClearFlags Depth = 3;
	public const CameraClearFlags Nothing = 4;
}
public enum DepthTextureMode
{
	// Fields
	public const DepthTextureMode None = 0;
	public const DepthTextureMode Depth = 1;
	public const DepthTextureMode DepthNormals = 2;
	public const DepthTextureMode MotionVectors = 4;
}
public enum AnisotropicFiltering
{
	// Fields
	public const AnisotropicFiltering Disable = 0;
	public const AnisotropicFiltering Enable = 1;
	public const AnisotropicFiltering ForceEnable = 2;
}
public enum AnisotropicLevel
{
	// Fields
	public const AnisotropicLevel k1X = 1;
	public const AnisotropicLevel k2X = 2;
	public const AnisotropicLevel k4X = 4;
	public const AnisotropicLevel k8X = 8;
	public const AnisotropicLevel k16X = 16;
}
public enum MeshTopology
{
	// Fields
	public const MeshTopology Triangles = 0;
	public const MeshTopology Quads = 2;
	public const MeshTopology Lines = 3;
	public const MeshTopology LineStrip = 4;
	public const MeshTopology Points = 5;
}
public enum SkinQuality
{
	// Fields
	public const SkinQuality Auto = 0;
	public const SkinQuality Bone1 = 1;
	public const SkinQuality Bone2 = 2;
	public const SkinQuality Bone4 = 4;
}
public enum ColorSpace
{
	// Fields
	public const ColorSpace Uninitialized = -1;
	public const ColorSpace Gamma = 0;
	public const ColorSpace Linear = 1;
}
public enum ScreenOrientation
{
	// Fields
	public const ScreenOrientation Unknown = 0;
	public const ScreenOrientation Portrait = 1;
	public const ScreenOrientation PortraitUpsideDown = 2;
	public const ScreenOrientation LandscapeLeft = 3;
	public const ScreenOrientation LandscapeRight = 4;
	public const ScreenOrientation AutoRotation = 5;
	public const ScreenOrientation Landscape = 3;
}
public enum FilterMode
{
	// Fields
	public const FilterMode Point = 0;
	public const FilterMode Bilinear = 1;
	public const FilterMode Trilinear = 2;
}
public enum TextureWrapMode
{
	// Fields
	public const TextureWrapMode Repeat = 0;
	public const TextureWrapMode Clamp = 1;
	public const TextureWrapMode Mirror = 2;
	public const TextureWrapMode MirrorOnce = 3;
}
public enum NPOTSupport
{
	// Fields
	public const NPOTSupport None = 0;
	public const NPOTSupport Restricted = 1;
	public const NPOTSupport Full = 2;
}
public enum TextureFormat
{
	// Fields
	public const TextureFormat Alpha8 = 1;
	public const TextureFormat ARGB4444 = 2;
	public const TextureFormat RGB24 = 3;
	public const TextureFormat RGBA32 = 4;
	public const TextureFormat ARGB32 = 5;
	public const TextureFormat RGB565 = 7;
	public const TextureFormat R16 = 9;
	public const TextureFormat DXT1 = 10;
	public const TextureFormat DXT5 = 12;
	public const TextureFormat RGBA4444 = 13;
	public const TextureFormat BGRA32 = 14;
	public const TextureFormat RHalf = 15;
	public const TextureFormat RGHalf = 16;
	public const TextureFormat RGBAHalf = 17;
	public const TextureFormat RFloat = 18;
	public const TextureFormat RGFloat = 19;
	public const TextureFormat RGBAFloat = 20;
	public const TextureFormat YUY2 = 21;
	public const TextureFormat RGB9e5Float = 22;
	public const TextureFormat BC4 = 26;
	public const TextureFormat BC5 = 27;
	public const TextureFormat BC6H = 24;
	public const TextureFormat BC7 = 25;
	public const TextureFormat DXT1Crunched = 28;
	public const TextureFormat DXT5Crunched = 29;
	public const TextureFormat PVRTC_RGB2 = 30;
	public const TextureFormat PVRTC_RGBA2 = 31;
	public const TextureFormat PVRTC_RGB4 = 32;
	public const TextureFormat PVRTC_RGBA4 = 33;
	public const TextureFormat ETC_RGB4 = 34;
	public const TextureFormat ATC_RGB4 = 35;
	public const TextureFormat ATC_RGBA8 = 36;
	public const TextureFormat EAC_R = 41;
	public const TextureFormat EAC_R_SIGNED = 42;
	public const TextureFormat EAC_RG = 43;
	public const TextureFormat EAC_RG_SIGNED = 44;
	public const TextureFormat ETC2_RGB = 45;
	public const TextureFormat ETC2_RGBA1 = 46;
	public const TextureFormat ETC2_RGBA8 = 47;
	public const TextureFormat ASTC_RGB_4x4 = 48;
	public const TextureFormat ASTC_RGB_5x5 = 49;
	public const TextureFormat ASTC_RGB_6x6 = 50;
	public const TextureFormat ASTC_RGB_8x8 = 51;
	public const TextureFormat ASTC_RGB_10x10 = 52;
	public const TextureFormat ASTC_RGB_12x12 = 53;
	public const TextureFormat ASTC_RGBA_4x4 = 54;
	public const TextureFormat ASTC_RGBA_5x5 = 55;
	public const TextureFormat ASTC_RGBA_6x6 = 56;
	public const TextureFormat ASTC_RGBA_8x8 = 57;
	public const TextureFormat ASTC_RGBA_10x10 = 58;
	public const TextureFormat ASTC_RGBA_12x12 = 59;
	public const TextureFormat ETC_RGB4_3DS = 60;
	public const TextureFormat ETC_RGBA8_3DS = 61;
	public const TextureFormat RG16 = 62;
	public const TextureFormat R8 = 63;
	public const TextureFormat ETC_RGB4Crunched = 64;
	public const TextureFormat ETC2_RGBA8Crunched = 65;
	public const TextureFormat R16Unorm = 66;
	public const TextureFormat RUInt = 67;
}
public enum CubemapFace
{
	// Fields
	public const CubemapFace Unknown = -1;
	public const CubemapFace PositiveX = 0;
	public const CubemapFace NegativeX = 1;
	public const CubemapFace PositiveY = 2;
	public const CubemapFace NegativeY = 3;
	public const CubemapFace PositiveZ = 4;
	public const CubemapFace NegativeZ = 5;
}
public enum RenderTextureFormat
{
	// Fields
	public const RenderTextureFormat ARGB32 = 0;
	public const RenderTextureFormat Depth = 1;
	public const RenderTextureFormat ARGBHalf = 2;
	public const RenderTextureFormat Shadowmap = 3;
	public const RenderTextureFormat RGB565 = 4;
	public const RenderTextureFormat ARGB4444 = 5;
	public const RenderTextureFormat ARGB1555 = 6;
	public const RenderTextureFormat Default = 7;
	public const RenderTextureFormat ARGB2101010 = 8;
	public const RenderTextureFormat DefaultHDR = 9;
	public const RenderTextureFormat ARGB64 = 10;
	public const RenderTextureFormat ARGBFloat = 11;
	public const RenderTextureFormat RGFloat = 12;
	public const RenderTextureFormat RGHalf = 13;
	public const RenderTextureFormat RFloat = 14;
	public const RenderTextureFormat RHalf = 15;
	public const RenderTextureFormat R8 = 16;
	public const RenderTextureFormat ARGBInt = 17;
	public const RenderTextureFormat RGInt = 18;
	public const RenderTextureFormat RInt = 19;
	public const RenderTextureFormat BGRA32 = 20;
	public const RenderTextureFormat RGB111110Float = 22;
	public const RenderTextureFormat RG32 = 23;
	public const RenderTextureFormat RGBAUShort = 24;
	public const RenderTextureFormat RG16 = 25;
	public const RenderTextureFormat BGRA10101010_XR = 26;
	public const RenderTextureFormat BGR101010_XR = 27;
	public const RenderTextureFormat RUInt = 28;
	public const RenderTextureFormat R16Unorm = 29;
}
public enum VRTextureUsage
{
	// Fields
	public const VRTextureUsage None = 0;
	public const VRTextureUsage OneEye = 1;
	public const VRTextureUsage TwoEyes = 2;
}
public enum RenderTextureCreationFlags
{
	// Fields
	public const RenderTextureCreationFlags MipMap = 1;
	public const RenderTextureCreationFlags AutoGenerateMips = 2;
	public const RenderTextureCreationFlags SRGB = 4;
	public const RenderTextureCreationFlags EyeTexture = 8;
	public const RenderTextureCreationFlags EnableRandomWrite = 16;
	public const RenderTextureCreationFlags CreatedFromScript = 32;
	public const RenderTextureCreationFlags AllowVerticalFlip = 128;
	public const RenderTextureCreationFlags NoResolvedColorSurface = 256;
	public const RenderTextureCreationFlags SampleMSDepth = 512;
	public const RenderTextureCreationFlags DynamicallyScalable = 1024;
	public const RenderTextureCreationFlags AssignTextureForDepth = 2048;
	public const RenderTextureCreationFlags CPUReadBack = 4096;
	public const RenderTextureCreationFlags DynamicUsage = 8192;
	public const RenderTextureCreationFlags BindMS = 16384;
	public const RenderTextureCreationFlags NoResolveTexture = 32768;
	public const RenderTextureCreationFlags AllowFastClear = 65536;
	public const RenderTextureCreationFlags AllowDCC = 131072;
	public const RenderTextureCreationFlags AllowTC = 262144;
	public const RenderTextureCreationFlags DepthTileMode256 = 524288;
}
public enum RenderTextureReadWrite
{
	// Fields
	public const RenderTextureReadWrite Default = 0;
	public const RenderTextureReadWrite Linear = 1;
	public const RenderTextureReadWrite sRGB = 2;
}
public enum RenderTextureMemoryless
{
	// Fields
	public const RenderTextureMemoryless None = 0;
	public const RenderTextureMemoryless Color = 1;
	public const RenderTextureMemoryless Depth = 2;
	public const RenderTextureMemoryless MSAA = 4;
}
public enum MotionVectorGenerationMode
{
	// Fields
	public const MotionVectorGenerationMode Camera = 0;
	public const MotionVectorGenerationMode Object = 1;
	public const MotionVectorGenerationMode ForceNoMotion = 2;
	public const MotionVectorGenerationMode TransparentObject = 3;
}
public enum LineTextureMode
{
	// Fields
	public const LineTextureMode Stretch = 0;
	public const LineTextureMode Tile = 1;
	public const LineTextureMode DistributePerSegment = 2;
	public const LineTextureMode RepeatPerSegment = 3;
}
public enum LineAlignment
{
	// Fields
	public const LineAlignment View = 0;
	public const LineAlignment Local = 1;
}
public enum KeyCode
{
	// Fields
	public const KeyCode None = 0;
	public const KeyCode Backspace = 8;
	public const KeyCode Delete = 127;
	public const KeyCode Tab = 9;
	public const KeyCode Clear = 12;
	public const KeyCode Return = 13;
	public const KeyCode Pause = 19;
	public const KeyCode Escape = 27;
	public const KeyCode Space = 32;
	public const KeyCode Keypad0 = 256;
	public const KeyCode Keypad1 = 257;
	public const KeyCode Keypad2 = 258;
	public const KeyCode Keypad3 = 259;
	public const KeyCode Keypad4 = 260;
	public const KeyCode Keypad5 = 261;
	public const KeyCode Keypad6 = 262;
	public const KeyCode Keypad7 = 263;
	public const KeyCode Keypad8 = 264;
	public const KeyCode Keypad9 = 265;
	public const KeyCode KeypadPeriod = 266;
	public const KeyCode KeypadDivide = 267;
	public const KeyCode KeypadMultiply = 268;
	public const KeyCode KeypadMinus = 269;
	public const KeyCode KeypadPlus = 270;
	public const KeyCode KeypadEnter = 271;
	public const KeyCode KeypadEquals = 272;
	public const KeyCode UpArrow = 273;
	public const KeyCode DownArrow = 274;
	public const KeyCode RightArrow = 275;
	public const KeyCode LeftArrow = 276;
	public const KeyCode Insert = 277;
	public const KeyCode Home = 278;
	public const KeyCode End = 279;
	public const KeyCode PageUp = 280;
	public const KeyCode PageDown = 281;
	public const KeyCode F1 = 282;
	public const KeyCode F2 = 283;
	public const KeyCode F3 = 284;
	public const KeyCode F4 = 285;
	public const KeyCode F5 = 286;
	public const KeyCode F6 = 287;
	public const KeyCode F7 = 288;
	public const KeyCode F8 = 289;
	public const KeyCode F9 = 290;
	public const KeyCode F10 = 291;
	public const KeyCode F11 = 292;
	public const KeyCode F12 = 293;
	public const KeyCode F13 = 294;
	public const KeyCode F14 = 295;
	public const KeyCode F15 = 296;
	public const KeyCode Alpha0 = 48;
	public const KeyCode Alpha1 = 49;
	public const KeyCode Alpha2 = 50;
	public const KeyCode Alpha3 = 51;
	public const KeyCode Alpha4 = 52;
	public const KeyCode Alpha5 = 53;
	public const KeyCode Alpha6 = 54;
	public const KeyCode Alpha7 = 55;
	public const KeyCode Alpha8 = 56;
	public const KeyCode Alpha9 = 57;
	public const KeyCode Exclaim = 33;
	public const KeyCode DoubleQuote = 34;
	public const KeyCode Hash = 35;
	public const KeyCode Dollar = 36;
	public const KeyCode Ampersand = 38;
	public const KeyCode Quote = 39;
	public const KeyCode LeftParen = 40;
	public const KeyCode RightParen = 41;
	public const KeyCode Asterisk = 42;
	public const KeyCode Plus = 43;
	public const KeyCode Comma = 44;
	public const KeyCode Minus = 45;
	public const KeyCode Period = 46;
	public const KeyCode Slash = 47;
	public const KeyCode Colon = 58;
	public const KeyCode Semicolon = 59;
	public const KeyCode Less = 60;
	public const KeyCode Equals = 61;
	public const KeyCode Greater = 62;
	public const KeyCode Question = 63;
	public const KeyCode At = 64;
	public const KeyCode LeftBracket = 91;
	public const KeyCode Backslash = 92;
	public const KeyCode RightBracket = 93;
	public const KeyCode Caret = 94;
	public const KeyCode Underscore = 95;
	public const KeyCode BackQuote = 96;
	public const KeyCode A = 97;
	public const KeyCode B = 98;
	public const KeyCode C = 99;
	public const KeyCode D = 100;
	public const KeyCode E = 101;
	public const KeyCode F = 102;
	public const KeyCode G = 103;
	public const KeyCode H = 104;
	public const KeyCode I = 105;
	public const KeyCode J = 106;
	public const KeyCode K = 107;
	public const KeyCode L = 108;
	public const KeyCode M = 109;
	public const KeyCode N = 110;
	public const KeyCode O = 111;
	public const KeyCode P = 112;
	public const KeyCode Q = 113;
	public const KeyCode R = 114;
	public const KeyCode S = 115;
	public const KeyCode T = 116;
	public const KeyCode U = 117;
	public const KeyCode V = 118;
	public const KeyCode W = 119;
	public const KeyCode X = 120;
	public const KeyCode Y = 121;
	public const KeyCode Z = 122;
	public const KeyCode Numlock = 300;
	public const KeyCode CapsLock = 301;
	public const KeyCode ScrollLock = 302;
	public const KeyCode RightShift = 303;
	public const KeyCode LeftShift = 304;
	public const KeyCode RightControl = 305;
	public const KeyCode LeftControl = 306;
	public const KeyCode RightAlt = 307;
	public const KeyCode LeftAlt = 308;
	public const KeyCode LeftCommand = 310;
	public const KeyCode LeftApple = 310;
	public const KeyCode LeftWindows = 311;
	public const KeyCode RightCommand = 309;
	public const KeyCode RightApple = 309;
	public const KeyCode RightWindows = 312;
	public const KeyCode AltGr = 313;
	public const KeyCode Help = 315;
	public const KeyCode Print = 316;
	public const KeyCode SysReq = 317;
	public const KeyCode Break = 318;
	public const KeyCode Menu = 319;
	public const KeyCode Mouse0 = 323;
	public const KeyCode Mouse1 = 324;
	public const KeyCode Mouse2 = 325;
	public const KeyCode Mouse3 = 326;
	public const KeyCode Mouse4 = 327;
	public const KeyCode Mouse5 = 328;
	public const KeyCode Mouse6 = 329;
	public const KeyCode JoystickButton0 = 330;
	public const KeyCode JoystickButton1 = 331;
	public const KeyCode JoystickButton2 = 332;
	public const KeyCode JoystickButton3 = 333;
	public const KeyCode JoystickButton4 = 334;
	public const KeyCode JoystickButton5 = 335;
	public const KeyCode JoystickButton6 = 336;
	public const KeyCode JoystickButton7 = 337;
	public const KeyCode JoystickButton8 = 338;
	public const KeyCode JoystickButton9 = 339;
	public const KeyCode JoystickButton10 = 340;
	public const KeyCode JoystickButton11 = 341;
	public const KeyCode JoystickButton12 = 342;
	public const KeyCode JoystickButton13 = 343;
	public const KeyCode JoystickButton14 = 344;
	public const KeyCode JoystickButton15 = 345;
	public const KeyCode JoystickButton16 = 346;
	public const KeyCode JoystickButton17 = 347;
	public const KeyCode JoystickButton18 = 348;
	public const KeyCode JoystickButton19 = 349;
	public const KeyCode Joystick1Button0 = 350;
	public const KeyCode Joystick1Button1 = 351;
	public const KeyCode Joystick1Button2 = 352;
	public const KeyCode Joystick1Button3 = 353;
	public const KeyCode Joystick1Button4 = 354;
	public const KeyCode Joystick1Button5 = 355;
	public const KeyCode Joystick1Button6 = 356;
	public const KeyCode Joystick1Button7 = 357;
	public const KeyCode Joystick1Button8 = 358;
	public const KeyCode Joystick1Button9 = 359;
	public const KeyCode Joystick1Button10 = 360;
	public const KeyCode Joystick1Button11 = 361;
	public const KeyCode Joystick1Button12 = 362;
	public const KeyCode Joystick1Button13 = 363;
	public const KeyCode Joystick1Button14 = 364;
	public const KeyCode Joystick1Button15 = 365;
	public const KeyCode Joystick1Button16 = 366;
	public const KeyCode Joystick1Button17 = 367;
	public const KeyCode Joystick1Button18 = 368;
	public const KeyCode Joystick1Button19 = 369;
	public const KeyCode Joystick2Button0 = 370;
	public const KeyCode Joystick2Button1 = 371;
	public const KeyCode Joystick2Button2 = 372;
	public const KeyCode Joystick2Button3 = 373;
	public const KeyCode Joystick2Button4 = 374;
	public const KeyCode Joystick2Button5 = 375;
	public const KeyCode Joystick2Button6 = 376;
	public const KeyCode Joystick2Button7 = 377;
	public const KeyCode Joystick2Button8 = 378;
	public const KeyCode Joystick2Button9 = 379;
	public const KeyCode Joystick2Button10 = 380;
	public const KeyCode Joystick2Button11 = 381;
	public const KeyCode Joystick2Button12 = 382;
	public const KeyCode Joystick2Button13 = 383;
	public const KeyCode Joystick2Button14 = 384;
	public const KeyCode Joystick2Button15 = 385;
	public const KeyCode Joystick2Button16 = 386;
	public const KeyCode Joystick2Button17 = 387;
	public const KeyCode Joystick2Button18 = 388;
	public const KeyCode Joystick2Button19 = 389;
	public const KeyCode Joystick3Button0 = 390;
	public const KeyCode Joystick3Button1 = 391;
	public const KeyCode Joystick3Button2 = 392;
	public const KeyCode Joystick3Button3 = 393;
	public const KeyCode Joystick3Button4 = 394;
	public const KeyCode Joystick3Button5 = 395;
	public const KeyCode Joystick3Button6 = 396;
	public const KeyCode Joystick3Button7 = 397;
	public const KeyCode Joystick3Button8 = 398;
	public const KeyCode Joystick3Button9 = 399;
	public const KeyCode Joystick3Button10 = 400;
	public const KeyCode Joystick3Button11 = 401;
	public const KeyCode Joystick3Button12 = 402;
	public const KeyCode Joystick3Button13 = 403;
	public const KeyCode Joystick3Button14 = 404;
	public const KeyCode Joystick3Button15 = 405;
	public const KeyCode Joystick3Button16 = 406;
	public const KeyCode Joystick3Button17 = 407;
	public const KeyCode Joystick3Button18 = 408;
	public const KeyCode Joystick3Button19 = 409;
	public const KeyCode Joystick4Button0 = 410;
	public const KeyCode Joystick4Button1 = 411;
	public const KeyCode Joystick4Button2 = 412;
	public const KeyCode Joystick4Button3 = 413;
	public const KeyCode Joystick4Button4 = 414;
	public const KeyCode Joystick4Button5 = 415;
	public const KeyCode Joystick4Button6 = 416;
	public const KeyCode Joystick4Button7 = 417;
	public const KeyCode Joystick4Button8 = 418;
	public const KeyCode Joystick4Button9 = 419;
	public const KeyCode Joystick4Button10 = 420;
	public const KeyCode Joystick4Button11 = 421;
	public const KeyCode Joystick4Button12 = 422;
	public const KeyCode Joystick4Button13 = 423;
	public const KeyCode Joystick4Button14 = 424;
	public const KeyCode Joystick4Button15 = 425;
	public const KeyCode Joystick4Button16 = 426;
	public const KeyCode Joystick4Button17 = 427;
	public const KeyCode Joystick4Button18 = 428;
	public const KeyCode Joystick4Button19 = 429;
	public const KeyCode Joystick5Button0 = 430;
	public const KeyCode Joystick5Button1 = 431;
	public const KeyCode Joystick5Button2 = 432;
	public const KeyCode Joystick5Button3 = 433;
	public const KeyCode Joystick5Button4 = 434;
	public const KeyCode Joystick5Button5 = 435;
	public const KeyCode Joystick5Button6 = 436;
	public const KeyCode Joystick5Button7 = 437;
	public const KeyCode Joystick5Button8 = 438;
	public const KeyCode Joystick5Button9 = 439;
	public const KeyCode Joystick5Button10 = 440;
	public const KeyCode Joystick5Button11 = 441;
	public const KeyCode Joystick5Button12 = 442;
	public const KeyCode Joystick5Button13 = 443;
	public const KeyCode Joystick5Button14 = 444;
	public const KeyCode Joystick5Button15 = 445;
	public const KeyCode Joystick5Button16 = 446;
	public const KeyCode Joystick5Button17 = 447;
	public const KeyCode Joystick5Button18 = 448;
	public const KeyCode Joystick5Button19 = 449;
	public const KeyCode Joystick6Button0 = 450;
	public const KeyCode Joystick6Button1 = 451;
	public const KeyCode Joystick6Button2 = 452;
	public const KeyCode Joystick6Button3 = 453;
	public const KeyCode Joystick6Button4 = 454;
	public const KeyCode Joystick6Button5 = 455;
	public const KeyCode Joystick6Button6 = 456;
	public const KeyCode Joystick6Button7 = 457;
	public const KeyCode Joystick6Button8 = 458;
	public const KeyCode Joystick6Button9 = 459;
	public const KeyCode Joystick6Button10 = 460;
	public const KeyCode Joystick6Button11 = 461;
	public const KeyCode Joystick6Button12 = 462;
	public const KeyCode Joystick6Button13 = 463;
	public const KeyCode Joystick6Button14 = 464;
	public const KeyCode Joystick6Button15 = 465;
	public const KeyCode Joystick6Button16 = 466;
	public const KeyCode Joystick6Button17 = 467;
	public const KeyCode Joystick6Button18 = 468;
	public const KeyCode Joystick6Button19 = 469;
	public const KeyCode Joystick7Button0 = 470;
	public const KeyCode Joystick7Button1 = 471;
	public const KeyCode Joystick7Button2 = 472;
	public const KeyCode Joystick7Button3 = 473;
	public const KeyCode Joystick7Button4 = 474;
	public const KeyCode Joystick7Button5 = 475;
	public const KeyCode Joystick7Button6 = 476;
	public const KeyCode Joystick7Button7 = 477;
	public const KeyCode Joystick7Button8 = 478;
	public const KeyCode Joystick7Button9 = 479;
	public const KeyCode Joystick7Button10 = 480;
	public const KeyCode Joystick7Button11 = 481;
	public const KeyCode Joystick7Button12 = 482;
	public const KeyCode Joystick7Button13 = 483;
	public const KeyCode Joystick7Button14 = 484;
	public const KeyCode Joystick7Button15 = 485;
	public const KeyCode Joystick7Button16 = 486;
	public const KeyCode Joystick7Button17 = 487;
	public const KeyCode Joystick7Button18 = 488;
	public const KeyCode Joystick7Button19 = 489;
	public const KeyCode Joystick8Button0 = 490;
	public const KeyCode Joystick8Button1 = 491;
	public const KeyCode Joystick8Button2 = 492;
	public const KeyCode Joystick8Button3 = 493;
	public const KeyCode Joystick8Button4 = 494;
	public const KeyCode Joystick8Button5 = 495;
	public const KeyCode Joystick8Button6 = 496;
	public const KeyCode Joystick8Button7 = 497;
	public const KeyCode Joystick8Button8 = 498;
	public const KeyCode Joystick8Button9 = 499;
	public const KeyCode Joystick8Button10 = 500;
	public const KeyCode Joystick8Button11 = 501;
	public const KeyCode Joystick8Button12 = 502;
	public const KeyCode Joystick8Button13 = 503;
	public const KeyCode Joystick8Button14 = 504;
	public const KeyCode Joystick8Button15 = 505;
	public const KeyCode Joystick8Button16 = 506;
	public const KeyCode Joystick8Button17 = 507;
	public const KeyCode Joystick8Button18 = 508;
	public const KeyCode Joystick8Button19 = 509;
}
public enum RuntimeInitializeLoadType
{
	// Fields
	public const RuntimeInitializeLoadType AfterSceneLoad = 0;
	public const RuntimeInitializeLoadType BeforeSceneLoad = 1;
}
public enum TouchScreenKeyboardType
{
	// Fields
	public const TouchScreenKeyboardType Default = 0;
	public const TouchScreenKeyboardType ASCIICapable = 1;
	public const TouchScreenKeyboardType NumbersAndPunctuation = 2;
	public const TouchScreenKeyboardType URL = 3;
	public const TouchScreenKeyboardType NumberPad = 4;
	public const TouchScreenKeyboardType PhonePad = 5;
	public const TouchScreenKeyboardType NamePhonePad = 6;
	public const TouchScreenKeyboardType EmailAddress = 7;
	public const TouchScreenKeyboardType NintendoNetworkAccount = 8;
	public const TouchScreenKeyboardType Social = 9;
	public const TouchScreenKeyboardType Search = 10;
}
public enum LogFlags
{
	// Fields
	public const LogFlags NoPrintConsole = 1;
	public const LogFlags NoStacktrace = 2;
	public const LogFlags NeedStacktrace = 4;
}
public enum PersistentListenerMode
{
	// Fields
	public const PersistentListenerMode EventDefined = 0;
	public const PersistentListenerMode Void = 1;
	public const PersistentListenerMode Object = 2;
	public const PersistentListenerMode Int = 3;
	public const PersistentListenerMode Float = 4;
	public const PersistentListenerMode String = 5;
	public const PersistentListenerMode Bool = 6;
}
public enum UnityEventCallState
{
	// Fields
	public const UnityEventCallState Off = 0;
	public const UnityEventCallState EditorAndRuntime = 1;
	public const UnityEventCallState RuntimeOnly = 2;
}
public enum CompressionType
{
	// Fields
	public const CompressionType None = 0;
	public const CompressionType Lzma = 1;
	public const CompressionType Lz4 = 2;
	public const CompressionType Lz4HC = 3;
	public const CompressionType Lzham = 4;
	public const CompressionType OodleSelkie = 5;
	public const CompressionType OodleMermaid = 6;
	public const CompressionType OodleKraken = 7;
	public const CompressionType OodleLeviathan = 8;
	public const CompressionType OodleHydra = 9;
}
public enum CompressionLevel
{
	// Fields
	public const CompressionLevel None = 0;
	public const CompressionLevel Fastest = 1;
	public const CompressionLevel Fast = 2;
	public const CompressionLevel Normal = 3;
	public const CompressionLevel High = 4;
	public const CompressionLevel Maximum = 5;
}
public enum ConfidenceLevel
{
	// Fields
	public const ConfidenceLevel High = 0;
	public const ConfidenceLevel Medium = 1;
	public const ConfidenceLevel Low = 2;
	public const ConfidenceLevel Rejected = 3;
}
public enum SpeechSystemStatus
{
	// Fields
	public const SpeechSystemStatus Stopped = 0;
	public const SpeechSystemStatus Running = 1;
	public const SpeechSystemStatus Failed = 2;
}
public enum SpeechError
{
	// Fields
	public const SpeechError NoError = 0;
	public const SpeechError TopicLanguageNotSupported = 1;
	public const SpeechError GrammarLanguageMismatch = 2;
	public const SpeechError GrammarCompilationFailure = 3;
	public const SpeechError AudioQualityFailure = 4;
	public const SpeechError PauseLimitExceeded = 5;
	public const SpeechError TimeoutExceeded = 6;
	public const SpeechError NetworkFailure = 7;
	public const SpeechError MicrophoneUnavailable = 8;
	public const SpeechError UnknownError = 9;
}
public enum DictationTopicConstraint
{
	// Fields
	public const DictationTopicConstraint WebSearch = 0;
	public const DictationTopicConstraint Form = 1;
	public const DictationTopicConstraint Dictation = 2;
}
public enum DictationCompletionCause
{
	// Fields
	public const DictationCompletionCause Complete = 0;
	public const DictationCompletionCause AudioQualityFailure = 1;
	public const DictationCompletionCause Canceled = 2;
	public const DictationCompletionCause TimeoutExceeded = 3;
	public const DictationCompletionCause PauseLimitExceeded = 4;
	public const DictationCompletionCause NetworkFailure = 5;
	public const DictationCompletionCause MicrophoneUnavailable = 6;
	public const DictationCompletionCause UnknownError = 7;
}
public enum LoadSceneMode
{
	// Fields
	public const LoadSceneMode Single = 0;
	public const LoadSceneMode Additive = 1;
}
public enum FrameData.EvaluationType
{
	// Fields
	public const FrameData.EvaluationType Evaluate = 0;
	public const FrameData.EvaluationType Playback = 1;
}
public enum DirectorUpdateMode
{
	// Fields
	public const DirectorUpdateMode DSPClock = 0;
	public const DirectorUpdateMode GameTime = 1;
	public const DirectorUpdateMode UnscaledGameTime = 2;
	public const DirectorUpdateMode Manual = 3;
}
public enum DataStreamType
{
	// Fields
	public const DataStreamType Animation = 0;
	public const DataStreamType Audio = 1;
	public const DataStreamType Texture = 2;
	public const DataStreamType None = 3;
}
public enum PlayState
{
	// Fields
	public const PlayState Paused = 0;
	public const PlayState Playing = 1;
	public const PlayState Delayed = 2;
}
public enum BlendMode
{
	// Fields
	public const BlendMode Zero = 0;
	public const BlendMode One = 1;
	public const BlendMode DstColor = 2;
	public const BlendMode SrcColor = 3;
	public const BlendMode OneMinusDstColor = 4;
	public const BlendMode SrcAlpha = 5;
	public const BlendMode OneMinusSrcColor = 6;
	public const BlendMode DstAlpha = 7;
	public const BlendMode OneMinusDstAlpha = 8;
	public const BlendMode SrcAlphaSaturate = 9;
	public const BlendMode OneMinusSrcAlpha = 10;
}
public enum BlendOp
{
	// Fields
	public const BlendOp Add = 0;
	public const BlendOp Subtract = 1;
	public const BlendOp ReverseSubtract = 2;
	public const BlendOp Min = 3;
	public const BlendOp Max = 4;
	public const BlendOp LogicalClear = 5;
	public const BlendOp LogicalSet = 6;
	public const BlendOp LogicalCopy = 7;
	public const BlendOp LogicalCopyInverted = 8;
	public const BlendOp LogicalNoop = 9;
	public const BlendOp LogicalInvert = 10;
	public const BlendOp LogicalAnd = 11;
	public const BlendOp LogicalNand = 12;
	public const BlendOp LogicalOr = 13;
	public const BlendOp LogicalNor = 14;
	public const BlendOp LogicalXor = 15;
	public const BlendOp LogicalEquivalence = 16;
	public const BlendOp LogicalAndReverse = 17;
	public const BlendOp LogicalAndInverted = 18;
	public const BlendOp LogicalOrReverse = 19;
	public const BlendOp LogicalOrInverted = 20;
	public const BlendOp Multiply = 21;
	public const BlendOp Screen = 22;
	public const BlendOp Overlay = 23;
	public const BlendOp Darken = 24;
	public const BlendOp Lighten = 25;
	public const BlendOp ColorDodge = 26;
	public const BlendOp ColorBurn = 27;
	public const BlendOp HardLight = 28;
	public const BlendOp SoftLight = 29;
	public const BlendOp Difference = 30;
	public const BlendOp Exclusion = 31;
	public const BlendOp HSLHue = 32;
	public const BlendOp HSLSaturation = 33;
	public const BlendOp HSLColor = 34;
	public const BlendOp HSLLuminosity = 35;
}
public enum CompareFunction
{
	// Fields
	public const CompareFunction Disabled = 0;
	public const CompareFunction Never = 1;
	public const CompareFunction Less = 2;
	public const CompareFunction Equal = 3;
	public const CompareFunction LessEqual = 4;
	public const CompareFunction Greater = 5;
	public const CompareFunction NotEqual = 6;
	public const CompareFunction GreaterEqual = 7;
	public const CompareFunction Always = 8;
}
public enum ColorWriteMask
{
	// Fields
	public const ColorWriteMask Alpha = 1;
	public const ColorWriteMask Blue = 2;
	public const ColorWriteMask Green = 4;
	public const ColorWriteMask Red = 8;
	public const ColorWriteMask All = 15;
}
public enum StencilOp
{
	// Fields
	public const StencilOp Keep = 0;
	public const StencilOp Zero = 1;
	public const StencilOp Replace = 2;
	public const StencilOp IncrementSaturate = 3;
	public const StencilOp DecrementSaturate = 4;
	public const StencilOp Invert = 5;
	public const StencilOp IncrementWrap = 6;
	public const StencilOp DecrementWrap = 7;
}
public enum AmbientMode
{
	// Fields
	public const AmbientMode Skybox = 0;
	public const AmbientMode Trilight = 1;
	public const AmbientMode Flat = 3;
	public const AmbientMode Custom = 4;
}
public enum DefaultReflectionMode
{
	// Fields
	public const DefaultReflectionMode Skybox = 0;
	public const DefaultReflectionMode Custom = 1;
	public const DefaultReflectionMode ScriptRendered = 2;
}
public enum CameraEvent
{
	// Fields
	public const CameraEvent BeforeDepthTexture = 0;
	public const CameraEvent AfterDepthTexture = 1;
	public const CameraEvent BeforeDepthNormalsTexture = 2;
	public const CameraEvent AfterDepthNormalsTexture = 3;
	public const CameraEvent BeforeGBuffer = 4;
	public const CameraEvent AfterGBuffer = 5;
	public const CameraEvent BeforeLighting = 6;
	public const CameraEvent AfterLighting = 7;
	public const CameraEvent BeforeFinalPass = 8;
	public const CameraEvent AfterFinalPass = 9;
	public const CameraEvent BeforeForwardOpaque = 10;
	public const CameraEvent AfterForwardOpaque = 11;
	public const CameraEvent BeforeImageEffectsOpaque = 12;
	public const CameraEvent AfterImageEffectsOpaque = 13;
	public const CameraEvent BeforeSkybox = 14;
	public const CameraEvent AfterSkybox = 15;
	public const CameraEvent BeforeForwardAlpha = 16;
	public const CameraEvent AfterForwardAlpha = 17;
	public const CameraEvent BeforeImageEffects = 18;
	public const CameraEvent AfterImageEffects = 19;
	public const CameraEvent BeforeForwardAfterPostProcess = 20;
	public const CameraEvent AfterForwardAfterPostProcess = 21;
	public const CameraEvent AfterEverything = 22;
	public const CameraEvent BeforeReflections = 23;
	public const CameraEvent AfterReflections = 24;
	public const CameraEvent BeforeHaloAndLensFlares = 25;
	public const CameraEvent AfterHaloAndLensFlares = 26;
	public const CameraEvent BeforeDecalGbuffer = 27;
	public const CameraEvent AfterDecalGbuffer = 28;
	public const CameraEvent BeforeDecalFinalPass = 29;
	public const CameraEvent AfterDecalFinalPass = 30;
	public const CameraEvent BeforeHalfResolutionParticle = 31;
	public const CameraEvent AfterHalfResolutionParticle = 32;
	public const CameraEvent BeforeSetScaledDecalDepth = 33;
	public const CameraEvent AfterSetScaledDecalDepth = 34;
}
public enum LightEvent
{
	// Fields
	public const LightEvent BeforeShadowMap = 0;
	public const LightEvent AfterShadowMap = 1;
	public const LightEvent BeforeScreenspaceMask = 2;
	public const LightEvent AfterScreenspaceMask = 3;
	public const LightEvent BeforeShadowMapPass = 4;
	public const LightEvent AfterShadowMapPass = 5;
}
public enum ShadowMapPass
{
	// Fields
	public const ShadowMapPass PointlightPositiveX = 1;
	public const ShadowMapPass PointlightNegativeX = 2;
	public const ShadowMapPass PointlightPositiveY = 4;
	public const ShadowMapPass PointlightNegativeY = 8;
	public const ShadowMapPass PointlightPositiveZ = 16;
	public const ShadowMapPass PointlightNegativeZ = 32;
	public const ShadowMapPass DirectionalCascade0 = 64;
	public const ShadowMapPass DirectionalCascade1 = 128;
	public const ShadowMapPass DirectionalCascade2 = 256;
	public const ShadowMapPass DirectionalCascade3 = 512;
	public const ShadowMapPass Spotlight = 1024;
	public const ShadowMapPass Pointlight = 63;
	public const ShadowMapPass Directional = 960;
	public const ShadowMapPass All = 2047;
}
public enum BuiltinRenderTextureType
{
	// Fields
	public const BuiltinRenderTextureType PropertyName = -4;
	public const BuiltinRenderTextureType BufferPtr = -3;
	public const BuiltinRenderTextureType RenderTexture = -2;
	public const BuiltinRenderTextureType BindableTexture = -1;
	public const BuiltinRenderTextureType None = 0;
	public const BuiltinRenderTextureType CurrentActive = 1;
	public const BuiltinRenderTextureType CameraTarget = 2;
	public const BuiltinRenderTextureType Depth = 3;
	public const BuiltinRenderTextureType DepthNormals = 4;
	public const BuiltinRenderTextureType ResolvedDepth = 5;
	public const BuiltinRenderTextureType PrepassNormalsSpec = 7;
	public const BuiltinRenderTextureType PrepassNormalsSpecMS = 8;
	public const BuiltinRenderTextureType PrepassLight = 9;
	public const BuiltinRenderTextureType PrepassLightSpec = 10;
	public const BuiltinRenderTextureType GBuffer0 = 12;
	public const BuiltinRenderTextureType GBuffer1 = 14;
	public const BuiltinRenderTextureType GBuffer2 = 16;
	public const BuiltinRenderTextureType GBuffer2MS = 17;
	public const BuiltinRenderTextureType GBuffer3 = 18;
	public const BuiltinRenderTextureType MainMS = 19;
	public const BuiltinRenderTextureType Reflections = 20;
	public const BuiltinRenderTextureType Ambient = 21;
	public const BuiltinRenderTextureType MotionVectors = 22;
	public const BuiltinRenderTextureType GBuffer4 = 23;
	public const BuiltinRenderTextureType GBuffer5 = 24;
	public const BuiltinRenderTextureType GBuffer6 = 25;
	public const BuiltinRenderTextureType GBuffer7 = 26;
	public const BuiltinRenderTextureType GodRay = 31;
}
public enum PassType
{
	// Fields
	public const PassType Normal = 0;
	public const PassType Vertex = 1;
	public const PassType VertexLM = 2;
	public const PassType VertexLMRGBM = 3;
	public const PassType ForwardBase = 4;
	public const PassType ForwardAdd = 5;
	public const PassType LightPrePassBase = 6;
	public const PassType LightPrePassFinal = 7;
	public const PassType ShadowCaster = 8;
	public const PassType Deferred = 10;
	public const PassType Meta = 11;
	public const PassType MotionVectors = 12;
	public const PassType MotionVectorsOutline = 14;
	public const PassType LightPrePassBaseCustom = 15;
	public const PassType LightPrePassFinalCustom = 16;
	public const PassType DepthOnly = 17;
}
public enum ShadowCastingMode
{
	// Fields
	public const ShadowCastingMode Off = 0;
	public const ShadowCastingMode On = 1;
	public const ShadowCastingMode TwoSided = 2;
	public const ShadowCastingMode ShadowsOnly = 3;
	public const ShadowCastingMode ShadowsOnlyTwoSided = 4;
}
public enum GraphicsDeviceType
{
	// Fields
	public const GraphicsDeviceType OpenGL2 = 0;
	public const GraphicsDeviceType Direct3D9 = 1;
	public const GraphicsDeviceType Direct3D11 = 2;
	public const GraphicsDeviceType PlayStation3 = 3;
	public const GraphicsDeviceType Null = 4;
	public const GraphicsDeviceType Xbox360 = 6;
	public const GraphicsDeviceType OpenGLES2 = 8;
	public const GraphicsDeviceType OpenGLES3 = 11;
	public const GraphicsDeviceType PlayStationVita = 12;
	public const GraphicsDeviceType PlayStation4 = 13;
	public const GraphicsDeviceType XboxOne = 14;
	public const GraphicsDeviceType PlayStationMobile = 15;
	public const GraphicsDeviceType Metal = 16;
	public const GraphicsDeviceType OpenGLCore = 17;
	public const GraphicsDeviceType Direct3D12 = 18;
	public const GraphicsDeviceType N3DS = 19;
	public const GraphicsDeviceType Vulkan = 21;
	public const GraphicsDeviceType Switch = 22;
	public const GraphicsDeviceType XboxOneD3D12 = 23;
	public const GraphicsDeviceType PlayStation5 = 24;
}
public enum ReflectionProbeUsage
{
	// Fields
	public const ReflectionProbeUsage Off = 0;
	public const ReflectionProbeUsage BlendProbes = 1;
	public const ReflectionProbeUsage BlendProbesAndSkybox = 2;
	public const ReflectionProbeUsage Simple = 3;
}
public enum ShadowSamplingMode
{
	// Fields
	public const ShadowSamplingMode CompareDepths = 0;
	public const ShadowSamplingMode RawDepth = 1;
	public const ShadowSamplingMode None = 2;
}
public enum LightProbeUsage
{
	// Fields
	public const LightProbeUsage Off = 0;
	public const LightProbeUsage BlendProbes = 1;
	public const LightProbeUsage UseProxyVolume = 2;
}
public enum PerObjectShadowUsage
{
	// Fields
	public const PerObjectShadowUsage Default = 0;
	public const PerObjectShadowUsage Disabled = 1;
}
public enum TextureDimension
{
	// Fields
	public const TextureDimension Unknown = -1;
	public const TextureDimension None = 0;
	public const TextureDimension Any = 1;
	public const TextureDimension Tex2D = 2;
	public const TextureDimension Tex3D = 3;
	public const TextureDimension Cube = 4;
	public const TextureDimension Tex2DArray = 5;
	public const TextureDimension CubeArray = 6;
}
public enum CopyTextureSupport
{
	// Fields
	public const CopyTextureSupport None = 0;
	public const CopyTextureSupport Basic = 1;
	public const CopyTextureSupport Copy3D = 2;
	public const CopyTextureSupport DifferentTypes = 4;
	public const CopyTextureSupport TextureToRT = 8;
	public const CopyTextureSupport RTToTexture = 16;
}
public enum TextAlignment
{
	// Fields
	public const TextAlignment Left = 0;
	public const TextAlignment Center = 1;
	public const TextAlignment Right = 2;
}
public enum TextAnchor
{
	// Fields
	public const TextAnchor UpperLeft = 0;
	public const TextAnchor UpperCenter = 1;
	public const TextAnchor UpperRight = 2;
	public const TextAnchor MiddleLeft = 3;
	public const TextAnchor MiddleCenter = 4;
	public const TextAnchor MiddleRight = 5;
	public const TextAnchor LowerLeft = 6;
	public const TextAnchor LowerCenter = 7;
	public const TextAnchor LowerRight = 8;
}
public enum HorizontalWrapMode
{
	// Fields
	public const HorizontalWrapMode Wrap = 0;
	public const HorizontalWrapMode Overflow = 1;
}
public enum VerticalWrapMode
{
	// Fields
	public const VerticalWrapMode Truncate = 0;
	public const VerticalWrapMode Overflow = 1;
}
public enum FontStyle
{
	// Fields
	public const FontStyle Normal = 0;
	public const FontStyle Bold = 1;
	public const FontStyle Italic = 2;
	public const FontStyle BoldAndItalic = 3;
}
public enum EventType
{
	// Fields
	public const EventType MouseDown = 0;
	public const EventType MouseUp = 1;
	public const EventType MouseMove = 2;
	public const EventType MouseDrag = 3;
	public const EventType KeyDown = 4;
	public const EventType KeyUp = 5;
	public const EventType ScrollWheel = 6;
	public const EventType Repaint = 7;
	public const EventType Layout = 8;
	public const EventType DragUpdated = 9;
	public const EventType DragPerform = 10;
	public const EventType DragExited = 15;
	public const EventType Ignore = 11;
	public const EventType Used = 12;
	public const EventType ValidateCommand = 13;
	public const EventType ExecuteCommand = 14;
	public const EventType ContextClick = 16;
	public const EventType MouseEnterWindow = 20;
	public const EventType MouseLeaveWindow = 21;
	public const EventType mouseDown = 0;
	public const EventType mouseUp = 1;
	public const EventType mouseMove = 2;
	public const EventType mouseDrag = 3;
	public const EventType keyDown = 4;
	public const EventType keyUp = 5;
	public const EventType scrollWheel = 6;
	public const EventType repaint = 7;
	public const EventType layout = 8;
	public const EventType dragUpdated = 9;
	public const EventType dragPerform = 10;
	public const EventType ignore = 11;
	public const EventType used = 12;
}
public enum EventModifiers
{
	// Fields
	public const EventModifiers None = 0;
	public const EventModifiers Shift = 1;
	public const EventModifiers Control = 2;
	public const EventModifiers Alt = 4;
	public const EventModifiers Command = 8;
	public const EventModifiers Numeric = 16;
	public const EventModifiers CapsLock = 32;
	public const EventModifiers FunctionKey = 64;
}
public enum ScaleMode
{
	// Fields
	public const ScaleMode StretchToFill = 0;
	public const ScaleMode ScaleAndCrop = 1;
	public const ScaleMode ScaleToFit = 2;
}
public enum FocusType
{
	// Fields
	public const FocusType Native = 0;
	public const FocusType Keyboard = 1;
	public const FocusType Passive = 2;
}
public enum ImagePosition
{
	// Fields
	public const ImagePosition ImageLeft = 0;
	public const ImagePosition ImageAbove = 1;
	public const ImagePosition ImageOnly = 2;
	public const ImagePosition TextOnly = 3;
}
public enum TextClipping
{
	// Fields
	public const TextClipping Overflow = 0;
	public const TextClipping Clip = 1;
}
public enum TextEditor.DblClickSnapping
{
	// Fields
	public byte value__; // 0x10
	public const TextEditor.DblClickSnapping WORDS = 0;
	public const TextEditor.DblClickSnapping PARAGRAPHS = 1;
}
public enum ParticleSystemRenderMode
{
	// Fields
	public const ParticleSystemRenderMode Billboard = 0;
	public const ParticleSystemRenderMode Stretch = 1;
	public const ParticleSystemRenderMode HorizontalBillboard = 2;
	public const ParticleSystemRenderMode VerticalBillboard = 3;
	public const ParticleSystemRenderMode Mesh = 4;
	public const ParticleSystemRenderMode None = 5;
}
public enum ParticleSystemSortMode
{
	// Fields
	public const ParticleSystemSortMode None = 0;
	public const ParticleSystemSortMode Distance = 1;
	public const ParticleSystemSortMode OldestInFront = 2;
	public const ParticleSystemSortMode YoungestInFront = 3;
}
public enum ParticleSystemCollisionQuality
{
	// Fields
	public const ParticleSystemCollisionQuality High = 0;
	public const ParticleSystemCollisionQuality Medium = 1;
	public const ParticleSystemCollisionQuality Low = 2;
}
public enum ParticleSystemRenderSpace
{
	// Fields
	public const ParticleSystemRenderSpace View = 0;
	public const ParticleSystemRenderSpace World = 1;
	public const ParticleSystemRenderSpace Local = 2;
	public const ParticleSystemRenderSpace Facing = 3;
	public const ParticleSystemRenderSpace Velocity = 4;
}
public enum ParticleSystemCurveMode
{
	// Fields
	public const ParticleSystemCurveMode Constant = 0;
	public const ParticleSystemCurveMode Curve = 1;
	public const ParticleSystemCurveMode TwoCurves = 2;
	public const ParticleSystemCurveMode TwoConstants = 3;
}
public enum ParticleSystemGradientMode
{
	// Fields
	public const ParticleSystemGradientMode Color = 0;
	public const ParticleSystemGradientMode Gradient = 1;
	public const ParticleSystemGradientMode TwoColors = 2;
	public const ParticleSystemGradientMode TwoGradients = 3;
	public const ParticleSystemGradientMode RandomColor = 4;
}
public enum ParticleSystemShapeType
{
	// Fields
	public const ParticleSystemShapeType Sphere = 0;
	public const ParticleSystemShapeType SphereShell = 1;
	public const ParticleSystemShapeType Hemisphere = 2;
	public const ParticleSystemShapeType HemisphereShell = 3;
	public const ParticleSystemShapeType Cone = 4;
	public const ParticleSystemShapeType Box = 5;
	public const ParticleSystemShapeType Mesh = 6;
	public const ParticleSystemShapeType ConeShell = 7;
	public const ParticleSystemShapeType ConeVolume = 8;
	public const ParticleSystemShapeType ConeVolumeShell = 9;
	public const ParticleSystemShapeType Circle = 10;
	public const ParticleSystemShapeType CircleEdge = 11;
	public const ParticleSystemShapeType SingleSidedEdge = 12;
	public const ParticleSystemShapeType MeshRenderer = 13;
	public const ParticleSystemShapeType SkinnedMeshRenderer = 14;
	public const ParticleSystemShapeType BoxShell = 15;
	public const ParticleSystemShapeType BoxEdge = 16;
	public const ParticleSystemShapeType Donut = 17;
}
public enum ParticleSystemMeshShapeType
{
	// Fields
	public const ParticleSystemMeshShapeType Vertex = 0;
	public const ParticleSystemMeshShapeType Edge = 1;
	public const ParticleSystemMeshShapeType Triangle = 2;
}
public enum ParticleSystemAnimationMode
{
	// Fields
	public const ParticleSystemAnimationMode Grid = 0;
	public const ParticleSystemAnimationMode Sprites = 1;
}
public enum ParticleSystemAnimationType
{
	// Fields
	public const ParticleSystemAnimationType WholeSheet = 0;
	public const ParticleSystemAnimationType SingleRow = 1;
}
public enum ParticleSystemCollisionType
{
	// Fields
	public const ParticleSystemCollisionType Planes = 0;
	public const ParticleSystemCollisionType World = 1;
}
public enum ParticleSystemCollisionMode
{
	// Fields
	public const ParticleSystemCollisionMode Collision3D = 0;
	public const ParticleSystemCollisionMode Collision2D = 1;
}
public enum ParticleSystemOverlapAction
{
	// Fields
	public const ParticleSystemOverlapAction Ignore = 0;
	public const ParticleSystemOverlapAction Kill = 1;
	public const ParticleSystemOverlapAction Callback = 2;
}
public enum ParticleSystemSimulationSpace
{
	// Fields
	public const ParticleSystemSimulationSpace Local = 0;
	public const ParticleSystemSimulationSpace World = 1;
	public const ParticleSystemSimulationSpace Custom = 2;
}
public enum ParticleSystemStopBehavior
{
	// Fields
	public const ParticleSystemStopBehavior StopEmittingAndClear = 0;
	public const ParticleSystemStopBehavior StopEmitting = 1;
}
public enum ParticleSystemScalingMode
{
	// Fields
	public const ParticleSystemScalingMode Hierarchy = 0;
	public const ParticleSystemScalingMode Local = 1;
	public const ParticleSystemScalingMode Shape = 2;
}
public enum ParticleSystemStopAction
{
	// Fields
	public const ParticleSystemStopAction None = 0;
	public const ParticleSystemStopAction Disable = 1;
	public const ParticleSystemStopAction Destroy = 2;
	public const ParticleSystemStopAction Callback = 3;
}
public enum ParticleSystemEmitterVelocityMode
{
	// Fields
	public const ParticleSystemEmitterVelocityMode Transform = 0;
	public const ParticleSystemEmitterVelocityMode Rigidbody = 1;
}
public enum ParticleSystemInheritVelocityMode
{
	// Fields
	public const ParticleSystemInheritVelocityMode Initial = 0;
	public const ParticleSystemInheritVelocityMode Current = 1;
}
public enum ParticleSystemVertexStream
{
	// Fields
	public const ParticleSystemVertexStream Position = 0;
	public const ParticleSystemVertexStream Normal = 1;
	public const ParticleSystemVertexStream Tangent = 2;
	public const ParticleSystemVertexStream Color = 3;
	public const ParticleSystemVertexStream UV = 4;
	public const ParticleSystemVertexStream UV2 = 5;
	public const ParticleSystemVertexStream UV3 = 6;
	public const ParticleSystemVertexStream UV4 = 7;
	public const ParticleSystemVertexStream AnimBlend = 8;
	public const ParticleSystemVertexStream AnimFrame = 9;
	public const ParticleSystemVertexStream Center = 10;
	public const ParticleSystemVertexStream VertexID = 11;
	public const ParticleSystemVertexStream SizeX = 12;
	public const ParticleSystemVertexStream SizeXY = 13;
	public const ParticleSystemVertexStream SizeXYZ = 14;
	public const ParticleSystemVertexStream Rotation = 15;
	public const ParticleSystemVertexStream Rotation3D = 16;
	public const ParticleSystemVertexStream RotationSpeed = 17;
	public const ParticleSystemVertexStream RotationSpeed3D = 18;
	public const ParticleSystemVertexStream Velocity = 19;
	public const ParticleSystemVertexStream Speed = 20;
	public const ParticleSystemVertexStream AgePercent = 21;
	public const ParticleSystemVertexStream InvStartLifetime = 22;
	public const ParticleSystemVertexStream StableRandomX = 23;
	public const ParticleSystemVertexStream StableRandomXY = 24;
	public const ParticleSystemVertexStream StableRandomXYZ = 25;
	public const ParticleSystemVertexStream StableRandomXYZW = 26;
	public const ParticleSystemVertexStream VaryingRandomX = 27;
	public const ParticleSystemVertexStream VaryingRandomXY = 28;
	public const ParticleSystemVertexStream VaryingRandomXYZ = 29;
	public const ParticleSystemVertexStream VaryingRandomXYZW = 30;
	public const ParticleSystemVertexStream Custom1X = 31;
	public const ParticleSystemVertexStream Custom1XY = 32;
	public const ParticleSystemVertexStream Custom1XYZ = 33;
	public const ParticleSystemVertexStream Custom1XYZW = 34;
	public const ParticleSystemVertexStream Custom2X = 35;
	public const ParticleSystemVertexStream Custom2XY = 36;
	public const ParticleSystemVertexStream Custom2XYZ = 37;
	public const ParticleSystemVertexStream Custom2XYZW = 38;
	public const ParticleSystemVertexStream NoiseSumX = 39;
	public const ParticleSystemVertexStream NoiseSumXY = 40;
	public const ParticleSystemVertexStream NoiseSumXYZ = 41;
	public const ParticleSystemVertexStream NoiseImpulseX = 42;
	public const ParticleSystemVertexStream NoiseImpulseXY = 43;
	public const ParticleSystemVertexStream NoiseImpulseXYZ = 44;
}
public enum ParticleSystemCustomData
{
	// Fields
	public const ParticleSystemCustomData Custom1 = 0;
	public const ParticleSystemCustomData Custom2 = 1;
}
public enum ParticleSystemCustomDataMode
{
	// Fields
	public const ParticleSystemCustomDataMode Disabled = 0;
	public const ParticleSystemCustomDataMode Vector = 1;
	public const ParticleSystemCustomDataMode Color = 2;
}
public enum ParticleSystemNoiseQuality
{
	// Fields
	public const ParticleSystemNoiseQuality Low = 0;
	public const ParticleSystemNoiseQuality Medium = 1;
	public const ParticleSystemNoiseQuality High = 2;
}
public enum ParticleSystemTrailMode
{
	// Fields
	public const ParticleSystemTrailMode PerParticle = 0;
	public const ParticleSystemTrailMode Ribbon = 1;
}
public enum ParticleSystemTrailTextureMode
{
	// Fields
	public const ParticleSystemTrailTextureMode Stretch = 0;
	public const ParticleSystemTrailTextureMode Tile = 1;
	public const ParticleSystemTrailTextureMode DistributePerSegment = 2;
	public const ParticleSystemTrailTextureMode RepeatPerSegment = 3;
}
public enum ParticleSystemShapeMultiModeValue
{
	// Fields
	public const ParticleSystemShapeMultiModeValue Random = 0;
	public const ParticleSystemShapeMultiModeValue Loop = 1;
	public const ParticleSystemShapeMultiModeValue PingPong = 2;
	public const ParticleSystemShapeMultiModeValue BurstSpread = 3;
}
public enum UVChannelFlags
{
	// Fields
	public const UVChannelFlags UV0 = 1;
	public const UVChannelFlags UV1 = 2;
	public const UVChannelFlags UV2 = 4;
	public const UVChannelFlags UV3 = 8;
}
public enum RigidbodyType2D
{
	// Fields
	public const RigidbodyType2D Dynamic = 0;
	public const RigidbodyType2D Kinematic = 1;
	public const RigidbodyType2D Static = 2;
}
public enum JobPriority
{
	// Fields
	public const JobPriority NormalJobPriority = 0;
	public const JobPriority HighJobPriority = 1;
	public const JobPriority GuaranteeNoSyncFence = 2;
	public const JobPriority JobDelegateBackGroundPriority = 16;
	public const JobPriority JobDelegateLowPriority = 32;
}
public enum ConfigurableJointMotion
{
	// Fields
	public const ConfigurableJointMotion Locked = 0;
	public const ConfigurableJointMotion Limited = 1;
	public const ConfigurableJointMotion Free = 2;
}
public enum RotationDriveMode
{
	// Fields
	public const RotationDriveMode XYAndZ = 0;
	public const RotationDriveMode Slerp = 1;
}
public enum CollisionDetectionMode
{
	// Fields
	public const CollisionDetectionMode Discrete = 0;
	public const CollisionDetectionMode Continuous = 1;
	public const CollisionDetectionMode ContinuousDynamic = 2;
}
public enum RigidbodyConstraints
{
	// Fields
	public const RigidbodyConstraints None = 0;
	public const RigidbodyConstraints FreezePositionX = 2;
	public const RigidbodyConstraints FreezePositionY = 4;
	public const RigidbodyConstraints FreezePositionZ = 8;
	public const RigidbodyConstraints FreezeRotationX = 16;
	public const RigidbodyConstraints FreezeRotationY = 32;
	public const RigidbodyConstraints FreezeRotationZ = 64;
	public const RigidbodyConstraints FreezePosition = 14;
	public const RigidbodyConstraints FreezeRotation = 112;
	public const RigidbodyConstraints FreezeAll = 126;
}
public enum ForceMode
{
	// Fields
	public const ForceMode Force = 0;
	public const ForceMode Acceleration = 5;
	public const ForceMode Impulse = 1;
	public const ForceMode VelocityChange = 2;
}
public enum JointProjectionMode
{
	// Fields
	public const JointProjectionMode None = 0;
	public const JointProjectionMode PositionAndRotation = 1;
	public const JointProjectionMode PositionOnly = 2;
}
public enum RigidbodyInterpolation
{
	// Fields
	public const RigidbodyInterpolation None = 0;
	public const RigidbodyInterpolation Interpolate = 1;
	public const RigidbodyInterpolation Extrapolate = 2;
	public const RigidbodyInterpolation InterpolatePositionOnly = 3;
}
public enum CollisionFlags
{
	// Fields
	public const CollisionFlags None = 0;
	public const CollisionFlags Sides = 1;
	public const CollisionFlags Above = 2;
	public const CollisionFlags Below = 4;
	public const CollisionFlags CollidedSides = 1;
	public const CollisionFlags CollidedAbove = 2;
	public const CollisionFlags CollidedBelow = 4;
}
public enum QueryTriggerInteraction
{
	// Fields
	public const QueryTriggerInteraction UseGlobal = 0;
	public const QueryTriggerInteraction Ignore = 1;
	public const QueryTriggerInteraction Collide = 2;
}
public enum Terrain.MaterialType
{
	// Fields
	public const Terrain.MaterialType BuiltInStandard = 0;
	public const Terrain.MaterialType BuiltInLegacyDiffuse = 1;
	public const Terrain.MaterialType BuiltInLegacySpecular = 2;
	public const Terrain.MaterialType Custom = 3;
}
public enum Terrain.TessellationLevel
{
	// Fields
	public const Terrain.TessellationLevel Disabled = 0;
	public const Terrain.TessellationLevel DeformationOnly = 1;
	public const Terrain.TessellationLevel Forced = 2;
}
public enum DetailRenderMode
{
	// Fields
	public const DetailRenderMode GrassBillboard = 0;
	public const DetailRenderMode VertexLit = 1;
	public const DetailRenderMode Grass = 2;
}
public enum NavMeshObstacleShape
{
	// Fields
	public const NavMeshObstacleShape Capsule = 0;
	public const NavMeshObstacleShape Box = 1;
}
public enum NavMeshPathStatus
{
	// Fields
	public const NavMeshPathStatus PathComplete = 0;
	public const NavMeshPathStatus PathPartial = 1;
	public const NavMeshPathStatus PathInvalid = 2;
}
public enum NavMeshBuildWorkerThreadStrategy
{
	// Fields
	public const NavMeshBuildWorkerThreadStrategy Full = 0;
	public const NavMeshBuildWorkerThreadStrategy Half = 1;
	public const NavMeshBuildWorkerThreadStrategy UseOneThird = 2;
	public const NavMeshBuildWorkerThreadStrategy LeftOneThird = 3;
	public const NavMeshBuildWorkerThreadStrategy UseSpecificCount = 4;
	public const NavMeshBuildWorkerThreadStrategy LeftSpecificCount = 5;
}
public enum NavMeshBuildSourceShape
{
	// Fields
	public const NavMeshBuildSourceShape Mesh = 0;
	public const NavMeshBuildSourceShape Terrain = 1;
	public const NavMeshBuildSourceShape Box = 2;
	public const NavMeshBuildSourceShape Sphere = 3;
	public const NavMeshBuildSourceShape Capsule = 4;
	public const NavMeshBuildSourceShape ModifierBox = 5;
	public const NavMeshBuildSourceShape KeepInArea = 6;
	public const NavMeshBuildSourceShape KeepOutArea = 7;
	public const NavMeshBuildSourceShape ModifierMeshPrism = 8;
}
public enum NavMeshCollectGeometry
{
	// Fields
	public const NavMeshCollectGeometry RenderMeshes = 0;
	public const NavMeshCollectGeometry PhysicsColliders = 1;
}
public enum AsyncNavMeshPathQuery.QueryState
{
	// Fields
	public const AsyncNavMeshPathQuery.QueryState PathNone = 0;
	public const AsyncNavMeshPathQuery.QueryState PathRequested = 1;
	public const AsyncNavMeshPathQuery.QueryState PathCreated = 2;
}
public enum PlayMode
{
	// Fields
	public const PlayMode StopSameLayer = 0;
	public const PlayMode StopAll = 4;
}
public enum AvatarIKGoal
{
	// Fields
	public const AvatarIKGoal LeftFoot = 0;
	public const AvatarIKGoal RightFoot = 1;
	public const AvatarIKGoal LeftHand = 2;
	public const AvatarIKGoal RightHand = 3;
}
public enum AnimatorControllerParameterType
{
	// Fields
	public const AnimatorControllerParameterType Float = 1;
	public const AnimatorControllerParameterType Int = 3;
	public const AnimatorControllerParameterType Bool = 4;
	public const AnimatorControllerParameterType Trigger = 9;
}
public enum TickState
{
	// Fields
	public const TickState NormalTick = 0;
	public const TickState Idle = 1;
	public const TickState InterleavedTick = 2;
}
public enum AnimatorCullingMode
{
	// Fields
	public const AnimatorCullingMode AlwaysAnimate = 0;
	public const AnimatorCullingMode CullUpdateTransforms = 1;
	public const AnimatorCullingMode CullCompletely = 2;
}
public enum AnimatorUpdateMode
{
	// Fields
	public const AnimatorUpdateMode Normal = 0;
	public const AnimatorUpdateMode AnimatePhysics = 1;
	public const AnimatorUpdateMode UnscaledTime = 2;
}
public enum RootMotionBlendMode
{
	// Fields
	public const RootMotionBlendMode RootMotionMixNormal = 0;
	public const RootMotionBlendMode RootMotionFreezeSource = 1;
	public const RootMotionBlendMode RootMotionFreezeDest = 2;
}
public enum InterruptionSource
{
	// Fields
	public const InterruptionSource None = 0;
	public const InterruptionSource Source = 1;
	public const InterruptionSource Destination = 2;
	public const InterruptionSource SourceThenDestination = 3;
	public const InterruptionSource DestinationThenSource = 4;
}
public enum DurationUnit
{
	// Fields
	public const DurationUnit Fixed = 0;
	public const DurationUnit Normalized = 1;
}
public enum HumanBodyBones
{
	// Fields
	public const HumanBodyBones Hips = 0;
	public const HumanBodyBones LeftUpperLeg = 1;
	public const HumanBodyBones RightUpperLeg = 2;
	public const HumanBodyBones LeftLowerLeg = 3;
	public const HumanBodyBones RightLowerLeg = 4;
	public const HumanBodyBones LeftFoot = 5;
	public const HumanBodyBones RightFoot = 6;
	public const HumanBodyBones Spine = 7;
	public const HumanBodyBones Chest = 8;
	public const HumanBodyBones UpperChest = 54;
	public const HumanBodyBones Neck = 9;
	public const HumanBodyBones Head = 10;
	public const HumanBodyBones LeftShoulder = 11;
	public const HumanBodyBones RightShoulder = 12;
	public const HumanBodyBones LeftUpperArm = 13;
	public const HumanBodyBones RightUpperArm = 14;
	public const HumanBodyBones LeftLowerArm = 15;
	public const HumanBodyBones RightLowerArm = 16;
	public const HumanBodyBones LeftHand = 17;
	public const HumanBodyBones RightHand = 18;
	public const HumanBodyBones LeftToes = 19;
	public const HumanBodyBones RightToes = 20;
	public const HumanBodyBones LeftEye = 21;
	public const HumanBodyBones RightEye = 22;
	public const HumanBodyBones Jaw = 23;
	public const HumanBodyBones LeftThumbProximal = 24;
	public const HumanBodyBones LeftThumbIntermediate = 25;
	public const HumanBodyBones LeftThumbDistal = 26;
	public const HumanBodyBones LeftIndexProximal = 27;
	public const HumanBodyBones LeftIndexIntermediate = 28;
	public const HumanBodyBones LeftIndexDistal = 29;
	public const HumanBodyBones LeftMiddleProximal = 30;
	public const HumanBodyBones LeftMiddleIntermediate = 31;
	public const HumanBodyBones LeftMiddleDistal = 32;
	public const HumanBodyBones LeftRingProximal = 33;
	public const HumanBodyBones LeftRingIntermediate = 34;
	public const HumanBodyBones LeftRingDistal = 35;
	public const HumanBodyBones LeftLittleProximal = 36;
	public const HumanBodyBones LeftLittleIntermediate = 37;
	public const HumanBodyBones LeftLittleDistal = 38;
	public const HumanBodyBones RightThumbProximal = 39;
	public const HumanBodyBones RightThumbIntermediate = 40;
	public const HumanBodyBones RightThumbDistal = 41;
	public const HumanBodyBones RightIndexProximal = 42;
	public const HumanBodyBones RightIndexIntermediate = 43;
	public const HumanBodyBones RightIndexDistal = 44;
	public const HumanBodyBones RightMiddleProximal = 45;
	public const HumanBodyBones RightMiddleIntermediate = 46;
	public const HumanBodyBones RightMiddleDistal = 47;
	public const HumanBodyBones RightRingProximal = 48;
	public const HumanBodyBones RightRingIntermediate = 49;
	public const HumanBodyBones RightRingDistal = 50;
	public const HumanBodyBones RightLittleProximal = 51;
	public const HumanBodyBones RightLittleIntermediate = 52;
	public const HumanBodyBones RightLittleDistal = 53;
	public const HumanBodyBones LastBone = 55;
}
public enum DirectorWrapMode
{
	// Fields
	public const DirectorWrapMode Hold = 0;
	public const DirectorWrapMode Loop = 1;
	public const DirectorWrapMode None = 2;
}
public enum NativeInputUpdateType
{
	// Fields
	public const NativeInputUpdateType BeginFixed = 0;
	public const NativeInputUpdateType EndFixed = 1;
	public const NativeInputUpdateType BeginDynamic = 2;
	public const NativeInputUpdateType EndDynamic = 3;
	public const NativeInputUpdateType BeginBeforeRender = 4;
	public const NativeInputUpdateType EndBeforeRender = 5;
	public const NativeInputUpdateType BeginEditor = 6;
	public const NativeInputUpdateType EndEditor = 7;
}
public enum PS5Pad.UserSlotId
{
	// Fields
	public const PS5Pad.UserSlotId Invalid = -1;
	public const PS5Pad.UserSlotId User0 = 0;
	public const PS5Pad.UserSlotId User1 = 1;
	public const PS5Pad.UserSlotId User2 = 2;
	public const PS5Pad.UserSlotId User3 = 3;
	public const PS5Pad.UserSlotId PrimaryUser = 4;
	public const PS5Pad.UserSlotId Max = 4;
}
public enum PS5Pad.PadType
{
	// Fields
	public const PS5Pad.PadType DS4 = 0;
	public const PS5Pad.PadType Aim = 1;
}
public enum PS5Pad.TriggerMask
{
	// Fields
	public const PS5Pad.TriggerMask L2 = 1;
	public const PS5Pad.TriggerMask R2 = 2;
	public const PS5Pad.TriggerMask Both = 3;
}
public enum Tile.ColliderType
{
	// Fields
	public const Tile.ColliderType None = 0;
	public const Tile.ColliderType Sprite = 1;
	public const Tile.ColliderType Grid = 2;
}
public enum TileFlags
{
	// Fields
	public const TileFlags None = 0;
	public const TileFlags LockColor = 1;
	public const TileFlags LockTransform = 2;
	public const TileFlags InstantiateGameObjectRuntimeOnly = 4;
	public const TileFlags LockAll = 3;
}
public enum ClampedDragger.DragDirection
{
	// Fields
	public const ClampedDragger.DragDirection None = 0;
	public const ClampedDragger.DragDirection LowToHigh = 1;
	public const ClampedDragger.DragDirection HighToLow = 2;
	public const ClampedDragger.DragDirection Free = 4;
}
public enum PropagationPhase
{
	// Fields
	public const PropagationPhase None = 0;
	public const PropagationPhase Capture = 1;
	public const PropagationPhase AtTarget = 2;
	public const PropagationPhase BubbleUp = 3;
	public const PropagationPhase DefaultAction = 4;
}
public enum MouseButton
{
	// Fields
	public const MouseButton LeftMouse = 0;
	public const MouseButton RightMouse = 1;
	public const MouseButton MiddleMouse = 2;
}
public enum ContextType
{
	// Fields
	public const ContextType Player = 0;
	public const ContextType Editor = 1;
}
public enum ChangeType
{
	// Fields
	public const ChangeType PersistentData = 64;
	public const ChangeType PersistentDataPath = 32;
	public const ChangeType Layout = 16;
	public const ChangeType Styles = 8;
	public const ChangeType Transform = 4;
	public const ChangeType StylesPath = 2;
	public const ChangeType Repaint = 1;
	public const ChangeType All = 127;
}
public enum Slider.Direction
{
	// Fields
	public const Slider.Direction Horizontal = 0;
	public const Slider.Direction Vertical = 1;
}
public enum PickingMode
{
	// Fields
	public const PickingMode Position = 0;
	public const PickingMode Ignore = 1;
}
public enum VisualElement.MeasureMode
{
	// Fields
	public const VisualElement.MeasureMode Undefined = 0;
	public const VisualElement.MeasureMode Exactly = 1;
	public const VisualElement.MeasureMode AtMost = 2;
}
public enum VisualElement.ClippingOptions
{
	// Fields
	public const VisualElement.ClippingOptions ClipContents = 0;
	public const VisualElement.ClippingOptions NoClipping = 1;
	public const VisualElement.ClippingOptions ClipAndCacheContents = 2;
}
public enum EventBase.EventFlags
{
	// Fields
	public const EventBase.EventFlags None = 0;
	public const EventBase.EventFlags Bubbles = 1;
	public const EventBase.EventFlags Capturable = 2;
	public const EventBase.EventFlags Cancellable = 4;
}
public enum Capture
{
	// Fields
	public const Capture NoCapture = 0;
	public const Capture Capture = 1;
}
public enum PositionType
{
	// Fields
	public const PositionType Relative = 0;
	public const PositionType Absolute = 1;
	public const PositionType Manual = 2;
}
public enum Overflow
{
	// Fields
	public const Overflow Visible = 0;
	public const Overflow Scroll = 2;
	public const Overflow Hidden = 1;
}
public enum FlexDirection
{
	// Fields
	public const FlexDirection Column = 0;
	public const FlexDirection ColumnReverse = 1;
	public const FlexDirection Row = 2;
	public const FlexDirection RowReverse = 3;
}
public enum Wrap
{
	// Fields
	public const Wrap NoWrap = 0;
	public const Wrap Wrap = 1;
}
public enum Align
{
	// Fields
	public const Align Auto = 0;
	public const Align FlexStart = 1;
	public const Align Center = 2;
	public const Align FlexEnd = 3;
	public const Align Stretch = 4;
}
public enum Justify
{
	// Fields
	public const Justify FlexStart = 0;
	public const Justify Center = 1;
	public const Justify FlexEnd = 2;
	public const Justify SpaceBetween = 3;
	public const Justify SpaceAround = 4;
}
public enum RenderMode
{
	// Fields
	public const RenderMode ScreenSpaceOverlay = 0;
	public const RenderMode ScreenSpaceCamera = 1;
	public const RenderMode WorldSpace = 2;
}
public enum UISystemProfilerApi.SampleType
{
	// Fields
	public const UISystemProfilerApi.SampleType Layout = 0;
	public const UISystemProfilerApi.SampleType Render = 1;
	public const UISystemProfilerApi.SampleType Event = 2;
}
public enum NetworkEventType
{
	// Fields
	public const NetworkEventType DataEvent = 0;
	public const NetworkEventType ConnectEvent = 1;
	public const NetworkEventType DisconnectEvent = 2;
	public const NetworkEventType Nothing = 3;
	public const NetworkEventType BroadcastEvent = 4;
}
public enum QosType
{
	// Fields
	public const QosType Unreliable = 0;
	public const QosType UnreliableFragmented = 1;
	public const QosType UnreliableSequenced = 2;
	public const QosType Reliable = 3;
	public const QosType ReliableFragmented = 4;
	public const QosType ReliableSequenced = 5;
	public const QosType StateUpdate = 6;
	public const QosType ReliableStateUpdate = 7;
	public const QosType AllCostDelivery = 8;
	public const QosType UnreliableFragmentedSequenced = 9;
	public const QosType ReliableFragmentedSequenced = 10;
}
public enum NetworkError
{
	// Fields
	public const NetworkError Ok = 0;
	public const NetworkError WrongHost = 1;
	public const NetworkError WrongConnection = 2;
	public const NetworkError WrongChannel = 3;
	public const NetworkError NoResources = 4;
	public const NetworkError BadMessage = 5;
	public const NetworkError Timeout = 6;
	public const NetworkError MessageToLong = 7;
	public const NetworkError WrongOperation = 8;
	public const NetworkError VersionMismatch = 9;
	public const NetworkError CRCMismatch = 10;
	public const NetworkError DNSFailure = 11;
	public const NetworkError UsageError = 12;
}
public enum ReactorModel
{
	// Fields
	public const ReactorModel SelectReactor = 0;
	public const ReactorModel FixRateReactor = 1;
}
public enum ConnectionAcksType
{
	// Fields
	public const ConnectionAcksType Acks32 = 1;
	public const ConnectionAcksType Acks64 = 2;
	public const ConnectionAcksType Acks96 = 3;
	public const ConnectionAcksType Acks128 = 4;
}
public enum SourceID
{
	// Fields
	public ulong value__; // 0x10
	public const SourceID Invalid = -1;
}
public enum NetworkID
{
	// Fields
	public ulong value__; // 0x10
	public const NetworkID Invalid = -1;
}
public enum NodeID
{
	// Fields
	public ushort value__; // 0x10
	public const NodeID Invalid = 0;
}
public enum HostPriority
{
	// Fields
	public const HostPriority Invalid = 2147483647;
}
public enum AnalyticsSessionState
{
	// Fields
	public const AnalyticsSessionState kSessionStopped = 0;
	public const AnalyticsSessionState kSessionStarted = 1;
	public const AnalyticsSessionState kSessionPaused = 2;
	public const AnalyticsSessionState kSessionResumed = 3;
}
public enum XRNode
{
	// Fields
	public const XRNode LeftEye = 0;
	public const XRNode RightEye = 1;
	public const XRNode CenterEye = 2;
	public const XRNode Head = 3;
	public const XRNode LeftHand = 4;
	public const XRNode RightHand = 5;
	public const XRNode GameController = 6;
	public const XRNode TrackingReference = 7;
	public const XRNode HardwareTracker = 8;
}
public enum WindZoneMode
{
	// Fields
	public const WindZoneMode Directional = 0;
	public const WindZoneMode Spherical = 1;
}
public enum CanvasUpdate
{
	// Fields
	public const CanvasUpdate Prelayout = 0;
	public const CanvasUpdate Layout = 1;
	public const CanvasUpdate PostLayout = 2;
	public const CanvasUpdate PreRender = 3;
	public const CanvasUpdate LatePreRender = 4;
	public const CanvasUpdate MaxUpdateValue = 5;
}
public enum GraphicRaycaster.BlockingObjects
{
	// Fields
	public const GraphicRaycaster.BlockingObjects None = 0;
	public const GraphicRaycaster.BlockingObjects TwoD = 1;
	public const GraphicRaycaster.BlockingObjects ThreeD = 2;
	public const GraphicRaycaster.BlockingObjects All = 3;
}
public enum Image.Type
{
	// Fields
	public const Image.Type Simple = 0;
	public const Image.Type Sliced = 1;
	public const Image.Type Tiled = 2;
	public const Image.Type Filled = 3;
}
public enum Image.FillMethod
{
	// Fields
	public const Image.FillMethod Horizontal = 0;
	public const Image.FillMethod Vertical = 1;
	public const Image.FillMethod Radial90 = 2;
	public const Image.FillMethod Radial180 = 3;
	public const Image.FillMethod Radial360 = 4;
}
public enum InputField.ContentType
{
	// Fields
	public const InputField.ContentType Standard = 0;
	public const InputField.ContentType Autocorrected = 1;
	public const InputField.ContentType IntegerNumber = 2;
	public const InputField.ContentType DecimalNumber = 3;
	public const InputField.ContentType Alphanumeric = 4;
	public const InputField.ContentType Name = 5;
	public const InputField.ContentType EmailAddress = 6;
	public const InputField.ContentType Password = 7;
	public const InputField.ContentType Pin = 8;
	public const InputField.ContentType Custom = 9;
}
public enum InputField.InputType
{
	// Fields
	public const InputField.InputType Standard = 0;
	public const InputField.InputType AutoCorrect = 1;
	public const InputField.InputType Password = 2;
}
public enum InputField.CharacterValidation
{
	// Fields
	public const InputField.CharacterValidation None = 0;
	public const InputField.CharacterValidation Integer = 1;
	public const InputField.CharacterValidation Decimal = 2;
	public const InputField.CharacterValidation Alphanumeric = 3;
	public const InputField.CharacterValidation Name = 4;
	public const InputField.CharacterValidation EmailAddress = 5;
}
public enum InputField.LineType
{
	// Fields
	public const InputField.LineType SingleLine = 0;
	public const InputField.LineType MultiLineSubmit = 1;
	public const InputField.LineType MultiLineNewline = 2;
}
public enum Navigation.Mode
{
	// Fields
	public const Navigation.Mode None = 0;
	public const Navigation.Mode Horizontal = 1;
	public const Navigation.Mode Vertical = 2;
	public const Navigation.Mode Automatic = 3;
	public const Navigation.Mode Explicit = 4;
}
public enum Scrollbar.Direction
{
	// Fields
	public const Scrollbar.Direction LeftToRight = 0;
	public const Scrollbar.Direction RightToLeft = 1;
	public const Scrollbar.Direction BottomToTop = 2;
	public const Scrollbar.Direction TopToBottom = 3;
}
public enum ScrollRect.MovementType
{
	// Fields
	public const ScrollRect.MovementType Unrestricted = 0;
	public const ScrollRect.MovementType Elastic = 1;
	public const ScrollRect.MovementType Clamped = 2;
}
public enum ScrollRect.ScrollbarVisibility
{
	// Fields
	public const ScrollRect.ScrollbarVisibility Permanent = 0;
	public const ScrollRect.ScrollbarVisibility AutoHide = 1;
	public const ScrollRect.ScrollbarVisibility AutoHideAndExpandViewport = 2;
}
public enum Selectable.Transition
{
	// Fields
	public const Selectable.Transition None = 0;
	public const Selectable.Transition ColorTint = 1;
	public const Selectable.Transition SpriteSwap = 2;
	public const Selectable.Transition Animation = 3;
}
public enum Slider.Direction
{
	// Fields
	public const Slider.Direction LeftToRight = 0;
	public const Slider.Direction RightToLeft = 1;
	public const Slider.Direction BottomToTop = 2;
	public const Slider.Direction TopToBottom = 3;
}
public enum SmoothMask.Type
{
	// Fields
	public const SmoothMask.Type Unused = 0;
	public const SmoothMask.Type Texture = 1;
	public const SmoothMask.Type Rectangle = 2;
	public const SmoothMask.Type Circle = 3;
}
public enum SmoothMask.SoftRangeType
{
	// Fields
	public const SmoothMask.SoftRangeType Relative = 0;
	public const SmoothMask.SoftRangeType Pixel = 1;
}
public enum SmoothMask.FillType
{
	// Fields
	public const SmoothMask.FillType Unused = 0;
	public const SmoothMask.FillType Horizontal = 1;
	public const SmoothMask.FillType Vertical = 2;
	public const SmoothMask.FillType Radial90 = 3;
	public const SmoothMask.FillType Radial180 = 4;
	public const SmoothMask.FillType Radial360 = 5;
}
public enum SmoothMask.FillOriginHorizontal
{
	// Fields
	public const SmoothMask.FillOriginHorizontal Left = 0;
	public const SmoothMask.FillOriginHorizontal Right = 1;
}
public enum SmoothMask.FillOriginVertical
{
	// Fields
	public const SmoothMask.FillOriginVertical Bottom = 0;
	public const SmoothMask.FillOriginVertical Top = 1;
}
public enum SmoothMask.FillOriginRadial
{
	// Fields
	public const SmoothMask.FillOriginRadial Bottom = 0;
	public const SmoothMask.FillOriginRadial Left = 1;
	public const SmoothMask.FillOriginRadial Top = 2;
	public const SmoothMask.FillOriginRadial Right = 3;
}
public enum SmoothMask.FillOriginRadial90
{
	// Fields
	public const SmoothMask.FillOriginRadial90 BottomLeft = 0;
	public const SmoothMask.FillOriginRadial90 TopLeft = 1;
	public const SmoothMask.FillOriginRadial90 TopRight = 2;
	public const SmoothMask.FillOriginRadial90 BottomRight = 3;
}
public enum SmoothMaskMaterial.Params.DirtyFlagBit
{
	// Fields
	public const SmoothMaskMaterial.Params.DirtyFlagBit Type = 1;
	public const SmoothMaskMaterial.Params.DirtyFlagBit Texture = 2;
	public const SmoothMaskMaterial.Params.DirtyFlagBit Matrix = 4;
	public const SmoothMaskMaterial.Params.DirtyFlagBit SoftRange = 8;
	public const SmoothMaskMaterial.Params.DirtyFlagBit FillParams = 16;
}
public enum Toggle.ToggleTransition
{
	// Fields
	public const Toggle.ToggleTransition None = 0;
	public const Toggle.ToggleTransition Fade = 1;
}
public enum AspectRatioFitter.AspectMode
{
	// Fields
	public const AspectRatioFitter.AspectMode None = 0;
	public const AspectRatioFitter.AspectMode WidthControlsHeight = 1;
	public const AspectRatioFitter.AspectMode HeightControlsWidth = 2;
	public const AspectRatioFitter.AspectMode FitInParent = 3;
	public const AspectRatioFitter.AspectMode EnvelopeParent = 4;
}
public enum CanvasScaler.ScaleMode
{
	// Fields
	public const CanvasScaler.ScaleMode ConstantPixelSize = 0;
	public const CanvasScaler.ScaleMode ScaleWithScreenSize = 1;
	public const CanvasScaler.ScaleMode ConstantPhysicalSize = 2;
}
public enum CanvasScaler.ScreenMatchMode
{
	// Fields
	public const CanvasScaler.ScreenMatchMode MatchWidthOrHeight = 0;
	public const CanvasScaler.ScreenMatchMode Expand = 1;
	public const CanvasScaler.ScreenMatchMode Shrink = 2;
}
public enum CanvasScaler.Unit
{
	// Fields
	public const CanvasScaler.Unit Centimeters = 0;
	public const CanvasScaler.Unit Millimeters = 1;
	public const CanvasScaler.Unit Inches = 2;
	public const CanvasScaler.Unit Points = 3;
	public const CanvasScaler.Unit Picas = 4;
}
public enum ContentSizeFitter.FitMode
{
	// Fields
	public const ContentSizeFitter.FitMode Unconstrained = 0;
	public const ContentSizeFitter.FitMode MinSize = 1;
	public const ContentSizeFitter.FitMode PreferredSize = 2;
}
public enum GridLayoutGroup.Corner
{
	// Fields
	public const GridLayoutGroup.Corner UpperLeft = 0;
	public const GridLayoutGroup.Corner UpperRight = 1;
	public const GridLayoutGroup.Corner LowerLeft = 2;
	public const GridLayoutGroup.Corner LowerRight = 3;
}
public enum GridLayoutGroup.Axis
{
	// Fields
	public const GridLayoutGroup.Axis Horizontal = 0;
	public const GridLayoutGroup.Axis Vertical = 1;
}
public enum GridLayoutGroup.Constraint
{
	// Fields
	public const GridLayoutGroup.Constraint Flexible = 0;
	public const GridLayoutGroup.Constraint FixedColumnCount = 1;
	public const GridLayoutGroup.Constraint FixedRowCount = 2;
}
public enum ColorTween.ColorTweenMode
{
	// Fields
	public const ColorTween.ColorTweenMode All = 0;
	public const ColorTween.ColorTweenMode RGB = 1;
	public const ColorTween.ColorTweenMode Alpha = 2;
}
public enum EventTriggerType
{
	// Fields
	public const EventTriggerType PointerEnter = 0;
	public const EventTriggerType PointerExit = 1;
	public const EventTriggerType PointerDown = 2;
	public const EventTriggerType PointerUp = 3;
	public const EventTriggerType PointerClick = 4;
	public const EventTriggerType Drag = 5;
	public const EventTriggerType Drop = 6;
	public const EventTriggerType Scroll = 7;
	public const EventTriggerType UpdateSelected = 8;
	public const EventTriggerType Select = 9;
	public const EventTriggerType Deselect = 10;
	public const EventTriggerType Move = 11;
	public const EventTriggerType InitializePotentialDrag = 12;
	public const EventTriggerType BeginDrag = 13;
	public const EventTriggerType EndDrag = 14;
	public const EventTriggerType Submit = 15;
	public const EventTriggerType Cancel = 16;
}
public enum MoveDirection
{
	// Fields
	public const MoveDirection Left = 0;
	public const MoveDirection Up = 1;
	public const MoveDirection Right = 2;
	public const MoveDirection Down = 3;
	public const MoveDirection None = 4;
}
public enum PointerEventData.InputButton
{
	// Fields
	public const PointerEventData.InputButton Left = 0;
	public const PointerEventData.InputButton Right = 1;
	public const PointerEventData.InputButton Middle = 2;
}
public enum PointerEventData.FramePressState
{
	// Fields
	public const PointerEventData.FramePressState Pressed = 0;
	public const PointerEventData.FramePressState Released = 1;
	public const PointerEventData.FramePressState PressedAndReleased = 2;
	public const PointerEventData.FramePressState NotChanged = 3;
}
public enum StandaloneInputModule.InputMode
{
	// Fields
	public const StandaloneInputModule.InputMode Mouse = 0;
	public const StandaloneInputModule.InputMode Buttons = 1;
}
public enum Compaction
{
	// Fields
	public const Compaction AUTO = 0;
	public const Compaction TEXT = 1;
	public const Compaction BYTE = 2;
	public const Compaction NUMERIC = 3;
}
public enum EncodeHintType
{
	// Fields
	public const EncodeHintType WIDTH = 0;
	public const EncodeHintType HEIGHT = 1;
	public const EncodeHintType PURE_BARCODE = 2;
	public const EncodeHintType ERROR_CORRECTION = 3;
	public const EncodeHintType CHARACTER_SET = 4;
	public const EncodeHintType MARGIN = 5;
	public const EncodeHintType PDF417_COMPACT = 6;
	public const EncodeHintType PDF417_COMPACTION = 7;
	public const EncodeHintType PDF417_DIMENSIONS = 8;
	public const EncodeHintType DISABLE_ECI = 9;
	public const EncodeHintType DATA_MATRIX_SHAPE = 10;
	public const EncodeHintType MIN_SIZE = 11;
	public const EncodeHintType MAX_SIZE = 12;
	public const EncodeHintType CODE128_FORCE_CODESET_B = 13;
	public const EncodeHintType DATA_MATRIX_DEFAULT_ENCODATION = 14;
	public const EncodeHintType AZTEC_LAYERS = 15;
	public const EncodeHintType QR_VERSION = 16;
}
public enum SymbolShapeHint
{
	// Fields
	public const SymbolShapeHint FORCE_NONE = 0;
	public const SymbolShapeHint FORCE_SQUARE = 1;
	public const SymbolShapeHint FORCE_RECTANGLE = 2;
}
public enum PDF417ErrorCorrectionLevel
{
	// Fields
	public const PDF417ErrorCorrectionLevel L0 = 0;
	public const PDF417ErrorCorrectionLevel L1 = 1;
	public const PDF417ErrorCorrectionLevel L2 = 2;
	public const PDF417ErrorCorrectionLevel L3 = 3;
	public const PDF417ErrorCorrectionLevel L4 = 4;
	public const PDF417ErrorCorrectionLevel L5 = 5;
	public const PDF417ErrorCorrectionLevel L6 = 6;
	public const PDF417ErrorCorrectionLevel L7 = 7;
	public const PDF417ErrorCorrectionLevel L8 = 8;
}
public enum BarcodeFormat
{
	// Fields
	public const BarcodeFormat AZTEC = 1;
	public const BarcodeFormat CODABAR = 2;
	public const BarcodeFormat CODE_39 = 4;
	public const BarcodeFormat CODE_93 = 8;
	public const BarcodeFormat CODE_128 = 16;
	public const BarcodeFormat DATA_MATRIX = 32;
	public const BarcodeFormat EAN_8 = 64;
	public const BarcodeFormat EAN_13 = 128;
	public const BarcodeFormat ITF = 256;
	public const BarcodeFormat MAXICODE = 512;
	public const BarcodeFormat PDF_417 = 1024;
	public const BarcodeFormat QR_CODE = 2048;
	public const BarcodeFormat RSS_14 = 4096;
	public const BarcodeFormat RSS_EXPANDED = 8192;
	public const BarcodeFormat UPC_A = 16384;
	public const BarcodeFormat UPC_E = 32768;
	public const BarcodeFormat UPC_EAN_EXTENSION = 65536;
	public const BarcodeFormat MSI = 131072;
	public const BarcodeFormat PLESSEY = 262144;
	public const BarcodeFormat IMB = 524288;
	public const BarcodeFormat All_1D = 61918;
}
public enum XObjectChange
{
	// Fields
	public const XObjectChange Add = 0;
	public const XObjectChange Remove = 1;
	public const XObjectChange Name = 2;
	public const XObjectChange Value = 3;
}
public enum SaveOptions
{
	// Fields
	public const SaveOptions None = 0;
	public const SaveOptions DisableFormatting = 1;
	public const SaveOptions OmitDuplicateNamespaces = 2;
}
public enum LogFilter.FilterLevel
{
	// Fields
	public const LogFilter.FilterLevel Developer = 0;
	public const LogFilter.FilterLevel Debug = 1;
	public const LogFilter.FilterLevel Info = 2;
	public const LogFilter.FilterLevel Warn = 3;
	public const LogFilter.FilterLevel Error = 4;
	public const LogFilter.FilterLevel Fatal = 5;
	public const LogFilter.FilterLevel SetInScripting = -1;
}
public enum PlayerSpawnMethod
{
	// Fields
	public const PlayerSpawnMethod Random = 0;
	public const PlayerSpawnMethod RoundRobin = 1;
}
public enum NetworkMigrationManager.SceneChangeOption
{
	// Fields
	public const NetworkMigrationManager.SceneChangeOption StayInOnlineScene = 0;
	public const NetworkMigrationManager.SceneChangeOption SwitchToOfflineScene = 1;
}
public enum NetworkProximityChecker.CheckMethod
{
	// Fields
	public const NetworkProximityChecker.CheckMethod Physics3D = 0;
	public const NetworkProximityChecker.CheckMethod Physics2D = 1;
}
public enum NetworkTransform.TransformSyncMode
{
	// Fields
	public const NetworkTransform.TransformSyncMode SyncNone = 0;
	public const NetworkTransform.TransformSyncMode SyncTransform = 1;
	public const NetworkTransform.TransformSyncMode SyncRigidbody2D = 2;
	public const NetworkTransform.TransformSyncMode SyncRigidbody3D = 3;
	public const NetworkTransform.TransformSyncMode SyncCharacterController = 4;
}
public enum NetworkTransform.AxisSyncMode
{
	// Fields
	public const NetworkTransform.AxisSyncMode None = 0;
	public const NetworkTransform.AxisSyncMode AxisX = 1;
	public const NetworkTransform.AxisSyncMode AxisY = 2;
	public const NetworkTransform.AxisSyncMode AxisZ = 3;
	public const NetworkTransform.AxisSyncMode AxisXY = 4;
	public const NetworkTransform.AxisSyncMode AxisXZ = 5;
	public const NetworkTransform.AxisSyncMode AxisYZ = 6;
	public const NetworkTransform.AxisSyncMode AxisXYZ = 7;
}
public enum NetworkTransform.CompressionSyncMode
{
	// Fields
	public const NetworkTransform.CompressionSyncMode None = 0;
	public const NetworkTransform.CompressionSyncMode Low = 1;
	public const NetworkTransform.CompressionSyncMode High = 2;
}
public enum Version
{
	// Fields
	public const Version Current = 1;
}
public enum ChannelOption
{
	// Fields
	public const ChannelOption MaxPendingBuffers = 1;
	public const ChannelOption AllowFragmentation = 2;
	public const ChannelOption MaxPacketSize = 3;
}
public enum fsDataType
{
	// Fields
	public const fsDataType Array = 0;
	public const fsDataType Object = 1;
	public const fsDataType Double = 2;
	public const fsDataType Int64 = 3;
	public const fsDataType Boolean = 4;
	public const fsDataType String = 5;
	public const fsDataType Null = 6;
}
public enum fsMemberSerialization
{
	// Fields
	public const fsMemberSerialization OptIn = 0;
	public const fsMemberSerialization OptOut = 1;
	public const fsMemberSerialization Default = 2;
}
public enum CommentType
{
	// Fields
	public const CommentType None = 0;
	public const CommentType Info = 1;
	public const CommentType Warning = 2;
	public const CommentType Error = 3;
}
public enum VerifyPrefabTypeFlags
{
	// Fields
	public const VerifyPrefabTypeFlags None = 1;
	public const VerifyPrefabTypeFlags Prefab = 2;
	public const VerifyPrefabTypeFlags ModelPrefab = 4;
	public const VerifyPrefabTypeFlags PrefabInstance = 8;
	public const VerifyPrefabTypeFlags ModelPrefabInstance = 16;
	public const VerifyPrefabTypeFlags MissingPrefabInstance = 32;
	public const VerifyPrefabTypeFlags DisconnectedPrefabInstance = 64;
	public const VerifyPrefabTypeFlags DisconnectedModelPrefabInstance = 128;
}
public enum ReorderableListFlags
{
	// Fields
	public const ReorderableListFlags DisableReordering = 1;
	public const ReorderableListFlags HideAddButton = 2;
	public const ReorderableListFlags HideRemoveButtons = 4;
	public const ReorderableListFlags DisableContextMenu = 8;
	public const ReorderableListFlags DisableDuplicateCommand = 16;
	public const ReorderableListFlags DisableAutoFocus = 32;
	public const ReorderableListFlags ShowIndices = 64;
	public const ReorderableListFlags DisableClipping = 128;
}
public enum UseZip64
{
	// Fields
	public const UseZip64 Off = 0;
	public const UseZip64 On = 1;
	public const UseZip64 Dynamic = 2;
}
public enum CompressionMethod
{
	// Fields
	public const CompressionMethod Stored = 0;
	public const CompressionMethod Deflated = 8;
	public const CompressionMethod Deflate64 = 9;
	public const CompressionMethod BZip2 = 11;
	public const CompressionMethod WinZipAES = 99;
}
public enum PatchManager.VERSION
{
	// Fields
	public const PatchManager.VERSION LASTEST = 0;
	public const PatchManager.VERSION UPDATE = 1;
	public const PatchManager.VERSION ORIGINAL = 2;
}
public enum ValueType
{
	// Fields
	public const ValueType Integer = 0;
	public const ValueType Long = 1;
	public const ValueType Float = 2;
	public const ValueType Double = 3;
	public const ValueType StackReference = 4;
	public const ValueType StaticFieldReference = 5;
	public const ValueType FieldReference = 6;
	public const ValueType ChainFieldReference = 7;
	public const ValueType Object = 8;
	public const ValueType ValueType = 9;
	public const ValueType ArrayReference = 10;
}
public enum Code
{
	// Fields
	public const Code Ldsflda = 0;
	public const Code Stind_I8 = 1;
	public const Code Refanytype = 2;
	public const Code Conv_Ovf_U1_Un = 3;
	public const Code Ldind_Ref = 4;
	public const Code Ldelem_U4 = 5;
	public const Code Ldind_I1 = 6;
	public const Code Conv_Ovf_U8 = 7;
	public const Code Conv_R8 = 8;
	public const Code Stelem_I4 = 9;
	public const Code Ldelem_U1 = 10;
	public const Code Ldc_I8 = 11;
	public const Code Unaligned = 12;
	public const Code Blt = 13;
	public const Code Brtrue = 14;
	public const Code Conv_Ovf_I1_Un = 15;
	public const Code Stsfld = 16;
	public const Code Brfalse = 17;
	public const Code Stfld = 18;
	public const Code Endfinally = 19;
	public const Code Ldc_R4 = 20;
	public const Code Sub_Ovf_Un = 21;
	public const Code No = 22;
	public const Code Cpobj = 23;
	public const Code Rem_Un = 24;
	public const Code Stind_I1 = 25;
	public const Code Ldflda = 26;
	public const Code Ldelem_I4 = 27;
	public const Code Ldind_I = 28;
	public const Code Ldelem_U2 = 29;
	public const Code Ldc_R8 = 30;
	public const Code Mkrefany = 31;
	public const Code Sizeof = 32;
	public const Code Ldftn = 33;
	public const Code Stelem_Ref = 34;
	public const Code Conv_Ovf_U1 = 35;
	public const Code Stelem_I1 = 36;
	public const Code Ldind_I4 = 37;
	public const Code Stelem_Any = 38;
	public const Code Readonly = 39;
	public const Code Stind_R8 = 40;
	public const Code Ldind_U1 = 41;
	public const Code Localloc = 42;
	public const Code Refanyval = 43;
	public const Code Cgt = 44;
	public const Code Conv_Ovf_I2 = 45;
	public const Code Bge = 46;
	public const Code Add_Ovf_Un = 47;
	public const Code Br = 48;
	public const Code Conv_Ovf_I2_Un = 49;
	public const Code Blt_Un = 50;
	public const Code Jmp = 51;
	public const Code Conv_U1 = 52;
	public const Code Ldfld = 53;
	public const Code Neg = 54;
	public const Code Conv_R4 = 55;
	public const Code Initobj = 56;
	public const Code Beq = 57;
	public const Code Ldvirtftn = 58;
	public const Code Unbox_Any = 59;
	public const Code Shl = 60;
	public const Code Ldarga = 61;
	public const Code Stelem_R8 = 62;
	public const Code Bgt = 63;
	public const Code Clt = 64;
	public const Code Initblk = 65;
	public const Code Bgt_Un = 66;
	public const Code Rethrow = 67;
	public const Code Ldnull = 68;
	public const Code Endfilter = 69;
	public const Code Ldind_R8 = 70;
	public const Code Ldind_U4 = 71;
	public const Code Div = 72;
	public const Code Conv_Ovf_U2_Un = 73;
	public const Code Stelem_I8 = 74;
	public const Code Conv_I1 = 75;
	public const Code Ldelem_I = 76;
	public const Code Conv_Ovf_U8_Un = 77;
	public const Code Ldelema = 78;
	public const Code Or = 79;
	public const Code Conv_Ovf_U2 = 80;
	public const Code Nop = 81;
	public const Code Dup = 82;
	public const Code Div_Un = 83;
	public const Code Ldelem_Ref = 84;
	public const Code Ldelem_R4 = 85;
	public const Code Shr = 86;
	public const Code Leave = 87;
	public const Code Stelem_R4 = 88;
	public const Code Stelem_I = 89;
	public const Code Ldc_I4 = 90;
	public const Code Conv_Ovf_I8 = 91;
	public const Code Sub = 92;
	public const Code Ckfinite = 93;
	public const Code Ldelem_I1 = 94;
	public const Code Starg = 95;
	public const Code Tail = 96;
	public const Code Ldtoken = 97;
	public const Code Conv_I = 98;
	public const Code Pop = 99;
	public const Code Stelem_I2 = 100;
	public const Code Ldloca = 101;
	public const Code Conv_U4 = 102;
	public const Code And = 103;
	public const Code Ble_Un = 104;
	public const Code Stind_I2 = 105;
	public const Code Bne_Un = 106;
	public const Code Ldind_I2 = 107;
	public const Code Add = 108;
	public const Code Volatile = 109;
	public const Code Ldelem_I2 = 110;
	public const Code Bge_Un = 111;
	public const Code Mul_Ovf_Un = 112;
	public const Code Throw = 113;
	public const Code Conv_R_Un = 114;
	public const Code Conv_I2 = 115;
	public const Code CallExtern = 116;
	public const Code Ldobj = 117;
	public const Code Add_Ovf = 118;
	public const Code Cpblk = 119;
	public const Code Conv_Ovf_I_Un = 120;
	public const Code Shr_Un = 121;
	public const Code Conv_I4 = 122;
	public const Code Newarr = 123;
	public const Code Conv_U8 = 124;
	public const Code Ldelem_R8 = 125;
	public const Code Ldelem_Any = 126;
	public const Code Conv_Ovf_I4 = 127;
	public const Code Ldarg = 128;
	public const Code Conv_U = 129;
	public const Code Conv_Ovf_U4_Un = 130;
	public const Code Ldloc = 131;
	public const Code Conv_Ovf_I1 = 132;
	public const Code Rem = 133;
	public const Code Not = 134;
	public const Code Ldind_U2 = 135;
	public const Code Isinst = 136;
	public const Code Conv_Ovf_I = 137;
	public const Code Stind_Ref = 138;
	public const Code Conv_Ovf_I4_Un = 139;
	public const Code Stobj = 140;
	public const Code Newobj = 141;
	public const Code Ceq = 142;
	public const Code Ldind_R4 = 143;
	public const Code Stloc = 144;
	public const Code Box = 145;
	public const Code Sub_Ovf = 146;
	public const Code Unbox = 147;
	public const Code Conv_Ovf_U4 = 148;
	public const Code Ldstr = 149;
	public const Code Ldelem_I8 = 150;
	public const Code Ldind_I8 = 151;
	public const Code Callvirt = 152;
	public const Code Castclass = 153;
	public const Code Arglist = 154;
	public const Code Ldsfld = 155;
	public const Code Mul = 156;
	public const Code Stind_I4 = 157;
	public const Code Ldtype = 158;
	public const Code Conv_Ovf_U_Un = 159;
	public const Code Constrained = 160;
	public const Code Mul_Ovf = 161;
	public const Code Conv_Ovf_U = 162;
	public const Code Conv_U2 = 163;
	public const Code StackSpace = 164;
	public const Code Break = 165;
	public const Code Clt_Un = 166;
	public const Code Conv_Ovf_I8_Un = 167;
	public const Code Stind_R4 = 168;
	public const Code Ldlen = 169;
	public const Code Ret = 170;
	public const Code Stind_I = 171;
	public const Code Cgt_Un = 172;
	public const Code Xor = 173;
	public const Code Switch = 174;
	public const Code Conv_I8 = 175;
	public const Code Call = 176;
	public const Code Newanon = 177;
	public const Code Ble = 178;
}
public enum ExceptionHandlerType
{
	// Fields
	public const ExceptionHandlerType Catch = 0;
	public const ExceptionHandlerType Filter = 1;
	public const ExceptionHandlerType Finally = 2;
	public const ExceptionHandlerType Fault = 4;
}
public enum Il2CppHideMetadataTypes
{
	// Fields
	public const Il2CppHideMetadataTypes None = 0;
	public const Il2CppHideMetadataTypes Standard = 1;
	public const Il2CppHideMetadataTypes Methods = 2;
	public const Il2CppHideMetadataTypes Properties = 4;
	public const Il2CppHideMetadataTypes Fields = 8;
	public const Il2CppHideMetadataTypes Events = 16;
	public const Il2CppHideMetadataTypes All = 31;
}
public enum Option
{
	// Fields
	public const Option NullChecks = 1;
	public const Option ArrayBoundsChecks = 2;
	public const Option DivideByZeroChecks = 3;
}
public enum GyroType
{
	// Fields
	public const GyroType DEFAULT = 0;
	public const GyroType ATTITUDE = 1101;
	public const GyroType ROTATIONRATE = 1102;
}
public enum KibanaCode
{
	// Fields
	public const KibanaCode CodeSuccess = 0;
	public const KibanaCode CodeNet4xx = -1;
	public const KibanaCode CodeNet5xx = -2;
	public const KibanaCode CodeNetOther = -3;
	public const KibanaCode CodeNetError = -4;
}
public enum KibanaLogLevel
{
	// Fields
	public const KibanaLogLevel Trace = 0;
	public const KibanaLogLevel Debug = 1;
	public const KibanaLogLevel Info = 2;
	public const KibanaLogLevel Warning = 3;
	public const KibanaLogLevel Error = 4;
}
public enum ActionIdType
{
	// Fields
	public const ActionIdType sdkInvoke = 99;
	public const ActionIdType main = 100;
	public const ActionIdType register = 101;
	public const ActionIdType login = 102;
	public const ActionIdType active = 103;
	public const ActionIdType bind = 1001;
	public const ActionIdType verify = 1003;
	public const ActionIdType realname = 1004;
	public const ActionIdType oauth = 1005;
	public const ActionIdType device = 1007;
	public const ActionIdType pay = 1008;
	public const ActionIdType payment = 1009;
	public const ActionIdType realuser = 1010;
	public const ActionIdType restriction = 1020;
}
public enum ReportType
{
	// Fields
	public const ReportType Default = 0;
	public const ReportType RegisterPhone = 1;
	public const ReportType RegisterPSN = 2;
	public const ReportType RegisterMailOverSea = 1;
	public const ReportType LoginPhone = 1;
	public const ReportType LoginAccount = 2;
	public const ReportType LoginAuto = 3;
	public const ReportType LoginTapTap = 4;
	public const ReportType LoginPSN = 5;
	public const ReportType LoginSteam = 6;
	public const ReportType LoginTapTapAuto = 7;
	public const ReportType LoginPSNAuto = 8;
	public const ReportType LoginSteamAuto = 9;
	public const ReportType LoginAccountOverSea = 1;
	public const ReportType LoginAutoOverSea = 2;
	public const ReportType LoginFaceBook = 3;
	public const ReportType LoginTwitter = 4;
	public const ReportType LoginPSNOverSea = 8;
	public const ReportType LoginSteamOverSea = 9;
	public const ReportType BindTapTap = 1;
	public const ReportType BindPSN = 2;
	public const ReportType BindMailOverSea = 1;
	public const ReportType BindOtherDevice = 3;
	public const ReportType VerifyNewDevice = 1;
	public const ReportType VerifySmallAccount = 2;
	public const ReportType RealNameFirst = 1;
	public const ReportType RealNameSecond = 2;
	public const ReportType RealUser = 1;
	public const ReportType PayAli = 1;
	public const ReportType PayWeixin = 2;
	public const ReportType PayHuabei = 3;
	public const ReportType PayApple = 4;
	public const ReportType PayPS4 = 5;
	public const ReportType PayPS5 = 6;
	public const ReportType PayPayPal = 3;
	public const ReportType PayVisa = 4;
	public const ReportType PayExpress = 5;
	public const ReportType PayJCB = 6;
	public const ReportType PayMaster = 7;
	public const ReportType PayPS4OverSea = 8;
	public const ReportType PayPS5OverSea = 9;
	public const ReportType PayEpicOverSea = 11;
	public const ReportType PayEmbedded = 12;
	public const ReportType PayGooglePC = 13;
	public const ReportType PayDirect = 14;
	public const ReportType PaymentNotMatch = 1;
	public const ReportType PaymentInvaliedToken = 2;
	public const ReportType GoogleOAuth = 1;
	public const ReportType GoogleOAuthConfirm = 2;
	public const ReportType RestrictionPay = 1;
	public const ReportType RestrictionTime = 2;
	public const ReportType OtherDeviceLogin = 1;
}
public enum ReportStage
{
	// Fields
	public const ReportStage Default = 0;
	public const ReportStage Init = 1;
	public const ReportStage MainLogin = 2;
	public const ReportStage ChannelLogin = 3;
	public const ReportStage ChannelLoginSucc = 4;
	public const ReportStage ChannelLoginFail = 5;
	public const ReportStage ComboLogin = 6;
	public const ReportStage ComboLoginSucc = 7;
	public const ReportStage ComboLoginFail = 8;
	public const ReportStage EnterGame = 9;
	public const ReportStage EnterGameSucc = 10;
	public const ReportStage EnterGameFail = 11;
	public const ReportStage RegisterShow = 1;
	public const ReportStage RegisterGetCode = 2;
	public const ReportStage RegisterGetCodeSucc = 3;
	public const ReportStage RegisterGetCodeFail = 4;
	public const ReportStage Register = 5;
	public const ReportStage RegisterSucc = 6;
	public const ReportStage RegisterFail = 7;
	public const ReportStage LoginShow = 1;
	public const ReportStage LoginGetCode = 2;
	public const ReportStage LoginGetCodeSucc = 3;
	public const ReportStage LoginGetCodeFail = 4;
	public const ReportStage Login = 5;
	public const ReportStage LoginSucc = 6;
	public const ReportStage LoginFail = 7;
	public const ReportStage LoginShowOverSea = 1;
	public const ReportStage LoginOverSea = 2;
	public const ReportStage LoginSuccOverSea = 3;
	public const ReportStage LoginFailOverSea = 4;
	public const ReportStage ActiveShow = 1;
	public const ReportStage Active = 2;
	public const ReportStage ActiveSucc = 3;
	public const ReportStage ActiveFail = 4;
	public const ReportStage ActiveClose = 5;
	public const ReportStage BindShow = 1;
	public const ReportStage BindGetCode = 2;
	public const ReportStage BindGetCodeSucc = 3;
	public const ReportStage BindGetCodeFail = 4;
	public const ReportStage Bind = 5;
	public const ReportStage BindSucc = 6;
	public const ReportStage BindFail = 7;
	public const ReportStage BindVerifyPhoneShowOverSea = 1;
	public const ReportStage BindGetPhoneCodeOverSea = 2;
	public const ReportStage BindGetPhoneCodeSuccOverSea = 3;
	public const ReportStage BindGetPhoneCodeFailOverSea = 4;
	public const ReportStage BindVerifyPhoneOverSea = 5;
	public const ReportStage BindVerifyPhoneSuccOverSea = 6;
	public const ReportStage BindVerifyPhoneFailOverSea = 7;
	public const ReportStage BindMailShowOverSea = 8;
	public const ReportStage BindGetMailCodeOverSea = 9;
	public const ReportStage BindGetMailCodeSuccOverSea = 10;
	public const ReportStage BindGetMailCodeFailOverSea = 11;
	public const ReportStage BindOverSea = 12;
	public const ReportStage BindSuccOverSea = 13;
	public const ReportStage BindFailOverSea = 14;
	public const ReportStage BindVerifyPhoneCloseOverSea = 15;
	public const ReportStage BindMailCloseOverSea = 16;
	public const ReportStage VerifyShowMail = 1;
	public const ReportStage VerifyGetMailCode = 2;
	public const ReportStage VerifyGetMailCodeSucc = 3;
	public const ReportStage VerifyGetMailCodeFail = 4;
	public const ReportStage VerifyMail = 5;
	public const ReportStage VerifyMailSucc = 6;
	public const ReportStage VerifyMailFail = 7;
	public const ReportStage VerifyShowPhone = 8;
	public const ReportStage VerifyGetPhoneCode = 9;
	public const ReportStage VerifyGetPhoneCodeSucc = 10;
	public const ReportStage VerifyGetPhoneCodeFail = 11;
	public const ReportStage Verify = 12;
	public const ReportStage VerifySucc = 13;
	public const ReportStage VerifyFail = 14;
	public const ReportStage RealNameShow = 1;
	public const ReportStage RealNamePhoneShow = 2;
	public const ReportStage RealNameGetPhoneCode = 3;
	public const ReportStage RealNameGetPhoneCodeSucc = 4;
	public const ReportStage RealNameGetPhoneCodeFail = 5;
	public const ReportStage RealNameVerifyPhone = 6;
	public const ReportStage RealNameVerifyPhoneSucc = 7;
	public const ReportStage RealNameVerifyPhoneFail = 8;
	public const ReportStage RealNameMailShow = 9;
	public const ReportStage RealNameGetMailCode = 10;
	public const ReportStage RealNameGetMailCodeSucc = 11;
	public const ReportStage RealNameGetMailCodeFail = 12;
	public const ReportStage RealNameVerifyMail = 13;
	public const ReportStage RealNameVerifyMailSucc = 14;
	public const ReportStage RealNameVerifyMailFail = 15;
	public const ReportStage RealName = 16;
	public const ReportStage RealNameSucc = 17;
	public const ReportStage RealNameFail = 18;
	public const ReportStage RealUserShow = 1;
	public const ReportStage RealUserCheckAgreement = 2;
	public const ReportStage RealUserStartVerify = 3;
	public const ReportStage RealUserAliSDKCall = 4;
	public const ReportStage RealUserAliSDKVerifySucc = 5;
	public const ReportStage RealUserVerifySucc = 6;
	public const ReportStage RealUserVerifyFail = 7;
	public const ReportStage RealUserAliSDKFail = 8;
	public const ReportStage RealUserBackShow = 9;
	public const ReportStage RealUserBackSure = 10;
	public const ReportStage RealUserNotVerify = 11;
	public const ReportStage RealUserContinueLogin = 12;
	public const ReportStage RealUserShowRegular = 13;
	public const ReportStage RealUserShowHelp = 14;
	public const ReportStage RealUserVerified = 15;
	public const ReportStage RealUserMYSNotVerify = 16;
	public const ReportStage RealUserMYSContinueLogin = 17;
	public const ReportStage RealUserMYSBack = 18;
	public const ReportStage RealUserMYSHelp = 19;
	public const ReportStage PayGetProducts = 1;
	public const ReportStage PayGetProductsSucc = 2;
	public const ReportStage PayGetProductsFail = 3;
	public const ReportStage Pay = 4;
	public const ReportStage PayShow = 5;
	public const ReportStage PayCreateOrder = 6;
	public const ReportStage PayCreateOrderSucc = 7;
	public const ReportStage PayCreateOrderFail = 8;
	public const ReportStage PaySucc = 9;
	public const ReportStage PayFail = 10;
	public const ReportStage PayWebTimeout = 11;
	public const ReportStage PaymentShowAlert = 1;
	public const ReportStage PaymentRelogin = 2;
	public const ReportStage GoogleOAuthShow = 1;
	public const ReportStage GoogleOAuthGoToAuth = 2;
	public const ReportStage GoogleOAuthBack = 3;
	public const ReportStage GoogleOAuthBackLogin = 4;
	public const ReportStage GoogleOAuthContinueAuth = 5;
	public const ReportStage GoogleOAuthFinish = 6;
	public const ReportStage GoogleOAuthSuccess = 7;
	public const ReportStage GoogleOAuthHttpServerError = 8;
	public const ReportStage GoogleOAuthUserNoAction = 9;
	public const ReportStage GoogleOAuthUserCancle = 10;
	public const ReportStage GoogleOAuthPermissionMiss = 11;
	public const ReportStage GoogleOAuthServerFailed = 12;
	public const ReportStage GoogleOAuthServerPermissionMiss = 13;
	public const ReportStage GoogleOAuthShowHelp = 14;
	public const ReportStage GoogleOAuthWebAuthFinish = 15;
	public const ReportStage RestrictionShow = 1;
	public const ReportStage RestrictionClose = 2;
	public const ReportStage RestrictionContinue = 3;
	public const ReportStage RestrictionContinueAndNotTip = 4;
	public const ReportStage OtherDeviceShow = 1;
	public const ReportStage OtherDeviceBind = 2;
	public const ReportStage OtherDeviceClose = 3;
	public const ReportStage OtherDeviceBack = 4;
	public const ReportStage OtherDeviceKnown = 5;
}
public enum SDKReportType
{
	// Fields
	public const SDKReportType Default = 0;
	public const SDKReportType Performance = 1;
	public const SDKReportType CNPayPlat = 2;
}
public enum EnvType
{
	// Fields
	public const EnvType PROD_CN = 0;
	public const EnvType SANDBOX_CN = 1;
	public const EnvType PROD_OVERSEA = 2;
	public const EnvType SANDBOX_OVERSEA = 3;
	public const EnvType PROD_CN_PRE = 4;
	public const EnvType PROD_OVERSEA_PRE = 5;
	public const EnvType TEST_CN = 6;
	public const EnvType TEST_OVERSEA = 7;
	public const EnvType PET_CN = 8;
	public const EnvType BETA_CN = 9;
	public const EnvType BETA_CN_PRE = 10;
	public const EnvType BETA_OVERSEA = 11;
	public const EnvType PET_OS = 12;
	public const EnvType HOTFIX_CN = 19;
	public const EnvType HOTFIX_OVERSEA = 20;
}
public enum SceneType
{
	// Fields
	public const SceneType S_NORMAL = 0;
	public const SceneType S_TEMPLE = 1;
	public const SceneType S_USER = 2;
	public const SceneType S_ACCOUNT = 3;
}
public enum DialogType
{
	// Fields
	public const DialogType DEFAULT = 0;
	public const DialogType ACCOUNT = 1;
	public const DialogType PHONE = 2;
	public const DialogType QRCODE = 3;
	public const DialogType TAPTAP = 4;
}
public enum GrantType
{
	// Fields
	public const GrantType Way_BindMobile = 0;
	public const GrantType Way_SafeMobile = 1;
	public const GrantType Way_Email = 2;
}
public enum ChannelType
{
	// Fields
	public const ChannelType Official = 1;
	public const ChannelType MiHoYoSONY = 2;
	public const ChannelType XiaoMi = 11;
	public const ChannelType KuPai = 12;
	public const ChannelType YYB = 13;
	public const ChannelType Bili = 14;
	public const ChannelType HW = 15;
	public const ChannelType MZ = 16;
	public const ChannelType QiHu = 17;
	public const ChannelType OPPO = 18;
	public const ChannelType VIVO = 19;
	public const ChannelType ALi = 20;
	public const ChannelType WDJ = 21;
	public const ChannelType Lenovo = 22;
	public const ChannelType JinLi = 23;
	public const ChannelType BaiDu = 25;
	public const ChannelType DL = 26;
	public const ChannelType WeGame = 27;
}
public enum SubChannelType
{
	// Fields
	public const SubChannelType Default = 0;
	public const SubChannelType Official = 1;
	public const SubChannelType NoTapTap = 2;
	public const SubChannelType Epic = 3;
	public const SubChannelType SamSung = 4;
	public const SubChannelType Steam = 5;
	public const SubChannelType Google = 6;
	public const SubChannelType MAX = 7;
}
public enum ClientType
{
	// Fields
	public const ClientType UNKNOWN = 0;
	public const ClientType IOS = 1;
	public const ClientType ANDROID = 2;
	public const ClientType PC = 3;
	public const ClientType WEB = 4;
	public const ClientType WAP = 5;
	public const ClientType PS4 = 6;
	public const ClientType PS5 = 11;
}
public enum LOGIN_TYPE
{
	// Fields
	public const LOGIN_TYPE PHONE_MESSAGE = 0;
	public const LOGIN_TYPE ACCOUNT_PASSWORD = 1;
	public const LOGIN_TYPE GUEST = 2;
	public const LOGIN_TYPE QRCODE = 3;
	public const LOGIN_TYPE FACEBOOK = 4;
	public const LOGIN_TYPE TWITTER = 5;
	public const LOGIN_TYPE BBS = 6;
	public const LOGIN_TYPE SONY = 7;
	public const LOGIN_TYPE TapTap = 8;
	public const LOGIN_TYPE BiliBili = 9;
	public const LOGIN_TYPE WeGame = 10;
	public const LOGIN_TYPE Steam = 11;
}
public enum LoginPattern
{
	// Fields
	public const LoginPattern TOKEN = 0;
	public const LoginPattern PASSWORD = 1;
	public const LoginPattern CAPTCHA = 2;
	public const LoginPattern QRCODE = 3;
	public const LoginPattern THIRDPATY = 4;
}
public enum RealNameOperation
{
	// Fields
	public const RealNameOperation None = 0;
	public const RealNameOperation BindRealname = 1;
	public const RealNameOperation ModifyRealname = 2;
	public const RealNameOperation BindRealperson = 3;
	public const RealNameOperation VerifyRealperson = 4;
}
public enum REAL_NAME_DIALOG_TYPE
{
	// Fields
	public const REAL_NAME_DIALOG_TYPE REGISTER = 0;
	public const REAL_NAME_DIALOG_TYPE BIND = 1;
	public const REAL_NAME_DIALOG_TYPE BUY = 2;
}
public enum BIND_TYPE
{
	// Fields
	public const BIND_TYPE NORMAL = 0;
	public const BIND_TYPE PAY = 1;
	public const BIND_TYPE TAPTAP = 2;
}
public enum PayPlat
{
	// Fields
	public const PayPlat ALIPAY = 0;
	public const PayPlat WEIXIN = 1;
}
public enum PayVendor
{
	// Fields
	public const PayVendor VISA = 0;
	public const PayVendor ECMC = 1;
	public const PayVendor AMEX = 2;
	public const PayVendor JCB = 3;
	public const PayVendor PAYPAL = 4;
}
public enum OldPayPlat
{
	// Fields
	public const OldPayPlat other = 0;
	public const OldPayPlat redirect = 1;
}
public enum CNPayNativeType
{
	// Fields
	public const CNPayNativeType Mixed = 0;
	public const CNPayNativeType Expand = 1;
	public const CNPayNativeType Fold = 2;
}
public enum CNPayPlatType
{
	// Fields
	public const CNPayPlatType none = 0;
	public const CNPayPlatType wechatpay = 1;
	public const CNPayPlatType alipay = 2;
	public const CNPayPlatType pcredit = 3;
	public const CNPayPlatType unionpay = 4;
}
public enum ProtocolType
{
	// Fields
	public const ProtocolType Default = 0;
	public const ProtocolType Update = 1;
	public const ProtocolType MarketingUpdate = 2;
}
public enum ThirdpartyLoginType
{
	// Fields
	public const ThirdpartyLoginType TK_INVALID_TOKEN = 0;
	public const ThirdpartyLoginType TK_THIRDPARTY_TOKEN = 1;
	public const ThirdpartyLoginType TK_GAME_TOKEN = 2;
}
public enum PS_IssuerID
{
	// Fields
	public const PS_IssuerID Invalid = -1;
	public const PS_IssuerID Development = 1;
	public const PS_IssuerID Certification = 8;
	public const PS_IssuerID Live = 256;
}
public enum PSCommerceDialogCheckoutResult
{
	// Fields
	public const PSCommerceDialogCheckoutResult ErrorOccured = -1;
	public const PSCommerceDialogCheckoutResult Closed = 0;
	public const PSCommerceDialogCheckoutResult UserCanceled = 1;
	public const PSCommerceDialogCheckoutResult Purchased = 2;
}
public enum JSONTextMode
{
	// Fields
	public const JSONTextMode Compact = 0;
	public const JSONTextMode Indent = 1;
}
public enum Confirm.ConfirmResult
{
	// Fields
	public const Confirm.ConfirmResult Ok = 0;
	public const Confirm.ConfirmResult Cancel = 1;
}
public enum Alert.AlertResult
{
	// Fields
	public const Alert.AlertResult Sure = 0;
	public const Alert.AlertResult Close = 1;
}
public enum PopImageType
{
	// Fields
	public const PopImageType Default = 0;
	public const PopImageType Once = 1;
	public const PopImageType Daily = 2;
	public const PopImageType Always = 3;
}
public enum GoogleOAuthServer.AuthStatus
{
	// Fields
	public const GoogleOAuthServer.AuthStatus AuthHttpServerError = -1;
	public const GoogleOAuthServer.AuthStatus AuthUserNoAction = 0;
	public const GoogleOAuthServer.AuthStatus AuthError = 1;
	public const GoogleOAuthServer.AuthStatus AuthMalformed = 2;
	public const GoogleOAuthServer.AuthStatus AuthPermissionMiss = 3;
	public const GoogleOAuthServer.AuthStatus AuthFinish = 4;
}
public enum NativeEditBox.ReturnKeyType
{
	// Fields
	public const NativeEditBox.ReturnKeyType Default = 0;
	public const NativeEditBox.ReturnKeyType Next = 1;
	public const NativeEditBox.ReturnKeyType Done = 2;
	public const NativeEditBox.ReturnKeyType Send = 3;
	public const NativeEditBox.ReturnKeyType Go = 4;
}
public enum NativeGallery.PermissionType
{
	// Fields
	public const NativeGallery.PermissionType Read = 0;
	public const NativeGallery.PermissionType Write = 1;
}
public enum NativeGallery.Permission
{
	// Fields
	public const NativeGallery.Permission Denied = 0;
	public const NativeGallery.Permission Granted = 1;
	public const NativeGallery.Permission ShouldAsk = 2;
}
public enum NativeGallery.MediaType
{
	// Fields
	public const NativeGallery.MediaType Image = 1;
	public const NativeGallery.MediaType Video = 2;
	public const NativeGallery.MediaType Audio = 4;
}
public enum NotifyCollectionChangedAction
{
	// Fields
	public const NotifyCollectionChangedAction Add = 0;
	public const NotifyCollectionChangedAction Remove = 1;
	public const NotifyCollectionChangedAction Replace = 2;
	public const NotifyCollectionChangedAction Move = 3;
	public const NotifyCollectionChangedAction Reset = 4;
}
public enum ConstructorHandling
{
	// Fields
	public const ConstructorHandling Default = 0;
	public const ConstructorHandling AllowNonPublicDefaultConstructor = 1;
}
public enum DateFormatHandling
{
	// Fields
	public const DateFormatHandling IsoDateFormat = 0;
	public const DateFormatHandling MicrosoftDateFormat = 1;
}
public enum DateParseHandling
{
	// Fields
	public const DateParseHandling None = 0;
	public const DateParseHandling DateTime = 1;
	public const DateParseHandling DateTimeOffset = 2;
}
public enum DateTimeZoneHandling
{
	// Fields
	public const DateTimeZoneHandling Local = 0;
	public const DateTimeZoneHandling Utc = 1;
	public const DateTimeZoneHandling Unspecified = 2;
	public const DateTimeZoneHandling RoundtripKind = 3;
}
public enum FloatFormatHandling
{
	// Fields
	public const FloatFormatHandling String = 0;
	public const FloatFormatHandling Symbol = 1;
	public const FloatFormatHandling DefaultValue = 2;
}
public enum FloatParseHandling
{
	// Fields
	public const FloatParseHandling Double = 0;
	public const FloatParseHandling Decimal = 1;
}
public enum Formatting
{
	// Fields
	public const Formatting None = 0;
	public const Formatting Indented = 1;
}
public enum MetadataPropertyHandling
{
	// Fields
	public const MetadataPropertyHandling Default = 0;
	public const MetadataPropertyHandling ReadAhead = 1;
	public const MetadataPropertyHandling Ignore = 2;
}
public enum StringEscapeHandling
{
	// Fields
	public const StringEscapeHandling Default = 0;
	public const StringEscapeHandling EscapeNonAscii = 1;
	public const StringEscapeHandling EscapeHtml = 2;
}
public enum Required
{
	// Fields
	public const Required Default = 0;
	public const Required AllowNull = 1;
	public const Required Always = 2;
	public const Required DisallowNull = 3;
}
public enum PreserveReferencesHandling
{
	// Fields
	public const PreserveReferencesHandling None = 0;
	public const PreserveReferencesHandling Objects = 1;
	public const PreserveReferencesHandling Arrays = 2;
	public const PreserveReferencesHandling All = 3;
}
public enum DefaultValueHandling
{
	// Fields
	public const DefaultValueHandling Include = 0;
	public const DefaultValueHandling Ignore = 1;
	public const DefaultValueHandling Populate = 2;
	public const DefaultValueHandling IgnoreAndPopulate = 3;
}
public enum MemberSerialization
{
	// Fields
	public const MemberSerialization OptOut = 0;
	public const MemberSerialization OptIn = 1;
	public const MemberSerialization Fields = 2;
}
public enum ObjectCreationHandling
{
	// Fields
	public const ObjectCreationHandling Auto = 0;
	public const ObjectCreationHandling Reuse = 1;
	public const ObjectCreationHandling Replace = 2;
}
public enum MissingMemberHandling
{
	// Fields
	public const MissingMemberHandling Ignore = 0;
	public const MissingMemberHandling Error = 1;
}
public enum NullValueHandling
{
	// Fields
	public const NullValueHandling Include = 0;
	public const NullValueHandling Ignore = 1;
}
public enum ReferenceLoopHandling
{
	// Fields
	public const ReferenceLoopHandling Error = 0;
	public const ReferenceLoopHandling Ignore = 1;
	public const ReferenceLoopHandling Serialize = 2;
}
public enum TypeNameHandling
{
	// Fields
	public const TypeNameHandling None = 0;
	public const TypeNameHandling Objects = 1;
	public const TypeNameHandling Arrays = 2;
	public const TypeNameHandling All = 3;
	public const TypeNameHandling Auto = 4;
}
public enum JsonToken
{
	// Fields
	public const JsonToken None = 0;
	public const JsonToken StartObject = 1;
	public const JsonToken StartArray = 2;
	public const JsonToken StartConstructor = 3;
	public const JsonToken PropertyName = 4;
	public const JsonToken Comment = 5;
	public const JsonToken Raw = 6;
	public const JsonToken Integer = 7;
	public const JsonToken Float = 8;
	public const JsonToken String = 9;
	public const JsonToken Boolean = 10;
	public const JsonToken Null = 11;
	public const JsonToken Undefined = 12;
	public const JsonToken EndObject = 13;
	public const JsonToken EndArray = 14;
	public const JsonToken EndConstructor = 15;
	public const JsonToken Date = 16;
	public const JsonToken Bytes = 17;
}
public enum WriteState
{
	// Fields
	public const WriteState Error = 0;
	public const WriteState Closed = 1;
	public const WriteState Object = 2;
	public const WriteState Array = 3;
	public const WriteState Constructor = 4;
	public const WriteState Property = 5;
	public const WriteState Start = 6;
}
public enum CommentHandling
{
	// Fields
	public const CommentHandling Ignore = 0;
	public const CommentHandling Load = 1;
}
public enum LineInfoHandling
{
	// Fields
	public const LineInfoHandling Ignore = 0;
	public const LineInfoHandling Load = 1;
}
public enum MergeArrayHandling
{
	// Fields
	public const MergeArrayHandling Concat = 0;
	public const MergeArrayHandling Union = 1;
	public const MergeArrayHandling Replace = 2;
	public const MergeArrayHandling Merge = 3;
}
public enum MergeNullValueHandling
{
	// Fields
	public const MergeNullValueHandling Ignore = 0;
	public const MergeNullValueHandling Merge = 1;
}
public enum JTokenType
{
	// Fields
	public const JTokenType None = 0;
	public const JTokenType Object = 1;
	public const JTokenType Array = 2;
	public const JTokenType Constructor = 3;
	public const JTokenType Property = 4;
	public const JTokenType Comment = 5;
	public const JTokenType Integer = 6;
	public const JTokenType Float = 7;
	public const JTokenType String = 8;
	public const JTokenType Boolean = 9;
	public const JTokenType Null = 10;
	public const JTokenType Undefined = 11;
	public const JTokenType Date = 12;
	public const JTokenType Raw = 13;
	public const JTokenType Bytes = 14;
	public const JTokenType Guid = 15;
	public const JTokenType Uri = 16;
	public const JTokenType TimeSpan = 17;
}
public enum SerializationTypeAttribute.SerializationType
{
	// Fields
	public const SerializationTypeAttribute.SerializationType Default = 0;
	public const SerializationTypeAttribute.SerializationType Object = 1;
}
public enum ControllerSetSelector.Type
{
	// Fields
	public const ControllerSetSelector.Type All = 0;
	public const ControllerSetSelector.Type ControllerType = 1;
	public const ControllerSetSelector.Type HardwareType = 2;
	public const ControllerSetSelector.Type ControllerTemplateType = 3;
	public const ControllerSetSelector.Type PersistentControllerInstance = 4;
	public const ControllerSetSelector.Type SessionControllerInstance = 5;
}
public enum CustomControllerElementSelector.ElementType
{
	// Fields
	public const CustomControllerElementSelector.ElementType Axis = 0;
	public const CustomControllerElementSelector.ElementType Button = 1;
}
public enum CustomControllerElementSelector.SelectorType
{
	// Fields
	public const CustomControllerElementSelector.SelectorType Name = 0;
	public const CustomControllerElementSelector.SelectorType Index = 1;
	public const CustomControllerElementSelector.SelectorType Id = 2;
}
public enum TiltControl.TiltDirection
{
	// Fields
	public const TiltControl.TiltDirection Both = 0;
	public const TiltControl.TiltDirection Horizontal = 1;
	public const TiltControl.TiltDirection Forward = 2;
}
public enum RotateAroundAxis.Speed
{
	// Fields
	public const RotateAroundAxis.Speed Stopped = 0;
	public const RotateAroundAxis.Speed Slow = 1;
	public const RotateAroundAxis.Speed Fast = 2;
}
public enum RotateAroundAxis.RotationAxis
{
	// Fields
	public const RotateAroundAxis.RotationAxis X = 0;
	public const RotateAroundAxis.RotationAxis Y = 1;
	public const RotateAroundAxis.RotationAxis Z = 2;
}
public enum TouchInteractable.InteractionState
{
	// Fields
	public const TouchInteractable.InteractionState Normal = 0;
	public const TouchInteractable.InteractionState Highlighted = 1;
	public const TouchInteractable.InteractionState Pressed = 2;
	public const TouchInteractable.InteractionState Disabled = 3;
}
public enum TouchInteractable.TransitionTypeFlags
{
	// Fields
	public const TouchInteractable.TransitionTypeFlags None = 0;
	public const TouchInteractable.TransitionTypeFlags ColorTint = 1;
	public const TouchInteractable.TransitionTypeFlags SpriteSwap = 2;
	public const TouchInteractable.TransitionTypeFlags Animation = 4;
}
public enum TouchInteractable.MouseButtonFlags
{
	// Fields
	public const TouchInteractable.MouseButtonFlags None = 0;
	public const TouchInteractable.MouseButtonFlags LeftButton = 1;
	public const TouchInteractable.MouseButtonFlags RightButton = 2;
	public const TouchInteractable.MouseButtonFlags MiddleButton = 4;
	public const TouchInteractable.MouseButtonFlags AnyButton = -1;
}
public enum TouchJoystick.AxisDirection
{
	// Fields
	public const TouchJoystick.AxisDirection Both = 0;
	public const TouchJoystick.AxisDirection Horizontal = 1;
	public const TouchJoystick.AxisDirection Vertical = 2;
}
public enum TouchJoystick.JoystickMode
{
	// Fields
	public const TouchJoystick.JoystickMode Analog = 0;
	public const TouchJoystick.JoystickMode Digital = 1;
}
public enum TouchJoystick.SnapDirections
{
	// Fields
	public const TouchJoystick.SnapDirections None = 0;
	public const TouchJoystick.SnapDirections Four = 4;
	public const TouchJoystick.SnapDirections Eight = 8;
	public const TouchJoystick.SnapDirections Sixteen = 16;
	public const TouchJoystick.SnapDirections ThirtyTwo = 32;
	public const TouchJoystick.SnapDirections SixtyFour = 64;
}
public enum TouchJoystick.StickBounds
{
	// Fields
	public const TouchJoystick.StickBounds Circle = 0;
	public const TouchJoystick.StickBounds Square = 1;
}
public enum TouchButton.ButtonType
{
	// Fields
	public const TouchButton.ButtonType Standard = 0;
	public const TouchButton.ButtonType ToggleSwitch = 1;
}
public enum TouchPad.AxisDirection
{
	// Fields
	public const TouchPad.AxisDirection Both = 0;
	public const TouchPad.AxisDirection Horizontal = 1;
	public const TouchPad.AxisDirection Vertical = 2;
}
public enum TouchPad.TouchPadMode
{
	// Fields
	public const TouchPad.TouchPadMode Delta = 0;
	public const TouchPad.TouchPadMode ScreenPosition = 1;
	public const TouchPad.TouchPadMode VectorFromCenter = 2;
	public const TouchPad.TouchPadMode VectorFromInitialTouch = 3;
}
public enum TouchPad.ValueFormat
{
	// Fields
	public const TouchPad.ValueFormat Pixels = 0;
	public const TouchPad.ValueFormat Screen = 1;
	public const TouchPad.ValueFormat Physical = 2;
	public const TouchPad.ValueFormat Direction = 3;
}
public enum UpdateLoopSetting
{
	// Fields
	public const UpdateLoopSetting None = 0;
	public const UpdateLoopSetting Update = 1;
	public const UpdateLoopSetting FixedUpdate = 2;
	public const UpdateLoopSetting OnGUI = 4;
}
public enum ThrottleCalibrationMode
{
	// Fields
	public const ThrottleCalibrationMode ZeroToOne = 0;
	public const ThrottleCalibrationMode NegativeOneToOne = 1;
}
public enum LogLevelFlags
{
	// Fields
	public const LogLevelFlags Off = 0;
	public const LogLevelFlags Info = 1;
	public const LogLevelFlags Warning = 2;
	public const LogLevelFlags Error = 4;
	public const LogLevelFlags Debug = 8;
}
public enum DualShock4MotorType
{
	// Fields
	public const DualShock4MotorType LeftMotor = 0;
	public const DualShock4MotorType StrongMotor = 0;
	public const DualShock4MotorType RightMotor = 1;
	public const DualShock4MotorType WeakMotor = 1;
}
public enum ControllerTemplateElementType
{
	// Fields
	public const ControllerTemplateElementType Axis = 0;
	public const ControllerTemplateElementType Button = 1;
	public const ControllerTemplateElementType ThumbStick = 2;
	public const ControllerTemplateElementType DPad = 4;
	public const ControllerTemplateElementType Stick = 5;
	public const ControllerTemplateElementType Throttle = 6;
	public const ControllerTemplateElementType Hat = 7;
	public const ControllerTemplateElementType Yoke = 8;
	public const ControllerTemplateElementType Stick6D = 9;
}
public enum ControllerTemplateElementSourceType
{
	// Fields
	public const ControllerTemplateElementSourceType Axis = 0;
	public const ControllerTemplateElementSourceType Button = 1;
}
public enum PlayerMouse.MovementAreaUnit
{
	// Fields
	public const PlayerMouse.MovementAreaUnit Screen = 0;
	public const PlayerMouse.MovementAreaUnit Pixel = 1;
}
public enum CustomCalculation_Accelerometer.CalculationType
{
	// Fields
	public const CustomCalculation_Accelerometer.CalculationType Pitch = 0;
	public const CustomCalculation_Accelerometer.CalculationType Roll = 1;
}
public enum CustomCalculation_Accelerometer.OutputType
{
	// Fields
	public const CustomCalculation_Accelerometer.OutputType Axis = 0;
	public const CustomCalculation_Accelerometer.OutputType Angle = 1;
}
public enum CustomCalculation_Accelerometer.InputType
{
	// Fields
	public const CustomCalculation_Accelerometer.InputType Acceleration = 0;
	public const CustomCalculation_Accelerometer.InputType UserAcceleration = 1;
	public const CustomCalculation_Accelerometer.InputType Gravity = 2;
}
public enum CustomCalculation_CompareElementValues.ComparisonType
{
	// Fields
	public const CustomCalculation_CompareElementValues.ComparisonType Min = 0;
	public const CustomCalculation_CompareElementValues.ComparisonType Max = 1;
	public const CustomCalculation_CompareElementValues.ComparisonType MinAbs = 2;
	public const CustomCalculation_CompareElementValues.ComparisonType MaxAbs = 3;
}
public enum CustomCalculation_LogitechGRacingWheelPedals.Mode
{
	// Fields
	public const CustomCalculation_LogitechGRacingWheelPedals.Mode SharedAxis = 0;
	public const CustomCalculation_LogitechGRacingWheelPedals.Mode SeparateAxes = 1;
}
public enum HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType
{
	// Fields
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Any = 0;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Device = 17;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Mouse = 18;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Keyboard = 19;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Joystick = 20;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Gamepad = 21;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Driving = 22;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Flight = 23;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType FirstPerson = 24;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType ControlDevice = 25;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType ScreenPointer = 26;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Remote = 27;
	public const HardwareJoystickMap.Platform_RawOrDirectInput.DeviceType Supplemental = 28;
}
public enum HardwareElementSourceType
{
	// Fields
	public const HardwareElementSourceType Button = 0;
	public const HardwareElementSourceType Axis = 1;
	public const HardwareElementSourceType Key = 3;
	public const HardwareElementSourceType Custom = 100;
}
public enum HardwareElementSourceTypeWithHat
{
	// Fields
	public const HardwareElementSourceTypeWithHat Button = 0;
	public const HardwareElementSourceTypeWithHat Axis = 1;
	public const HardwareElementSourceTypeWithHat Hat = 2;
	public const HardwareElementSourceTypeWithHat Key = 3;
	public const HardwareElementSourceTypeWithHat Custom = 100;
}
public enum HatDirection
{
	// Fields
	public const HatDirection Up = 0;
	public const HatDirection Right = 1;
	public const HatDirection Down = 2;
	public const HatDirection Left = 3;
	public const HatDirection UpRight = 4;
	public const HatDirection DownRight = 5;
	public const HatDirection DownLeft = 6;
	public const HatDirection UpLeft = 7;
}
public enum HatType
{
	// Fields
	public const HatType FourWay = 0;
	public const HatType EightWay = 1;
}
public enum AxisDirection
{
	// Fields
	public const AxisDirection Vertical = 0;
	public const AxisDirection Horizontal = 1;
}
public enum AxisCalibrationType
{
	// Fields
	public const AxisCalibrationType Default = 0;
	public const AxisCalibrationType Uncalibrated = 1;
	public const AxisCalibrationType Custom = 2;
}
public enum SpecialAxisType
{
	// Fields
	public const SpecialAxisType None = 0;
	public const SpecialAxisType Throttle = 1;
}
public enum ModifierKey
{
	// Fields
	public const ModifierKey None = 0;
	public const ModifierKey Control = 1;
	public const ModifierKey Alt = 2;
	public const ModifierKey Shift = 3;
	public const ModifierKey Command = 4;
}
public enum ModifierKeyFlags
{
	// Fields
	public const ModifierKeyFlags None = 0;
	public const ModifierKeyFlags LeftControl = 1;
	public const ModifierKeyFlags RightControl = 2;
	public const ModifierKeyFlags LeftAlt = 4;
	public const ModifierKeyFlags RightAlt = 8;
	public const ModifierKeyFlags LeftShift = 16;
	public const ModifierKeyFlags RightShift = 32;
	public const ModifierKeyFlags LeftCommand = 64;
	public const ModifierKeyFlags RightCommand = 128;
}
public enum KeyboardKeyCode
{
	// Fields
	public const KeyboardKeyCode None = 0;
	public const KeyboardKeyCode A = 97;
	public const KeyboardKeyCode B = 98;
	public const KeyboardKeyCode C = 99;
	public const KeyboardKeyCode D = 100;
	public const KeyboardKeyCode E = 101;
	public const KeyboardKeyCode F = 102;
	public const KeyboardKeyCode G = 103;
	public const KeyboardKeyCode H = 104;
	public const KeyboardKeyCode I = 105;
	public const KeyboardKeyCode J = 106;
	public const KeyboardKeyCode K = 107;
	public const KeyboardKeyCode L = 108;
	public const KeyboardKeyCode M = 109;
	public const KeyboardKeyCode N = 110;
	public const KeyboardKeyCode O = 111;
	public const KeyboardKeyCode P = 112;
	public const KeyboardKeyCode Q = 113;
	public const KeyboardKeyCode R = 114;
	public const KeyboardKeyCode S = 115;
	public const KeyboardKeyCode T = 116;
	public const KeyboardKeyCode U = 117;
	public const KeyboardKeyCode V = 118;
	public const KeyboardKeyCode W = 119;
	public const KeyboardKeyCode X = 120;
	public const KeyboardKeyCode Y = 121;
	public const KeyboardKeyCode Z = 122;
	public const KeyboardKeyCode Alpha0 = 48;
	public const KeyboardKeyCode Alpha1 = 49;
	public const KeyboardKeyCode Alpha2 = 50;
	public const KeyboardKeyCode Alpha3 = 51;
	public const KeyboardKeyCode Alpha4 = 52;
	public const KeyboardKeyCode Alpha5 = 53;
	public const KeyboardKeyCode Alpha6 = 54;
	public const KeyboardKeyCode Alpha7 = 55;
	public const KeyboardKeyCode Alpha8 = 56;
	public const KeyboardKeyCode Alpha9 = 57;
	public const KeyboardKeyCode Keypad0 = 256;
	public const KeyboardKeyCode Keypad1 = 257;
	public const KeyboardKeyCode Keypad2 = 258;
	public const KeyboardKeyCode Keypad3 = 259;
	public const KeyboardKeyCode Keypad4 = 260;
	public const KeyboardKeyCode Keypad5 = 261;
	public const KeyboardKeyCode Keypad6 = 262;
	public const KeyboardKeyCode Keypad7 = 263;
	public const KeyboardKeyCode Keypad8 = 264;
	public const KeyboardKeyCode Keypad9 = 265;
	public const KeyboardKeyCode KeypadPeriod = 266;
	public const KeyboardKeyCode KeypadDivide = 267;
	public const KeyboardKeyCode KeypadMultiply = 268;
	public const KeyboardKeyCode KeypadMinus = 269;
	public const KeyboardKeyCode KeypadPlus = 270;
	public const KeyboardKeyCode KeypadEnter = 271;
	public const KeyboardKeyCode KeypadEquals = 272;
	public const KeyboardKeyCode Backspace = 8;
	public const KeyboardKeyCode Tab = 9;
	public const KeyboardKeyCode Clear = 12;
	public const KeyboardKeyCode Return = 13;
	public const KeyboardKeyCode Pause = 19;
	public const KeyboardKeyCode Escape = 27;
	public const KeyboardKeyCode Space = 32;
	public const KeyboardKeyCode Exclaim = 33;
	public const KeyboardKeyCode DoubleQuote = 34;
	public const KeyboardKeyCode Hash = 35;
	public const KeyboardKeyCode Dollar = 36;
	public const KeyboardKeyCode Ampersand = 38;
	public const KeyboardKeyCode Quote = 39;
	public const KeyboardKeyCode LeftParen = 40;
	public const KeyboardKeyCode RightParen = 41;
	public const KeyboardKeyCode Asterisk = 42;
	public const KeyboardKeyCode Plus = 43;
	public const KeyboardKeyCode Comma = 44;
	public const KeyboardKeyCode Minus = 45;
	public const KeyboardKeyCode Period = 46;
	public const KeyboardKeyCode Slash = 47;
	public const KeyboardKeyCode Colon = 58;
	public const KeyboardKeyCode Semicolon = 59;
	public const KeyboardKeyCode Less = 60;
	public const KeyboardKeyCode Equals = 61;
	public const KeyboardKeyCode Greater = 62;
	public const KeyboardKeyCode Question = 63;
	public const KeyboardKeyCode At = 64;
	public const KeyboardKeyCode LeftBracket = 91;
	public const KeyboardKeyCode Backslash = 92;
	public const KeyboardKeyCode RightBracket = 93;
	public const KeyboardKeyCode Caret = 94;
	public const KeyboardKeyCode Underscore = 95;
	public const KeyboardKeyCode BackQuote = 96;
	public const KeyboardKeyCode Delete = 127;
	public const KeyboardKeyCode UpArrow = 273;
	public const KeyboardKeyCode DownArrow = 274;
	public const KeyboardKeyCode RightArrow = 275;
	public const KeyboardKeyCode LeftArrow = 276;
	public const KeyboardKeyCode Insert = 277;
	public const KeyboardKeyCode Home = 278;
	public const KeyboardKeyCode End = 279;
	public const KeyboardKeyCode PageUp = 280;
	public const KeyboardKeyCode PageDown = 281;
	public const KeyboardKeyCode F1 = 282;
	public const KeyboardKeyCode F2 = 283;
	public const KeyboardKeyCode F3 = 284;
	public const KeyboardKeyCode F4 = 285;
	public const KeyboardKeyCode F5 = 286;
	public const KeyboardKeyCode F6 = 287;
	public const KeyboardKeyCode F7 = 288;
	public const KeyboardKeyCode F8 = 289;
	public const KeyboardKeyCode F9 = 290;
	public const KeyboardKeyCode F10 = 291;
	public const KeyboardKeyCode F11 = 292;
	public const KeyboardKeyCode F12 = 293;
	public const KeyboardKeyCode F13 = 294;
	public const KeyboardKeyCode F14 = 295;
	public const KeyboardKeyCode F15 = 296;
	public const KeyboardKeyCode Numlock = 300;
	public const KeyboardKeyCode CapsLock = 301;
	public const KeyboardKeyCode ScrollLock = 302;
	public const KeyboardKeyCode RightShift = 303;
	public const KeyboardKeyCode LeftShift = 304;
	public const KeyboardKeyCode RightControl = 305;
	public const KeyboardKeyCode LeftControl = 306;
	public const KeyboardKeyCode RightAlt = 307;
	public const KeyboardKeyCode LeftAlt = 308;
	public const KeyboardKeyCode RightCommand = 309;
	public const KeyboardKeyCode LeftCommand = 310;
	public const KeyboardKeyCode LeftWindows = 311;
	public const KeyboardKeyCode RightWindows = 312;
	public const KeyboardKeyCode AltGr = 313;
	public const KeyboardKeyCode Help = 315;
	public const KeyboardKeyCode Print = 316;
	public const KeyboardKeyCode SysReq = 317;
	public const KeyboardKeyCode Break = 318;
	public const KeyboardKeyCode Menu = 319;
}
public enum MouseXYAxisMode
{
	// Fields
	public const MouseXYAxisMode MouseAxis = 0;
	public const MouseXYAxisMode DigitalAxis = 1;
	public const MouseXYAxisMode ScreenPositionDelta = 3;
	public const MouseXYAxisMode Speed = 4;
}
public enum MouseXYAxisDeltaCalc
{
	// Fields
	public const MouseXYAxisDeltaCalc Normal = 0;
	public const MouseXYAxisDeltaCalc ScreenWidth = 1;
	public const MouseXYAxisDeltaCalc ScreenHeight = 2;
}
public enum MouseOtherAxisMode
{
	// Fields
	public const MouseOtherAxisMode MouseAxis = 0;
	public const MouseOtherAxisMode DigitalAxis = 1;
}
public enum InputActionType
{
	// Fields
	public const InputActionType Axis = 0;
	public const InputActionType Button = 1;
}
public enum AxisType
{
	// Fields
	public const AxisType None = 0;
	public const AxisType Normal = 1;
	public const AxisType Split = 2;
}
public enum Pole
{
	// Fields
	public const Pole Positive = 0;
	public const Pole Negative = 1;
}
public enum AxisRange
{
	// Fields
	public const AxisRange Full = 0;
	public const AxisRange Positive = 1;
	public const AxisRange Negative = 2;
}
public enum AxisCoordinateMode
{
	// Fields
	public const AxisCoordinateMode Absolute = 0;
	public const AxisCoordinateMode Relative = 1;
}
public enum ControllerType
{
	// Fields
	public const ControllerType Keyboard = 0;
	public const ControllerType Mouse = 1;
	public const ControllerType Joystick = 2;
	public const ControllerType Custom = 20;
}
public enum ControllerElementType
{
	// Fields
	public const ControllerElementType Axis = 0;
	public const ControllerElementType Button = 1;
	public const ControllerElementType CompoundElement = 100;
}
public enum CompoundControllerElementType
{
	// Fields
	public const CompoundControllerElementType Axis2D = 0;
	public const CompoundControllerElementType Hat = 11;
}
public enum DeadZone2DType
{
	// Fields
	public const DeadZone2DType Radial = 1;
	public const DeadZone2DType Axial = 2;
}
public enum AxisSensitivity2DType
{
	// Fields
	public const AxisSensitivity2DType Radial = 0;
	public const AxisSensitivity2DType Axial = 1;
}
public enum ElementAssignmentType
{
	// Fields
	public const ElementAssignmentType FullAxis = 0;
	public const ElementAssignmentType SplitAxis = 1;
	public const ElementAssignmentType Button = 2;
	public const ElementAssignmentType KeyboardKey = 3;
}
public enum UpdateLoopType
{
	// Fields
	public const UpdateLoopType Update = 0;
	public const UpdateLoopType FixedUpdate = 1;
	public const UpdateLoopType OnGUI = 2;
}
public enum InputActionEventType
{
	// Fields
	public const InputActionEventType Update = 0;
	public const InputActionEventType ButtonPressed = 1;
	public const InputActionEventType ButtonUnpressed = 2;
	public const InputActionEventType ButtonJustPressed = 3;
	public const InputActionEventType ButtonJustReleased = 4;
	public const InputActionEventType ButtonDoublePressed = 5;
	public const InputActionEventType ButtonJustDoublePressed = 6;
	public const InputActionEventType ButtonPressedForTime = 7;
	public const InputActionEventType ButtonJustPressedForTime = 8;
	public const InputActionEventType ButtonPressedForTimeJustReleased = 9;
	public const InputActionEventType ButtonShortPressed = 10;
	public const InputActionEventType ButtonJustShortPressed = 11;
	public const InputActionEventType ButtonShortPressJustReleased = 12;
	public const InputActionEventType ButtonLongPressed = 13;
	public const InputActionEventType ButtonJustLongPressed = 14;
	public const InputActionEventType ButtonLongPressJustReleased = 15;
	public const InputActionEventType ButtonRepeating = 16;
	public const InputActionEventType NegativeButtonPressed = 17;
	public const InputActionEventType NegativeButtonUnpressed = 18;
	public const InputActionEventType NegativeButtonJustPressed = 19;
	public const InputActionEventType NegativeButtonJustReleased = 20;
	public const InputActionEventType NegativeButtonDoublePressed = 21;
	public const InputActionEventType NegativeButtonJustDoublePressed = 22;
	public const InputActionEventType NegativeButtonPressedForTime = 23;
	public const InputActionEventType NegativeButtonJustPressedForTime = 24;
	public const InputActionEventType NegativeButtonPressedForTimeJustReleased = 25;
	public const InputActionEventType NegativeButtonShortPressed = 26;
	public const InputActionEventType NegativeButtonJustShortPressed = 27;
	public const InputActionEventType NegativeButtonShortPressJustReleased = 28;
	public const InputActionEventType NegativeButtonLongPressed = 29;
	public const InputActionEventType NegativeButtonJustLongPressed = 30;
	public const InputActionEventType NegativeButtonLongPressJustReleased = 31;
	public const InputActionEventType NegativeButtonRepeating = 32;
	public const InputActionEventType AxisActive = 33;
	public const InputActionEventType AxisInactive = 34;
	public const InputActionEventType AxisRawActive = 35;
	public const InputActionEventType AxisRawInactive = 36;
	public const InputActionEventType AxisActiveOrJustInactive = 37;
	public const InputActionEventType AxisRawActiveOrJustInactive = 38;
	public const InputActionEventType ButtonDoublePressJustReleased = 100;
	public const InputActionEventType ButtonSinglePressed = 101;
	public const InputActionEventType ButtonJustSinglePressed = 102;
	public const InputActionEventType ButtonSinglePressJustReleased = 103;
	public const InputActionEventType NegativeButtonDoublePressJustReleased = 150;
	public const InputActionEventType NegativeButtonSinglePressed = 151;
	public const InputActionEventType NegativeButtonJustSinglePressed = 152;
	public const InputActionEventType NegativeButtonSinglePressJustReleased = 153;
}
public enum AxisSensitivityType
{
	// Fields
	public const AxisSensitivityType Multiplier = 0;
	public const AxisSensitivityType Power = 1;
	public const AxisSensitivityType Curve = 2;
}
public enum HIDHat.Type
{
	// Fields
	public const HIDHat.Type ArjUpFKKDkOtOldZpRLmmMUFaxP = 0;
	public const HIDHat.Type djmWmEhmVdfksZwGfNzZHFuqaoh = 1;
}
public enum GDZJmMlQvBAxDaQCuBIKYWggay.QHWSqSXjZtJVmIWvTGBJmFrgKKs
{
	// Fields
	public const GDZJmMlQvBAxDaQCuBIKYWggay.QHWSqSXjZtJVmIWvTGBJmFrgKKs AVgeqanjsLChqjEayGcDNCMqTxtI = 0;
	public const GDZJmMlQvBAxDaQCuBIKYWggay.QHWSqSXjZtJVmIWvTGBJmFrgKKs dUltDdkivNhBBHvDthniWYpgMnZ = 1;
}
public enum CustomInputManager.NIOXrqHRlxHlUMLPLEvYiqbHqqY.igFlsUZdiaAWHzaPiGtekcNHjYY
{
	// Fields
	public const CustomInputManager.NIOXrqHRlxHlUMLPLEvYiqbHqqY.igFlsUZdiaAWHzaPiGtekcNHjYY fyLkgCmTpqIuMAMCxJOMkArnGwx = 0;
	public const CustomInputManager.NIOXrqHRlxHlUMLPLEvYiqbHqqY.igFlsUZdiaAWHzaPiGtekcNHjYY DVvUbKVHsTUhKpitpaArZixJgbT = 1;
}
public enum DPgtozdBQUGdQcMHLQJhOOhCCB.xIhmKboaCjBJRNQhMaCyrnJkVBq.JlfFIFxnsIMhEOGkCIfNuUYzjVy
{
	// Fields
	public const DPgtozdBQUGdQcMHLQJhOOhCCB.xIhmKboaCjBJRNQhMaCyrnJkVBq.JlfFIFxnsIMhEOGkCIfNuUYzjVy fyLkgCmTpqIuMAMCxJOMkArnGwx = 0;
	public const DPgtozdBQUGdQcMHLQJhOOhCCB.xIhmKboaCjBJRNQhMaCyrnJkVBq.JlfFIFxnsIMhEOGkCIfNuUYzjVy DVvUbKVHsTUhKpitpaArZixJgbT = 1;
}
public enum InputMapper.ConflictResponse
{
	// Fields
	public const InputMapper.ConflictResponse Cancel = 0;
	public const InputMapper.ConflictResponse Replace = 1;
	public const InputMapper.ConflictResponse Add = 2;
	public const InputMapper.ConflictResponse Ignore = 3;
}
public enum InputMapper.Status
{
	// Fields
	public const InputMapper.Status Idle = 0;
	public const InputMapper.Status Listening = 1;
	public const InputMapper.Status AwaitingResponse = 2;
}
public enum Platform
{
	// Fields
	public const Platform Unknown = 0;
	public const Platform Windows = 1;
	public const Platform WindowsAppStore = 2;
	public const Platform WindowsPhone8 = 3;
	public const Platform OSX = 4;
	public const Platform iOS = 5;
	public const Platform Linux = 6;
	public const Platform Android = 7;
	public const Platform Blackberry = 8;
	public const Platform Webplayer = 9;
	public const Platform Xbox360 = 10;
	public const Platform XboxOne = 11;
	public const Platform PS3 = 12;
	public const Platform PS4 = 13;
	public const Platform PSVita = 14;
	public const Platform PSMobile = 15;
	public const Platform Wii = 16;
	public const Platform Flash = 17;
	public const Platform WiiU = 18;
	public const Platform WebGL = 19;
	public const Platform Tizen = 20;
	public const Platform Xenon = 21;
	public const Platform STV = 22;
	public const Platform NACL = 23;
	public const Platform NACL_Webplayer = 24;
	public const Platform NACL_Chrome = 25;
	public const Platform SamsungTV = 26;
	public const Platform Pepper = 27;
	public const Platform tvOS = 28;
	public const Platform WindowsUWP = 29;
	public const Platform Windows81Store = 30;
	public const Platform N3DS = 31;
	public const Platform Switch = 32;
	public const Platform Ouya = 100;
	public const Platform AmazonFireTV = 101;
	public const Platform RazerForgeTV = 102;
}
public enum EditorPlatform
{
	// Fields
	public const EditorPlatform None = 0;
	public const EditorPlatform OSX = 1;
	public const EditorPlatform Windows = 2;
	public const EditorPlatform Linux = 3;
	public const EditorPlatform Unknown = 100;
}
public enum WebplayerPlatform
{
	// Fields
	public const WebplayerPlatform None = 0;
	public const WebplayerPlatform Windows = 1;
	public const WebplayerPlatform OSX = 2;
	public const WebplayerPlatform Unknown = 100;
}
public enum ScriptingBackend
{
	// Fields
	public const ScriptingBackend Mono = 0;
	public const ScriptingBackend DotNet = 1;
	public const ScriptingBackend IL2CPP = 2;
}
public enum ScriptingAPILevel
{
	// Fields
	public const ScriptingAPILevel Net20 = 0;
	public const ScriptingAPILevel Net20Subset = 1;
	public const ScriptingAPILevel Net46 = 2;
	public const ScriptingAPILevel NetStandard20 = 3;
}
public enum WindowsStandalonePrimaryInputSource
{
	// Fields
	public const WindowsStandalonePrimaryInputSource RawInput = 0;
	public const WindowsStandalonePrimaryInputSource DirectInput = 1;
	public const WindowsStandalonePrimaryInputSource XInput = 2;
	public const WindowsStandalonePrimaryInputSource SDL2 = 10;
	public const WindowsStandalonePrimaryInputSource Unity = 100;
}
public enum OSXStandalonePrimaryInputSource
{
	// Fields
	public const OSXStandalonePrimaryInputSource Native = 0;
	public const OSXStandalonePrimaryInputSource SDL2 = 10;
	public const OSXStandalonePrimaryInputSource Unity = 100;
}
public enum LinuxStandalonePrimaryInputSource
{
	// Fields
	public const LinuxStandalonePrimaryInputSource Native = 0;
	public const LinuxStandalonePrimaryInputSource SDL2 = 10;
	public const LinuxStandalonePrimaryInputSource Unity = 100;
}
public enum WindowsUWPPrimaryInputSource
{
	// Fields
	public const WindowsUWPPrimaryInputSource Native = 0;
	public const WindowsUWPPrimaryInputSource Unity = 100;
}
public enum XboxOnePrimaryInputSource
{
	// Fields
	public const XboxOnePrimaryInputSource Native = 0;
	public const XboxOnePrimaryInputSource Unity = 100;
}
public enum PS4PrimaryInputSource
{
	// Fields
	public const PS4PrimaryInputSource Native = 0;
	public const PS4PrimaryInputSource Unity = 100;
}
public enum WebGLPrimaryInputSource
{
	// Fields
	public const WebGLPrimaryInputSource Native = 0;
	public const WebGLPrimaryInputSource Unity = 100;
}
public enum DirectInputAxis
{
	// Fields
	public const DirectInputAxis None = 0;
	public const DirectInputAxis X = 1;
	public const DirectInputAxis Y = 2;
	public const DirectInputAxis Z = 3;
	public const DirectInputAxis RotationX = 4;
	public const DirectInputAxis RotationY = 5;
	public const DirectInputAxis RotationZ = 6;
	public const DirectInputAxis Slider0 = 7;
	public const DirectInputAxis Slider1 = 8;
	public const DirectInputAxis VelocityX = 9;
	public const DirectInputAxis VelocityY = 10;
	public const DirectInputAxis VelocityZ = 11;
	public const DirectInputAxis AngularVelocityX = 12;
	public const DirectInputAxis AngularVelocityY = 13;
	public const DirectInputAxis AngularVelocityZ = 14;
	public const DirectInputAxis VelocitySlider0 = 15;
	public const DirectInputAxis VelocitySlider1 = 16;
	public const DirectInputAxis AccelerationX = 17;
	public const DirectInputAxis AccelerationY = 18;
	public const DirectInputAxis AccelerationZ = 19;
	public const DirectInputAxis AngularAccelerationX = 20;
	public const DirectInputAxis AngularAccelerationY = 21;
	public const DirectInputAxis AngularAccelerationZ = 22;
	public const DirectInputAxis AccelerationSlider0 = 23;
	public const DirectInputAxis AccelerationSlider1 = 24;
	public const DirectInputAxis ForceX = 25;
	public const DirectInputAxis ForceY = 26;
	public const DirectInputAxis ForceZ = 27;
	public const DirectInputAxis TorqueX = 28;
	public const DirectInputAxis TorqueY = 29;
	public const DirectInputAxis TorqueZ = 30;
	public const DirectInputAxis ForceSlider0 = 31;
	public const DirectInputAxis ForceSlider1 = 32;
}
public enum RawInputAxis
{
	// Fields
	public const RawInputAxis None = 0;
	public const RawInputAxis X = 1;
	public const RawInputAxis Y = 2;
	public const RawInputAxis Z = 3;
	public const RawInputAxis RotationX = 4;
	public const RawInputAxis RotationY = 5;
	public const RawInputAxis RotationZ = 6;
	public const RawInputAxis Slider0 = 7;
	public const RawInputAxis Slider1 = 8;
	public const RawInputAxis VelocityX = 9;
	public const RawInputAxis VelocityY = 10;
	public const RawInputAxis VelocityZ = 11;
	public const RawInputAxis Other = 1000;
}
public enum XInputDeviceSubType
{
	// Fields
	public const XInputDeviceSubType Gamepad = 1;
	public const XInputDeviceSubType Wheel = 2;
	public const XInputDeviceSubType ArcadeStick = 3;
	public const XInputDeviceSubType FlightSick = 4;
	public const XInputDeviceSubType DancePad = 5;
	public const XInputDeviceSubType Guitar = 6;
	public const XInputDeviceSubType GuitarAlternate = 7;
	public const XInputDeviceSubType DrumKit = 8;
	public const XInputDeviceSubType GuitarBass = 11;
	public const XInputDeviceSubType ArcadePad = 19;
}
public enum XInputAxis
{
	// Fields
	public const XInputAxis None = 0;
	public const XInputAxis LeftThumbX = 1;
	public const XInputAxis LeftThumbY = 2;
	public const XInputAxis RightThumbX = 3;
	public const XInputAxis RightThumbY = 4;
	public const XInputAxis LeftTrigger = 5;
	public const XInputAxis RightTrigger = 6;
}
public enum XInputButton
{
	// Fields
	public const XInputButton None = 0;
	public const XInputButton A = 1;
	public const XInputButton B = 2;
	public const XInputButton X = 3;
	public const XInputButton Y = 4;
	public const XInputButton LeftShoulder = 5;
	public const XInputButton RightShoulder = 6;
	public const XInputButton LeftThumb = 7;
	public const XInputButton RightThumb = 8;
	public const XInputButton Start = 9;
	public const XInputButton Back = 10;
	public const XInputButton DPadUp = 11;
	public const XInputButton DPadRight = 12;
	public const XInputButton DPadDown = 13;
	public const XInputButton DPadLeft = 14;
	public const XInputButton Guide = 15;
}
public enum OSXAxis
{
	// Fields
	public const OSXAxis None = 0;
	public const OSXAxis X = 1;
	public const OSXAxis Y = 2;
	public const OSXAxis Other = 3;
}
public enum UnityAxis
{
	// Fields
	public const UnityAxis None = 0;
	public const UnityAxis Axis0 = 1;
	public const UnityAxis Axis1 = 2;
	public const UnityAxis Axis2 = 3;
	public const UnityAxis Axis3 = 4;
	public const UnityAxis Axis4 = 5;
	public const UnityAxis Axis5 = 6;
	public const UnityAxis Axis6 = 7;
	public const UnityAxis Axis7 = 8;
	public const UnityAxis Axis8 = 9;
	public const UnityAxis Axis9 = 10;
	public const UnityAxis Axis10 = 11;
	public const UnityAxis Axis11 = 12;
	public const UnityAxis Axis12 = 13;
	public const UnityAxis Axis13 = 14;
	public const UnityAxis Axis14 = 15;
	public const UnityAxis Axis15 = 16;
	public const UnityAxis Axis16 = 17;
	public const UnityAxis Axis17 = 18;
	public const UnityAxis Axis18 = 19;
	public const UnityAxis Axis19 = 20;
	public const UnityAxis Axis20 = 21;
	public const UnityAxis Axis21 = 22;
	public const UnityAxis Axis22 = 23;
	public const UnityAxis Axis23 = 24;
	public const UnityAxis Axis24 = 25;
	public const UnityAxis Axis25 = 26;
	public const UnityAxis Axis26 = 27;
	public const UnityAxis Axis27 = 28;
	public const UnityAxis Axis28 = 29;
	public const UnityAxis Axis29 = 30;
}
public enum UnityButton
{
	// Fields
	public const UnityButton None = 0;
	public const UnityButton Button0 = 1;
	public const UnityButton Button1 = 2;
	public const UnityButton Button2 = 3;
	public const UnityButton Button3 = 4;
	public const UnityButton Button4 = 5;
	public const UnityButton Button5 = 6;
	public const UnityButton Button6 = 7;
	public const UnityButton Button7 = 8;
	public const UnityButton Button8 = 9;
	public const UnityButton Button9 = 10;
	public const UnityButton Button10 = 11;
	public const UnityButton Button11 = 12;
	public const UnityButton Button12 = 13;
	public const UnityButton Button13 = 14;
	public const UnityButton Button14 = 15;
	public const UnityButton Button15 = 16;
	public const UnityButton Button16 = 17;
	public const UnityButton Button17 = 18;
	public const UnityButton Button18 = 19;
	public const UnityButton Button19 = 20;
}
public enum PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType
{
	// Fields
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType Unknown = 0;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType Gamepad = 1;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType Move = 2;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType Guitar = 3;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType Drum = 4;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType DjTurntable = 5;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType DanceMat = 6;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType Navigation = 7;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType SteeringWheel = 8;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType Stick = 9;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType FlightStick = 10;
	public const PS4InputSource.gmxKuWvehhjyGxbrPSVaHzquCvx.ControllerType Gun = 11;
}
public enum VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj
{
	// Fields
	public uint value__; // 0x10
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj xJYxcYjlQoOkexTmbIhvRinnUkU = 0;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj qCQYVYczWbjqUCiooieJDzDQuYK = 256;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj FulkQSUHQwaKtpLEPoXVsISfOEh = 257;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj sifvAPItZYOAjLfzCwNYwxkhbg = 258;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj KslnRuSxuTfNziGsDYgLjiroZZW = 259;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj SjhbFTjBTglnIjbmSXFfcfVQcnb = 260;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj IWqHijFCGEiafjCEBETDRTlUkxCG = 261;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj FmaLczJyDUsweaucLeTNUJNabsB = 262;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj GjBllbPlvaCpjhvNglqxNjoAwPP = 512;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj ycremDkjFUJlQpaUXGHbNtKqFvXN = 513;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj WLeerUwkncEkkpMlXJIJUNWmbhZb = 768;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj CeYuIyyCPVBubfELBhaxBKyrbbl = 769;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj DVzDOXeTSsclVhlOZbIrkKXPiqQ = 770;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj mJPFuyzmJqJtQDbcXCbhillPwGt = 771;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj dqcnJqSckmbhnrckRiZQQCvkifE = 1024;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj vNFOYjVrWaAzswrVyBzAQfjfYxf = 1025;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj McxTneHlwugzKnVVGHZOUozRLRC = 1026;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj aqaizSMiFZwWAItSXjFcpaMnyCt = 1027;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj CxZSnfzeVTfRwEuiBHMPHYyjUnG = 1536;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj rAWIIdHPUvLtWmivWUHWMMQMbgK = 1537;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj kuBDDFanHCcgqdWyPtHhjdrXTsgG = 1538;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj ZhDDGlYzNMJusvXNXOjqPhbRNai = 1539;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj yWNLkKOMmGuFHtVHdsCyAlOwIOIe = 1540;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj VCXEplgTAihMFNoJtcigeHizLWG = 1541;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj mQiDFFkkjteaZJLsQONTgNJaGnQg = 1542;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj ERrgQQHtOgfDfhILjGcAXSBXKQJ = 1616;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj oudbemykwSANRsLxPqxIkKRTFHL = 1617;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj SfRDQJhFLToytSbaxiRqXMDgDCw = 1618;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj fCmayyPjkEaEpIMtWdbxLwzNPwMe = 1619;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj UwUFQnumtPYckGsuTEEtlficoiq = 1620;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj TbuVwtSdLWZxmVAmTbturcyGUSN = 1621;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj BRpdiBFwyQkQIoDIarjWvwRRIrfw = 1792;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj EdJFaPaCkKcZNljDhXTlmvRzusf = 1793;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj wgVeBzUnNflgGnpNxUlteVOfkoX = 1794;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj WlzgWUgEDQoBwTBJVLoxAigFFcLs = 2048;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj rFeOqDMPXTZNYDOifGFdqNFRRdy = 2049;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj TacPvebGRNcnPPDYwcfniCRRcnVj = 2050;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj NHvlGfWEXXxwvXqasPhsFgtNyAI = 2304;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj OLrxXNRIRDMbTBrllSOABevUxQT = 4096;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj EKpMfqbrRQNLPUbkoAPhQeyoMov = 8192;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj GBRGCSCbPOCgpbQvnCVdBjiFWbWY = 32768;
	public const VuTGCVdtQMXPEMCKcnDOxWAgDee.lfyPNGQasFvqgdGyEfefHiFoUoZj XlHPhtqJQyETltRpHCRKXiZLEkl = 65535;
}
public enum DGeBQlGPLqneYoaqQWDWeIPFUOuA.wqZlUqNnuFyTyZNovvlAoCAakYj.eaBhLPwpFTvDVlWiRXLKqmolnLy
{
	// Fields
	public const DGeBQlGPLqneYoaqQWDWeIPFUOuA.wqZlUqNnuFyTyZNovvlAoCAakYj.eaBhLPwpFTvDVlWiRXLKqmolnLy fyLkgCmTpqIuMAMCxJOMkArnGwx = 0;
	public const DGeBQlGPLqneYoaqQWDWeIPFUOuA.wqZlUqNnuFyTyZNovvlAoCAakYj.eaBhLPwpFTvDVlWiRXLKqmolnLy DVvUbKVHsTUhKpitpaArZixJgbT = 1;
}
public enum RXykqpoobZXbeYNAmfMakWSBJalU.zlJDrieuxlADuFmRezLclvHQNKee
{
	// Fields
	public const RXykqpoobZXbeYNAmfMakWSBJalU.zlJDrieuxlADuFmRezLclvHQNKee TCGihQKDgeeGtvEXifcuojmabzj = 0;
	public const RXykqpoobZXbeYNAmfMakWSBJalU.zlJDrieuxlADuFmRezLclvHQNKee zObnXUAQjuELSOKdkpgPxHrSqyO = 1;
	public const RXykqpoobZXbeYNAmfMakWSBJalU.zlJDrieuxlADuFmRezLclvHQNKee LNdKYuuukcmEUWWnVSjYrthVBue = 2;
}
public enum SerializedObject.ObjectType
{
	// Fields
	public const SerializedObject.ObjectType Object = 0;
	public const SerializedObject.ObjectType List = 1;
}
public enum SerializedObject.FieldOptions
{
	// Fields
	public const SerializedObject.FieldOptions None = 0;
	public const SerializedObject.FieldOptions ExculdeFromXml = 1;
}
public enum TypeWrapper.DataType
{
	// Fields
	public const TypeWrapper.DataType Unknown = 0;
	public const TypeWrapper.DataType Byte = 1;
	public const TypeWrapper.DataType SByte = 2;
	public const TypeWrapper.DataType Char = 3;
	public const TypeWrapper.DataType Int16 = 4;
	public const TypeWrapper.DataType UInt16 = 5;
	public const TypeWrapper.DataType Int32 = 6;
	public const TypeWrapper.DataType UInt32 = 7;
	public const TypeWrapper.DataType Int64 = 8;
	public const TypeWrapper.DataType UInt64 = 9;
	public const TypeWrapper.DataType Single = 10;
	public const TypeWrapper.DataType Double = 11;
	public const TypeWrapper.DataType Boolean = 12;
	public const TypeWrapper.DataType String = 13;
	public const TypeWrapper.DataType Object = 14;
}
public enum etabyBPtLZGexHfniBlZwQjQzulJ<THandler, TValue>
{
	// Fields
	public const etabyBPtLZGexHfniBlZwQjQzulJ<THandler, TValue> TCGihQKDgeeGtvEXifcuojmabzj = 0;
	public const etabyBPtLZGexHfniBlZwQjQzulJ<THandler, TValue> zObnXUAQjuELSOKdkpgPxHrSqyO = 1;
	public const etabyBPtLZGexHfniBlZwQjQzulJ<THandler, TValue> LNdKYuuukcmEUWWnVSjYrthVBue = 4;
	public const etabyBPtLZGexHfniBlZwQjQzulJ<THandler, TValue> gJnvwjXDFJBcXQFEZiklAxTlVJE = 8;
	public const etabyBPtLZGexHfniBlZwQjQzulJ<THandler, TValue> doFtcjAfrygYQXECsZOVnHNlHWm = -1;
}
public enum ReflectionTools.BindingFlags
{
	// Fields
	public const ReflectionTools.BindingFlags IgnoreCase = 1;
	public const ReflectionTools.BindingFlags DeclaredOnly = 2;
	public const ReflectionTools.BindingFlags Instance = 4;
	public const ReflectionTools.BindingFlags Static = 8;
	public const ReflectionTools.BindingFlags Public = 16;
	public const ReflectionTools.BindingFlags NonPublic = 32;
	public const ReflectionTools.BindingFlags FlattenHierarchy = 64;
}
public enum UnityTools.UnityVersion
{
	// Fields
	public const UnityTools.UnityVersion UNITY_2_6 = 0;
	public const UnityTools.UnityVersion UNITY_2_6_1 = 1;
	public const UnityTools.UnityVersion UNITY_3_0 = 2;
	public const UnityTools.UnityVersion UNITY_3_0_0 = 3;
	public const UnityTools.UnityVersion UNITY_3_1 = 4;
	public const UnityTools.UnityVersion UNITY_3_2 = 5;
	public const UnityTools.UnityVersion UNITY_3_3 = 6;
	public const UnityTools.UnityVersion UNITY_3_4 = 7;
	public const UnityTools.UnityVersion UNITY_3_5 = 8;
	public const UnityTools.UnityVersion UNITY_3_5_2 = 9;
	public const UnityTools.UnityVersion UNITY_3_5_7 = 10;
	public const UnityTools.UnityVersion UNITY_3_MAX = 11;
	public const UnityTools.UnityVersion UNITY_4_0 = 12;
	public const UnityTools.UnityVersion UNITY_4_0_1 = 13;
	public const UnityTools.UnityVersion UNITY_4_1 = 14;
	public const UnityTools.UnityVersion UNITY_4_2 = 15;
	public const UnityTools.UnityVersion UNITY_4_3 = 16;
	public const UnityTools.UnityVersion UNITY_4_4 = 17;
	public const UnityTools.UnityVersion UNITY_4_5 = 18;
	public const UnityTools.UnityVersion UNITY_4_6 = 19;
	public const UnityTools.UnityVersion UNITY_4_6_3p1 = 20;
	public const UnityTools.UnityVersion UNITY_4_6_3p1Plus = 21;
	public const UnityTools.UnityVersion UNITY_4_7 = 22;
	public const UnityTools.UnityVersion UNITY_4_8 = 23;
	public const UnityTools.UnityVersion UNITY_4_9 = 24;
	public const UnityTools.UnityVersion UNITY_4_MAX = 25;
	public const UnityTools.UnityVersion UNITY_5_0 = 26;
	public const UnityTools.UnityVersion UNITY_5_0_0p1 = 27;
	public const UnityTools.UnityVersion UNITY_5_0_0p1Plus = 28;
	public const UnityTools.UnityVersion UNITY_5_0_1 = 29;
	public const UnityTools.UnityVersion UNITY_5_0_2 = 30;
	public const UnityTools.UnityVersion UNITY_5_1 = 31;
	public const UnityTools.UnityVersion UNITY_5_2 = 32;
	public const UnityTools.UnityVersion UNITY_5_3 = 33;
	public const UnityTools.UnityVersion UNITY_5_4 = 34;
	public const UnityTools.UnityVersion UNITY_5_5 = 35;
	public const UnityTools.UnityVersion UNITY_5_6 = 36;
	public const UnityTools.UnityVersion UNITY_5_7 = 37;
	public const UnityTools.UnityVersion UNITY_5_8 = 38;
	public const UnityTools.UnityVersion UNITY_5_9 = 39;
	public const UnityTools.UnityVersion UNITY_5_MAX = 40;
	public const UnityTools.UnityVersion UNITY_2017_0 = 41;
	public const UnityTools.UnityVersion UNITY_2017_1 = 42;
	public const UnityTools.UnityVersion UNITY_2017_2 = 43;
	public const UnityTools.UnityVersion UNITY_2017_3 = 44;
	public const UnityTools.UnityVersion UNITY_2017_4 = 45;
	public const UnityTools.UnityVersion UNITY_2017_5 = 46;
	public const UnityTools.UnityVersion UNITY_2017_6 = 47;
	public const UnityTools.UnityVersion UNITY_2017_7 = 48;
	public const UnityTools.UnityVersion UNITY_2017_8 = 49;
	public const UnityTools.UnityVersion UNITY_2017_9 = 50;
	public const UnityTools.UnityVersion UNITY_2017_MAX = 51;
	public const UnityTools.UnityVersion UNITY_2018_0 = 52;
	public const UnityTools.UnityVersion UNITY_2018_1 = 53;
	public const UnityTools.UnityVersion UNITY_2018_2 = 54;
	public const UnityTools.UnityVersion UNITY_2018_3 = 55;
	public const UnityTools.UnityVersion UNITY_2018_4 = 56;
	public const UnityTools.UnityVersion UNITY_2018_5 = 57;
	public const UnityTools.UnityVersion UNITY_2018_6 = 58;
	public const UnityTools.UnityVersion UNITY_2018_7 = 59;
	public const UnityTools.UnityVersion UNITY_2018_8 = 60;
	public const UnityTools.UnityVersion UNITY_2018_9 = 61;
	public const UnityTools.UnityVersion UNITY_2018_MAX = 62;
	public const UnityTools.UnityVersion UNITY_2019_0 = 63;
	public const UnityTools.UnityVersion UNITY_2019_1 = 64;
	public const UnityTools.UnityVersion UNITY_2019_2 = 65;
	public const UnityTools.UnityVersion UNITY_2019_3 = 66;
	public const UnityTools.UnityVersion UNITY_2019_4 = 67;
	public const UnityTools.UnityVersion UNITY_2019_5 = 68;
	public const UnityTools.UnityVersion UNITY_2019_6 = 69;
	public const UnityTools.UnityVersion UNITY_2019_7 = 70;
	public const UnityTools.UnityVersion UNITY_2019_8 = 71;
	public const UnityTools.UnityVersion UNITY_2019_9 = 72;
	public const UnityTools.UnityVersion UNITY_2019_MAX = 73;
	public const UnityTools.UnityVersion UNITY_2020_0 = 74;
	public const UnityTools.UnityVersion UNITY_2020_1 = 75;
	public const UnityTools.UnityVersion UNITY_2020_2 = 76;
	public const UnityTools.UnityVersion UNITY_2020_3 = 77;
	public const UnityTools.UnityVersion UNITY_2020_4 = 78;
	public const UnityTools.UnityVersion UNITY_2020_5 = 79;
	public const UnityTools.UnityVersion UNITY_2020_6 = 80;
	public const UnityTools.UnityVersion UNITY_2020_7 = 81;
	public const UnityTools.UnityVersion UNITY_2020_8 = 82;
	public const UnityTools.UnityVersion UNITY_2020_9 = 83;
	public const UnityTools.UnityVersion UNITY_2020_MAX = 84;
	public const UnityTools.UnityVersion UNITY_2021_0 = 85;
	public const UnityTools.UnityVersion UNITY_2021_1 = 86;
	public const UnityTools.UnityVersion UNITY_2021_2 = 87;
	public const UnityTools.UnityVersion UNITY_2021_3 = 88;
	public const UnityTools.UnityVersion UNITY_2021_4 = 89;
	public const UnityTools.UnityVersion UNITY_2021_5 = 90;
	public const UnityTools.UnityVersion UNITY_2021_6 = 91;
	public const UnityTools.UnityVersion UNITY_2021_7 = 92;
	public const UnityTools.UnityVersion UNITY_2021_8 = 93;
	public const UnityTools.UnityVersion UNITY_2021_9 = 94;
	public const UnityTools.UnityVersion UNITY_2021_MAX = 95;
	public const UnityTools.UnityVersion Unknown = 1000;
}
public enum UnityTools.UnityVersionClass.pOyAbQrKJnQPftllxDYGOAPUHHOF
{
	// Fields
	public const UnityTools.UnityVersionClass.pOyAbQrKJnQPftllxDYGOAPUHHOF YTgToBVNxXcoaDwoDBQufCSlYO = 0;
	public const UnityTools.UnityVersionClass.pOyAbQrKJnQPftllxDYGOAPUHHOF TfFsLkpvDhvxrDkyfUuZBDQXiKj = 1;
	public const UnityTools.UnityVersionClass.pOyAbQrKJnQPftllxDYGOAPUHHOF rTBzurrqanuhBDdLablUSJpWRhq = 2;
}
public enum XboxOneGamepadMotorType
{
	// Fields
	public const XboxOneGamepadMotorType LeftMotor = 0;
	public const XboxOneGamepadMotorType RightMotor = 1;
	public const XboxOneGamepadMotorType LeftTriggerMotor = 2;
	public const XboxOneGamepadMotorType RightTriggerMotor = 3;
}
public enum ClipCaps
{
	// Fields
	public const ClipCaps None = 0;
	public const ClipCaps Looping = 1;
	public const ClipCaps Extrapolation = 2;
	public const ClipCaps ClipIn = 4;
	public const ClipCaps SpeedMultiplier = 8;
	public const ClipCaps Blending = 16;
	public const ClipCaps All = -1;
}
public enum TimelineAsset.MediaType
{
	// Fields
	public const TimelineAsset.MediaType Animation = 0;
	public const TimelineAsset.MediaType Audio = 1;
	public const TimelineAsset.MediaType Texture = 2;
	public const TimelineAsset.MediaType Video = 2;
	public const TimelineAsset.MediaType Script = 3;
	public const TimelineAsset.MediaType Hybrid = 4;
	public const TimelineAsset.MediaType Group = 5;
}
public enum TimelineAsset.DurationMode
{
	// Fields
	public const TimelineAsset.DurationMode BasedOnClips = 0;
	public const TimelineAsset.DurationMode FixedLength = 1;
}
public enum TimelineClip.ClipExtrapolation
{
	// Fields
	public const TimelineClip.ClipExtrapolation None = 0;
	public const TimelineClip.ClipExtrapolation Hold = 1;
	public const TimelineClip.ClipExtrapolation Loop = 2;
	public const TimelineClip.ClipExtrapolation PingPong = 3;
	public const TimelineClip.ClipExtrapolation Continue = 4;
}
public enum TimelineClip.BlendCurveMode
{
	// Fields
	public const TimelineClip.BlendCurveMode Auto = 0;
	public const TimelineClip.BlendCurveMode Manual = 1;
}
public enum ActivationTrack.PostPlaybackState
{
	// Fields
	public const ActivationTrack.PostPlaybackState Active = 0;
	public const ActivationTrack.PostPlaybackState Inactive = 1;
	public const ActivationTrack.PostPlaybackState Revert = 2;
	public const ActivationTrack.PostPlaybackState LeaveAsIs = 3;
}
public enum MatchTargetFields
{
	// Fields
	public const MatchTargetFields PositionX = 1;
	public const MatchTargetFields PositionY = 2;
	public const MatchTargetFields PositionZ = 4;
	public const MatchTargetFields RotationX = 8;
	public const MatchTargetFields RotationY = 16;
	public const MatchTargetFields RotationZ = 32;
}
public enum ActivationControlPlayable.PostPlaybackState
{
	// Fields
	public const ActivationControlPlayable.PostPlaybackState Active = 0;
	public const ActivationControlPlayable.PostPlaybackState Inactive = 1;
	public const ActivationControlPlayable.PostPlaybackState Revert = 2;
}
public enum WireFormat.WireType
{
	// Fields
	public uint value__; // 0x10
	public const WireFormat.WireType Varint = 0;
	public const WireFormat.WireType Fixed64 = 1;
	public const WireFormat.WireType LengthDelimited = 2;
	public const WireFormat.WireType StartGroup = 3;
	public const WireFormat.WireType EndGroup = 4;
	public const WireFormat.WireType Fixed32 = 5;
}
public enum NullValue
{
	// Fields
	[OriginalNameAttribute]
	public const NullValue NullValue = 0;
}
public enum Value.KindOneofCase
{
	// Fields
	public const Value.KindOneofCase None = 0;
	public const Value.KindOneofCase NullValue = 1;
	public const Value.KindOneofCase NumberValue = 2;
	public const Value.KindOneofCase StringValue = 3;
	public const Value.KindOneofCase BoolValue = 4;
	public const Value.KindOneofCase StructValue = 5;
	public const Value.KindOneofCase ListValue = 6;
}
public enum FieldType
{
	// Fields
	public const FieldType Double = 0;
	public const FieldType Float = 1;
	public const FieldType Int64 = 2;
	public const FieldType UInt64 = 3;
	public const FieldType Int32 = 4;
	public const FieldType Fixed64 = 5;
	public const FieldType Fixed32 = 6;
	public const FieldType Bool = 7;
	public const FieldType String = 8;
	public const FieldType Group = 9;
	public const FieldType Message = 10;
	public const FieldType Bytes = 11;
	public const FieldType UInt32 = 12;
	public const FieldType SFixed32 = 13;
	public const FieldType SFixed64 = 14;
	public const FieldType SInt32 = 15;
	public const FieldType SInt64 = 16;
	public const FieldType Enum = 17;
}
public enum fXpZHAKkyykjjdntipjmCAIqJMD.SNRBnIgKAMRWqTrKMMmcCoNDyKKd.DIWJVETWaPFFkudLyHFYfVbJqns
{
	// Fields
	public const fXpZHAKkyykjjdntipjmCAIqJMD.SNRBnIgKAMRWqTrKMMmcCoNDyKKd.DIWJVETWaPFFkudLyHFYfVbJqns pcWfOxYbvNCAItRmLAyYfYdvnxE = 0;
	public const fXpZHAKkyykjjdntipjmCAIqJMD.SNRBnIgKAMRWqTrKMMmcCoNDyKKd.DIWJVETWaPFFkudLyHFYfVbJqns JgYTOGxxNXCOjMYfJlJOWIFnveY = 1;
}
public enum ZPFgjuIZrGwPvWsWAyvFqQxHtxkn.nhnmSGeBkAttkmfxmxGlDeglhSGe.CxzhajiaPSyLynbAMiUXPxiPCHW
{
	// Fields
	public const ZPFgjuIZrGwPvWsWAyvFqQxHtxkn.nhnmSGeBkAttkmfxmxGlDeglhSGe.CxzhajiaPSyLynbAMiUXPxiPCHW pcWfOxYbvNCAItRmLAyYfYdvnxE = 0;
	public const ZPFgjuIZrGwPvWsWAyvFqQxHtxkn.nhnmSGeBkAttkmfxmxGlDeglhSGe.CxzhajiaPSyLynbAMiUXPxiPCHW JgYTOGxxNXCOjMYfJlJOWIFnveY = 1;
}
public enum nWJFPaVEAnZVBaejiLScyIzPghU.ARRucpJRKUKoSdGATgCNJjOfktn.RNjCJjtqhaADDEkPlZxyCjIZPqW
{
	// Fields
	public const nWJFPaVEAnZVBaejiLScyIzPghU.ARRucpJRKUKoSdGATgCNJjOfktn.RNjCJjtqhaADDEkPlZxyCjIZPqW OPrDnVhLcontoTptCznHaDrwNsAh = 0;
	public const nWJFPaVEAnZVBaejiLScyIzPghU.ARRucpJRKUKoSdGATgCNJjOfktn.RNjCJjtqhaADDEkPlZxyCjIZPqW xqyuuQSofyjoJulEXgAcFSYaDtu = 1;
}
public enum khPCPJgtQFokObAEkJKNQbaUfSZG.ORvCMajzfaKsgomdBGYGJVUcbwQ
{
	// Fields
	public const khPCPJgtQFokObAEkJKNQbaUfSZG.ORvCMajzfaKsgomdBGYGJVUcbwQ tskJsIsvmUkbpEjaLqwjCFbCKtP = 0;
	public const khPCPJgtQFokObAEkJKNQbaUfSZG.ORvCMajzfaKsgomdBGYGJVUcbwQ FQKPhyZCKUPSsUOKuvozgXhfOSh = 1;
}
public enum NNtGhmCyIcTVHHhHsqmkUkyoQZe.HNFrmcuxsvlQCudJezJFkfgEVpb
{
	// Fields
	public const NNtGhmCyIcTVHHhHsqmkUkyoQZe.HNFrmcuxsvlQCudJezJFkfgEVpb rFobbojpJYIzanfETPcXNoEpUYjh = 0;
	public const NNtGhmCyIcTVHHhHsqmkUkyoQZe.HNFrmcuxsvlQCudJezJFkfgEVpb mmVARMJeNgPzFhCEbPdQSlTtUNt = 1;
	public const NNtGhmCyIcTVHHhHsqmkUkyoQZe.HNFrmcuxsvlQCudJezJFkfgEVpb FWRVKWUtSLvoGvEHthzaKWOjYJH = 2;
	public const NNtGhmCyIcTVHHhHsqmkUkyoQZe.HNFrmcuxsvlQCudJezJFkfgEVpb ZaJylzQsmYWLaerQmUHcXmkezBb = 3;
	public const NNtGhmCyIcTVHHhHsqmkUkyoQZe.HNFrmcuxsvlQCudJezJFkfgEVpb PpIwuxfuETTZCOzlqbWdESbltdW = 4;
}
public enum ZBdWqjRRrpMQStGZMBFtHgnrSdp.FzCjAnbnlZdnIAmCxWBZEdPMMETf
{
	// Fields
	public const ZBdWqjRRrpMQStGZMBFtHgnrSdp.FzCjAnbnlZdnIAmCxWBZEdPMMETf FIZxYpycmNmDbQxAMdnkneLgidG = 0;
	public const ZBdWqjRRrpMQStGZMBFtHgnrSdp.FzCjAnbnlZdnIAmCxWBZEdPMMETf McrbwOhmUtCfnOAYJIlUYPTqNAQ = 1;
	public const ZBdWqjRRrpMQStGZMBFtHgnrSdp.FzCjAnbnlZdnIAmCxWBZEdPMMETf fAfpWZthJCbsMrInzGRyFofBbPeR = 2;
}
public enum EVREye
{
	// Fields
	public const EVREye Eye_Left = 0;
	public const EVREye Eye_Right = 1;
}
public enum ETextureType
{
	// Fields
	public const ETextureType DirectX = 0;
	public const ETextureType OpenGL = 1;
	public const ETextureType Vulkan = 2;
	public const ETextureType IOSurface = 3;
	public const ETextureType DirectX12 = 4;
}
public enum ETrackingResult
{
	// Fields
	public const ETrackingResult Uninitialized = 1;
	public const ETrackingResult Calibrating_InProgress = 100;
	public const ETrackingResult Calibrating_OutOfRange = 101;
	public const ETrackingResult Running_OK = 200;
	public const ETrackingResult Running_OutOfRange = 201;
}
public enum ETrackedDeviceClass
{
	// Fields
	public const ETrackedDeviceClass Invalid = 0;
	public const ETrackedDeviceClass HMD = 1;
	public const ETrackedDeviceClass Controller = 2;
	public const ETrackedDeviceClass GenericTracker = 3;
	public const ETrackedDeviceClass TrackingReference = 4;
	public const ETrackedDeviceClass DisplayRedirect = 5;
}
public enum ETrackedControllerRole
{
	// Fields
	public const ETrackedControllerRole Invalid = 0;
	public const ETrackedControllerRole LeftHand = 1;
	public const ETrackedControllerRole RightHand = 2;
}
public enum ETrackingUniverseOrigin
{
	// Fields
	public const ETrackingUniverseOrigin TrackingUniverseSeated = 0;
	public const ETrackingUniverseOrigin TrackingUniverseStanding = 1;
	public const ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated = 2;
}
public enum ETrackedDeviceProperty
{
	// Fields
	public const ETrackedDeviceProperty Prop_Invalid = 0;
	public const ETrackedDeviceProperty Prop_TrackingSystemName_String = 1000;
	public const ETrackedDeviceProperty Prop_ModelNumber_String = 1001;
	public const ETrackedDeviceProperty Prop_SerialNumber_String = 1002;
	public const ETrackedDeviceProperty Prop_RenderModelName_String = 1003;
	public const ETrackedDeviceProperty Prop_WillDriftInYaw_Bool = 1004;
	public const ETrackedDeviceProperty Prop_ManufacturerName_String = 1005;
	public const ETrackedDeviceProperty Prop_TrackingFirmwareVersion_String = 1006;
	public const ETrackedDeviceProperty Prop_HardwareRevision_String = 1007;
	public const ETrackedDeviceProperty Prop_AllWirelessDongleDescriptions_String = 1008;
	public const ETrackedDeviceProperty Prop_ConnectedWirelessDongle_String = 1009;
	public const ETrackedDeviceProperty Prop_DeviceIsWireless_Bool = 1010;
	public const ETrackedDeviceProperty Prop_DeviceIsCharging_Bool = 1011;
	public const ETrackedDeviceProperty Prop_DeviceBatteryPercentage_Float = 1012;
	public const ETrackedDeviceProperty Prop_StatusDisplayTransform_Matrix34 = 1013;
	public const ETrackedDeviceProperty Prop_Firmware_UpdateAvailable_Bool = 1014;
	public const ETrackedDeviceProperty Prop_Firmware_ManualUpdate_Bool = 1015;
	public const ETrackedDeviceProperty Prop_Firmware_ManualUpdateURL_String = 1016;
	public const ETrackedDeviceProperty Prop_HardwareRevision_Uint64 = 1017;
	public const ETrackedDeviceProperty Prop_FirmwareVersion_Uint64 = 1018;
	public const ETrackedDeviceProperty Prop_FPGAVersion_Uint64 = 1019;
	public const ETrackedDeviceProperty Prop_VRCVersion_Uint64 = 1020;
	public const ETrackedDeviceProperty Prop_RadioVersion_Uint64 = 1021;
	public const ETrackedDeviceProperty Prop_DongleVersion_Uint64 = 1022;
	public const ETrackedDeviceProperty Prop_BlockServerShutdown_Bool = 1023;
	public const ETrackedDeviceProperty Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024;
	public const ETrackedDeviceProperty Prop_ContainsProximitySensor_Bool = 1025;
	public const ETrackedDeviceProperty Prop_DeviceProvidesBatteryStatus_Bool = 1026;
	public const ETrackedDeviceProperty Prop_DeviceCanPowerOff_Bool = 1027;
	public const ETrackedDeviceProperty Prop_Firmware_ProgrammingTarget_String = 1028;
	public const ETrackedDeviceProperty Prop_DeviceClass_Int32 = 1029;
	public const ETrackedDeviceProperty Prop_HasCamera_Bool = 1030;
	public const ETrackedDeviceProperty Prop_DriverVersion_String = 1031;
	public const ETrackedDeviceProperty Prop_Firmware_ForceUpdateRequired_Bool = 1032;
	public const ETrackedDeviceProperty Prop_ViveSystemButtonFixRequired_Bool = 1033;
	public const ETrackedDeviceProperty Prop_ParentDriver_Uint64 = 1034;
	public const ETrackedDeviceProperty Prop_ResourceRoot_String = 1035;
	public const ETrackedDeviceProperty Prop_ReportsTimeSinceVSync_Bool = 2000;
	public const ETrackedDeviceProperty Prop_SecondsFromVsyncToPhotons_Float = 2001;
	public const ETrackedDeviceProperty Prop_DisplayFrequency_Float = 2002;
	public const ETrackedDeviceProperty Prop_UserIpdMeters_Float = 2003;
	public const ETrackedDeviceProperty Prop_CurrentUniverseId_Uint64 = 2004;
	public const ETrackedDeviceProperty Prop_PreviousUniverseId_Uint64 = 2005;
	public const ETrackedDeviceProperty Prop_DisplayFirmwareVersion_Uint64 = 2006;
	public const ETrackedDeviceProperty Prop_IsOnDesktop_Bool = 2007;
	public const ETrackedDeviceProperty Prop_DisplayMCType_Int32 = 2008;
	public const ETrackedDeviceProperty Prop_DisplayMCOffset_Float = 2009;
	public const ETrackedDeviceProperty Prop_DisplayMCScale_Float = 2010;
	public const ETrackedDeviceProperty Prop_EdidVendorID_Int32 = 2011;
	public const ETrackedDeviceProperty Prop_DisplayMCImageLeft_String = 2012;
	public const ETrackedDeviceProperty Prop_DisplayMCImageRight_String = 2013;
	public const ETrackedDeviceProperty Prop_DisplayGCBlackClamp_Float = 2014;
	public const ETrackedDeviceProperty Prop_EdidProductID_Int32 = 2015;
	public const ETrackedDeviceProperty Prop_CameraToHeadTransform_Matrix34 = 2016;
	public const ETrackedDeviceProperty Prop_DisplayGCType_Int32 = 2017;
	public const ETrackedDeviceProperty Prop_DisplayGCOffset_Float = 2018;
	public const ETrackedDeviceProperty Prop_DisplayGCScale_Float = 2019;
	public const ETrackedDeviceProperty Prop_DisplayGCPrescale_Float = 2020;
	public const ETrackedDeviceProperty Prop_DisplayGCImage_String = 2021;
	public const ETrackedDeviceProperty Prop_LensCenterLeftU_Float = 2022;
	public const ETrackedDeviceProperty Prop_LensCenterLeftV_Float = 2023;
	public const ETrackedDeviceProperty Prop_LensCenterRightU_Float = 2024;
	public const ETrackedDeviceProperty Prop_LensCenterRightV_Float = 2025;
	public const ETrackedDeviceProperty Prop_UserHeadToEyeDepthMeters_Float = 2026;
	public const ETrackedDeviceProperty Prop_CameraFirmwareVersion_Uint64 = 2027;
	public const ETrackedDeviceProperty Prop_CameraFirmwareDescription_String = 2028;
	public const ETrackedDeviceProperty Prop_DisplayFPGAVersion_Uint64 = 2029;
	public const ETrackedDeviceProperty Prop_DisplayBootloaderVersion_Uint64 = 2030;
	public const ETrackedDeviceProperty Prop_DisplayHardwareVersion_Uint64 = 2031;
	public const ETrackedDeviceProperty Prop_AudioFirmwareVersion_Uint64 = 2032;
	public const ETrackedDeviceProperty Prop_CameraCompatibilityMode_Int32 = 2033;
	public const ETrackedDeviceProperty Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034;
	public const ETrackedDeviceProperty Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035;
	public const ETrackedDeviceProperty Prop_DisplaySuppressed_Bool = 2036;
	public const ETrackedDeviceProperty Prop_DisplayAllowNightMode_Bool = 2037;
	public const ETrackedDeviceProperty Prop_DisplayMCImageWidth_Int32 = 2038;
	public const ETrackedDeviceProperty Prop_DisplayMCImageHeight_Int32 = 2039;
	public const ETrackedDeviceProperty Prop_DisplayMCImageNumChannels_Int32 = 2040;
	public const ETrackedDeviceProperty Prop_DisplayMCImageData_Binary = 2041;
	public const ETrackedDeviceProperty Prop_SecondsFromPhotonsToVblank_Float = 2042;
	public const ETrackedDeviceProperty Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043;
	public const ETrackedDeviceProperty Prop_DisplayDebugMode_Bool = 2044;
	public const ETrackedDeviceProperty Prop_GraphicsAdapterLuid_Uint64 = 2045;
	public const ETrackedDeviceProperty Prop_DriverProvidedChaperonePath_String = 2048;
	public const ETrackedDeviceProperty Prop_AttachedDeviceId_String = 3000;
	public const ETrackedDeviceProperty Prop_SupportedButtons_Uint64 = 3001;
	public const ETrackedDeviceProperty Prop_Axis0Type_Int32 = 3002;
	public const ETrackedDeviceProperty Prop_Axis1Type_Int32 = 3003;
	public const ETrackedDeviceProperty Prop_Axis2Type_Int32 = 3004;
	public const ETrackedDeviceProperty Prop_Axis3Type_Int32 = 3005;
	public const ETrackedDeviceProperty Prop_Axis4Type_Int32 = 3006;
	public const ETrackedDeviceProperty Prop_ControllerRoleHint_Int32 = 3007;
	public const ETrackedDeviceProperty Prop_FieldOfViewLeftDegrees_Float = 4000;
	public const ETrackedDeviceProperty Prop_FieldOfViewRightDegrees_Float = 4001;
	public const ETrackedDeviceProperty Prop_FieldOfViewTopDegrees_Float = 4002;
	public const ETrackedDeviceProperty Prop_FieldOfViewBottomDegrees_Float = 4003;
	public const ETrackedDeviceProperty Prop_TrackingRangeMinimumMeters_Float = 4004;
	public const ETrackedDeviceProperty Prop_TrackingRangeMaximumMeters_Float = 4005;
	public const ETrackedDeviceProperty Prop_ModeLabel_String = 4006;
	public const ETrackedDeviceProperty Prop_IconPathName_String = 5000;
	public const ETrackedDeviceProperty Prop_NamedIconPathDeviceOff_String = 5001;
	public const ETrackedDeviceProperty Prop_NamedIconPathDeviceSearching_String = 5002;
	public const ETrackedDeviceProperty Prop_NamedIconPathDeviceSearchingAlert_String = 5003;
	public const ETrackedDeviceProperty Prop_NamedIconPathDeviceReady_String = 5004;
	public const ETrackedDeviceProperty Prop_NamedIconPathDeviceReadyAlert_String = 5005;
	public const ETrackedDeviceProperty Prop_NamedIconPathDeviceNotReady_String = 5006;
	public const ETrackedDeviceProperty Prop_NamedIconPathDeviceStandby_String = 5007;
	public const ETrackedDeviceProperty Prop_NamedIconPathDeviceAlertLow_String = 5008;
	public const ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_Start = 5100;
	public const ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_End = 5150;
	public const ETrackedDeviceProperty Prop_UserConfigPath_String = 6000;
	public const ETrackedDeviceProperty Prop_InstallPath_String = 6001;
	public const ETrackedDeviceProperty Prop_HasDisplayComponent_Bool = 6002;
	public const ETrackedDeviceProperty Prop_HasControllerComponent_Bool = 6003;
	public const ETrackedDeviceProperty Prop_HasCameraComponent_Bool = 6004;
	public const ETrackedDeviceProperty Prop_HasDriverDirectModeComponent_Bool = 6005;
	public const ETrackedDeviceProperty Prop_HasVirtualDisplayComponent_Bool = 6006;
	public const ETrackedDeviceProperty Prop_VendorSpecific_Reserved_Start = 10000;
	public const ETrackedDeviceProperty Prop_VendorSpecific_Reserved_End = 10999;
}
public enum ETrackedPropertyError
{
	// Fields
	public const ETrackedPropertyError TrackedProp_Success = 0;
	public const ETrackedPropertyError TrackedProp_WrongDataType = 1;
	public const ETrackedPropertyError TrackedProp_WrongDeviceClass = 2;
	public const ETrackedPropertyError TrackedProp_BufferTooSmall = 3;
	public const ETrackedPropertyError TrackedProp_UnknownProperty = 4;
	public const ETrackedPropertyError TrackedProp_InvalidDevice = 5;
	public const ETrackedPropertyError TrackedProp_CouldNotContactServer = 6;
	public const ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice = 7;
	public const ETrackedPropertyError TrackedProp_StringExceedsMaximumLength = 8;
	public const ETrackedPropertyError TrackedProp_NotYetAvailable = 9;
	public const ETrackedPropertyError TrackedProp_PermissionDenied = 10;
	public const ETrackedPropertyError TrackedProp_InvalidOperation = 11;
}
public enum EVREventType
{
	// Fields
	public const EVREventType VREvent_None = 0;
	public const EVREventType VREvent_TrackedDeviceActivated = 100;
	public const EVREventType VREvent_TrackedDeviceDeactivated = 101;
	public const EVREventType VREvent_TrackedDeviceUpdated = 102;
	public const EVREventType VREvent_TrackedDeviceUserInteractionStarted = 103;
	public const EVREventType VREvent_TrackedDeviceUserInteractionEnded = 104;
	public const EVREventType VREvent_IpdChanged = 105;
	public const EVREventType VREvent_EnterStandbyMode = 106;
	public const EVREventType VREvent_LeaveStandbyMode = 107;
	public const EVREventType VREvent_TrackedDeviceRoleChanged = 108;
	public const EVREventType VREvent_WatchdogWakeUpRequested = 109;
	public const EVREventType VREvent_LensDistortionChanged = 110;
	public const EVREventType VREvent_PropertyChanged = 111;
	public const EVREventType VREvent_WirelessDisconnect = 112;
	public const EVREventType VREvent_WirelessReconnect = 113;
	public const EVREventType VREvent_ButtonPress = 200;
	public const EVREventType VREvent_ButtonUnpress = 201;
	public const EVREventType VREvent_ButtonTouch = 202;
	public const EVREventType VREvent_ButtonUntouch = 203;
	public const EVREventType VREvent_MouseMove = 300;
	public const EVREventType VREvent_MouseButtonDown = 301;
	public const EVREventType VREvent_MouseButtonUp = 302;
	public const EVREventType VREvent_FocusEnter = 303;
	public const EVREventType VREvent_FocusLeave = 304;
	public const EVREventType VREvent_Scroll = 305;
	public const EVREventType VREvent_TouchPadMove = 306;
	public const EVREventType VREvent_OverlayFocusChanged = 307;
	public const EVREventType VREvent_InputFocusCaptured = 400;
	public const EVREventType VREvent_InputFocusReleased = 401;
	public const EVREventType VREvent_SceneFocusLost = 402;
	public const EVREventType VREvent_SceneFocusGained = 403;
	public const EVREventType VREvent_SceneApplicationChanged = 404;
	public const EVREventType VREvent_SceneFocusChanged = 405;
	public const EVREventType VREvent_InputFocusChanged = 406;
	public const EVREventType VREvent_SceneApplicationSecondaryRenderingStarted = 407;
	public const EVREventType VREvent_HideRenderModels = 410;
	public const EVREventType VREvent_ShowRenderModels = 411;
	public const EVREventType VREvent_OverlayShown = 500;
	public const EVREventType VREvent_OverlayHidden = 501;
	public const EVREventType VREvent_DashboardActivated = 502;
	public const EVREventType VREvent_DashboardDeactivated = 503;
	public const EVREventType VREvent_DashboardThumbSelected = 504;
	public const EVREventType VREvent_DashboardRequested = 505;
	public const EVREventType VREvent_ResetDashboard = 506;
	public const EVREventType VREvent_RenderToast = 507;
	public const EVREventType VREvent_ImageLoaded = 508;
	public const EVREventType VREvent_ShowKeyboard = 509;
	public const EVREventType VREvent_HideKeyboard = 510;
	public const EVREventType VREvent_OverlayGamepadFocusGained = 511;
	public const EVREventType VREvent_OverlayGamepadFocusLost = 512;
	public const EVREventType VREvent_OverlaySharedTextureChanged = 513;
	public const EVREventType VREvent_DashboardGuideButtonDown = 514;
	public const EVREventType VREvent_DashboardGuideButtonUp = 515;
	public const EVREventType VREvent_ScreenshotTriggered = 516;
	public const EVREventType VREvent_ImageFailed = 517;
	public const EVREventType VREvent_DashboardOverlayCreated = 518;
	public const EVREventType VREvent_RequestScreenshot = 520;
	public const EVREventType VREvent_ScreenshotTaken = 521;
	public const EVREventType VREvent_ScreenshotFailed = 522;
	public const EVREventType VREvent_SubmitScreenshotToDashboard = 523;
	public const EVREventType VREvent_ScreenshotProgressToDashboard = 524;
	public const EVREventType VREvent_PrimaryDashboardDeviceChanged = 525;
	public const EVREventType VREvent_Notification_Shown = 600;
	public const EVREventType VREvent_Notification_Hidden = 601;
	public const EVREventType VREvent_Notification_BeginInteraction = 602;
	public const EVREventType VREvent_Notification_Destroyed = 603;
	public const EVREventType VREvent_Quit = 700;
	public const EVREventType VREvent_ProcessQuit = 701;
	public const EVREventType VREvent_QuitAborted_UserPrompt = 702;
	public const EVREventType VREvent_QuitAcknowledged = 703;
	public const EVREventType VREvent_DriverRequestedQuit = 704;
	public const EVREventType VREvent_ChaperoneDataHasChanged = 800;
	public const EVREventType VREvent_ChaperoneUniverseHasChanged = 801;
	public const EVREventType VREvent_ChaperoneTempDataHasChanged = 802;
	public const EVREventType VREvent_ChaperoneSettingsHaveChanged = 803;
	public const EVREventType VREvent_SeatedZeroPoseReset = 804;
	public const EVREventType VREvent_AudioSettingsHaveChanged = 820;
	public const EVREventType VREvent_BackgroundSettingHasChanged = 850;
	public const EVREventType VREvent_CameraSettingsHaveChanged = 851;
	public const EVREventType VREvent_ReprojectionSettingHasChanged = 852;
	public const EVREventType VREvent_ModelSkinSettingsHaveChanged = 853;
	public const EVREventType VREvent_EnvironmentSettingsHaveChanged = 854;
	public const EVREventType VREvent_PowerSettingsHaveChanged = 855;
	public const EVREventType VREvent_EnableHomeAppSettingsHaveChanged = 856;
	public const EVREventType VREvent_StatusUpdate = 900;
	public const EVREventType VREvent_MCImageUpdated = 1000;
	public const EVREventType VREvent_FirmwareUpdateStarted = 1100;
	public const EVREventType VREvent_FirmwareUpdateFinished = 1101;
	public const EVREventType VREvent_KeyboardClosed = 1200;
	public const EVREventType VREvent_KeyboardCharInput = 1201;
	public const EVREventType VREvent_KeyboardDone = 1202;
	public const EVREventType VREvent_ApplicationTransitionStarted = 1300;
	public const EVREventType VREvent_ApplicationTransitionAborted = 1301;
	public const EVREventType VREvent_ApplicationTransitionNewAppStarted = 1302;
	public const EVREventType VREvent_ApplicationListUpdated = 1303;
	public const EVREventType VREvent_ApplicationMimeTypeLoad = 1304;
	public const EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete = 1305;
	public const EVREventType VREvent_ProcessConnected = 1306;
	public const EVREventType VREvent_ProcessDisconnected = 1307;
	public const EVREventType VREvent_Compositor_MirrorWindowShown = 1400;
	public const EVREventType VREvent_Compositor_MirrorWindowHidden = 1401;
	public const EVREventType VREvent_Compositor_ChaperoneBoundsShown = 1410;
	public const EVREventType VREvent_Compositor_ChaperoneBoundsHidden = 1411;
	public const EVREventType VREvent_TrackedCamera_StartVideoStream = 1500;
	public const EVREventType VREvent_TrackedCamera_StopVideoStream = 1501;
	public const EVREventType VREvent_TrackedCamera_PauseVideoStream = 1502;
	public const EVREventType VREvent_TrackedCamera_ResumeVideoStream = 1503;
	public const EVREventType VREvent_TrackedCamera_EditingSurface = 1550;
	public const EVREventType VREvent_PerformanceTest_EnableCapture = 1600;
	public const EVREventType VREvent_PerformanceTest_DisableCapture = 1601;
	public const EVREventType VREvent_PerformanceTest_FidelityLevel = 1602;
	public const EVREventType VREvent_MessageOverlay_Closed = 1650;
	public const EVREventType VREvent_MessageOverlayCloseRequested = 1651;
	public const EVREventType VREvent_VendorSpecific_Reserved_Start = 10000;
	public const EVREventType VREvent_VendorSpecific_Reserved_End = 19999;
}
public enum EDeviceActivityLevel
{
	// Fields
	public const EDeviceActivityLevel k_EDeviceActivityLevel_Unknown = -1;
	public const EDeviceActivityLevel k_EDeviceActivityLevel_Idle = 0;
	public const EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction = 1;
	public const EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout = 2;
	public const EDeviceActivityLevel k_EDeviceActivityLevel_Standby = 3;
}
public enum EVRButtonId
{
	// Fields
	public const EVRButtonId k_EButton_System = 0;
	public const EVRButtonId k_EButton_ApplicationMenu = 1;
	public const EVRButtonId k_EButton_Grip = 2;
	public const EVRButtonId k_EButton_DPad_Left = 3;
	public const EVRButtonId k_EButton_DPad_Up = 4;
	public const EVRButtonId k_EButton_DPad_Right = 5;
	public const EVRButtonId k_EButton_DPad_Down = 6;
	public const EVRButtonId k_EButton_A = 7;
	public const EVRButtonId k_EButton_ProximitySensor = 31;
	public const EVRButtonId k_EButton_Axis0 = 32;
	public const EVRButtonId k_EButton_Axis1 = 33;
	public const EVRButtonId k_EButton_Axis2 = 34;
	public const EVRButtonId k_EButton_Axis3 = 35;
	public const EVRButtonId k_EButton_Axis4 = 36;
	public const EVRButtonId k_EButton_SteamVR_Touchpad = 32;
	public const EVRButtonId k_EButton_SteamVR_Trigger = 33;
	public const EVRButtonId k_EButton_Dashboard_Back = 2;
	public const EVRButtonId k_EButton_Max = 64;
}
public enum EHiddenAreaMeshType
{
	// Fields
	public const EHiddenAreaMeshType k_eHiddenAreaMesh_Standard = 0;
	public const EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse = 1;
	public const EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop = 2;
	public const EHiddenAreaMeshType k_eHiddenAreaMesh_Max = 3;
}
public enum EVRControllerAxisType
{
	// Fields
	public const EVRControllerAxisType k_eControllerAxis_None = 0;
	public const EVRControllerAxisType k_eControllerAxis_TrackPad = 1;
	public const EVRControllerAxisType k_eControllerAxis_Joystick = 2;
	public const EVRControllerAxisType k_eControllerAxis_Trigger = 3;
}
public enum EVRFirmwareError
{
	// Fields
	public const EVRFirmwareError None = 0;
	public const EVRFirmwareError Success = 1;
	public const EVRFirmwareError Fail = 2;
}
public enum EVRInitError
{
	// Fields
	public const EVRInitError None = 0;
	public const EVRInitError Unknown = 1;
	public const EVRInitError Init_InstallationNotFound = 100;
	public const EVRInitError Init_InstallationCorrupt = 101;
	public const EVRInitError Init_VRClientDLLNotFound = 102;
	public const EVRInitError Init_FileNotFound = 103;
	public const EVRInitError Init_FactoryNotFound = 104;
	public const EVRInitError Init_InterfaceNotFound = 105;
	public const EVRInitError Init_InvalidInterface = 106;
	public const EVRInitError Init_UserConfigDirectoryInvalid = 107;
	public const EVRInitError Init_HmdNotFound = 108;
	public const EVRInitError Init_NotInitialized = 109;
	public const EVRInitError Init_PathRegistryNotFound = 110;
	public const EVRInitError Init_NoConfigPath = 111;
	public const EVRInitError Init_NoLogPath = 112;
	public const EVRInitError Init_PathRegistryNotWritable = 113;
	public const EVRInitError Init_AppInfoInitFailed = 114;
	public const EVRInitError Init_Retry = 115;
	public const EVRInitError Init_InitCanceledByUser = 116;
	public const EVRInitError Init_AnotherAppLaunching = 117;
	public const EVRInitError Init_SettingsInitFailed = 118;
	public const EVRInitError Init_ShuttingDown = 119;
	public const EVRInitError Init_TooManyObjects = 120;
	public const EVRInitError Init_NoServerForBackgroundApp = 121;
	public const EVRInitError Init_NotSupportedWithCompositor = 122;
	public const EVRInitError Init_NotAvailableToUtilityApps = 123;
	public const EVRInitError Init_Internal = 124;
	public const EVRInitError Init_HmdDriverIdIsNone = 125;
	public const EVRInitError Init_HmdNotFoundPresenceFailed = 126;
	public const EVRInitError Init_VRMonitorNotFound = 127;
	public const EVRInitError Init_VRMonitorStartupFailed = 128;
	public const EVRInitError Init_LowPowerWatchdogNotSupported = 129;
	public const EVRInitError Init_InvalidApplicationType = 130;
	public const EVRInitError Init_NotAvailableToWatchdogApps = 131;
	public const EVRInitError Init_WatchdogDisabledInSettings = 132;
	public const EVRInitError Init_VRDashboardNotFound = 133;
	public const EVRInitError Init_VRDashboardStartupFailed = 134;
	public const EVRInitError Init_VRHomeNotFound = 135;
	public const EVRInitError Init_VRHomeStartupFailed = 136;
	public const EVRInitError Init_RebootingBusy = 137;
	public const EVRInitError Init_FirmwareUpdateBusy = 138;
	public const EVRInitError Init_FirmwareRecoveryBusy = 139;
	public const EVRInitError Driver_Failed = 200;
	public const EVRInitError Driver_Unknown = 201;
	public const EVRInitError Driver_HmdUnknown = 202;
	public const EVRInitError Driver_NotLoaded = 203;
	public const EVRInitError Driver_RuntimeOutOfDate = 204;
	public const EVRInitError Driver_HmdInUse = 205;
	public const EVRInitError Driver_NotCalibrated = 206;
	public const EVRInitError Driver_CalibrationInvalid = 207;
	public const EVRInitError Driver_HmdDisplayNotFound = 208;
	public const EVRInitError Driver_TrackedDeviceInterfaceUnknown = 209;
	public const EVRInitError Driver_HmdDriverIdOutOfBounds = 211;
	public const EVRInitError Driver_HmdDisplayMirrored = 212;
	public const EVRInitError IPC_ServerInitFailed = 300;
	public const EVRInitError IPC_ConnectFailed = 301;
	public const EVRInitError IPC_SharedStateInitFailed = 302;
	public const EVRInitError IPC_CompositorInitFailed = 303;
	public const EVRInitError IPC_MutexInitFailed = 304;
	public const EVRInitError IPC_Failed = 305;
	public const EVRInitError IPC_CompositorConnectFailed = 306;
	public const EVRInitError IPC_CompositorInvalidConnectResponse = 307;
	public const EVRInitError IPC_ConnectFailedAfterMultipleAttempts = 308;
	public const EVRInitError Compositor_Failed = 400;
	public const EVRInitError Compositor_D3D11HardwareRequired = 401;
	public const EVRInitError Compositor_FirmwareRequiresUpdate = 402;
	public const EVRInitError Compositor_OverlayInitFailed = 403;
	public const EVRInitError Compositor_ScreenshotsInitFailed = 404;
	public const EVRInitError Compositor_UnableToCreateDevice = 405;
	public const EVRInitError VendorSpecific_UnableToConnectToOculusRuntime = 1000;
	public const EVRInitError VendorSpecific_HmdFound_CantOpenDevice = 1101;
	public const EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102;
	public const EVRInitError VendorSpecific_HmdFound_NoStoredConfig = 1103;
	public const EVRInitError VendorSpecific_HmdFound_ConfigTooBig = 1104;
	public const EVRInitError VendorSpecific_HmdFound_ConfigTooSmall = 1105;
	public const EVRInitError VendorSpecific_HmdFound_UnableToInitZLib = 1106;
	public const EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107;
	public const EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108;
	public const EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109;
	public const EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110;
	public const EVRInitError VendorSpecific_HmdFound_UserDataAddressRange = 1111;
	public const EVRInitError VendorSpecific_HmdFound_UserDataError = 1112;
	public const EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113;
	public const EVRInitError Steam_SteamInstallationNotFound = 2000;
}
public enum Browser.NewWindowAction
{
	// Fields
	public const Browser.NewWindowAction Ignore = 1;
	public const Browser.NewWindowAction Redirect = 2;
	public const Browser.NewWindowAction NewBrowser = 3;
	public const Browser.NewWindowAction NewWindow = 4;
}
public enum BrowserNative.LoadChange
{
	// Fields
	public const BrowserNative.LoadChange LC_STOP = 1;
	public const BrowserNative.LoadChange LC_RELOAD = 2;
	public const BrowserNative.LoadChange LC_FORCE_RELOAD = 3;
}
public enum BrowserNative.MouseButton
{
	// Fields
	public const BrowserNative.MouseButton MBT_LEFT = 0;
	public const BrowserNative.MouseButton MBT_MIDDLE = 1;
	public const BrowserNative.MouseButton MBT_RIGHT = 2;
}
public enum BrowserNative.ChangeType
{
	// Fields
	public const BrowserNative.ChangeType CHT_CURSOR = 0;
	public const BrowserNative.ChangeType CHT_BROWSER_CLOSE = 1;
	public const BrowserNative.ChangeType CHT_FETCH_FINISHED = 2;
	public const BrowserNative.ChangeType CHT_FETCH_FAILED = 3;
	public const BrowserNative.ChangeType CHT_LOAD_FINISHED = 4;
	public const BrowserNative.ChangeType CHT_CERT_ERROR = 5;
	public const BrowserNative.ChangeType CHT_SAD_TAB = 6;
	public const BrowserNative.ChangeType CHT_DOWNLOAD_STARTED = 7;
	public const BrowserNative.ChangeType CHT_DOWNLOAD_STATUS = 8;
	public const BrowserNative.ChangeType CHT_FOCUSED_NODE = 9;
	public const BrowserNative.ChangeType CHT_GET_UNIWEBVIEW_MSG = 10;
	public const BrowserNative.ChangeType CHT_BEFORE_NAVIGATION = 11;
}
public enum BrowserNative.DownloadAction
{
	// Fields
	public const BrowserNative.DownloadAction Begin = 0;
	public const BrowserNative.DownloadAction Cancel = 1;
	public const BrowserNative.DownloadAction Pause = 2;
	public const BrowserNative.DownloadAction Resume = 3;
}
public enum BrowserNative.CursorType
{
	// Fields
	public const BrowserNative.CursorType Pointer = 0;
	public const BrowserNative.CursorType Cross = 1;
	public const BrowserNative.CursorType Hand = 2;
	public const BrowserNative.CursorType IBeam = 3;
	public const BrowserNative.CursorType Wait = 4;
	public const BrowserNative.CursorType Help = 5;
	public const BrowserNative.CursorType EastResize = 6;
	public const BrowserNative.CursorType NorthResize = 7;
	public const BrowserNative.CursorType NorthEastResize = 8;
	public const BrowserNative.CursorType NorthWestResize = 9;
	public const BrowserNative.CursorType SouthResize = 10;
	public const BrowserNative.CursorType SouthEastResize = 11;
	public const BrowserNative.CursorType SouthWestResize = 12;
	public const BrowserNative.CursorType WestResize = 13;
	public const BrowserNative.CursorType NorthSouthResize = 14;
	public const BrowserNative.CursorType EastWestResize = 15;
	public const BrowserNative.CursorType NorthEastSouthWestResize = 16;
	public const BrowserNative.CursorType NorthWestSouthEastResize = 17;
	public const BrowserNative.CursorType ColumnResize = 18;
	public const BrowserNative.CursorType RowResize = 19;
	public const BrowserNative.CursorType MiddlePanning = 20;
	public const BrowserNative.CursorType EastPanning = 21;
	public const BrowserNative.CursorType NorthPanning = 22;
	public const BrowserNative.CursorType NorthEastPanning = 23;
	public const BrowserNative.CursorType NorthWestPanning = 24;
	public const BrowserNative.CursorType SouthPanning = 25;
	public const BrowserNative.CursorType SouthEastPanning = 26;
	public const BrowserNative.CursorType SouthWestPanning = 27;
	public const BrowserNative.CursorType WestPanning = 28;
	public const BrowserNative.CursorType Move = 29;
	public const BrowserNative.CursorType VerticalText = 30;
	public const BrowserNative.CursorType Cell = 31;
	public const BrowserNative.CursorType ContextMenu = 32;
	public const BrowserNative.CursorType Alias = 33;
	public const BrowserNative.CursorType Progress = 34;
	public const BrowserNative.CursorType NoDrop = 35;
	public const BrowserNative.CursorType Copy = 36;
	public const BrowserNative.CursorType None = 37;
	public const BrowserNative.CursorType NotAllowed = 38;
	public const BrowserNative.CursorType ZoomIn = 39;
	public const BrowserNative.CursorType ZoomOut = 40;
	public const BrowserNative.CursorType Grab = 41;
	public const BrowserNative.CursorType Grabbing = 42;
	public const BrowserNative.CursorType Custom = 43;
}
public enum BrowserNative.DialogType
{
	// Fields
	public const BrowserNative.DialogType DLT_HIDE = 0;
	public const BrowserNative.DialogType DLT_ALERT = 1;
	public const BrowserNative.DialogType DLT_CONFIRM = 2;
	public const BrowserNative.DialogType DLT_PROMPT = 3;
	public const BrowserNative.DialogType DLT_PAGE_UNLOAD = 4;
	public const BrowserNative.DialogType DLT_PAGE_RELOAD = 5;
	public const BrowserNative.DialogType DLT_GET_AUTH = 6;
}
public enum BrowserNative.NewWindowAction
{
	// Fields
	public const BrowserNative.NewWindowAction NWA_IGNORE = 1;
	public const BrowserNative.NewWindowAction NWA_REDIRECT = 2;
	public const BrowserNative.NewWindowAction NWA_NEW_BROWSER = 3;
	public const BrowserNative.NewWindowAction NWA_NEW_WINDOW = 4;
}
public enum BrowserNative.ContextMenuOrigin
{
	// Fields
	public const BrowserNative.ContextMenuOrigin Editable = 2;
	public const BrowserNative.ContextMenuOrigin Image = 4;
	public const BrowserNative.ContextMenuOrigin Selection = 8;
	public const BrowserNative.ContextMenuOrigin Other = 1;
}
public enum BrowserNative.FrameCommand
{
	// Fields
	public const BrowserNative.FrameCommand Undo = 0;
	public const BrowserNative.FrameCommand Redo = 1;
	public const BrowserNative.FrameCommand Cut = 2;
	public const BrowserNative.FrameCommand Copy = 3;
	public const BrowserNative.FrameCommand Paste = 4;
	public const BrowserNative.FrameCommand Delete = 5;
	public const BrowserNative.FrameCommand SelectAll = 6;
	public const BrowserNative.FrameCommand ViewSource = 7;
}
public enum BrowserNative.CookieAction
{
	// Fields
	public const BrowserNative.CookieAction Delete = 0;
	public const BrowserNative.CookieAction Create = 1;
}
public enum MouseButton
{
	// Fields
	public const MouseButton Left = 1;
	public const MouseButton Middle = 2;
	public const MouseButton Right = 4;
}
public enum JSONNode.NodeType
{
	// Fields
	public const JSONNode.NodeType Invalid = 0;
	public const JSONNode.NodeType String = 1;
	public const JSONNode.NodeType Number = 2;
	public const JSONNode.NodeType Object = 3;
	public const JSONNode.NodeType Array = 4;
	public const JSONNode.NodeType Bool = 5;
	public const JSONNode.NodeType Null = 6;
}
public enum PromiseState
{
	// Fields
	public const PromiseState Pending = 0;
	public const PromiseState Rejected = 1;
	public const PromiseState Resolved = 2;
}
public enum KeyAction
{
	// Fields
	public const KeyAction Press = 0;
	public const KeyAction Release = 1;
	public const KeyAction PressAndRelease = 2;
}
public enum InputAxis
{
	// Fields
	public const InputAxis MainTrigger = 0;
	public const InputAxis Grip = 1;
	public const InputAxis JoypadX = 2;
	public const InputAxis JoypadY = 3;
	public const InputAxis Joypad = 4;
	public const InputAxis Application = 5;
}
public enum JoyPadType
{
	// Fields
	public const JoyPadType None = 0;
	public const JoyPadType Joystick = 1;
	public const JoyPadType TouchPad = 2;
}
public enum DecalParticleRenderer.MeshType
{
	// Fields
	public const DecalParticleRenderer.MeshType Cube = 0;
	public const DecalParticleRenderer.MeshType Cylinder = 1;
}
public enum TessellationPreprocessor.RendererType
{
	// Fields
	public const TessellationPreprocessor.RendererType Static = 0;
	public const TessellationPreprocessor.RendererType Skinned = 1;
	public const TessellationPreprocessor.RendererType Both = 2;
}
public enum InLevelBlockInformDialogContext.BlockDialogType
{
	// Fields
	public const InLevelBlockInformDialogContext.BlockDialogType None = 0;
	public const InLevelBlockInformDialogContext.BlockDialogType BlockInSelfWorld = 1;
	public const InLevelBlockInformDialogContext.BlockDialogType BlockInMP = 2;
	public const InLevelBlockInformDialogContext.BlockDialogType KickFromMpByHostBlock = 3;
}
public enum DynamicBoneColliderBaseMMD.Direction
{
	// Fields
	public const DynamicBoneColliderBaseMMD.Direction X = 0;
	public const DynamicBoneColliderBaseMMD.Direction Y = 1;
	public const DynamicBoneColliderBaseMMD.Direction Z = 2;
}
public enum DynamicBoneColliderBaseMMD.Bound
{
	// Fields
	public const DynamicBoneColliderBaseMMD.Bound Outside = 0;
	public const DynamicBoneColliderBaseMMD.Bound Inside = 1;
}
public enum EffectEnvPlatformType
{
	// Fields
	public const EffectEnvPlatformType AllPlatform = 0;
	public const EffectEnvPlatformType OnlySmallScreen = 1;
	public const EffectEnvPlatformType OnlyBigScreen = 2;
}
public enum EffectEnvDetailPlatformType
{
	// Fields
	public const EffectEnvDetailPlatformType None = 0;
	public const EffectEnvDetailPlatformType Mobile = 3;
	public const EffectEnvDetailPlatformType PS4Base = 4;
	public const EffectEnvDetailPlatformType PS4Pro = 8;
	public const EffectEnvDetailPlatformType PCLowAndVeryLow = 48;
	public const EffectEnvDetailPlatformType PCMiddle = 64;
	public const EffectEnvDetailPlatformType PCHighAndUltraHigh = 640;
	public const EffectEnvDetailPlatformType PS5 = 256;
	public const EffectEnvDetailPlatformType AllPlatform = -1;
}
public enum EnviroProfile.ArtificialLightActiveType
{
	// Fields
	public const EnviroProfile.ArtificialLightActiveType DayNight = 0;
	public const EnviroProfile.ArtificialLightActiveType CustomInterval = 1;
}
public enum EnviroProfile.EnviroSettingsMode
{
	// Fields
	public const EnviroProfile.EnviroSettingsMode Header = 0;
	public const EnviroProfile.EnviroSettingsMode Lighting = 1;
	public const EnviroProfile.EnviroSettingsMode Sky = 2;
	public const EnviroProfile.EnviroSettingsMode Clouds = 3;
	public const EnviroProfile.EnviroSettingsMode Fog = 4;
	public const EnviroProfile.EnviroSettingsMode Transition = 5;
	public const EnviroProfile.EnviroSettingsMode Quality = 6;
	public const EnviroProfile.EnviroSettingsMode CharacterLight = 7;
}
public enum EnviroVolumePreset.VolumeWetnessAndRainSnowEffectType
{
	// Fields
	public const EnviroVolumePreset.VolumeWetnessAndRainSnowEffectType Custom = 0;
	public const EnviroVolumePreset.VolumeWetnessAndRainSnowEffectType Outdoor = 1;
	public const EnviroVolumePreset.VolumeWetnessAndRainSnowEffectType CaveOrRoom = 2;
	public const EnviroVolumePreset.VolumeWetnessAndRainSnowEffectType ParticleOverride = 3;
}
public enum EnviroConfigColorType
{
	// Fields
	public const EnviroConfigColorType Color = 0;
	public const EnviroConfigColorType Gradient = 1;
	public const EnviroConfigColorType NO = 2;
}
public enum EnviroConfigValueType
{
	// Fields
	public const EnviroConfigValueType Value = 0;
	public const EnviroConfigValueType Curve = 1;
	public const EnviroConfigValueType NO = 2;
}
public enum EnviroConfigBoolType
{
	// Fields
	public const EnviroConfigBoolType Boolean = 0;
	public const EnviroConfigBoolType NO = 1;
}
public enum EnviroConfigTexType
{
	// Fields
	public const EnviroConfigTexType Tex = 0;
	public const EnviroConfigTexType NO = 1;
}
public enum EnviroConfigType
{
	// Fields
	public const EnviroConfigType Color = 0;
	public const EnviroConfigType Gradient = 1;
	public const EnviroConfigType Value = 2;
	public const EnviroConfigType Curve = 3;
	public const EnviroConfigType SingleFloat = 4;
	public const EnviroConfigType Bool = 5;
	public const EnviroConfigType Tex = 6;
	public const EnviroConfigType Vec2 = 7;
	public const EnviroConfigType Vec3 = 8;
	public const EnviroConfigType Vec4 = 9;
}
public enum VariantPlatformType
{
	// Fields
	public const VariantPlatformType Default = 0;
	public const VariantPlatformType Android = 1;
	public const VariantPlatformType IOS = 2;
	public const VariantPlatformType PC = 3;
	public const VariantPlatformType PS4Base = 4;
	public const VariantPlatformType PS4Pro = 5;
	public const VariantPlatformType PS5 = 6;
}
public enum VariantShadowQualityType
{
	// Fields
	public const VariantShadowQualityType Default = 0;
	public const VariantShadowQualityType MediumOrLower = 1;
	public const VariantShadowQualityType High = 2;
	public const VariantShadowQualityType VeryHigh = 3;
}
public enum MonoPostProcessCustomEffectParamWrapper.ParamType
{
	// Fields
	public const MonoPostProcessCustomEffectParamWrapper.ParamType TypeFloat = 0;
	public const MonoPostProcessCustomEffectParamWrapper.ParamType TypeColor = 1;
	public const MonoPostProcessCustomEffectParamWrapper.ParamType TypeTextureTilingAndOffset = 2;
	public const MonoPostProcessCustomEffectParamWrapper.ParamType TypeTransformWorldPos = 3;
	public const MonoPostProcessCustomEffectParamWrapper.ParamType TypeTransformScreenPos = 4;
}
public enum SceneTreeConfig.TreeType
{
	// Fields
	public const SceneTreeConfig.TreeType DefaultTree = 0;
	public const SceneTreeConfig.TreeType BroadLeaf = 1;
}
public enum SceneChairConfig.SitDirection
{
	// Fields
	public const SceneChairConfig.SitDirection LeftOfChair = -1;
	public const SceneChairConfig.SitDirection FrontOfChair = 0;
	public const SceneChairConfig.SitDirection RightOfChair = 1;
}
public enum SECTR_SceneSplitterConfig.SplitType
{
	// Fields
	public const SECTR_SceneSplitterConfig.SplitType BigWorld = 0;
	public const SECTR_SceneSplitterConfig.SplitType Dungeon = 1;
	public const SECTR_SceneSplitterConfig.SplitType Home = 2;
	public const SECTR_SceneSplitterConfig.SplitType Indoor = 3;
}
public enum LODType
{
	// Fields
	public const LODType LOD0 = 0;
	public const LODType LOD1 = 1;
	public const LODType LOD2 = 2;
	public const LODType LOD3 = 3;
	public const LODType LOD9 = 9;
	public const LODType Count = 10;
	public const LODType Invalid = 999;
}
public enum GenFlag
{
	// Fields
	public const GenFlag No = 0;
	public const GenFlag GCOptimize = 1;
}
public enum LuaTypes
{
	// Fields
	public const LuaTypes LUA_TNONE = -1;
	public const LuaTypes LUA_TNIL = 0;
	public const LuaTypes LUA_TNUMBER = 3;
	public const LuaTypes LUA_TSTRING = 4;
	public const LuaTypes LUA_TBOOLEAN = 1;
	public const LuaTypes LUA_TTABLE = 5;
	public const LuaTypes LUA_TFUNCTION = 6;
	public const LuaTypes LUA_TUSERDATA = 7;
	public const LuaTypes LUA_TTHREAD = 8;
	public const LuaTypes LUA_TLIGHTUSERDATA = 2;
}
public enum LuaGCOptions
{
	// Fields
	public const LuaGCOptions LUA_GCSTOP = 0;
	public const LuaGCOptions LUA_GCRESTART = 1;
	public const LuaGCOptions LUA_GCCOLLECT = 2;
	public const LuaGCOptions LUA_GCCOUNT = 3;
	public const LuaGCOptions LUA_GCCOUNTB = 4;
	public const LuaGCOptions LUA_GCSTEP = 5;
	public const LuaGCOptions LUA_GCSETPAUSE = 6;
	public const LuaGCOptions LUA_GCSETSTEPMUL = 7;
}
public enum LazyMemberTypes
{
	// Fields
	public const LazyMemberTypes Method = 0;
	public const LazyMemberTypes FieldGet = 1;
	public const LazyMemberTypes FieldSet = 2;
	public const LazyMemberTypes PropertyGet = 3;
	public const LazyMemberTypes PropertySet = 4;
	public const LazyMemberTypes Event = 5;
}
public enum TokenType
{
	// Fields
	public const TokenType Code = 0;
	public const TokenType Eval = 1;
	public const TokenType Text = 2;
}
public enum RelationshipType
{
	// Fields
	public const RelationshipType TableValue = 1;
	public const RelationshipType NumberKeyTableValue = 2;
	public const RelationshipType KeyOfTable = 3;
	public const RelationshipType Metatable = 4;
	public const RelationshipType Upvalue = 5;
}
public enum DynamicBoneArray.UpdateMode
{
	// Fields
	public const DynamicBoneArray.UpdateMode Normal = 0;
	public const DynamicBoneArray.UpdateMode AnimatePhysics = 1;
	public const DynamicBoneArray.UpdateMode UnscaledTime = 2;
	public const DynamicBoneArray.UpdateMode OncePerFrame = 3;
	public const DynamicBoneArray.UpdateMode OncePerFixedUpdate = 4;
}
public enum DynamicBoneArray.FreezeAxis
{
	// Fields
	public const DynamicBoneArray.FreezeAxis None = 0;
	public const DynamicBoneArray.FreezeAxis X = 1;
	public const DynamicBoneArray.FreezeAxis Y = 2;
	public const DynamicBoneArray.FreezeAxis Z = 3;
}
public enum DynamicBoneArray.DebugDrawOption
{
	// Fields
	public const DynamicBoneArray.DebugDrawOption None = 0;
	public const DynamicBoneArray.DebugDrawOption Selected = 1;
	public const DynamicBoneArray.DebugDrawOption Always = 2;
}
public enum MainDirection
{
	// Fields
	public const MainDirection X = 0;
	public const MainDirection Y = 1;
	public const MainDirection Z = 2;
}
public enum DynamicBoneRigidArray.UpdateMode
{
	// Fields
	public const DynamicBoneRigidArray.UpdateMode Normal = 0;
	public const DynamicBoneRigidArray.UpdateMode AnimatePhysics = 1;
	public const DynamicBoneRigidArray.UpdateMode UnscaledTime = 2;
}
public enum DynamicBoneRigidArray.FreezeAxis
{
	// Fields
	public const DynamicBoneRigidArray.FreezeAxis None = 0;
	public const DynamicBoneRigidArray.FreezeAxis X = 1;
	public const DynamicBoneRigidArray.FreezeAxis Y = 2;
	public const DynamicBoneRigidArray.FreezeAxis Z = 3;
}
public enum DynamicBoneRigidArray.DebugDrawOption
{
	// Fields
	public const DynamicBoneRigidArray.DebugDrawOption None = 0;
	public const DynamicBoneRigidArray.DebugDrawOption Selected = 1;
	public const DynamicBoneRigidArray.DebugDrawOption Always = 2;
}
public enum Lexer.Token
{
	// Fields
	public const Lexer.Token None = 0;
	public const Lexer.Token Null = 1;
	public const Lexer.Token True = 2;
	public const Lexer.Token False = 3;
	public const Lexer.Token Colon = 4;
	public const Lexer.Token Comma = 5;
	public const Lexer.Token String = 6;
	public const Lexer.Token Number = 7;
	public const Lexer.Token CurlyOpen = 8;
	public const Lexer.Token CurlyClose = 9;
	public const Lexer.Token SquaredOpen = 10;
	public const Lexer.Token SquaredClose = 11;
}
public enum MixBlend
{
	// Fields
	public const MixBlend Setup = 0;
	public const MixBlend First = 1;
	public const MixBlend Replace = 2;
	public const MixBlend Add = 3;
}
public enum MixDirection
{
	// Fields
	public const MixDirection In = 0;
	public const MixDirection Out = 1;
}
public enum Format
{
	// Fields
	public const Format Alpha = 0;
	public const Format Intensity = 1;
	public const Format LuminanceAlpha = 2;
	public const Format RGB565 = 3;
	public const Format RGBA4444 = 4;
	public const Format RGB888 = 5;
	public const Format RGBA8888 = 6;
}
public enum TextureFilter
{
	// Fields
	public const TextureFilter Nearest = 0;
	public const TextureFilter Linear = 1;
	public const TextureFilter MipMap = 2;
	public const TextureFilter MipMapNearestNearest = 3;
	public const TextureFilter MipMapLinearNearest = 4;
	public const TextureFilter MipMapNearestLinear = 5;
	public const TextureFilter MipMapLinearLinear = 6;
}
public enum TextureWrap
{
	// Fields
	public const TextureWrap MirroredRepeat = 0;
	public const TextureWrap ClampToEdge = 1;
	public const TextureWrap Repeat = 2;
}
public enum AttachmentType
{
	// Fields
	public const AttachmentType Region = 0;
	public const AttachmentType Boundingbox = 1;
	public const AttachmentType Mesh = 2;
	public const AttachmentType Linkedmesh = 3;
	public const AttachmentType Path = 4;
	public const AttachmentType Point = 5;
	public const AttachmentType Clipping = 6;
}
public enum BlendMode
{
	// Fields
	public const BlendMode Normal = 0;
	public const BlendMode Additive = 1;
	public const BlendMode Multiply = 2;
	public const BlendMode Screen = 3;
}
public enum TransformMode
{
	// Fields
	public const TransformMode Normal = 0;
	public const TransformMode OnlyTranslation = 7;
	public const TransformMode NoRotationOrReflection = 1;
	public const TransformMode NoScale = 2;
	public const TransformMode NoScaleOrReflection = 6;
}
public enum PositionMode
{
	// Fields
	public const PositionMode Fixed = 0;
	public const PositionMode Percent = 1;
}
public enum SpacingMode
{
	// Fields
	public const SpacingMode Length = 0;
	public const SpacingMode Fixed = 1;
	public const SpacingMode Percent = 2;
	public const SpacingMode Proportional = 3;
}
public enum RotateMode
{
	// Fields
	public const RotateMode Tangent = 0;
	public const RotateMode Chain = 1;
	public const RotateMode ChainScale = 2;
}
public enum BoneFollower.AxisOrientation
{
	// Fields
	public const BoneFollower.AxisOrientation XAxis = 1;
	public const BoneFollower.AxisOrientation YAxis = 2;
}
public enum SkeletonMecanim.MecanimTranslator.MixMode
{
	// Fields
	public const SkeletonMecanim.MecanimTranslator.MixMode AlwaysMix = 0;
	public const SkeletonMecanim.MecanimTranslator.MixMode MixNext = 1;
	public const SkeletonMecanim.MecanimTranslator.MixMode Hard = 2;
}
public enum SkeletonUtilityBone.Mode
{
	// Fields
	public const SkeletonUtilityBone.Mode Follow = 0;
	public const SkeletonUtilityBone.Mode Override = 1;
}
public enum SkeletonUtilityBone.UpdatePhase
{
	// Fields
	public const SkeletonUtilityBone.UpdatePhase Local = 0;
	public const SkeletonUtilityBone.UpdatePhase World = 1;
	public const SkeletonUtilityBone.UpdatePhase Complete = 2;
}
public enum UpdateMode
{
	// Fields
	public const UpdateMode Nothing = 0;
	public const UpdateMode OnlyAnimationStatus = 1;
	public const UpdateMode OnlyEventTimelines = 4;
	public const UpdateMode EverythingExceptMesh = 2;
	public const UpdateMode FullUpdate = 3;
}
public enum NavMeshModifierPolygonVolume.Shape
{
	// Fields
	public const NavMeshModifierPolygonVolume.Shape KeepInArea = 0;
	public const NavMeshModifierPolygonVolume.Shape KeepOutArea = 1;
}
public enum CollectObjects
{
	// Fields
	public const CollectObjects All = 0;
	public const CollectObjects Volume = 1;
	public const CollectObjects Children = 2;
}
public enum OCEIMDJANPL
{
	// Fields
	public const OCEIMDJANPL AbilityNone = 0;
	public const OCEIMDJANPL AbilityMetaModifierChange = 1;
	public const OCEIMDJANPL AbilityMetaCommandModifierChangeRequest = 2;
	public const OCEIMDJANPL AbilityMetaSpecialFloatArgument = 3;
	public const OCEIMDJANPL AbilityMetaOverrideParam = 4;
	public const OCEIMDJANPL AbilityMetaClearOverrideParam = 5;
	public const OCEIMDJANPL AbilityMetaReinitOverridemap = 6;
	public const OCEIMDJANPL AbilityMetaGlobalFloatValue = 7;
	public const OCEIMDJANPL AbilityMetaClearGlobalFloatValue = 8;
	public const OCEIMDJANPL AbilityMetaAbilityElementStrength = 9;
	public const OCEIMDJANPL AbilityMetaAddOrGetAbilityAndTrigger = 10;
	public const OCEIMDJANPL AbilityMetaSetKilledSetate = 11;
	public const OCEIMDJANPL AbilityMetaSetAbilityTrigger = 12;
	public const OCEIMDJANPL AbilityMetaAddNewAbility = 13;
	public const OCEIMDJANPL AbilityMetaRemoveAbility = 14;
	public const OCEIMDJANPL AbilityMetaSetModifierApplyEntity = 15;
	public const OCEIMDJANPL AbilityMetaModifierDurabilityChange = 16;
	public const OCEIMDJANPL AbilityMetaElementReactionVisual = 17;
	public const OCEIMDJANPL AbilityMetaSetPoseParameter = 18;
	public const OCEIMDJANPL AbilityMetaUpdateBaseReactionDamage = 19;
	public const OCEIMDJANPL AbilityMetaTriggerElementReaction = 20;
	public const OCEIMDJANPL AbilityMetaLoseHp = 21;
	public const OCEIMDJANPL AbilityMetaDurabilityIsZero = 22;
	public const OCEIMDJANPL AbilityActionTriggerAbility = 50;
	public const OCEIMDJANPL AbilityActionSetCrashDamage = 51;
	public const OCEIMDJANPL AbilityActionEffect = 52;
	public const OCEIMDJANPL AbilityActionSummon = 53;
	public const OCEIMDJANPL AbilityActionBlink = 54;
	public const OCEIMDJANPL AbilityActionCreateGadget = 55;
	public const OCEIMDJANPL AbilityActionApplyLevelModifier = 56;
	public const OCEIMDJANPL AbilityActionGenerateElemBall = 57;
	public const OCEIMDJANPL AbilityActionSetRandomOverrideMapValue = 58;
	public const OCEIMDJANPL AbilityActionServerMonsterLog = 59;
	public const OCEIMDJANPL AbilityActionCreateTile = 60;
	public const OCEIMDJANPL AbilityActionDestroyTile = 61;
	public const OCEIMDJANPL AbilityActionFireAfterImage = 62;
	public const OCEIMDJANPL AbilityActionDeductStamina = 63;
	public const OCEIMDJANPL AbilityActionHitEffect = 64;
	public const OCEIMDJANPL AbilityActionSetBulletTrackTarget = 65;
	public const OCEIMDJANPL AbilityActionFireworkEffect = 66;
	public const OCEIMDJANPL AbilityMixinAvatarSteerByCamera = 100;
	public const OCEIMDJANPL AbilityMixinMonsterDefend = 101;
	public const OCEIMDJANPL AbilityMixinWindZone = 102;
	public const OCEIMDJANPL AbilityMixinCostStamina = 103;
	public const OCEIMDJANPL AbilityMixinEliteShield = 104;
	public const OCEIMDJANPL AbilityMixinElementShield = 105;
	public const OCEIMDJANPL AbilityMixinGlobalShield = 106;
	public const OCEIMDJANPL AbilityMixinShieldBar = 107;
	public const OCEIMDJANPL AbilityMixinWindSeedSpawner = 108;
	public const OCEIMDJANPL AbilityMixinDoActionByElementReaction = 109;
	public const OCEIMDJANPL AbilityMixinFieldEntityCountChange = 110;
	public const OCEIMDJANPL AbilityMixinScenePropSync = 111;
	public const OCEIMDJANPL AbilityMixinWidgetMpSupport = 112;
	public const OCEIMDJANPL AbilityMixinDoActionBySelfModifierElementDurabilityRatio = 113;
	public const OCEIMDJANPL AbilityMixinFireworksLauncher = 114;
	public const OCEIMDJANPL AbilityMixinAttackResultCreateCount = 115;
	public const OCEIMDJANPL AbilityMixinUgcTimeControl = 116;
	public const OCEIMDJANPL AbilityMixinAvatarCombat = 117;
	public const OCEIMDJANPL AbilityMixinDeathZoneRegionalPlayMixin = 118;
	public const OCEIMDJANPL AbilityMixinUiInteract = 119;
	public const OCEIMDJANPL AbilityMixinShootFromCamera = 120;
	public const OCEIMDJANPL AbilityMixinEraseBrickActivity = 121;
	public const OCEIMDJANPL AbilityMixinBreakout = 122;
	public const OCEIMDJANPL AbilityMixinDamageLoan = 123;
	public const OCEIMDJANPL AbilityMixinBroadcastGv = 124;
	public const OCEIMDJANPL AbilityMixinReceiveGv = 125;
	public const OCEIMDJANPL AbilityMixinEnergyCrystalTarget = 127;
}
public enum HPODJPJFNAC
{
	// Fields
	public const HPODJPJFNAC Added = 0;
	public const HPODJPJFNAC Removed = 1;
}
public enum JMDAKCMNMIB.PNCOGJHOLLI
{
	// Fields
	public const JMDAKCMNMIB.PNCOGJHOLLI None = 0;
	public const JMDAKCMNMIB.PNCOGJHOLLI AddSignal = 6;
	public const JMDAKCMNMIB.PNCOGJHOLLI RefreshSeed = 1;
	public const JMDAKCMNMIB.PNCOGJHOLLI CatchSeed = 4;
}
public enum FFKGDKFKJCD.JFDGMLDPEBK
{
	// Fields
	public const FFKGDKFKJCD.JFDGMLDPEBK None = 0;
	public const FFKGDKFKJCD.JFDGMLDPEBK SyncCreateConnect = 3;
	public const FFKGDKFKJCD.JFDGMLDPEBK SyncPing = 6;
	public const FFKGDKFKJCD.JFDGMLDPEBK SyncFinishGame = 1;
	public const FFKGDKFKJCD.JFDGMLDPEBK SyncSnapShot = 9;
	public const FFKGDKFKJCD.JFDGMLDPEBK SyncAction = 2;
}
public enum FFKGDKFKJCD.CIEFEIOPGCK.ACIFCBGMPPK
{
	// Fields
	public const FFKGDKFKJCD.CIEFEIOPGCK.ACIFCBGMPPK None = 0;
	public const FFKGDKFKJCD.CIEFEIOPGCK.ACIFCBGMPPK CreateConnect = 1;
	public const FFKGDKFKJCD.CIEFEIOPGCK.ACIFCBGMPPK StartGame = 2;
	public const FFKGDKFKJCD.CIEFEIOPGCK.ACIFCBGMPPK Ping = 3;
	public const FFKGDKFKJCD.CIEFEIOPGCK.ACIFCBGMPPK FinishGame = 4;
	public const FFKGDKFKJCD.CIEFEIOPGCK.ACIFCBGMPPK SnapShot = 5;
	public const FFKGDKFKJCD.CIEFEIOPGCK.ACIFCBGMPPK Action = 6;
}
public enum MHPFILLGJOJ.OCKHFIJFFKH
{
	// Fields
	public const MHPFILLGJOJ.OCKHFIJFFKH None = 0;
	public const MHPFILLGJOJ.OCKHFIJFFKH RefreshNotify = 12;
	public const MHPFILLGJOJ.OCKHFIJFFKH AddWindBulletNotify = 11;
	public const MHPFILLGJOJ.OCKHFIJFFKH AreaNotify = 2;
}
public enum PMHDPEOJPNM.CIBCILBBOKA.CFLHPGFIDBE
{
	// Fields
	public const PMHDPEOJPNM.CIBCILBBOKA.CFLHPGFIDBE Invalue = 0;
	public const PMHDPEOJPNM.CIBCILBBOKA.CFLHPGFIDBE Add = 1;
	public const PMHDPEOJPNM.CIBCILBBOKA.CFLHPGFIDBE Set = 2;
}
public enum PJPCHDNKAEC.LPDFCPPPEHG.DPGKAGJABPH
{
	// Fields
	public const PJPCHDNKAEC.LPDFCPPPEHG.DPGKAGJABPH None = 0;
	public const PJPCHDNKAEC.LPDFCPPPEHG.DPGKAGJABPH Effect = 1;
}
public enum PBPLDMMEGBO.CFCPNDLHNJH.OPFLKOJMOIG
{
	// Fields
	public const PBPLDMMEGBO.CFCPNDLHNJH.OPFLKOJMOIG Invalid = 0;
	public const PBPLDMMEGBO.CFCPNDLHNJH.OPFLKOJMOIG Unfinished = 1;
	public const PBPLDMMEGBO.CFCPNDLHNJH.OPFLKOJMOIG Finished = 2;
	public const PBPLDMMEGBO.CFCPNDLHNJH.OPFLKOJMOIG RewardTaken = 3;
}
public enum KBMBFAGBEII
{
	// Fields
	public const KBMBFAGBEII RogueCellNone = 0;
	public const KBMBFAGBEII RogueCellBattle = 1;
	public const KBMBFAGBEII RogueCellSuccess = 2;
	public const KBMBFAGBEII RogueCellFinish = 3;
	public const KBMBFAGBEII RogueCellTakenChest = 4;
}
public enum JMMIILKOMNH
{
	// Fields
	public const JMMIILKOMNH RogueEliteNormal = 0;
	public const JMMIILKOMNH RogueEliteHard = 1;
}
public enum EDHNIJFDFDO
{
	// Fields
	public const EDHNIJFDFDO RogueDiaryAvatarDisableNone = 0;
	public const EDHNIJFDFDO RogueDiaryAvatarDisableDeath = 1;
	public const EDHNIJFDFDO RogueDiaryAvatarDisableTired = 2;
	public const EDHNIJFDFDO RogueDiaryAvatarDisableDuplicated = 3;
}
public enum FHPBGAOJEJH
{
	// Fields
	public const FHPBGAOJEJH None = 0;
	public const FHPBGAOJEJH Start = 1;
	public const FHPBGAOJEJH Read = 2;
}
public enum LLBFJGELKIB
{
	// Fields
	public const LLBFJGELKIB SandwormLevelNotOpen = 0;
	public const LLBFJGELKIB SandwormLevelPreQuest = 1;
	public const LLBFJGELKIB SandwormLevelStart = 2;
	public const LLBFJGELKIB SandwormLevelSequelQuest = 3;
}
public enum PHKAPAALGGC.HPKMPOHFBMJ
{
	// Fields
	public const PHKAPAALGGC.HPKMPOHFBMJ None = 0;
	public const PHKAPAALGGC.HPKMPOHFBMJ SamLampInfo = 9;
	public const PHKAPAALGGC.HPKMPOHFBMJ CrucibleInfo = 14;
	public const PHKAPAALGGC.HPKMPOHFBMJ SalesmanInfo = 8;
	public const PHKAPAALGGC.HPKMPOHFBMJ TrialAvatarInfo = 7;
	public const PHKAPAALGGC.HPKMPOHFBMJ DeliveryInfo = 1232;
	public const PHKAPAALGGC.HPKMPOHFBMJ AsterInfo = 1467;
	public const PHKAPAALGGC.HPKMPOHFBMJ FlightInfo = 809;
	public const PHKAPAALGGC.HPKMPOHFBMJ DragonSpineInfo = 1319;
	public const PHKAPAALGGC.HPKMPOHFBMJ EffigyInfo = 1037;
	public const PHKAPAALGGC.HPKMPOHFBMJ TreasureMapInfo = 1091;
	public const PHKAPAALGGC.HPKMPOHFBMJ BlessingInfo = 100;
	public const PHKAPAALGGC.HPKMPOHFBMJ SeaLampInfo = 251;
	public const PHKAPAALGGC.HPKMPOHFBMJ ExpeditionInfo = 1668;
	public const PHKAPAALGGC.HPKMPOHFBMJ ArenaChallengeInfo = 399;
	public const PHKAPAALGGC.HPKMPOHFBMJ FleurFairInfo = 27;
	public const PHKAPAALGGC.HPKMPOHFBMJ WaterSpiritInfo = 199;
	public const PHKAPAALGGC.HPKMPOHFBMJ ChallnelerSlabInfo = 1068;
	public const PHKAPAALGGC.HPKMPOHFBMJ MistTrialActivityInfo = 707;
	public const PHKAPAALGGC.HPKMPOHFBMJ HideAndSeekInfo = 263;
	public const PHKAPAALGGC.HPKMPOHFBMJ FindHilichurlInfo = 1180;
	public const PHKAPAALGGC.HPKMPOHFBMJ SummerTimeInfo = 1927;
	public const PHKAPAALGGC.HPKMPOHFBMJ BuoyantCombatInfo = 627;
	public const PHKAPAALGGC.HPKMPOHFBMJ EchoShellInfo = 47;
	public const PHKAPAALGGC.HPKMPOHFBMJ BounceConjuringInfo = 884;
	public const PHKAPAALGGC.HPKMPOHFBMJ BlitzRushInfo = 1844;
	public const PHKAPAALGGC.HPKMPOHFBMJ ChessInfo = 412;
	public const PHKAPAALGGC.HPKMPOHFBMJ SumoInfo = 243;
	public const PHKAPAALGGC.HPKMPOHFBMJ MoonfinTrialInfo = 1573;
	public const PHKAPAALGGC.HPKMPOHFBMJ LunaRiteInfo = 1461;
	public const PHKAPAALGGC.HPKMPOHFBMJ PlantFlowerInfo = 1551;
	public const PHKAPAALGGC.HPKMPOHFBMJ MusicGameInfo = 1643;
	public const PHKAPAALGGC.HPKMPOHFBMJ RoguelikeDungoenInfo = 18;
	public const PHKAPAALGGC.HPKMPOHFBMJ DigInfo = 1376;
	public const PHKAPAALGGC.HPKMPOHFBMJ HachiInfo = 107;
	public const PHKAPAALGGC.HPKMPOHFBMJ WinterCampInfo = 1170;
	public const PHKAPAALGGC.HPKMPOHFBMJ PotionInfo = 1931;
	public const PHKAPAALGGC.HPKMPOHFBMJ TanukiTravelActivityInfo = 1565;
	public const PHKAPAALGGC.HPKMPOHFBMJ LanternRiteActivityInfo = 969;
	public const PHKAPAALGGC.HPKMPOHFBMJ MichiaeMatsuriInfo = 1333;
	public const PHKAPAALGGC.HPKMPOHFBMJ BartenderInfo = 1328;
	public const PHKAPAALGGC.HPKMPOHFBMJ UgcInfo = 597;
	public const PHKAPAALGGC.HPKMPOHFBMJ CrystalLinkInfo = 368;
	public const PHKAPAALGGC.HPKMPOHFBMJ IrodoriInfo = 1277;
	public const PHKAPAALGGC.HPKMPOHFBMJ PhotoInfo = 62;
	public const PHKAPAALGGC.HPKMPOHFBMJ SpiceInfo = 1027;
	public const PHKAPAALGGC.HPKMPOHFBMJ GachaInfo = 1940;
	public const PHKAPAALGGC.HPKMPOHFBMJ LuminanceStoneChallengeInfo = 374;
	public const PHKAPAALGGC.HPKMPOHFBMJ RogueDiaryInfo = 925;
	public const PHKAPAALGGC.HPKMPOHFBMJ SummerTimeV2Info = 1860;
	public const PHKAPAALGGC.HPKMPOHFBMJ IslandPartyInfo = 1050;
	public const PHKAPAALGGC.HPKMPOHFBMJ GearInfo = 644;
	public const PHKAPAALGGC.HPKMPOHFBMJ GravenInnocenceInfo = 1362;
	public const PHKAPAALGGC.HPKMPOHFBMJ InstableSprayInfo = 474;
	public const PHKAPAALGGC.HPKMPOHFBMJ MuqadasPotionInfo = 1656;
	public const PHKAPAALGGC.HPKMPOHFBMJ TreasureSeelieInfo = 1213;
	public const PHKAPAALGGC.HPKMPOHFBMJ RockBoardExploreInfo = 694;
	public const PHKAPAALGGC.HPKMPOHFBMJ VintageInfo = 237;
	public const PHKAPAALGGC.HPKMPOHFBMJ WindFieldInfo = 997;
	public const PHKAPAALGGC.HPKMPOHFBMJ FungusFighterInfo = 1287;
	public const PHKAPAALGGC.HPKMPOHFBMJ CharAmusementInfo = 1858;
	public const PHKAPAALGGC.HPKMPOHFBMJ EffigyChallengeInfo = 32;
	public const PHKAPAALGGC.HPKMPOHFBMJ CoinCollectInfo = 85;
	public const PHKAPAALGGC.HPKMPOHFBMJ BrickBreakerInfo = 1306;
	public const PHKAPAALGGC.HPKMPOHFBMJ DuelHeartInfo = 313;
	public const PHKAPAALGGC.HPKMPOHFBMJ SeaLampV3Info = 912;
	public const PHKAPAALGGC.HPKMPOHFBMJ TeamChainInfo = 276;
	public const PHKAPAALGGC.HPKMPOHFBMJ ElectroherculesBattleInfo = 343;
	public const PHKAPAALGGC.HPKMPOHFBMJ GcgFestivalInfo = 1544;
	public const PHKAPAALGGC.HPKMPOHFBMJ FleurFairV2Info = 2008;
	public const PHKAPAALGGC.HPKMPOHFBMJ FungusFighterV2Info = 1085;
	public const PHKAPAALGGC.HPKMPOHFBMJ AkaFesInfo = 2020;
	public const PHKAPAALGGC.HPKMPOHFBMJ SandwormCannonDetailInfo = 385;
	public const PHKAPAALGGC.HPKMPOHFBMJ SorushTrialInfo = 1352;
}
public enum HCOIKDMFANG.JLGBDCMEKBA
{
	// Fields
	public const HCOIKDMFANG.JLGBDCMEKBA None = 0;
	public const HCOIKDMFANG.JLGBDCMEKBA BalloonInfo = 2;
	public const HCOIKDMFANG.JLGBDCMEKBA FallInfo = 9;
	public const HCOIKDMFANG.JLGBDCMEKBA MusicInfo = 15;
}
public enum BBDEIOEDMOF.MAEDMHMKHJI.OKKBHJNLCFB.EHIJIAOJPAH
{
	// Fields
	public const BBDEIOEDMOF.MAEDMHMKHJI.OKKBHJNLCFB.EHIJIAOJPAH None = 0;
	public const BBDEIOEDMOF.MAEDMHMKHJI.OKKBHJNLCFB.EHIJIAOJPAH MistTrialAvatarId = 6;
	public const BBDEIOEDMOF.MAEDMHMKHJI.OKKBHJNLCFB.EHIJIAOJPAH FormalAvatarGuid = 11;
}
public enum OOHKNAIKHNK.KCJAFGLBDKG
{
	// Fields
	public const OOHKNAIKHNK.KCJAFGLBDKG None = 0;
	public const OOHKNAIKHNK.KCJAFGLBDKG SettleInfo = 10;
}
public enum NINBHPBDBNP.DCGHKEKNHLC
{
	// Fields
	public const NINBHPBDBNP.DCGHKEKNHLC None = 0;
	public const NINBHPBDBNP.DCGHKEKNHLC BundleInfo = 4;
	public const NINBHPBDBNP.DCGHKEKNHLC ScoreChallengeInfo = 5;
	public const NINBHPBDBNP.DCGHKEKNHLC BossChallengeId = 6;
}
public enum GFEGGLGCPIB.BFAJDHIIAMK
{
	// Fields
	public const GFEGGLGCPIB.BFAJDHIIAMK None = 0;
	public const GFEGGLGCPIB.BFAJDHIIAMK FirstStageInfo = 9;
	public const GFEGGLGCPIB.BFAJDHIIAMK SecondStageInfo = 8;
	public const GFEGGLGCPIB.BFAJDHIIAMK ThirdStageInfo = 10;
}
public enum BNHNLMJHABA.CJGOEGEGIJB.PEFLGLLDFBD
{
	// Fields
	public const BNHNLMJHABA.CJGOEGEGIJB.PEFLGLLDFBD TimeOut = 0;
	public const BNHNLMJHABA.CJGOEGEGIJB.PEFLGLLDFBD SettlePlayEnd = 1;
	public const BNHNLMJHABA.CJGOEGEGIJB.PEFLGLLDFBD SettlePlayerQuit = 2;
	public const BNHNLMJHABA.CJGOEGEGIJB.PEFLGLLDFBD SettleLifeCount = 3;
}
public enum LPJODIDIFIL
{
	// Fields
	public const LPJODIDIFIL BattlePassUnlockInvalid = 0;
	public const LPJODIDIFIL BattlePassUnlockFree = 1;
	public const LPJODIDIFIL BattlePassUnlockPaid = 2;
}
public enum BJHMMPKDAGJ.PMBAILNALAB.NONPHMMOCDO
{
	// Fields
	public const BJHMMPKDAGJ.PMBAILNALAB.NONPHMMOCDO MissionInvalid = 0;
	public const BJHMMPKDAGJ.PMBAILNALAB.NONPHMMOCDO MissionUnfinished = 1;
	public const BJHMMPKDAGJ.PMBAILNALAB.NONPHMMOCDO MissionFinished = 2;
	public const BJHMMPKDAGJ.PMBAILNALAB.NONPHMMOCDO MissionPointTaken = 3;
}
public enum HGAKBFPIFCE
{
	// Fields
	public const HGAKBFPIFCE BlossomScheduleNone = 0;
	public const HGAKBFPIFCE BlossomScheduleInit = 1;
	public const HGAKBFPIFCE BlossomScheduleInProgress = 2;
	public const HGAKBFPIFCE BlossomScheduleReward = 3;
}
public enum GJDPKMJKHAF.LDDFHILBOGB
{
	// Fields
	public const GJDPKMJKHAF.LDDFHILBOGB None = 0;
	public const GJDPKMJKHAF.LDDFHILBOGB Text = 10;
	public const GJDPKMJKHAF.LDDFHILBOGB Icon = 8;
}
public enum GNCMJDPOLCE.BMMHCEILNPN.PPHCOKFGLOL
{
	// Fields
	public const GNCMJDPOLCE.BMMHCEILNPN.PPHCOKFGLOL Invalid = 0;
	public const GNCMJDPOLCE.BMMHCEILNPN.PPHCOKFGLOL Running = 1;
	public const GNCMJDPOLCE.BMMHCEILNPN.PPHCOKFGLOL Finished = 2;
}
public enum GINFLDADAOO.GIILOBJHHLA.CLMHLFCKFLK
{
	// Fields
	public const GINFLDADAOO.GIILOBJHHLA.CLMHLFCKFLK Unstarted = 0;
	public const GINFLDADAOO.GIILOBJHHLA.CLMHLFCKFLK Started = 1;
	public const GINFLDADAOO.GIILOBJHHLA.CLMHLFCKFLK Finished = 2;
}
public enum AGGLMJABOKH.DCDLJMJPFHI.BCDLKPCNHJH
{
	// Fields
	public const AGGLMJABOKH.DCDLJMJPFHI.BCDLKPCNHJH Unlock = 0;
	public const AGGLMJABOKH.DCDLJMJPFHI.BCDLKPCNHJH Lock = 1;
	public const AGGLMJABOKH.DCDLJMJPFHI.BCDLKPCNHJH Taken = 2;
}
public enum GODAKDKKBEM.PNGLKOACINF.PCFKFLMMDHE
{
	// Fields
	public const GODAKDKKBEM.PNGLKOACINF.PCFKFLMMDHE Close = 0;
	public const GODAKDKKBEM.PNGLKOACINF.PCFKFLMMDHE CondNotMeet = 1;
	public const GODAKDKKBEM.PNGLKOACINF.PCFKFLMMDHE CondMeet = 2;
	public const GODAKDKKBEM.PNGLKOACINF.PCFKFLMMDHE Accept = 3;
}
public enum NPALPPLEFFC
{
	// Fields
	public const NPALPPLEFFC EnterCustomDungeonNone = 0;
	public const NPALPPLEFFC EnterCustomDungeonEdit = 1;
	public const NPALPPLEFFC EnterCustomDungeonPlay = 2;
	public const NPALPPLEFFC EnterCustomDungeonOfficial = 3;
}
public enum GDMHGEKNPGN
{
	// Fields
	public const GDMHGEKNPGN Edit = 0;
	public const GDMHGEKNPGN SelfPass = 1;
	public const GDMHGEKNPGN Published = 2;
}
public enum JMMPKPIHNMB
{
	// Fields
	public const JMMPKPIHNMB None = 0;
	public const JMMPKPIHNMB Layout = 1;
}
public enum HOOINALOANB
{
	// Fields
	public const HOOINALOANB TryCustomDungeonNone = 0;
	public const HOOINALOANB TryCustomDungeonRoom = 1;
	public const HOOINALOANB TryCustomDungeonAll = 2;
	public const HOOINALOANB TryCustomDungeonOfficialPlay = 3;
}
public enum IMFKPCAPJNI
{
	// Fields
	public const IMFKPCAPJNI DraftFailUnknown = 0;
	public const IMFKPCAPJNI DraftActivityNotOpen = 1;
	public const IMFKPCAPJNI DraftActivityPlayNotOpen = 2;
	public const IMFKPCAPJNI DraftSceneNotMeet = 3;
	public const IMFKPCAPJNI DraftWorldNotMeet = 4;
	public const IMFKPCAPJNI DraftPlayLimitNotMeet = 5;
}
public enum CJFCCJHOGFA
{
	// Fields
	public const CJFCCJHOGFA WindFieldDungeonFailNone = 0;
	public const CJFCCJHOGFA WindFieldDungeonFailCancel = 1;
	public const CJFCCJHOGFA WindFieldDungeonFailTimeout = 2;
	public const CJFCCJHOGFA WindFieldDungeonFailAllAvatarDie = 3;
	public const CJFCCJHOGFA WindFieldDungeonFailLuaInterrupt = 4;
}
public enum FEEHAOJCNCG
{
	// Fields
	public const FEEHAOJCNCG PacmanDungeonStopNone = 0;
	public const FEEHAOJCNCG PacmanDungeonStopSuccess = 1;
	public const FEEHAOJCNCG PacmanDungeonStopTimeup = 2;
	public const FEEHAOJCNCG PacmanDungeonStopClientInterrupt = 3;
	public const FEEHAOJCNCG PacmanDungeonStopCancel = 4;
	public const FEEHAOJCNCG PacmanDungeonStopActivityClosed = 5;
	public const FEEHAOJCNCG PacmanDungeonStopFail = 6;
}
public enum DPDLJODAKKL
{
	// Fields
	public const DPDLJODAKKL None = 0;
	public const DPDLJODAKKL Fail = 1;
	public const DPDLJODAKKL Succ = 2;
	public const DPDLJODAKKL Pause = 3;
}
public enum MNOIKAEJGOK
{
	// Fields
	public const MNOIKAEJGOK CustomDungeonFinishPlayNormal = 0;
	public const MNOIKAEJGOK CustomDungeonFinishPlayTry = 1;
	public const MNOIKAEJGOK CustomDungeonFinishEditTry = 2;
	public const MNOIKAEJGOK CustomDungeonFinishSelfPlayNormal = 3;
}
public enum DEOBNPJKPKC
{
	// Fields
	public const DEOBNPJKPKC DungeonCandidateTplrNormal = 0;
	public const DEOBNPJKPKC DungeonCandidateTplrDie = 1;
	public const DEOBNPJKPKC DungeonCandidateTplrBeKick = 2;
	public const DEOBNPJKPKC DungeonCandidateDisconnect = 3;
}
public enum BIFCMPAIENC
{
	// Fields
	public const BIFCMPAIENC DungeonCandidateTpdrNormal = 0;
	public const BIFCMPAIENC DungeonCandidateTpdrDie = 1;
	public const BIFCMPAIENC DungeonCandidateTpdrDisconnect = 2;
}
public enum ACFCCAJPEOP.BKLLIMHIOJH
{
	// Fields
	public const ACFCCAJPEOP.BKLLIMHIOJH None = 0;
	public const ACFCCAJPEOP.BKLLIMHIOJH TowerLevelEndNotify = 1587;
	public const ACFCCAJPEOP.BKLLIMHIOJH TrialAvatarFirstPassDungeonNotify = 1512;
	public const ACFCCAJPEOP.BKLLIMHIOJH ChannellerSlabLoopDungeonResultInfo = 859;
	public const ACFCCAJPEOP.BKLLIMHIOJH EffigyChallengeDungeonResultInfo = 1855;
	public const ACFCCAJPEOP.BKLLIMHIOJH RoguelikeDungeonSettleInfo = 545;
	public const ACFCCAJPEOP.BKLLIMHIOJH CrystalLinkSettleInfo = 2022;
	public const ACFCCAJPEOP.BKLLIMHIOJH SummerTimeV2DungeonSettleInfo = 1728;
	public const ACFCCAJPEOP.BKLLIMHIOJH InstableSpraySettleInfo = 1011;
	public const ACFCCAJPEOP.BKLLIMHIOJH WindFieldDungeonSettleInfo = 1924;
	public const ACFCCAJPEOP.BKLLIMHIOJH EffigyChallengeV2SettleInfo = 1147;
	public const ACFCCAJPEOP.BKLLIMHIOJH TeamChainSettleInfo = 571;
	public const ACFCCAJPEOP.BKLLIMHIOJH PacmanSettleInfo = 1998;
	public const ACFCCAJPEOP.BKLLIMHIOJH FungusFighterV2SettleInfo = 1012;
}
public enum GPMGFINNFNA.CMDBDPOHPJE
{
	// Fields
	public const GPMGFINNFNA.CMDBDPOHPJE None = 0;
	public const GPMGFINNFNA.CMDBDPOHPJE MonsterId = 14;
	public const GPMGFINNFNA.CMDBDPOHPJE GadgetId = 9;
}
public enum DHLGODFFBFB.NFOFILAEEDK
{
	// Fields
	public const DHLGODFFBFB.NFOFILAEEDK None = 0;
	public const DHLGODFFBFB.NFOFILAEEDK ChannellerSlabLoopDungeonResultInfo = 357;
	public const DHLGODFFBFB.NFOFILAEEDK EffigyChallengeDungeonResultInfo = 1482;
	public const DHLGODFFBFB.NFOFILAEEDK PotionDungeonResultInfo = 507;
	public const DHLGODFFBFB.NFOFILAEEDK CustomDungeonResultInfo = 806;
}
public enum PEHLILGOPKN
{
	// Fields
	public const PEHLILGOPKN ForwardLocal = 0;
	public const PEHLILGOPKN ForwardToAll = 1;
	public const PEHLILGOPKN ForwardToAllExceptCur = 2;
	public const PEHLILGOPKN ForwardToHost = 3;
	public const PEHLILGOPKN ForwardToAllGuest = 4;
	public const PEHLILGOPKN ForwardToPeer = 5;
	public const PEHLILGOPKN ForwardToPeers = 6;
	public const PEHLILGOPKN ForwardOnlyServer = 7;
	public const PEHLILGOPKN ForwardToAllExistExceptCur = 8;
}
public enum GHNPJLHELHH
{
	// Fields
	public const GHNPJLHELHH HitColliderInvalid = 0;
	public const GHNPJLHELHH HitColliderHitBox = 1;
	public const GHNPJLHELHH HitColliderWetHitBox = 2;
	public const GHNPJLHELHH HitColliderHeadBox = 3;
}
public enum DHGBKMMCECM
{
	// Fields
	public const DHGBKMMCECM CombatNone = 0;
	public const DHGBKMMCECM CombatEvtBeingHit = 1;
	public const DHGBKMMCECM CombatAnimatorStateChanged = 2;
	public const DHGBKMMCECM CombatFaceToDir = 3;
	public const DHGBKMMCECM CombatSetAttackTarget = 4;
	public const DHGBKMMCECM CombatRushMove = 5;
	public const DHGBKMMCECM CombatAnimatorParameterChanged = 6;
	public const DHGBKMMCECM EntityMove = 7;
	public const DHGBKMMCECM SyncEntityPosition = 8;
	public const DHGBKMMCECM CombatSteerMotionInfo = 9;
	public const DHGBKMMCECM CombatForceSetPosInfo = 10;
	public const DHGBKMMCECM CombatCompensatePosDiff = 11;
	public const DHGBKMMCECM CombatMonsterDoBlink = 12;
	public const DHGBKMMCECM CombatFixedRushMove = 13;
	public const DHGBKMMCECM CombatSyncTransform = 14;
	public const DHGBKMMCECM CombatLightCoreMove = 15;
	public const DHGBKMMCECM CombatBeingHealedNtf = 16;
	public const DHGBKMMCECM CombatSkillAnchorPositionNtf = 17;
	public const DHGBKMMCECM CombatGrapplingHookMove = 18;
}
public enum DPDLNPHNOME.FJPEDNBMAFI.JEMLILGEABH
{
	// Fields
	public const DPDLNPHNOME.FJPEDNBMAFI.JEMLILGEABH AddServerBuff = 0;
	public const DPDLNPHNOME.FJPEDNBMAFI.JEMLILGEABH DelServerBuff = 1;
}
public enum HAPKANDAINI.DBNMPFNCIFG
{
	// Fields
	public const HAPKANDAINI.DBNMPFNCIFG None = 0;
	public const HAPKANDAINI.DBNMPFNCIFG ShapeSphere = 12;
	public const HAPKANDAINI.DBNMPFNCIFG ShapeBox = 14;
}
public enum ECIGOAGHFLJ.OJMNGNLBGAK.GFPJDFDBMKJ
{
	// Fields
	public const ECIGOAGHFLJ.OJMNGNLBGAK.GFPJDFDBMKJ LuaOptionNone = 0;
	public const ECIGOAGHFLJ.OJMNGNLBGAK.GFPJDFDBMKJ LuaOptionPlayerInput = 1;
}
public enum MKFIMBHKACA
{
	// Fields
	public const MKFIMBHKACA FisnEscapeNone = 0;
	public const MKFIMBHKACA FishEscapeShocked = 1;
	public const MKFIMBHKACA FishEscapeUnhook = 2;
}
public enum HJINEIJEJIL
{
	// Fields
	public const HJINEIJEJIL None = 0;
	public const HJINEIJEJIL Succ = 1;
	public const HJINEIJEJIL Fail = 2;
	public const HJINEIJEJIL Timeout = 3;
	public const HJINEIJEJIL Cancel = 4;
	public const HJINEIJEJIL Exit = 5;
}
public enum IKIGLFPJABI.BFHBGADCMIL.BAOFMDDOHHC
{
	// Fields
	public const IKIGLFPJABI.BFHBGADCMIL.BAOFMDDOHHC FishNoRewardNone = 0;
	public const IKIGLFPJABI.BFHBGADCMIL.BAOFMDDOHHC FishNoRewardActivityLimit = 1;
	public const IKIGLFPJABI.BFHBGADCMIL.BAOFMDDOHHC FishNoRewardBagLimit = 2;
	public const IKIGLFPJABI.BFHBGADCMIL.BAOFMDDOHHC FishNoRewardPoolLimit = 3;
}
public enum JJNNDFMMKMA
{
	// Fields
	public const JJNNDFMMKMA InteractNone = 0;
	public const JJNNDFMMKMA InteractPickItem = 1;
	public const JJNNDFMMKMA InteractGather = 2;
	public const JJNNDFMMKMA InteractOpenChest = 3;
	public const JJNNDFMMKMA InteractOpenStatue = 4;
	public const JJNNDFMMKMA InteractConsum = 5;
	public const JJNNDFMMKMA InteractMpPlayReward = 6;
	public const JJNNDFMMKMA InteractView = 7;
	public const JJNNDFMMKMA InteractGeneralReward = 8;
	public const JJNNDFMMKMA InteractMiracleRing = 9;
	public const JJNNDFMMKMA InteractFoundation = 10;
	public const JJNNDFMMKMA InteractEchoShell = 11;
	public const JJNNDFMMKMA InteractHomeGather = 12;
	public const JJNNDFMMKMA InteractEnvAnimal = 13;
	public const JJNNDFMMKMA InteractQuestGadget = 14;
	public const JJNNDFMMKMA InteractUiInteract = 15;
	public const JJNNDFMMKMA InteractDeshretObelisk = 16;
}
public enum DGDNJFDLBNB
{
	// Fields
	public const DGDNJFDLBNB InterOpFinish = 0;
	public const DGDNJFDLBNB InterOpStart = 1;
}
public enum JCHKINKMPDK
{
	// Fields
	public const JCHKINKMPDK None = 0;
	public const JCHKINKMPDK Normal = 1;
	public const JCHKINKMPDK Condense = 2;
	public const JCHKINKMPDK ReunionPrivilege = 3;
	public const JCHKINKMPDK OpActivity = 4;
	public const JCHKINKMPDK Material = 5;
}
public enum CLAKHODOFDM
{
	// Fields
	public const CLAKHODOFDM FoundationOpNone = 0;
	public const CLAKHODOFDM FoundationOpBuild = 1;
	public const CLAKHODOFDM FoundationOpDemolition = 2;
	public const CLAKHODOFDM FoundationOpRebuild = 3;
	public const CLAKHODOFDM FoundationOpRotate = 4;
	public const CLAKHODOFDM FoundationOpLock = 5;
	public const CLAKHODOFDM FoundationOpUnlock = 6;
}
public enum PCBLIOLCMAE
{
	// Fields
	public const PCBLIOLCMAE VehicleInteractNone = 0;
	public const PCBLIOLCMAE VehicleInteractIn = 1;
	public const PCBLIOLCMAE VehicleInteractOut = 2;
}
public enum NAJCCPACDGD.BHIKEECJJHA.BEOBGNOIFEM
{
	// Fields
	public const NAJCCPACDGD.BHIKEECJJHA.BEOBGNOIFEM OpNone = 0;
	public const NAJCCPACDGD.BHIKEECJJHA.BEOBGNOIFEM OpActivate = 1;
	public const NAJCCPACDGD.BHIKEECJJHA.BEOBGNOIFEM OpDeactivate = 2;
}
public enum DCIIDBFJNMH.DELKNCCMCLH.DOENKMNEPFO
{
	// Fields
	public const DCIIDBFJNMH.DELKNCCMCLH.DOENKMNEPFO ProjectorOpNone = 0;
	public const DCIIDBFJNMH.DELKNCCMCLH.DOENKMNEPFO ProjectorOpCreate = 1;
	public const DCIIDBFJNMH.DELKNCCMCLH.DOENKMNEPFO ProjectorOpDestroy = 2;
}
public enum FPOMFCNJPIE
{
	// Fields
	public const FPOMFCNJPIE GalleryNone = 0;
	public const FPOMFCNJPIE GalleryPrestart = 1;
	public const FPOMFCNJPIE GalleryStart = 2;
}
public enum HFPGMAKDKLF
{
	// Fields
	public const HFPGMAKDKLF GalleryStopNone = 0;
	public const HFPGMAKDKLF GalleryStopTimeup = 1;
	public const HFPGMAKDKLF GalleryStopClientInterrupt = 2;
	public const HFPGMAKDKLF GalleryStopLuaInterruptSuccess = 3;
	public const HFPGMAKDKLF GalleryStopLuaInterruptFail = 4;
	public const HFPGMAKDKLF GalleryStopOwnerLeaveScene = 5;
	public const HFPGMAKDKLF GalleryStopPlayInitFailed = 6;
	public const HFPGMAKDKLF GalleryStopOtherPlayerEnter = 7;
	public const HFPGMAKDKLF GalleryStopAvatarDie = 8;
	public const HFPGMAKDKLF GalleryStopFinished = 9;
	public const HFPGMAKDKLF GalleryStopFungusAllDie = 10;
	public const HFPGMAKDKLF GalleryStopLifeCountZero = 11;
	public const HFPGMAKDKLF GalleryStopActivityClosed = 12;
	public const HFPGMAKDKLF GalleryStopLeaveRegionFail = 13;
}
public enum BPJKMCDHCOJ
{
	// Fields
	public const BPJKMCDHCOJ GalleryStartByNone = 0;
	public const BPJKMCDHCOJ GalleryStartByMatch = 1;
	public const BPJKMCDHCOJ GalleryStartByDraft = 2;
}
public enum NBHBPGJHJKK
{
	// Fields
	public const NBHBPGJHJKK SalvagePreventStopNone = 0;
	public const NBHBPGJHJKK SalvagePreventStopSuccess = 1;
	public const NBHBPGJHJKK SalvagePreventStopArrival = 2;
	public const NBHBPGJHJKK SalvagePreventStopInterrupt = 3;
	public const NBHBPGJHJKK SalvagePreventStopLeave = 4;
	public const NBHBPGJHJKK SalvagePreventStopFull = 5;
	public const NBHBPGJHJKK SalvagePreventStopAway = 6;
}
public enum BOECFEKFEJL
{
	// Fields
	public const BOECFEKFEJL SalvageEscortStopNone = 0;
	public const BOECFEKFEJL SalvageEscortStopSuccess = 1;
	public const BOECFEKFEJL SalvageEscortStopDump = 2;
	public const BOECFEKFEJL SalvageEscortStopTime = 3;
	public const BOECFEKFEJL SalvageEscortStopInterrupt = 4;
	public const BOECFEKFEJL SalvageEscortStopLeave = 5;
	public const BOECFEKFEJL SalvageEscortStopFull = 6;
}
public enum BECOGAKOLEB
{
	// Fields
	public const BECOGAKOLEB None = 0;
	public const BECOGAKOLEB Sail = 1;
	public const BECOGAKOLEB Battle = 2;
}
public enum KAGFENNNCEA
{
	// Fields
	public const KAGFENNNCEA SandwormCannonNoneEffect = 0;
	public const KAGFENNNCEA SandwormCannonWeakEffect = 1;
	public const KAGFENNNCEA SandwormCannonStrongEffect = 2;
}
public enum GENJGPDIPNI
{
	// Fields
	public const GENJGPDIPNI CustomGalleryScoreBoardNormal = 0;
	public const GENJGPDIPNI CustomGalleryScoreBoardCountdown = 1;
	public const GENJGPDIPNI CustomGalleryScoreBoardTimer = 2;
}
public enum LALCHNFNKNF.OKCCNMEOJKJ
{
	// Fields
	public const LALCHNFNKNF.OKCCNMEOJKJ None = 0;
	public const LALCHNFNKNF.OKCCNMEOJKJ FlowerStartParam = 2;
	public const LALCHNFNKNF.OKCCNMEOJKJ ElectroherculesStartParam = 8;
}
public enum KMNPJIFBGJD.IBOKLBEDMKJ
{
	// Fields
	public const KMNPJIFBGJD.IBOKLBEDMKJ None = 0;
	public const KMNPJIFBGJD.IBOKLBEDMKJ Normal = 1759;
	public const KMNPJIFBGJD.IBOKLBEDMKJ Countdown = 360;
	public const KMNPJIFBGJD.IBOKLBEDMKJ Timer = 492;
}
public enum JACLEOIAGLK.IHLJHDJPOEH
{
	// Fields
	public const JACLEOIAGLK.IHLJHDJPOEH None = 0;
	public const JACLEOIAGLK.IHLJHDJPOEH BalloonInfo = 12;
	public const JACLEOIAGLK.IHLJHDJPOEH FallInfo = 8;
	public const JACLEOIAGLK.IHLJHDJPOEH FlowerInfo = 9;
	public const JACLEOIAGLK.IHLJHDJPOEH BulletInfo = 4;
	public const JACLEOIAGLK.IHLJHDJPOEH BrokenFloorInfo = 13;
	public const JACLEOIAGLK.IHLJHDJPOEH HideAndSeekInfo = 11;
	public const JACLEOIAGLK.IHLJHDJPOEH BuoyantCombatInfo = 1354;
	public const JACLEOIAGLK.IHLJHDJPOEH BounceConjuringInfo = 1430;
	public const JACLEOIAGLK.IHLJHDJPOEH HandballInfo = 1865;
	public const JACLEOIAGLK.IHLJHDJPOEH SumoInfo = 605;
	public const JACLEOIAGLK.IHLJHDJPOEH SalvagePreventInfo = 627;
	public const JACLEOIAGLK.IHLJHDJPOEH SalvageEscortInfo = 1254;
	public const JACLEOIAGLK.IHLJHDJPOEH HomeBalloonInfo = 913;
	public const JACLEOIAGLK.IHLJHDJPOEH CrystalLinkInfo = 1437;
	public const JACLEOIAGLK.IHLJHDJPOEH IrodoriMasterInfo = 644;
	public const JACLEOIAGLK.IHLJHDJPOEH LuminanceStoneChallengeInfo = 284;
	public const JACLEOIAGLK.IHLJHDJPOEH HomeSeekFurnitureInfo = 765;
	public const JACLEOIAGLK.IHLJHDJPOEH IslandPartyDownHillInfo = 1263;
	public const JACLEOIAGLK.IHLJHDJPOEH SummerTimeV2BoatInfo = 1395;
	public const JACLEOIAGLK.IHLJHDJPOEH IslandPartyRaftInfo = 1119;
	public const JACLEOIAGLK.IHLJHDJPOEH IslandPartySailInfo = 2031;
	public const JACLEOIAGLK.IHLJHDJPOEH InstableSprayInfo = 628;
	public const JACLEOIAGLK.IHLJHDJPOEH MuqadasPotionInfo = 163;
	public const JACLEOIAGLK.IHLJHDJPOEH TreasureSeelieInfo = 1960;
	public const JACLEOIAGLK.IHLJHDJPOEH VintageHuntingInfo = 380;
	public const JACLEOIAGLK.IHLJHDJPOEH WindFieldInfo = 817;
	public const JACLEOIAGLK.IHLJHDJPOEH FungusFighterTrainingInfo = 279;
	public const JACLEOIAGLK.IHLJHDJPOEH EffigyChallengeInfo = 645;
	public const JACLEOIAGLK.IHLJHDJPOEH FungusFighterCaptureInfo = 435;
	public const JACLEOIAGLK.IHLJHDJPOEH CharAmusementInfo = 57;
	public const JACLEOIAGLK.IHLJHDJPOEH CoinCollectInfo = 2039;
	public const JACLEOIAGLK.IHLJHDJPOEH TeamChainInfo = 1982;
	public const JACLEOIAGLK.IHLJHDJPOEH DuelHeartInfo = 1058;
	public const JACLEOIAGLK.IHLJHDJPOEH BoatMultiInfo = 1169;
	public const JACLEOIAGLK.IHLJHDJPOEH PacmanInfo = 766;
	public const JACLEOIAGLK.IHLJHDJPOEH FungusFighterV2Info = 1224;
	public const JACLEOIAGLK.IHLJHDJPOEH AkaFesArchaeologyInfo = 265;
	public const JACLEOIAGLK.IHLJHDJPOEH SandwormInfo = 1776;
	public const JACLEOIAGLK.IHLJHDJPOEH SorushTrialPhotoMatchInfo = 611;
	public const JACLEOIAGLK.IHLJHDJPOEH SorushTrialHitmanInfo = 906;
	public const JACLEOIAGLK.IHLJHDJPOEH AkaFesRhythmInfo = 1183;
}
public enum OBFDDCOLMPE.EKBNGHPIAOM
{
	// Fields
	public const OBFDDCOLMPE.EKBNGHPIAOM None = 0;
	public const OBFDDCOLMPE.EKBNGHPIAOM FirstStageInfo = 12;
	public const OBFDDCOLMPE.EKBNGHPIAOM SecondStageInfo = 13;
	public const OBFDDCOLMPE.EKBNGHPIAOM ThirdStageInfo = 7;
}
public enum FBHFFNGNGGF
{
	// Fields
	public const FBHFFNGNGGF GcgSkillHpChangeNone = 0;
	public const FBHFFNGNGGF GcgSkillHpChangeDamage = 1;
	public const FBHFFNGNGGF GcgSkillHpChangeHeal = 2;
}
public enum IMNNCILPDEM
{
	// Fields
	public const IMNNCILPDEM GcgSettleOptNone = 0;
	public const IMNNCILPDEM GcgSettleOptExit = 1;
	public const IMNNCILPDEM GcgSettleOptContinue = 2;
	public const IMNNCILPDEM GcgSettleOptRestart = 3;
}
public enum ABLCJAJAPCO.ALDKKJKMHMF
{
	// Fields
	public const ABLCJAJAPCO.ALDKKJKMHMF None = 0;
	public const ABLCJAJAPCO.ALDKKJKMHMF TokenChange = 9;
	public const ABLCJAJAPCO.ALDKKJKMHMF PhaseChange = 2;
	public const ABLCJAJAPCO.ALDKKJKMHMF AddCards = 7;
	public const ABLCJAJAPCO.ALDKKJKMHMF RemoveCards = 8;
	public const ABLCJAJAPCO.ALDKKJKMHMF SelectOnStage = 12;
	public const ABLCJAJAPCO.ALDKKJKMHMF DiceRoll = 15;
	public const ABLCJAJAPCO.ALDKKJKMHMF DiceReroll = 5;
	public const ABLCJAJAPCO.ALDKKJKMHMF Pass = 4;
	public const ABLCJAJAPCO.ALDKKJKMHMF SkillResult = 1;
	public const ABLCJAJAPCO.ALDKKJKMHMF CostDice = 11;
	public const ABLCJAJAPCO.ALDKKJKMHMF AddDice = 10;
	public const ABLCJAJAPCO.ALDKKJKMHMF MoveCard = 14;
	public const ABLCJAJAPCO.ALDKKJKMHMF UseSkill = 6;
	public const ABLCJAJAPCO.ALDKKJKMHMF NewCard = 1986;
	public const ABLCJAJAPCO.ALDKKJKMHMF UpdateController = 948;
	public const ABLCJAJAPCO.ALDKKJKMHMF ModifyAdd = 761;
	public const ABLCJAJAPCO.ALDKKJKMHMF ModifyRemove = 1863;
	public const ABLCJAJAPCO.ALDKKJKMHMF UseSkillEnd = 1956;
	public const ABLCJAJAPCO.ALDKKJKMHMF DuelDataChange = 1834;
	public const ABLCJAJAPCO.ALDKKJKMHMF ClientPerform = 1305;
	public const ABLCJAJAPCO.ALDKKJKMHMF GameOver = 1760;
	public const ABLCJAJAPCO.ALDKKJKMHMF OpTimer = 1132;
	public const ABLCJAJAPCO.ALDKKJKMHMF WaitingListChange = 1429;
	public const ABLCJAJAPCO.ALDKKJKMHMF CardUpdate = 1809;
	public const ABLCJAJAPCO.ALDKKJKMHMF SelectOnStageByEffect = 436;
	public const ABLCJAJAPCO.ALDKKJKMHMF CostRevise = 197;
	public const ABLCJAJAPCO.ALDKKJKMHMF PhaseContinue = 54;
	public const ABLCJAJAPCO.ALDKKJKMHMF PveIntentionInfo = 930;
	public const ABLCJAJAPCO.ALDKKJKMHMF PveIntentionChange = 1306;
	public const ABLCJAJAPCO.ALDKKJKMHMF SkillLimitsChange = 1718;
	public const ABLCJAJAPCO.ALDKKJKMHMF NoDamageSkillResult = 458;
	public const ABLCJAJAPCO.ALDKKJKMHMF ReactionBegin = 1867;
	public const ABLCJAJAPCO.ALDKKJKMHMF ReactionEnd = 1440;
}
public enum EALFDFCFHPG.CAMLDAMBDOC
{
	// Fields
	public const EALFDFCFHPG.CAMLDAMBDOC None = 0;
	public const EALFDFCFHPG.CAMLDAMBDOC OpRedraw = 13;
	public const EALFDFCFHPG.CAMLDAMBDOC OpSelectOnStage = 5;
	public const EALFDFCFHPG.CAMLDAMBDOC OpReroll = 7;
	public const EALFDFCFHPG.CAMLDAMBDOC OpAttack = 4;
	public const EALFDFCFHPG.CAMLDAMBDOC OpPass = 14;
	public const EALFDFCFHPG.CAMLDAMBDOC OpPlayCard = 1;
	public const EALFDFCFHPG.CAMLDAMBDOC OpReboot = 10;
	public const EALFDFCFHPG.CAMLDAMBDOC OpSurrender = 9;
}
public enum BOLJIMLDKKL.GIJHFLHJPGE.MGHAKBGGMIA
{
	// Fields
	public const BOLJIMLDKKL.GIJHFLHJPGE.MGHAKBGGMIA ReasonNone = 0;
	public const BOLJIMLDKKL.GIJHFLHJPGE.MGHAKBGGMIA ReasonGameMax = 1;
	public const BOLJIMLDKKL.GIJHFLHJPGE.MGHAKBGGMIA ReasonClientVersionNotLastest = 2;
	public const BOLJIMLDKKL.GIJHFLHJPGE.MGHAKBGGMIA ReasonResourceNotComplete = 3;
	public const BOLJIMLDKKL.GIJHFLHJPGE.MGHAKBGGMIA ReasonTimeout = 4;
	public const BOLJIMLDKKL.GIJHFLHJPGE.MGHAKBGGMIA ReasonOpponentClientVersionNotLastest = 5;
}
public enum JEHMOJKEODL.CHMNCIOLJHN.HPKGGDFBHPI
{
	// Fields
	public const JEHMOJKEODL.CHMNCIOLJHN.HPKGGDFBHPI GcgHintNone = 0;
	public const JEHMOJKEODL.CHMNCIOLJHN.HPKGGDFBHPI GcgHintGameNotFound = 1;
}
public enum CEICFCMKJOH
{
	// Fields
	public const CEICFCMKJOH GcgActionNone = 0;
	public const CEICFCMKJOH GcgActionSpecialPhase = 1;
	public const CEICFCMKJOH GcgActionNextPhase = 2;
	public const CEICFCMKJOH GcgActionDraw = 3;
	public const CEICFCMKJOH GcgActionRedraw = 4;
	public const CEICFCMKJOH GcgActionSelectOnstage = 5;
	public const CEICFCMKJOH GcgActionRoll = 6;
	public const CEICFCMKJOH GcgActionReroll = 7;
	public const CEICFCMKJOH GcgActionAttack = 8;
	public const CEICFCMKJOH GcgActionPlayCard = 9;
	public const CEICFCMKJOH GcgActionPass = 10;
	public const CEICFCMKJOH GcgActionReboot = 11;
	public const CEICFCMKJOH GcgActionGameOver = 12;
	public const CEICFCMKJOH GcgActionTrigger = 13;
	public const CEICFCMKJOH GcgActionPhaseExit = 14;
	public const CEICFCMKJOH GcgActionCustom = 15;
	public const CEICFCMKJOH GcgActionNotifyCost = 16;
	public const CEICFCMKJOH GcgActionAfterOperation = 17;
	public const CEICFCMKJOH GcgActionUseSkill = 18;
	public const CEICFCMKJOH GcgActionNotifySkillPreview = 19;
	public const CEICFCMKJOH GcgActionPreviewAttack = 20;
	public const CEICFCMKJOH GcgActionPreviewAfterAttack = 21;
	public const CEICFCMKJOH GcgActionSendMessage = 22;
	public const CEICFCMKJOH GcgActionWaitingCharacter = 23;
	public const CEICFCMKJOH GcgActionTriggerSkill = 24;
	public const CEICFCMKJOH GcgActionBeforeNextOperation = 25;
}
public enum MJNHGKMPCBM
{
	// Fields
	public const MJNHGKMPCBM GcgDiceSideInvalid = 0;
	public const MJNHGKMPCBM GcgDiceSideCryo = 1;
	public const MJNHGKMPCBM GcgDiceSideHydro = 2;
	public const MJNHGKMPCBM GcgDiceSidePyro = 3;
	public const MJNHGKMPCBM GcgDiceSideElectro = 4;
	public const MJNHGKMPCBM GcgDiceSideGeo = 5;
	public const MJNHGKMPCBM GcgDiceSideDendro = 6;
	public const MJNHGKMPCBM GcgDiceSideAnemo = 7;
	public const MJNHGKMPCBM GcgDiceSidePaimon = 8;
}
public enum MHMEJPDBJHD
{
	// Fields
	public const MHMEJPDBJHD GcgZoneInvalid = 0;
	public const MHMEJPDBJHD GcgZoneDeck = 1;
	public const MHMEJPDBJHD GcgZoneHand = 2;
	public const MHMEJPDBJHD GcgZoneCharacter = 3;
	public const MHMEJPDBJHD GcgZoneModify = 4;
	public const MHMEJPDBJHD GcgZoneSummon = 5;
	public const MHMEJPDBJHD GcgZoneAssist = 7;
	public const MHMEJPDBJHD GcgZoneOnstage = 8;
	public const MHMEJPDBJHD GcgZoneRule = 9;
}
public enum ILGBKKPPKCL
{
	// Fields
	public const ILGBKKPPKCL GcgPhaseInvalid = 0;
	public const ILGBKKPPKCL GcgPhaseStart = 1;
	public const ILGBKKPPKCL GcgPhaseDraw = 2;
	public const ILGBKKPPKCL GcgPhaseOnStage = 3;
	public const ILGBKKPPKCL GcgPhaseDice = 4;
	public const ILGBKKPPKCL GcgPhaseMain = 5;
	public const ILGBKKPPKCL GcgPhaseEnd = 6;
	public const ILGBKKPPKCL GcgPhaseDie = 7;
	public const ILGBKKPPKCL GcgPhaseFin = 8;
	public const ILGBKKPPKCL GcgPhasePreMain = 9;
	public const ILGBKKPPKCL GcgPhaseReroll = 10;
}
public enum ABBABGECCOD
{
	// Fields
	public const ABBABGECCOD Default = 0;
	public const ABBABGECCOD Effect = 1;
	public const ABBABGECCOD Cost = 2;
	public const ABBABGECCOD Gm = 3;
	public const ABBABGECCOD Attack = 4;
	public const ABBABGECCOD Reboot = 5;
	public const ABBABGECCOD PlayCard = 6;
	public const ABBABGECCOD QuicklyOnstage = 7;
	public const ABBABGECCOD RemoveAfterDie = 8;
	public const ABBABGECCOD Init = 9;
	public const ABBABGECCOD EffectDamage = 10;
	public const ABBABGECCOD EffectHeal = 11;
	public const ABBABGECCOD EffectRevive = 12;
	public const ABBABGECCOD InitOnstage = 13;
	public const ABBABGECCOD DieOnstage = 14;
	public const ABBABGECCOD SelectOnstage = 15;
	public const ABBABGECCOD CharacterDie = 16;
}
public enum PNDFBCEFOOA
{
	// Fields
	public const PNDFBCEFOOA GcgPerformInvalid = 0;
	public const PNDFBCEFOOA GcgPerformCardExchange = 1;
	public const PNDFBCEFOOA GcgPerformFirstHand = 2;
	public const PNDFBCEFOOA GcgPerformReroll = 3;
	public const PNDFBCEFOOA GcgPreformCostRevise = 4;
}
public enum PFIOBDOEOJE
{
	// Fields
	public const PFIOBDOEOJE Default = 0;
	public const PFIOBDOEOJE Die = 1;
	public const PFIOBDOEOJE Surrender = 2;
	public const PFIOBDOEOJE Disconnected = 3;
	public const PFIOBDOEOJE RoundLimit = 4;
	public const PFIOBDOEOJE Gm = 5;
	public const PFIOBDOEOJE NoPlayer = 6;
	public const PFIOBDOEOJE GiveUp = 7;
	public const PFIOBDOEOJE InitTimeout = 8;
	public const PFIOBDOEOJE Effect = 9;
	public const PFIOBDOEOJE ExpireTimeout = 10;
}
public enum KPEEEJLJLCI
{
	// Fields
	public const KPEEEJLJLCI GcgGameNone = 0;
	public const KPEEEJLJLCI GcgGameGm = 1;
	public const KPEEEJLJLCI GcgGameMatch = 2;
	public const KPEEEJLJLCI GcgGamePvp = 3;
	public const KPEEEJLJLCI GcgGameTavernChallenge = 4;
	public const KPEEEJLJLCI GcgGameConstChallenge = 5;
	public const KPEEEJLJLCI GcgGameWorldChallenge = 6;
	public const KPEEEJLJLCI GcgGameBossChallenge = 7;
	public const KPEEEJLJLCI GcgGameWeekChallenge = 8;
	public const KPEEEJLJLCI GcgGameBreakChallenge = 9;
	public const KPEEEJLJLCI GcgGameQuest = 10;
	public const KPEEEJLJLCI GcgGameGuideGroup = 11;
	public const KPEEEJLJLCI GcgGameOther = 12;
}
public enum KIAHPIKPLMH
{
	// Fields
	public const KIAHPIKPLMH GcgLevelNone = 0;
	public const KIAHPIKPLMH GcgLevelConst = 1;
	public const KIAHPIKPLMH GcgLevelWeek = 2;
	public const KIAHPIKPLMH GcgLevelWorld = 3;
	public const KIAHPIKPLMH GcgLevelBoss = 4;
	public const KIAHPIKPLMH GcgLevelCharacter = 5;
	public const KIAHPIKPLMH GcgLevelBreak = 6;
	public const KIAHPIKPLMH GcgLevelQuest = 7;
	public const KIAHPIKPLMH GcgLevelGuideGroup = 8;
	public const KIAHPIKPLMH GcgLevelOther = 9;
}
public enum IMHJJIEFMOF
{
	// Fields
	public const IMHJJIEFMOF GcgIntentionChangeNone = 0;
	public const IMHJJIEFMOF GcgIntentionChangeRm = 1;
}
public enum GEHIKODGKMC
{
	// Fields
	public const GEHIKODGKMC HomeFieldStatueNone = 0;
	public const GEHIKODGKMC HomeFieldStatueSeed = 1;
	public const GEHIKODGKMC HomeFieldStatueSprout = 2;
	public const GEHIKODGKMC HomeFieldStatueGather = 3;
}
public enum DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL
{
	// Fields
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL PlayerJudge = 0;
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL PlayerEnterOptionRefuse = 1;
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL PlayerEnterOptionDirect = 2;
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL SystemJudge = 3;
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL HostInMatch = 4;
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL PsPlayerNotAcceptOthers = 5;
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL OpenStateNotOpen = 6;
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL HostInEditMode = 7;
	public const DJEBHJDBGDL.OOLHBKEDJHI.BCGCCCFDCHL PriorCheck = 8;
}
public enum FFPLCCEFMAP.LGDCKNNLKIC.LMPPPABCCLK
{
	// Fields
	public const FFPLCCEFMAP.LGDCKNNLKIC.LMPPPABCCLK Invalid = 0;
	public const FFPLCCEFMAP.LGDCKNNLKIC.LMPPPABCCLK KickByHost = 1;
	public const FFPLCCEFMAP.LGDCKNNLKIC.LMPPPABCCLK BackToMyWorld = 2;
	public const FFPLCCEFMAP.LGDCKNNLKIC.LMPPPABCCLK HomeBlocked = 3;
	public const FFPLCCEFMAP.LGDCKNNLKIC.LMPPPABCCLK HomeInEditMode = 4;
	public const FFPLCCEFMAP.LGDCKNNLKIC.LMPPPABCCLK ByMuip = 5;
	public const FFPLCCEFMAP.LGDCKNNLKIC.LMPPPABCCLK CurModuleClosed = 6;
}
public enum EPNIBIGFPOK.DEAPDEEGHCL.PFLMKOGOKAI
{
	// Fields
	public const EPNIBIGFPOK.DEAPDEEGHCL.PFLMKOGOKAI Invalid = 0;
	public const EPNIBIGFPOK.DEAPDEEGHCL.PFLMKOGOKAI Enter = 1;
	public const EPNIBIGFPOK.DEAPDEEGHCL.PFLMKOGOKAI Leave = 2;
}
public enum PEKCNIEFEPH.CIFIBMOIOBB
{
	// Fields
	public const PEKCNIEFEPH.CIFIBMOIOBB None = 0;
	public const PEKCNIEFEPH.CIFIBMOIOBB RacingGalleryInfo = 388;
	public const PEKCNIEFEPH.CIFIBMOIOBB BalloonGalleryInfo = 1949;
	public const PEKCNIEFEPH.CIFIBMOIOBB StakePlayInfo = 748;
	public const PEKCNIEFEPH.CIFIBMOIOBB SeekFurnitureGalleryInfo = 1996;
}
public enum ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA
{
	// Fields
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA PlayerJudge = 0;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA PlayerEnterOptionRefuse = 1;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA PlayerEnterOptionDirect = 2;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA SystemJudge = 3;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA HostInMatch = 4;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA PsPlayerNotAcceptOthers = 5;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA OpenStateNotOpen = 6;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA HostInEditMode = 7;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA PriorCheck = 8;
	public const ADMHOKGPIHC.KNGLIFCGLPB.MAHLBDMPLJA PlayerOffline = 9;
}
public enum JIDKKFKPDIH.MEBIOABOGFK.PMHIABIOPBE
{
	// Fields
	public const JIDKKFKPDIH.MEBIOABOGFK.PMHIABIOPBE Invalid = 0;
	public const JIDKKFKPDIH.MEBIOABOGFK.PMHIABIOPBE InProgress = 1;
	public const JIDKKFKPDIH.MEBIOABOGFK.PMHIABIOPBE Complete = 2;
	public const JIDKKFKPDIH.MEBIOABOGFK.PMHIABIOPBE RewardTaken = 3;
}
public enum PANKLPDCNBE.PEKIGKJEKGN.OJMGAAEJHAD
{
	// Fields
	public const PANKLPDCNBE.PEKIGKJEKGN.OJMGAAEJHAD Invalid = 0;
	public const PANKLPDCNBE.PEKIGKJEKGN.OJMGAAEJHAD InProgress = 1;
	public const PANKLPDCNBE.PEKIGKJEKGN.OJMGAAEJHAD Complete = 2;
	public const PANKLPDCNBE.PEKIGKJEKGN.OJMGAAEJHAD RewardTaken = 3;
}
public enum GLMNKJIOKFF.IGOHDAHBNJK.ENEAGILHBCC
{
	// Fields
	public const GLMNKJIOKFF.IGOHDAHBNJK.ENEAGILHBCC LockNone = 0;
	public const GLMNKJIOKFF.IGOHDAHBNJK.ENEAGILHBCC LockQuest = 1;
}
public enum EOMPENELAEF
{
	// Fields
	public const EOMPENELAEF ReceiveOutput = 0;
	public const EOMPENELAEF StopForge = 1;
}
public enum PLKEBHIPGAB
{
	// Fields
	public const PLKEBHIPGAB MaterialDeleteReturnBag = 0;
	public const PLKEBHIPGAB MaterialDeleteReturnSeed = 1;
}
public enum GGFMFJKHFOP.LKPEOPODKLM.EIBIGOBHMLH
{
	// Fields
	public const GGFMFJKHFOP.LKPEOPODKLM.EIBIGOBHMLH ItemExceedLimitMsgDefault = 0;
	public const GGFMFJKHFOP.LKPEOPODKLM.EIBIGOBHMLH ItemExceedLimitMsgText = 1;
	public const GGFMFJKHFOP.LKPEOPODKLM.EIBIGOBHMLH ItemExceedLimitMsgDialog = 2;
	public const GGFMFJKHFOP.LKPEOPODKLM.EIBIGOBHMLH ItemExceedLimitMsgDialogNonblock = 3;
}
public enum APIPBBJHNFE.NHBFCPHHLBJ.LHJPPCIIDKM
{
	// Fields
	public const APIPBBJHNFE.NHBFCPHHLBJ.LHJPPCIIDKM Succ = 0;
	public const APIPBBJHNFE.NHBFCPHHLBJ.LHJPPCIIDKM TargetSceneCannotEnter = 1;
	public const APIPBBJHNFE.NHBFCPHHLBJ.LHJPPCIIDKM SelfMpUnavailable = 2;
	public const APIPBBJHNFE.NHBFCPHHLBJ.LHJPPCIIDKM OtherDataVersionNotLatest = 3;
	public const APIPBBJHNFE.NHBFCPHHLBJ.LHJPPCIIDKM DataVersionNotLatest = 4;
}
public enum HNNNBEMBNIA
{
	// Fields
	public const HNNNBEMBNIA MsgUnknown = 0;
	public const HNNNBEMBNIA MsgBlockRefreshCountdown = 1;
	public const HNNNBEMBNIA MsgAvatarReviveByStatue = 2;
	public const HNNNBEMBNIA MsgDailyTaskRewardMaxNum = 3;
	public const HNNNBEMBNIA MsgRoutineTypeNotOpen = 4;
	public const HNNNBEMBNIA MsgRoutineTypeRewardMaxNum = 5;
	public const HNNNBEMBNIA MsgMechanicusCoinLimit = 6;
}
public enum MOKFNGGECIL
{
	// Fields
	public const MOKFNGGECIL ServerLogNone = 0;
	public const MOKFNGGECIL ServerLogAbility = 1;
	public const MOKFNGGECIL ServerLogLevel = 2;
	public const MOKFNGGECIL ServerLogEntity = 3;
	public const MOKFNGGECIL ServerLogLua = 4;
}
public enum MPIMODDEDND
{
	// Fields
	public const MPIMODDEDND LogLevelNone = 0;
	public const MPIMODDEDND LogLevelDebug = 1;
	public const MPIMODDEDND LogLevelInfo = 2;
	public const MPIMODDEDND LogLevelWarning = 3;
	public const MPIMODDEDND LogLevelError = 4;
}
public enum GGFHCGIAFOI
{
	// Fields
	public const GGFHCGIAFOI ClientReconnnectNone = 0;
	public const GGFHCGIAFOI ClientReconnnectQuitMp = 1;
}
public enum BLBBHMODFBA.NJHIGPLCAJN
{
	// Fields
	public const BLBBHMODFBA.NJHIGPLCAJN None = 0;
	public const BLBBHMODFBA.NJHIGPLCAJN IntParam = 11;
	public const BLBBHMODFBA.NJHIGPLCAJN FltParam = 13;
	public const BLBBHMODFBA.NJHIGPLCAJN StrParam = 12;
}
public enum NMIMOKPBFOI.GMKFLAIGAND
{
	// Fields
	public const NMIMOKPBFOI.GMKFLAIGAND None = 0;
	public const NMIMOKPBFOI.GMKFLAIGAND TargetUid = 4;
	public const NMIMOKPBFOI.GMKFLAIGAND OnlineId = 3;
	public const NMIMOKPBFOI.GMKFLAIGAND PsnId = 14;
}
public enum MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ
{
	// Fields
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ PlayerJudge = 0;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ SceneCannotEnter = 1;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ PlayerCannotEnterMp = 2;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ SystemJudge = 3;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ AllowEnterPlayerFull = 4;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ WorldLevelLowerThanHost = 5;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ HostInMatch = 6;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ PlayerInBlacklist = 7;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ PsPlayerNotAcceptOthers = 8;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ HostIsBlocked = 9;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ OtherDataVersionNotLatest = 10;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ DataVersionNotLatest = 11;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ PlayerNotInPlayerWorld = 12;
	public const MHEHKPFJIPH.HMPHDLFIAAC.BEHGHPPNIBJ MaxPlayer = 13;
}
public enum EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM
{
	// Fields
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM Invalid = 0;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM HostNoOtherPlayer = 1;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM KickByHost = 2;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM BackToMyWorld = 3;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM KickByHostLogout = 4;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM KickByHostBlock = 5;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM BeBlocked = 6;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM KickByHostEnterHome = 7;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM HostSceneInvalid = 8;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM KickByPlay = 9;
	public const EMOGNCHGMJA.FBOOMMMOOBI.ALJMAFGCNNM KickByIslandPartyGalleryStartFailed = 10;
}
public enum HMGLDIEKKKD.FGDGEAPNONE.MCNOPMHCNHC
{
	// Fields
	public const HMGLDIEKKKD.FGDGEAPNONE.MCNOPMHCNHC Invalid = 0;
	public const HMGLDIEKKKD.FGDGEAPNONE.MCNOPMHCNHC Start = 1;
	public const HMGLDIEKKKD.FGDGEAPNONE.MCNOPMHCNHC Timeout = 2;
}
public enum MIMLONHEAOD
{
	// Fields
	public const MIMLONHEAOD Non = 0;
	public const MIMLONHEAOD Mechanicus = 1;
	public const MIMLONHEAOD FleurFair = 2;
	public const MIMLONHEAOD HideAndSeek = 3;
	public const MIMLONHEAOD BounceConjuring = 4;
	public const MIMLONHEAOD Chess = 5;
	public const MIMLONHEAOD IrodoriChess = 6;
	public const MIMLONHEAOD CharAmusement = 7;
	public const MIMLONHEAOD BrickBreaker = 8;
	public const MIMLONHEAOD CoinCollect = 9;
	public const MIMLONHEAOD LanV3Boat = 10;
	public const MIMLONHEAOD FleurFairV2Pacman = 11;
}
public enum GKAPPJHNNHC
{
	// Fields
	public const GKAPPJHNNHC InBattleMechanicusStageNone = 0;
	public const GKAPPJHNNHC InBattleMechanicusStageBuild = 1;
	public const GKAPPJHNNHC InBattleMechanicusStageCardFlip = 2;
	public const GKAPPJHNNHC InBattleMechanicusStageKill = 3;
}
public enum DOHJEAKEOKE
{
	// Fields
	public const DOHJEAKEOKE InBattleMechanicusCardChallengeNone = 0;
	public const DOHJEAKEOKE InBattleMechanicusCardChallengeOnGoing = 1;
	public const DOHJEAKEOKE InBattleMechanicusCardChallengeFail = 2;
	public const DOHJEAKEOKE InBattleMechanicusCardChallengeSuccess = 3;
}
public enum CEIABHOFPON
{
	// Fields
	public const CEIABHOFPON HideAndSeekStagePrepare = 0;
	public const CEIABHOFPON HideAndSeekStagePick = 1;
	public const CEIABHOFPON HideAndSeekStageGame = 2;
	public const CEIABHOFPON HideAndSeekStageHide = 3;
	public const CEIABHOFPON HideAndSeekStageSeek = 4;
	public const CEIABHOFPON HideAndSeekStageSettle = 5;
}
public enum DHGFPNJDPIC
{
	// Fields
	public const DHGFPNJDPIC BrickBreakerStagePrepare = 0;
	public const DHGFPNJDPIC BrickBreakerStagePick = 1;
	public const DHGFPNJDPIC BrickBreakerStageGame = 2;
	public const DHGFPNJDPIC BrickBreakerStagePlay = 3;
	public const DHGFPNJDPIC BrickBreakerStageSettle = 4;
}
public enum MIKMHOPIOEH.GCBLMACADOF
{
	// Fields
	public const MIKMHOPIOEH.GCBLMACADOF None = 0;
	public const MIKMHOPIOEH.GCBLMACADOF MechanicusInfo = 126;
	public const MIKMHOPIOEH.GCBLMACADOF FleurFairInfo = 604;
	public const MIKMHOPIOEH.GCBLMACADOF HideAndSeekInfo = 1873;
	public const MIKMHOPIOEH.GCBLMACADOF ChessInfo = 167;
	public const MIKMHOPIOEH.GCBLMACADOF IrodoriChessInfo = 1680;
	public const MIKMHOPIOEH.GCBLMACADOF CharAmusementInfo = 193;
	public const MIKMHOPIOEH.GCBLMACADOF BrickBreakerInfo = 1784;
	public const MIKMHOPIOEH.GCBLMACADOF CoinCollectInfo = 1813;
	public const MIKMHOPIOEH.GCBLMACADOF LanV3BoatInfo = 1754;
	public const MIKMHOPIOEH.GCBLMACADOF FleurFairV2PacmanInfo = 1281;
}
public enum GKHKOEMINHA.DCJMKBMCAOK
{
	// Fields
	public const GKHKOEMINHA.DCJMKBMCAOK None = 0;
	public const GKHKOEMINHA.DCJMKBMCAOK MechanicusSettleInfo = 1266;
	public const GKHKOEMINHA.DCJMKBMCAOK ChessSettleInfo = 121;
	public const GKHKOEMINHA.DCJMKBMCAOK IrodoriChessSettleInfo = 671;
}
public enum GMHIAPBGKEA.JAGJLOLEMKN
{
	// Fields
	public const GMHIAPBGKEA.JAGJLOLEMKN None = 0;
	public const GMHIAPBGKEA.JAGJLOLEMKN GallerySettleInfo = 6;
	public const GMHIAPBGKEA.JAGJLOLEMKN BossSettleInfo = 14;
}
public enum CKGALBJACEN.FPIBKFOLMEO.BNPALGNFKAB
{
	// Fields
	public const CKGALBJACEN.FPIBKFOLMEO.BNPALGNFKAB TimeOut = 0;
	public const CKGALBJACEN.FPIBKFOLMEO.BNPALGNFKAB SettlePlayEnd = 1;
	public const CKGALBJACEN.FPIBKFOLMEO.BNPALGNFKAB SettlePlayerQuit = 2;
}
public enum LLHKAHKDALN.HBHKHKGABFK
{
	// Fields
	public const LLHKAHKDALN.HBHKHKGABFK None = 0;
	public const LLHKAHKDALN.HBHKHKGABFK OfferingPariDetailData = 1777;
}
public enum EOOKEMINBGN.COIHDKPLAAB
{
	// Fields
	public const EOOKEMINBGN.COIHDKPLAAB None = 0;
	public const EOOKEMINBGN.COIHDKPLAAB BonusInfo = 5;
}
public enum PPNEGEHHFHC.CADIBGOLMOF.GFGAGCEANNG
{
	// Fields
	public const PPNEGEHHFHC.CADIBGOLMOF.GFGAGCEANNG OptionNone = 0;
	public const PPNEGEHHFHC.CADIBGOLMOF.GFGAGCEANNG OptionNormal = 1;
	public const PPNEGEHHFHC.CADIBGOLMOF.GFGAGCEANNG OptionFirstCanGo = 2;
}
public enum HHMLOCBABMC.OEBJAKCDHFJ.AMHEPLPEHOG
{
	// Fields
	public const HHMLOCBABMC.OEBJAKCDHFJ.AMHEPLPEHOG StatusFail = 0;
	public const HHMLOCBABMC.OEBJAKCDHFJ.AMHEPLPEHOG StatusSucc = 1;
	public const HHMLOCBABMC.OEBJAKCDHFJ.AMHEPLPEHOG StatusPartial = 2;
}
public enum LAGPLFLFOEF.IDPADNBKLDO.CFHDBJENNAP
{
	// Fields
	public const LAGPLFLFOEF.IDPADNBKLDO.CFHDBJENNAP ObstacleShapeCapsule = 0;
	public const LAGPLFLFOEF.IDPADNBKLDO.CFHDBJENNAP ObstacleShapeBox = 1;
}
public enum LMDMGGJHBKI.EAANJPEHAAE.PJKEMGMCEFM
{
	// Fields
	public const LMDMGGJHBKI.EAANJPEHAAE.PJKEMGMCEFM Inner = 0;
	public const LMDMGGJHBKI.EAANJPEHAAE.PJKEMGMCEFM TileBound = 1;
	public const LMDMGGJHBKI.EAANJPEHAAE.PJKEMGMCEFM TileBoundUnconnect = 2;
	public const LMDMGGJHBKI.EAANJPEHAAE.PJKEMGMCEFM TileBoundOveride = 3;
}
public enum JPKNOEMJICG.GLIDLAAIEAA.HMNKHDMCEKN
{
	// Fields
	public const JPKNOEMJICG.GLIDLAAIEAA.HMNKHDMCEKN StatusFail = 0;
	public const JPKNOEMJICG.GLIDLAAIEAA.HMNKHDMCEKN StatusSucc = 1;
	public const JPKNOEMJICG.GLIDLAAIEAA.HMNKHDMCEKN StatusPartial = 2;
}
public enum BCHLHMNBPCI
{
	// Fields
	public const BCHLHMNBPCI CompoundBoostTakeStatusNone = 0;
	public const BCHLHMNBPCI CompoundBoostTakeStatusBoostOnly = 1;
	public const BCHLHMNBPCI CompoundBoostTakeStatusBoostAndTake = 2;
	public const BCHLHMNBPCI CompoundBoostTakeStatusBagFull = 3;
}
public enum CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO
{
	// Fields
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO Disconnect = 0;
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO ClientReq = 1;
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO Timeout = 2;
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO AdminReq = 3;
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO ServerClose = 4;
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO GmClear = 5;
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO PlayerTransfer = 6;
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO ClientChecksumInvalid = 7;
	public const CIJAANKJLEF.JGCDMOHLKGK.CEMGHMFDNGO MuipMoveSaveWait = 8;
}
public enum AKGLNBEFBAE.MADIEMKALGM.NIAIEPJFONE
{
	// Fields
	public const AKGLNBEFBAE.MADIEMKALGM.NIAIEPJFONE OpTypeNone = 0;
	public const AKGLNBEFBAE.MADIEMKALGM.NIAIEPJFONE OpTypeRelogin = 1;
	public const AKGLNBEFBAE.MADIEMKALGM.NIAIEPJFONE OpTypeMpRelogin = 2;
}
public enum AANJMLLAOLA.GLGNNEBIGJP.HIIPJHPPCOE
{
	// Fields
	public const AANJMLLAOLA.GLGNNEBIGJP.HIIPJHPPCOE Default = 0;
	public const AANJMLLAOLA.GLGNNEBIGJP.HIIPJHPPCOE Clear = 1;
	public const AANJMLLAOLA.GLGNNEBIGJP.HIIPJHPPCOE Distance = 2;
	public const AANJMLLAOLA.GLGNNEBIGJP.HIIPJHPPCOE Finish = 3;
}
public enum JEMHLKGAKCJ.OGDMIJNDCMO.KIHMMCOKBOG
{
	// Fields
	public const JEMHLKGAKCJ.OGDMIJNDCMO.KIHMMCOKBOG Quest = 0;
	public const JEMHLKGAKCJ.OGDMIJNDCMO.KIHMMCOKBOG Gadget = 1;
}
public enum FLHPFALHKNK.BMAPFHHFPNN
{
	// Fields
	public const FLHPFALHKNK.BMAPFHHFPNN None = 0;
	public const FLHPFALHKNK.BMAPFHHFPNN SkillRequest = 1417;
	public const FLHPFALHKNK.BMAPFHHFPNN ReliquaryRequest = 616;
	public const FLHPFALHKNK.BMAPFHHFPNN ElementReliquaryRequest = 2013;
}
public enum DLPNPDBPINP.DIALIANOEPL
{
	// Fields
	public const DLPNPDBPINP.DIALIANOEPL None = 0;
	public const DLPNPDBPINP.DIALIANOEPL SkillResponse = 645;
	public const DLPNPDBPINP.DIALIANOEPL ReliquaryResponse = 1180;
	public const DLPNPDBPINP.DIALIANOEPL ElementReliquaryResponse = 1053;
}
public enum MFDDAHPDKOD
{
	// Fields
	public const MFDDAHPDKOD PropChangeNone = 0;
	public const MFDDAHPDKOD PropChangeStatueRecover = 1;
	public const MFDDAHPDKOD PropChangeEnergyBall = 2;
	public const MFDDAHPDKOD PropChangeAbility = 3;
	public const MFDDAHPDKOD PropChangeLevelup = 4;
	public const MFDDAHPDKOD PropChangeItem = 5;
	public const MFDDAHPDKOD PropChangeAvatarCard = 6;
	public const MFDDAHPDKOD PropChangeCityLevelup = 7;
	public const MFDDAHPDKOD PropChangeAvatarUpgrade = 8;
	public const MFDDAHPDKOD PropChangeAvatarPromote = 9;
	public const MFDDAHPDKOD PropChangePlayerAddExp = 10;
	public const MFDDAHPDKOD PropChangeFinishQuest = 11;
	public const MFDDAHPDKOD PropChangeGm = 12;
	public const MFDDAHPDKOD PropChangeManualAdjustWorldLevel = 13;
}
public enum ELGOIMEMBFO
{
	// Fields
	public const ELGOIMEMBFO ChangeEnergyNone = 0;
	public const ELGOIMEMBFO ChangeEnergySkillStart = 1;
}
public enum FODGEAPLODJ
{
	// Fields
	public const FODGEAPLODJ Invalid = 0;
	public const FODGEAPLODJ UnableToBegin = 1;
	public const FODGEAPLODJ Begin = 2;
	public const FODGEAPLODJ End = 3;
}
public enum PLIOPEDCBDE
{
	// Fields
	public const PLIOPEDCBDE BargainCompleteSucc = 0;
	public const PLIOPEDCBDE BargainSingleFail = 1;
	public const PLIOPEDCBDE BargainCompleteFail = 2;
}
public enum HHBEOGDHPOE.EHMLJOPDKEO
{
	// Fields
	public const HHBEOGDHPOE.EHMLJOPDKEO None = 0;
	public const HHBEOGDHPOE.EHMLJOPDKEO ChapterId = 8;
	public const HHBEOGDHPOE.EHMLJOPDKEO Level = 12;
}
public enum HHBEOGDHPOE.AJLCMOCGLBF.KMFLDPIJABG
{
	// Fields
	public const HHBEOGDHPOE.AJLCMOCGLBF.KMFLDPIJABG Level = 0;
	public const HHBEOGDHPOE.AJLCMOCGLBF.KMFLDPIJABG Quest = 1;
}
public enum NAMKFIIDGHA.KNJAMHDIDGK
{
	// Fields
	public const NAMKFIIDGHA.KNJAMHDIDGK None = 0;
	public const NAMKFIIDGHA.KNJAMHDIDGK Level = 3;
	public const NAMKFIIDGHA.KNJAMHDIDGK ChapterId = 2;
}
public enum CDKILDCCGII.DFNOALLCJNE.PMMIIFMHPDP
{
	// Fields
	public const CDKILDCCGII.DFNOALLCJNE.PMMIIFMHPDP None = 0;
	public const CDKILDCCGII.DFNOALLCJNE.PMMIIFMHPDP Enter = 1;
	public const CDKILDCCGII.DFNOALLCJNE.PMMIIFMHPDP Leave = 2;
}
public enum MAGCLOOBFPI
{
	// Fields
	public const MAGCLOOBFPI ReunionReportTypeNone = 0;
	public const MAGCLOOBFPI ReunionReportTypeStart = 1;
	public const MAGCLOOBFPI ReunionReportTypeDouble = 2;
}
public enum JGPGCDFBDAA
{
	// Fields
	public const JGPGCDFBDAA EnterNone = 0;
	public const JGPGCDFBDAA EnterSelf = 1;
	public const JGPGCDFBDAA EnterGoto = 2;
	public const JGPGCDFBDAA EnterJump = 3;
	public const JGPGCDFBDAA EnterOther = 4;
	public const JGPGCDFBDAA EnterBack = 5;
	public const JGPGCDFBDAA EnterDungeon = 6;
	public const JGPGCDFBDAA EnterDungeonReplay = 7;
	public const JGPGCDFBDAA EnterGotoByPortal = 8;
	public const JGPGCDFBDAA EnterSelfHome = 9;
	public const JGPGCDFBDAA EnterOtherHome = 10;
	public const JGPGCDFBDAA EnterGotoRecreate = 11;
}
public enum KHKOLNIDAEP
{
	// Fields
	public const KHKOLNIDAEP VisionNone = 0;
	public const KHKOLNIDAEP VisionMeet = 1;
	public const KHKOLNIDAEP VisionReborn = 2;
	public const KHKOLNIDAEP VisionReplace = 3;
	public const KHKOLNIDAEP VisionWaypointReborn = 4;
	public const KHKOLNIDAEP VisionMiss = 5;
	public const KHKOLNIDAEP VisionDie = 6;
	public const KHKOLNIDAEP VisionGatherEscape = 7;
	public const KHKOLNIDAEP VisionRefresh = 8;
	public const KHKOLNIDAEP VisionTransport = 9;
	public const KHKOLNIDAEP VisionReplaceDie = 10;
	public const KHKOLNIDAEP VisionReplaceNoNotify = 11;
	public const KHKOLNIDAEP VisionBorn = 12;
	public const KHKOLNIDAEP VisionPickup = 13;
	public const KHKOLNIDAEP VisionRemove = 14;
	public const KHKOLNIDAEP VisionChangeCostume = 15;
	public const KHKOLNIDAEP VisionFishRefresh = 16;
	public const KHKOLNIDAEP VisionFishBigShock = 17;
	public const KHKOLNIDAEP VisionFishQteSucc = 18;
	public const KHKOLNIDAEP VisionCaptureDisappear = 19;
}
public enum MOJACKAPJGM
{
	// Fields
	public const MOJACKAPJGM CreateNone = 0;
	public const MOJACKAPJGM CreateQuest = 1;
	public const MOJACKAPJGM CreateEnergy = 2;
}
public enum HFKNBJHCGCI
{
	// Fields
	public const HFKNBJHCGCI TransmitNone = 0;
	public const HFKNBJHCGCI TransmitQuest = 1;
}
public enum GLGKDKCGEKF
{
	// Fields
	public const GLGKDKCGEKF SealBattleKeepAlive = 0;
	public const GLGKDKCGEKF SealBattleKillMonster = 1;
	public const GLGKDKCGEKF SealBattleEnergyCharge = 2;
}
public enum IKBLOJFANCA
{
	// Fields
	public const IKBLOJFANCA DungeonEntryReasonNone = 0;
	public const IKBLOJFANCA DungeonEntryReasonLevel = 1;
	public const IKBLOJFANCA DungeonEntryReasonQuest = 2;
	public const IKBLOJFANCA DungeonEntryReasonMuliple = 3;
}
public enum LKCKGBIFDAB
{
	// Fields
	public const LKCKGBIFDAB AreaPlayNone = 0;
	public const LKCKGBIFDAB AreaPlayClimate = 1;
	public const LKCKGBIFDAB AreaPlayRegionalPlay = 2;
}
public enum GCNOIGGCBBN.OMKLCHCDGMM.PPGMHILJKOI
{
	// Fields
	public const GCNOIGGCBBN.OMKLCHCDGMM.PPGMHILJKOI Null = 0;
	public const GCNOIGGCBBN.OMKLCHCDGMM.PPGMHILJKOI Active = 1;
	public const GCNOIGGCBBN.OMKLCHCDGMM.PPGMHILJKOI Passive = 2;
}
public enum LHPLPIEOKGN.IBLKCEDBKNP.KPPLOGGHIMJ
{
	// Fields
	public const LHPLPIEOKGN.IBLKCEDBKNP.KPPLOGGHIMJ KeepRotX = 0;
	public const LHPLPIEOKGN.IBLKCEDBKNP.KPPLOGGHIMJ KeepRotXy = 1;
}
public enum DCPCGJCCOJL.FODPADGKBMM.GONLGHGGMDM
{
	// Fields
	public const DCPCGJCCOJL.FODPADGKBMM.GONLGHGGMDM PlaySoundNone = 0;
	public const DCPCGJCCOJL.FODPADGKBMM.GONLGHGGMDM PlaySoundStart = 1;
	public const DCPCGJCCOJL.FODPADGKBMM.GONLGHGGMDM PlaySoundStop = 2;
}
public enum GKOJHPIPBHO.EFANDFEGMGO
{
	// Fields
	public const GKOJHPIPBHO.EFANDFEGMGO None = 0;
	public const GKOJHPIPBHO.EFANDFEGMGO MonsterId = 2;
	public const GKOJHPIPBHO.EFANDFEGMGO GadgetId = 7;
}
public enum DDECFGAEPFL.EKLCIEJHLDI.NABGOBNLACJ
{
	// Fields
	public const DDECFGAEPFL.EKLCIEJHLDI.NABGOBNLACJ Add = 0;
	public const DDECFGAEPFL.EKLCIEJHLDI.NABGOBNLACJ Mod = 1;
	public const DDECFGAEPFL.EKLCIEJHLDI.NABGOBNLACJ Del = 2;
	public const DDECFGAEPFL.EKLCIEJHLDI.NABGOBNLACJ Get = 3;
}
public enum JOFBOBHLMJA.EJPJICEOOMD
{
	// Fields
	public const JOFBOBHLMJA.EJPJICEOOMD None = 0;
	public const JOFBOBHLMJA.EJPJICEOOMD Text = 1362;
	public const JOFBOBHLMJA.EJPJICEOOMD Icon = 451;
	public const JOFBOBHLMJA.EJPJICEOOMD SystemHint = 772;
}
public enum CDIJDIKAMLC.LFPJMKHEABG
{
	// Fields
	public const CDIJDIKAMLC.LFPJMKHEABG None = 0;
	public const CDIJDIKAMLC.LFPJMKHEABG SphereRadius = 1292;
	public const CDIJDIKAMLC.LFPJMKHEABG CubicSize = 362;
	public const CDIJDIKAMLC.LFPJMKHEABG CylinderSize = 208;
	public const CDIJDIKAMLC.LFPJMKHEABG PolygonSize = 886;
}
public enum CMOCHECCPBP.LLKPKPONMOG.IGEOPIOCKBE
{
	// Fields
	public const CMOCHECCPBP.LLKPKPONMOG.IGEOPIOCKBE InitFollowPos = 0;
	public const CMOCHECCPBP.LLKPKPONMOG.IGEOPIOCKBE SetFollowPos = 1;
	public const CMOCHECCPBP.LLKPKPONMOG.IGEOPIOCKBE SetAbsFollowPos = 2;
}
public enum LIHHKDMCIAJ
{
	// Fields
	public const LIHHKDMCIAJ ScenePlayBattleNone = 0;
	public const LIHHKDMCIAJ ScenePlayBattleInit = 1;
	public const LIHHKDMCIAJ ScenePlayBattlePrepare = 2;
	public const LIHHKDMCIAJ ScenePlayBattleReady = 3;
	public const LIHHKDMCIAJ ScenePlayBattlePrestart = 4;
	public const LIHHKDMCIAJ ScenePlayBattleStart = 5;
	public const LIHHKDMCIAJ ScenePlayBattleStop = 6;
}
public enum FLIECJANJBG
{
	// Fields
	public const FLIECJANJBG ShopGoodsDisableNone = 0;
	public const FLIECJANJBG ShopGoodsDisableTalentFull = 1;
	public const FLIECJANJBG ShopGoodsDisableFurnitureFormulaUnlocked = 2;
	public const FLIECJANJBG ShopGoodsDisableCostumeUnlocked = 3;
	public const FLIECJANJBG ShopGoodsDisableBgmUnlocked = 4;
	public const FLIECJANJBG ShopGoodsDisableGcgCardExceed = 5;
	public const FLIECJANJBG ShopGoodsDisableGcgCardFaceUnlocked = 6;
	public const FLIECJANJBG ShopGoodsDisableGcgCardBackUnlocked = 7;
	public const FLIECJANJBG ShopGoodsDisableGcgFieldUnlocked = 8;
}
public enum IFJDEEJLEDK
{
	// Fields
	public const IFJDEEJLEDK FreiendDisconnect = 0;
	public const IFJDEEJLEDK FriendOnline = 1;
}
public enum POFNPDMFDFB
{
	// Fields
	public const POFNPDMFDFB DealAddFriendReject = 0;
	public const POFNPDMFDFB DealAddFriendAccept = 1;
}
public enum GJIPCNAOBPA.BBFKKLKGLCC.DFNFLIPEIFH
{
	// Fields
	public const GJIPCNAOBPA.BBFKKLKGLCC.DFNFLIPEIFH OptionNone = 0;
	public const GJIPCNAOBPA.BBFKKLKGLCC.DFNFLIPEIFH OptionNormal = 1;
}
public enum GJIPCNAOBPA.BBFKKLKGLCC.OILPBFMHGMF
{
	// Fields
	public const GJIPCNAOBPA.BBFKKLKGLCC.OILPBFMHGMF Classic = 0;
	public const GJIPCNAOBPA.BBFKKLKGLCC.OILPBFMHGMF Tendency = 1;
	public const GJIPCNAOBPA.BBFKKLKGLCC.OILPBFMHGMF Adaptive = 2;
	public const GJIPCNAOBPA.BBFKKLKGLCC.OILPBFMHGMF Inflection = 3;
}
public enum GJIPCNAOBPA.BBFKKLKGLCC.EHFBKPBIGHA
{
	// Fields
	public const GJIPCNAOBPA.BBFKKLKGLCC.EHFBKPBIGHA All = 0;
	public const GJIPCNAOBPA.BBFKKLKGLCC.EHFBKPBIGHA Air = 1;
	public const GJIPCNAOBPA.BBFKKLKGLCC.EHFBKPBIGHA Water = 2;
}
public enum BLMEIMMKNIG.LECHKCOFBCC.OICDHCHDIAF
{
	// Fields
	public const BLMEIMMKNIG.LECHKCOFBCC.OICDHCHDIAF StatusFail = 0;
	public const BLMEIMMKNIG.LECHKCOFBCC.OICDHCHDIAF StatusSucc = 1;
	public const BLMEIMMKNIG.LECHKCOFBCC.OICDHCHDIAF StatusPartial = 2;
}
public enum BEOFHEJKBNP.DDOHCHCEEFK.MNENMABCJHH
{
	// Fields
	public const BEOFHEJKBNP.DDOHCHCEEFK.MNENMABCJHH ObstacleShapeCapsule = 0;
	public const BEOFHEJKBNP.DDOHCHCEEFK.MNENMABCJHH ObstacleShapeBox = 1;
}
public enum OKDOOEMGDLK
{
	// Fields
	public const OKDOOEMGDLK None = 0;
	public const OKDOOEMGDLK MusicGame = 1;
}
public enum HIPHDMMKJFG
{
	// Fields
	public const HIPHDMMKJFG GetUgcNone = 0;
	public const HIPHDMMKJFG Mine = 1;
	public const HIPHDMMKJFG Publish = 2;
}
public enum CFEMNBDBBCK
{
	// Fields
	public const CFEMNBDBBCK UgcRecordUsageNone = 0;
	public const CFEMNBDBBCK UgcRecordUsageImport = 1;
	public const CFEMNBDBBCK UgcRecordUsagePlay = 2;
	public const CFEMNBDBBCK UgcRecordUsageTrial = 3;
	public const CFEMNBDBBCK UgcRecordUsageCompare = 4;
}
public enum BNBJPDOPPCC.AGLOPEFDGEO
{
	// Fields
	public const BNBJPDOPPCC.AGLOPEFDGEO None = 0;
	public const BNBJPDOPPCC.AGLOPEFDGEO MusicRecord = 7;
}
public enum BNBJPDOPPCC.JPFFPAGANLH
{
	// Fields
	public const BNBJPDOPPCC.JPFFPAGANLH None = 0;
	public const BNBJPDOPPCC.JPFFPAGANLH MusicBriefInfo = 2005;
}
public enum NICLPBFFHAA.EGGAOENJGMD
{
	// Fields
	public const NICLPBFFHAA.EGGAOENJGMD None = 0;
	public const NICLPBFFHAA.EGGAOENJGMD MusicBriefInfo = 1;
}
public enum GAGHHOCGHKD.BNGMHKEILGC
{
	// Fields
	public const GAGHHOCGHKD.BNGMHKEILGC None = 0;
	public const GAGHHOCGHKD.BNGMHKEILGC MusicRecord = 11;
}
public enum GAGHHOCGHKD.ECJNKAHJHDD
{
	// Fields
	public const GAGHHOCGHKD.ECJNKAHJHDD None = 0;
	public const GAGHHOCGHKD.ECJNKAHJHDD MusicBriefInfo = 555;
}
public enum PKGFJDKCLNB
{
	// Fields
	public const PKGFJDKCLNB WidgetSlotQuickUse = 0;
	public const PKGFJDKCLNB WidgetSlotAttachAvatar = 1;
}
public enum GOHGODJALDD
{
	// Fields
	public const GOHGODJALDD Attach = 0;
	public const GOHGODJALDD Detach = 1;
}
public enum HFCKLPODICN
{
	// Fields
	public const HFCKLPODICN WidgetCreatorTypeNone = 0;
	public const HFCKLPODICN WidgetCreatorTypeRetract = 1;
	public const HFCKLPODICN WidgetCreatorTypeRetractAndCreate = 2;
}
public enum JBIABBAALGA
{
	// Fields
	public const JBIABBAALGA None = 0;
	public const JBIABBAALGA ESkillShared = 1;
}
public enum NAIKDEGJNDH
{
	// Fields
	public const NAIKDEGJNDH FireworksReformParamNone = 0;
	public const NAIKDEGJNDH FireworksReformParamColor = 1;
	public const NAIKDEGJNDH FireworksReformParamHeight = 2;
	public const NAIKDEGJNDH FireworksReformParamSize = 3;
	public const NAIKDEGJNDH FireworksReformParamDensity = 4;
	public const NAIKDEGJNDH FireworksReformParamRotation = 5;
}
public enum PAHNOFJPPJG
{
	// Fields
	public const PAHNOFJPPJG FireworksLaunchParamNone = 0;
	public const PAHNOFJPPJG FireworksLaunchParamRepeat = 1;
	public const PAHNOFJPPJG FireworksLaunchParamInteval = 2;
	public const PAHNOFJPPJG FireworksLaunchParamDelay = 3;
	public const PAHNOFJPPJG FireworksLaunchParamRoundInteval = 4;
	public const PAHNOFJPPJG FireworksLaunchParamMax = 5;
}
public enum KPHPHAEKPDO.EIBFKCCKEME
{
	// Fields
	public const KPHPHAEKPDO.EIBFKCCKEME None = 0;
	public const KPHPHAEKPDO.EIBFKCCKEME LocationInfo = 1807;
	public const KPHPHAEKPDO.EIBFKCCKEME CameraInfo = 1828;
	public const KPHPHAEKPDO.EIBFKCCKEME CreatorInfo = 1560;
	public const KPHPHAEKPDO.EIBFKCCKEME ThunderBirdFeatherInfo = 1431;
	public const KPHPHAEKPDO.EIBFKCCKEME SorushInfo = 1961;
}
public enum JDNIONAJAPG.LPHBMGDPABA
{
	// Fields
	public const JDNIONAJAPG.LPHBMGDPABA None = 0;
	public const JDNIONAJAPG.LPHBMGDPABA DetectorData = 6;
	public const JDNIONAJAPG.LPHBMGDPABA ClientCollectorData = 13;
	public const JDNIONAJAPG.LPHBMGDPABA SkyCrystalDetectorQuickUseResult = 224702;
}
public enum NBCPOJPGAOA.MNDBBGCDDLP
{
	// Fields
	public const NBCPOJPGAOA.MNDBBGCDDLP None = 0;
	public const NBCPOJPGAOA.MNDBBGCDDLP LocationInfo = 486;
	public const NBCPOJPGAOA.MNDBBGCDDLP WidgetCreatorInfo = 694;
}
public enum ENetReason
{
	// Fields
	public const ENetReason EnetTimeout = 0;
	public const ENetReason EnetClientClose = 1;
	public const ENetReason EnetClientRebindFail = 2;
	public const ENetReason EnetClientShutdown = 3;
	public const ENetReason EnetServerRelogin = 4;
	public const ENetReason EnetServerKick = 5;
	public const ENetReason EnetServerShutdown = 6;
	public const ENetReason EnetNotFoundSession = 7;
	public const ENetReason EnetLoginUnfinished = 8;
	public const ENetReason EnetPacketFreqTooHigh = 9;
	public const ENetReason EnetPingTimeout = 10;
	public const ENetReason EnetTranferFailed = 11;
	public const ENetReason EnetServerKillClient = 12;
	public const ENetReason EnetCheckMoveSpeed = 13;
	public const ENetReason EnetAccountPasswordChange = 14;
	public const ENetReason EnetSecurityKick = 15;
	public const ENetReason EnetLuaShellTimeout = 16;
	public const ENetReason EnetSdkfailKick = 17;
	public const ENetReason EnetPacketCostTime = 18;
	public const ENetReason EnetPacketUnionFreq = 19;
	public const ENetReason EnetWaitSndMax = 20;
	public const ENetReason EnetClientConnectKey = 1234567890;
	public const ENetReason EnetClientEditorConnectKey = 987654321;
}
public enum ActionReasonTyp
{
	// Fields
	public const ActionReasonTyp ActionReasonNone = 0;
	public const ActionReasonTyp ActionReasonQuestItem = 1;
	public const ActionReasonTyp ActionReasonQuestReward = 2;
	public const ActionReasonTyp ActionReasonTrifle = 3;
	public const ActionReasonTyp ActionReasonShop = 4;
	public const ActionReasonTyp ActionReasonPlayerUpgradeReward = 5;
	public const ActionReasonTyp ActionReasonAddAvatar = 6;
	public const ActionReasonTyp ActionReasonGadgetEnvAnimal = 7;
	public const ActionReasonTyp ActionReasonMonsterEnvAnimal = 8;
	public const ActionReasonTyp ActionReasonCompound = 9;
	public const ActionReasonTyp ActionReasonCook = 10;
	public const ActionReasonTyp ActionReasonGather = 11;
	public const ActionReasonTyp ActionReasonMailAttachment = 12;
	public const ActionReasonTyp ActionReasonCityLevelupReturn = 15;
	public const ActionReasonTyp ActionReasonCityLevelupReward = 17;
	public const ActionReasonTyp ActionReasonAreaExploreReward = 18;
	public const ActionReasonTyp ActionReasonUnlockPointReward = 19;
	public const ActionReasonTyp ActionReasonDungeonFirstPass = 20;
	public const ActionReasonTyp ActionReasonDungeonPass = 21;
	public const ActionReasonTyp ActionReasonChangeElemType = 23;
	public const ActionReasonTyp ActionReasonFetterOpen = 25;
	public const ActionReasonTyp ActionReasonDailyTaskScore = 26;
	public const ActionReasonTyp ActionReasonDailyTaskHost = 27;
	public const ActionReasonTyp ActionReasonRandTaskHost = 28;
	public const ActionReasonTyp ActionReasonExpedition = 29;
	public const ActionReasonTyp ActionReasonGacha = 30;
	public const ActionReasonTyp ActionReasonCombine = 31;
	public const ActionReasonTyp ActionReasonRandTaskGuest = 32;
	public const ActionReasonTyp ActionReasonDailyTaskGuest = 33;
	public const ActionReasonTyp ActionReasonForgeOutput = 34;
	public const ActionReasonTyp ActionReasonForgeReturn = 35;
	public const ActionReasonTyp ActionReasonInitAvatar = 36;
	public const ActionReasonTyp ActionReasonMonsterDie = 37;
	public const ActionReasonTyp ActionReasonGm = 38;
	public const ActionReasonTyp ActionReasonOpenChest = 39;
	public const ActionReasonTyp ActionReasonGadgetDie = 40;
	public const ActionReasonTyp ActionReasonMonsterChangeHp = 41;
	public const ActionReasonTyp ActionReasonSubfieldDrop = 42;
	public const ActionReasonTyp ActionReasonPushTipsReward = 43;
	public const ActionReasonTyp ActionReasonActivityMonsterDrop = 44;
	public const ActionReasonTyp ActionReasonActivityGather = 45;
	public const ActionReasonTyp ActionReasonActivitySubfieldDrop = 46;
	public const ActionReasonTyp ActionReasonTowerScheduleReward = 47;
	public const ActionReasonTyp ActionReasonTowerFloorStarReward = 48;
	public const ActionReasonTyp ActionReasonTowerFirstPassReward = 49;
	public const ActionReasonTyp ActionReasonTowerDailyReward = 50;
	public const ActionReasonTyp ActionReasonHitClientTrivialEntity = 51;
	public const ActionReasonTyp ActionReasonOpenWorldBossChest = 52;
	public const ActionReasonTyp ActionReasonMaterialDeleteReturn = 53;
	public const ActionReasonTyp ActionReasonSignInReward = 54;
	public const ActionReasonTyp ActionReasonOpenBlossomChest = 55;
	public const ActionReasonTyp ActionReasonRecharge = 56;
	public const ActionReasonTyp ActionReasonBonusActivityReward = 57;
	public const ActionReasonTyp ActionReasonTowerCommemorativeReward = 58;
	public const ActionReasonTyp ActionReasonTowerSkipFloorReward = 59;
	public const ActionReasonTyp ActionReasonRechargeBonus = 60;
	public const ActionReasonTyp ActionReasonRechargeCard = 61;
	public const ActionReasonTyp ActionReasonRechargeCardDaily = 62;
	public const ActionReasonTyp ActionReasonRechargeCardReplace = 63;
	public const ActionReasonTyp ActionReasonRechargeCardReplaceFree = 64;
	public const ActionReasonTyp ActionReasonRechargePlayReplace = 65;
	public const ActionReasonTyp ActionReasonMpPlayTakeReward = 66;
	public const ActionReasonTyp ActionReasonActivityWatcher = 67;
	public const ActionReasonTyp ActionReasonSalesmanDeliverItem = 68;
	public const ActionReasonTyp ActionReasonSalesmanReward = 69;
	public const ActionReasonTyp ActionReasonRebate = 70;
	public const ActionReasonTyp ActionReasonMcoinExchangeHcoin = 71;
	public const ActionReasonTyp ActionReasonDailyTaskExchangeLegendaryKey = 72;
	public const ActionReasonTyp ActionReasonUnlockPersonLine = 73;
	public const ActionReasonTyp ActionReasonFetterLevelReward = 74;
	public const ActionReasonTyp ActionReasonBuyResin = 75;
	public const ActionReasonTyp ActionReasonRechargePackage = 76;
	public const ActionReasonTyp ActionReasonDeliveryDailyReward = 77;
	public const ActionReasonTyp ActionReasonCityReputationLevel = 78;
	public const ActionReasonTyp ActionReasonCityReputationQuest = 79;
	public const ActionReasonTyp ActionReasonCityReputationRequest = 80;
	public const ActionReasonTyp ActionReasonCityReputationExplore = 81;
	public const ActionReasonTyp ActionReasonOffergingLevel = 82;
	public const ActionReasonTyp ActionReasonRoutineHost = 83;
	public const ActionReasonTyp ActionReasonRoutineGuest = 84;
	public const ActionReasonTyp ActionReasonTreasureMapSpotToken = 89;
	public const ActionReasonTyp ActionReasonTreasureMapBonusLevelReward = 90;
	public const ActionReasonTyp ActionReasonTreasureMapMpReward = 91;
	public const ActionReasonTyp ActionReasonConvert = 92;
	public const ActionReasonTyp ActionReasonOverflowTransform = 93;
	public const ActionReasonTyp ActionReasonActivityAvatarSelectionReward = 96;
	public const ActionReasonTyp ActionReasonActivityWatcherBatch = 97;
	public const ActionReasonTyp ActionReasonHitTreeDrop = 98;
	public const ActionReasonTyp ActionReasonGetHomeLevelupReward = 99;
	public const ActionReasonTyp ActionReasonHomeDefaultFurniture = 100;
	public const ActionReasonTyp ActionReasonActivityCond = 101;
	public const ActionReasonTyp ActionReasonBattlePassNotify = 102;
	public const ActionReasonTyp ActionReasonReliquaryDecompose = 103;
	public const ActionReasonTyp ActionReasonRechargeGoogleGiftGard = 104;
	public const ActionReasonTyp ActionReasonRechargeConcertProduct = 105;
	public const ActionReasonTyp ActionReasonRechargeConcertProductReplace = 106;
	public const ActionReasonTyp ActionReasonSendConcertProductByMuip = 107;
	public const ActionReasonTyp ActionReasonRechargeAppleGiftGard = 108;
	public const ActionReasonTyp ActionReasonRechargePsnCompensationProduct = 109;
	public const ActionReasonTyp ActionReasonCompoundBoost = 110;
	public const ActionReasonTyp ActionReasonWoodExchange = 111;
	public const ActionReasonTyp ActionReasonAvatarRenameAuditFailed = 112;
	public const ActionReasonTyp ActionReasonAvatarRenameReset = 113;
	public const ActionReasonTyp ActionReasonPlayerUseItem = 1001;
	public const ActionReasonTyp ActionReasonDropItem = 1002;
	public const ActionReasonTyp ActionReasonWeaponUpgrade = 1011;
	public const ActionReasonTyp ActionReasonWeaponPromote = 1012;
	public const ActionReasonTyp ActionReasonWeaponAwaken = 1013;
	public const ActionReasonTyp ActionReasonRelicUpgrade = 1014;
	public const ActionReasonTyp ActionReasonAbility = 1015;
	public const ActionReasonTyp ActionReasonDungeonStatueDrop = 1016;
	public const ActionReasonTyp ActionReasonOfflineMsg = 1017;
	public const ActionReasonTyp ActionReasonAvatarUpgrade = 1018;
	public const ActionReasonTyp ActionReasonAvatarPromote = 1019;
	public const ActionReasonTyp ActionReasonQuestAction = 1021;
	public const ActionReasonTyp ActionReasonCityLevelup = 1022;
	public const ActionReasonTyp ActionReasonUpgradeSkill = 1024;
	public const ActionReasonTyp ActionReasonUnlockTalent = 1025;
	public const ActionReasonTyp ActionReasonUpgradeProudSkill = 1026;
	public const ActionReasonTyp ActionReasonPlayerLevelLimitUp = 1027;
	public const ActionReasonTyp ActionReasonDungeonDaily = 1028;
	public const ActionReasonTyp ActionReasonItemGiving = 1030;
	public const ActionReasonTyp ActionReasonForgeCost = 1031;
	public const ActionReasonTyp ActionReasonInvestigationReward = 1032;
	public const ActionReasonTyp ActionReasonInvestigationTargetReward = 1033;
	public const ActionReasonTyp ActionReasonGadgetInteract = 1034;
	public const ActionReasonTyp ActionReasonSeaLampCiMaterial = 1036;
	public const ActionReasonTyp ActionReasonSeaLampContributionReward = 1037;
	public const ActionReasonTyp ActionReasonSeaLampPhaseReward = 1038;
	public const ActionReasonTyp ActionReasonSeaLampFlyLamp = 1039;
	public const ActionReasonTyp ActionReasonAutoRecover = 1040;
	public const ActionReasonTyp ActionReasonActivityExpireItem = 1041;
	public const ActionReasonTyp ActionReasonSubCoinNegative = 1042;
	public const ActionReasonTyp ActionReasonBargainDeduct = 1043;
	public const ActionReasonTyp ActionReasonBattlePassPaidReward = 1044;
	public const ActionReasonTyp ActionReasonBattlePassLevelReward = 1045;
	public const ActionReasonTyp ActionReasonTrialAvatarActivityFirstPassReward = 1046;
	public const ActionReasonTyp ActionReasonBuyBattlePassLevel = 1047;
	public const ActionReasonTyp ActionReasonGrantBirthdayBenefit = 1048;
	public const ActionReasonTyp ActionReasonAchievementReward = 1049;
	public const ActionReasonTyp ActionReasonAchievementGoalReward = 1050;
	public const ActionReasonTyp ActionReasonFirstShareToSocialNetwork = 1051;
	public const ActionReasonTyp ActionReasonDestroyMaterial = 1052;
	public const ActionReasonTyp ActionReasonCodexLevelupReward = 1053;
	public const ActionReasonTyp ActionReasonHuntingOfferReward = 1054;
	public const ActionReasonTyp ActionReasonUseWidgetAnchorPoint = 1055;
	public const ActionReasonTyp ActionReasonUseWidgetBonfire = 1056;
	public const ActionReasonTyp ActionReasonUngradeWeaponReturnMaterial = 1057;
	public const ActionReasonTyp ActionReasonUseWidgetOneoffGatherPointDetector = 1058;
	public const ActionReasonTyp ActionReasonUseWidgetClientCollector = 1059;
	public const ActionReasonTyp ActionReasonUseWidgetClientDetector = 1060;
	public const ActionReasonTyp ActionReasonTakeGeneralReward = 1061;
	public const ActionReasonTyp ActionReasonAsterTakeSpecialReward = 1062;
	public const ActionReasonTyp ActionReasonRemoveCodexBook = 1063;
	public const ActionReasonTyp ActionReasonOfferingItem = 1064;
	public const ActionReasonTyp ActionReasonUseWidgetGadgetBuilder = 1065;
	public const ActionReasonTyp ActionReasonEffigyFirstPassReward = 1066;
	public const ActionReasonTyp ActionReasonEffigyReward = 1067;
	public const ActionReasonTyp ActionReasonReunionFirstGiftReward = 1068;
	public const ActionReasonTyp ActionReasonReunionSignInReward = 1069;
	public const ActionReasonTyp ActionReasonReunionWatcherReward = 1070;
	public const ActionReasonTyp ActionReasonSalesmanMpReward = 1071;
	public const ActionReasonTyp ActionReasionAvatarPromoteReward = 1072;
	public const ActionReasonTyp ActionReasonBlessingRedeemReward = 1073;
	public const ActionReasonTyp ActionMiracleRingReward = 1074;
	public const ActionReasonTyp ActionReasonExpeditionReward = 1075;
	public const ActionReasonTyp ActionReasonTreasureMapRemoveDetector = 1076;
	public const ActionReasonTyp ActionReasonMechanicusDungeonTicket = 1077;
	public const ActionReasonTyp ActionReasonMechanicusLevelupGear = 1078;
	public const ActionReasonTyp ActionReasonMechanicusBattleSettle = 1079;
	public const ActionReasonTyp ActionReasonRegionSearchReward = 1080;
	public const ActionReasonTyp ActionReasonUnlockCoopChapter = 1081;
	public const ActionReasonTyp ActionReasonTakeCoopReward = 1082;
	public const ActionReasonTyp ActionReasonFleurFairDungeonReward = 1083;
	public const ActionReasonTyp ActionReasonActivityScore = 1084;
	public const ActionReasonTyp ActionReasonChannellerSlabOneoffDungeonReward = 1085;
	public const ActionReasonTyp ActionReasonFurnitureMakeStart = 1086;
	public const ActionReasonTyp ActionReasonFurnitureMakeTake = 1087;
	public const ActionReasonTyp ActionReasonFurnitureMakeCancel = 1088;
	public const ActionReasonTyp ActionReasonFurnitureMakeFastFinish = 1089;
	public const ActionReasonTyp ActionReasonChannellerSlabLoopDungeonFirstPassReward = 1090;
	public const ActionReasonTyp ActionReasonChannellerSlabLoopDungeonScoreReward = 1091;
	public const ActionReasonTyp ActionReasonHomeLimitedShopBuy = 1092;
	public const ActionReasonTyp ActionReasonHomeCoinCollect = 1093;
	public const ActionReasonTyp ActionReasonSummerTimeSentryTowerReward = 1094;
	public const ActionReasonTyp ActionReasonSummerTimeSprintBoatReward = 1095;
	public const ActionReasonTyp ActionReasonSummerTimeBossReward = 1096;
	public const ActionReasonTyp ActionReasonSummerTimeBombReward = 1097;
	public const ActionReasonTyp ActionReasonHomeFetterCollect = 1098;
	public const ActionReasonTyp ActionReasonEchoShellReward = 1099;
	public const ActionReasonTyp ActionReasonHomeEventReward = 1100;
	public const ActionReasonTyp ActionReasonBlitzRushDungeonReward = 1101;
	public const ActionReasonTyp ActionReasonFurnitureMakeReturn = 1102;
	public const ActionReasonTyp ActionReasonHomePlantBoxGather = 1103;
	public const ActionReasonTyp ActionReasonHomePlantSeed = 1104;
	public const ActionReasonTyp ActionReasonHomePlantGather = 1105;
	public const ActionReasonTyp ActionReasonChessDungeonReward = 1106;
	public const ActionReasonTyp ActionReasonGroupLinkBundleFinish = 1107;
	public const ActionReasonTyp ActionReasonLunaRiteSacrifice = 1108;
	public const ActionReasonTyp ActionReasonLunaRiteTakeSacrificeReward = 1109;
	public const ActionReasonTyp ActionReasonFishBite = 1110;
	public const ActionReasonTyp ActionReasonFishSucc = 1111;
	public const ActionReasonTyp ActionReasonPlantFlowerReward = 1112;
	public const ActionReasonTyp ActionReasonPlantFlowerDeliverItem = 1113;
	public const ActionReasonTyp ActionReasonPlantFlowerGiveFlower = 1114;
	public const ActionReasonTyp ActionReasonPlantFlowerRecvFlower = 1115;
	public const ActionReasonTyp ActionReasonRogueChallengeSettle = 1116;
	public const ActionReasonTyp ActionReasonRogueTakeFirstPassReward = 1117;
	public const ActionReasonTyp ActionReasonRogueUpgradeShikigami = 1118;
	public const ActionReasonTyp ActionReasonRogueRefreshCard = 1119;
	public const ActionReasonTyp ActionReasonUseWidgetCaptureAnimal = 1120;
	public const ActionReasonTyp ActionReasonCaptureAnimalSucc = 1121;
	public const ActionReasonTyp ActionReasonSnowDrifts = 1122;
	public const ActionReasonTyp ActionReasonWinterCampGiveItem = 1123;
	public const ActionReasonTyp ActionReasonWinterCampRecvItem = 1124;
	public const ActionReasonTyp ActionReasonWinterCampExploreReward = 1125;
	public const ActionReasonTyp ActionReasonWinterCampBattleReward = 1126;
	public const ActionReasonTyp ActionReasonLanternRiteSkinReward = 1127;
	public const ActionReasonTyp ActionReasonLanternRiteDungeonReward = 1128;
	public const ActionReasonTyp ActionReasonMichiaeMatsuriDarkChallengeReward = 1129;
	public const ActionReasonTyp ActionReasonMichiaeMatsuriUnlockCrystalSkill = 1130;
	public const ActionReasonTyp ActionReasonLanternRiteGroupReward = 1131;
	public const ActionReasonTyp ActionReasonCostumeDefaultUnlock = 1132;
	public const ActionReasonTyp ActionReasonSpiceActivityMakeSpice = 1133;
	public const ActionReasonTyp ActionReasonSpiceActivityProcessFood = 1134;
	public const ActionReasonTyp ActionReasonSpiceAddAvatarFetter = 1135;
	public const ActionReasonTyp ActionReasonGachaActivityRobotReward = 1136;
	public const ActionReasonTyp ActionReasonGivingTakeBack = 1137;
	public const ActionReasonTyp ActionReasonSummerTimeV2DungeonReward = 1138;
	public const ActionReasonTyp ActionReasonGravenInnocenceCampReward = 1139;
	public const ActionReasonTyp ActionReasonTreasureSeelieChestReward = 1140;
	public const ActionReasonTyp ActionReasonGcgTavernChallengeUnlockCharacter = 1141;
	public const ActionReasonTyp ActionReasonGcgLevelReward = 1143;
	public const ActionReasonTyp ActionReasonGcgChallengeFinish = 1144;
	public const ActionReasonTyp ActionReasonVintageMarketDeal = 1145;
	public const ActionReasonTyp ActionReasonVintageMarketBargain = 1146;
	public const ActionReasonTyp ActionReasonVintageMarketStore = 1147;
	public const ActionReasonTyp ActionReasonVintagePresent = 1148;
	public const ActionReasonTyp ActionReasonVintageOpenStore = 1149;
	public const ActionReasonTyp ActionReasonVintageStoreUnlockSlot = 1150;
	public const ActionReasonTyp ActionReasonVintageStoreNpcEvent = 1151;
	public const ActionReasonTyp ActionReasonRockBoardExploreReward = 1152;
	public const ActionReasonTyp ActionReasonVintageStoreDividend = 1153;
	public const ActionReasonTyp ActionReasonAvatarRename = 1154;
	public const ActionReasonTyp ActionReasonGcgFinishLevelQuest = 1155;
	public const ActionReasonTyp ActionReasonGcgProficiencyReward = 1156;
	public const ActionReasonTyp ActionReasonTeamChainCostumeReward = 1157;
	public const ActionReasonTyp ActionReasonOfferingPariFinishReward = 1158;
}
public enum MPBJOANOMOJ
{
	// Fields
	public const MPBJOANOMOJ StoreNone = 0;
	public const MPBJOANOMOJ StorePack = 1;
	public const MPBJOANOMOJ StoreDepot = 2;
}
public enum ILBGJKHAHIM
{
	// Fields
	public const ILBGJKHAHIM None = 0;
	public const ILBGJKHAHIM Lock = 1;
	public const ILBGJKHAHIM Unlock = 2;
}
public enum DNFFLKMAEFB
{
	// Fields
	public const DNFFLKMAEFB None = 0;
	public const DNFFLKMAEFB FullLevel = 1;
	public const DNFFLKMAEFB NotFullLevel = 2;
}
public enum NCPNEHPLDON
{
	// Fields
	public const NCPNEHPLDON None = 0;
	public const NCPNEHPLDON HasBeenWeared = 1;
	public const NCPNEHPLDON HasNotBeenWeared = 2;
}
public enum OOCPHEKKCJH
{
	// Fields
	public const OOCPHEKKCJH Unknow = 0;
	public const OOCPHEKKCJH Float = 1;
	public const OOCPHEKKCJH Int = 2;
	public const OOCPHEKKCJH Bool = 3;
	public const OOCPHEKKCJH Trigger = 4;
	public const OOCPHEKKCJH String = 5;
	public const OOCPHEKKCJH Uint = 6;
}
public enum CKBDHMCNIFJ
{
	// Fields
	public const CKBDHMCNIFJ MotionNone = 0;
	public const CKBDHMCNIFJ MotionReset = 1;
	public const CKBDHMCNIFJ MotionStandby = 2;
	public const CKBDHMCNIFJ MotionStandbyMove = 3;
	public const CKBDHMCNIFJ MotionWalk = 4;
	public const CKBDHMCNIFJ MotionRun = 5;
	public const CKBDHMCNIFJ MotionDash = 6;
	public const CKBDHMCNIFJ MotionClimb = 7;
	public const CKBDHMCNIFJ MotionClimbJump = 8;
	public const CKBDHMCNIFJ MotionStandbyToClimb = 9;
	public const CKBDHMCNIFJ MotionFight = 10;
	public const CKBDHMCNIFJ MotionJump = 11;
	public const CKBDHMCNIFJ MotionDrop = 12;
	public const CKBDHMCNIFJ MotionFly = 13;
	public const CKBDHMCNIFJ MotionSwimMove = 14;
	public const CKBDHMCNIFJ MotionSwimIdle = 15;
	public const CKBDHMCNIFJ MotionSwimDash = 16;
	public const CKBDHMCNIFJ MotionSwimJump = 17;
	public const CKBDHMCNIFJ MotionSlip = 18;
	public const CKBDHMCNIFJ MotionGoUpstairs = 19;
	public const CKBDHMCNIFJ MotionFallOnGround = 20;
	public const CKBDHMCNIFJ MotionJumpUpWallForStandby = 21;
	public const CKBDHMCNIFJ MotionJumpOffWall = 22;
	public const CKBDHMCNIFJ MotionPoweredFly = 23;
	public const CKBDHMCNIFJ MotionLadderIdle = 24;
	public const CKBDHMCNIFJ MotionLadderMove = 25;
	public const CKBDHMCNIFJ MotionLadderSlip = 26;
	public const CKBDHMCNIFJ MotionStandbyToLadder = 27;
	public const CKBDHMCNIFJ MotionLadderToStandby = 28;
	public const CKBDHMCNIFJ MotionDangerStandby = 29;
	public const CKBDHMCNIFJ MotionDangerStandbyMove = 30;
	public const CKBDHMCNIFJ MotionDangerWalk = 31;
	public const CKBDHMCNIFJ MotionDangerRun = 32;
	public const CKBDHMCNIFJ MotionDangerDash = 33;
	public const CKBDHMCNIFJ MotionCrouchIdle = 34;
	public const CKBDHMCNIFJ MotionCrouchMove = 35;
	public const CKBDHMCNIFJ MotionCrouchRoll = 36;
	public const CKBDHMCNIFJ MotionNotify = 37;
	public const CKBDHMCNIFJ MotionLandSpeed = 38;
	public const CKBDHMCNIFJ MotionMoveFailAck = 39;
	public const CKBDHMCNIFJ MotionWaterfall = 40;
	public const CKBDHMCNIFJ MotionDashBeforeShake = 41;
	public const CKBDHMCNIFJ MotionSitIdle = 42;
	public const CKBDHMCNIFJ MotionForceSetPos = 43;
	public const CKBDHMCNIFJ MotionQuestForceDrag = 44;
	public const CKBDHMCNIFJ MotionFollowRoute = 45;
	public const CKBDHMCNIFJ MotionSkiffBoarding = 46;
	public const CKBDHMCNIFJ MotionSkiffNormal = 47;
	public const CKBDHMCNIFJ MotionSkiffDash = 48;
	public const CKBDHMCNIFJ MotionSkiffPoweredDash = 49;
	public const CKBDHMCNIFJ MotionDestroyVehicle = 50;
	public const CKBDHMCNIFJ MotionFlyIdle = 51;
	public const CKBDHMCNIFJ MotionFlySlow = 52;
	public const CKBDHMCNIFJ MotionFlyFast = 53;
	public const CKBDHMCNIFJ MotionAimMove = 54;
	public const CKBDHMCNIFJ MotionAirCompensation = 55;
	public const CKBDHMCNIFJ MotionSorushNormal = 56;
	public const CKBDHMCNIFJ MotionNum = 57;
}
public enum BBAHHNMJMJH
{
	// Fields
	public const BBAHHNMJMJH ProtEntityNone = 0;
	public const BBAHHNMJMJH ProtEntityAvatar = 1;
	public const BBAHHNMJMJH ProtEntityMonster = 2;
	public const BBAHHNMJMJH ProtEntityNpc = 3;
	public const BBAHHNMJMJH ProtEntityGadget = 4;
	public const BBAHHNMJMJH ProtEntityRegion = 5;
	public const BBAHHNMJMJH ProtEntityWeapon = 6;
	public const BBAHHNMJMJH ProtEntityWeather = 7;
	public const BBAHHNMJMJH ProtEntityScene = 8;
	public const BBAHHNMJMJH ProtEntityTeam = 9;
	public const BBAHHNMJMJH ProtEntityMassiveEntity = 10;
	public const BBAHHNMJMJH ProtEntityMpLevel = 11;
	public const BBAHHNMJMJH ProtEntityPlayTeamEntity = 12;
	public const BBAHHNMJMJH ProtEntityEyePoint = 13;
	public const BBAHHNMJMJH ProtEntityMax = 14;
}
public enum PKKAPIFAEHB
{
	// Fields
	public const PKKAPIFAEHB MonsterBornNone = 0;
	public const PKKAPIFAEHB MonsterBornDefault = 1;
	public const PKKAPIFAEHB MonsterBornRandom = 2;
}
public enum EOMJMDNEMOO
{
	// Fields
	public const EOMJMDNEMOO GadgetBornNone = 0;
	public const EOMJMDNEMOO GadgetBornInAir = 1;
	public const EOMJMDNEMOO GadgetBornPlayer = 2;
	public const EOMJMDNEMOO GadgetBornMonsterHit = 3;
	public const EOMJMDNEMOO GadgetBornMonsterDie = 4;
	public const EOMJMDNEMOO GadgetBornGadget = 5;
	public const EOMJMDNEMOO GadgetBornGround = 6;
}
public enum OKNINCMBNLI
{
	// Fields
	public const OKNINCMBNLI MovingPlatformNone = 0;
	public const OKNINCMBNLI MovingPlatformUseConfig = 1;
	public const OKNINCMBNLI MovingPlatformAbility = 2;
	public const OKNINCMBNLI MovingPlatformRoute = 3;
}
public enum BBEMLEOGGGN
{
	// Fields
	public const BBEMLEOGGGN None = 0;
	public const BBEMLEOGGGN Init = 1;
	public const BBEMLEOGGGN Building = 2;
	public const BBEMLEOGGGN Built = 3;
}
public enum MJOHNMGPPEN
{
	// Fields
	public const MJOHNMGPPEN ChangeHpNone = 0;
	public const MJOHNMGPPEN ChangeHpSubAvatar = 1;
	public const MJOHNMGPPEN ChangeHpSubMonster = 2;
	public const MJOHNMGPPEN ChangeHpSubGear = 3;
	public const MJOHNMGPPEN ChangeHpSubEnvir = 4;
	public const MJOHNMGPPEN ChangeHpSubFall = 5;
	public const MJOHNMGPPEN ChangeHpSubDrawn = 6;
	public const MJOHNMGPPEN ChangeHpSubAbyss = 7;
	public const MJOHNMGPPEN ChangeHpSubAbility = 8;
	public const MJOHNMGPPEN ChangeHpSubSummon = 9;
	public const MJOHNMGPPEN ChangeHpSubScript = 10;
	public const MJOHNMGPPEN ChangeHpSubGm = 11;
	public const MJOHNMGPPEN ChangeHpSubKillSelf = 12;
	public const MJOHNMGPPEN ChangeHpSubClimateCold = 13;
	public const MJOHNMGPPEN ChangeHpSubStormLightning = 14;
	public const MJOHNMGPPEN ChangeHpSubKillServerGadget = 15;
	public const MJOHNMGPPEN ChangeHpSubReplace = 16;
	public const MJOHNMGPPEN ChangeHpSubPlayerLeave = 17;
	public const MJOHNMGPPEN ChangeHpAttackByEnergy = 18;
	public const MJOHNMGPPEN ChangeHpAttackByRecycle = 19;
	public const MJOHNMGPPEN ChangeHpSubPlayerBack = 20;
	public const MJOHNMGPPEN ChangeHpByLua = 51;
	public const MJOHNMGPPEN ChangeHpAddAbility = 101;
	public const MJOHNMGPPEN ChangeHpAddItem = 102;
	public const MJOHNMGPPEN ChangeHpAddRevive = 103;
	public const MJOHNMGPPEN ChangeHpAddUpgrade = 104;
	public const MJOHNMGPPEN ChangeHpAddStatue = 105;
	public const MJOHNMGPPEN ChangeHpAddBackground = 106;
	public const MJOHNMGPPEN ChangeHpAddGm = 107;
	public const MJOHNMGPPEN ChangeHpAddTrialAvatarActivity = 108;
	public const MJOHNMGPPEN ChangeHpAddRouguelikeSpring = 109;
}
public enum AFOALEMHCMM
{
	// Fields
	public const AFOALEMHCMM PlayerDieNone = 0;
	public const AFOALEMHCMM PlayerDieKillByMonster = 1;
	public const AFOALEMHCMM PlayerDieKillByGear = 2;
	public const AFOALEMHCMM PlayerDieFall = 3;
	public const AFOALEMHCMM PlayerDieDrawn = 4;
	public const AFOALEMHCMM PlayerDieAbyss = 5;
	public const AFOALEMHCMM PlayerDieGm = 6;
	public const AFOALEMHCMM PlayerDieClimateCold = 7;
	public const AFOALEMHCMM PlayerDieStormLighting = 8;
}
public enum PMGGIBMHJEJ
{
	// Fields
	public const PMGGIBMHJEJ DieOptNone = 0;
	public const PMGGIBMHJEJ DieOptReplay = 1;
	public const PMGGIBMHJEJ DieOptCancel = 2;
	public const PMGGIBMHJEJ DieOptRevive = 3;
}
public enum BPEKJGDHLML
{
	// Fields
	public const BPEKJGDHLML None = 0;
	public const BPEKJGDHLML NotOpen = 1;
	public const BPEKJGDHLML Open = 2;
	public const BPEKJGDHLML Finish = 3;
	public const BPEKJGDHLML Conceal = 4;
}
public enum PHCFOHLGLJN
{
	// Fields
	public const PHCFOHLGLJN AvatarExpeditionNone = 0;
	public const PHCFOHLGLJN AvatarExpeditionDoing = 1;
	public const PHCFOHLGLJN AvatarExpeditionFinishWaitReward = 2;
	public const PHCFOHLGLJN AvatarExpeditionCallbackWaitReward = 3;
	public const PHCFOHLGLJN AvatarExpeditionLocked = 4;
}
public enum FDOECABHIEL
{
	// Fields
	public const FDOECABHIEL None = 0;
	public const FDOECABHIEL Formal = 1;
	public const FDOECABHIEL Trial = 2;
	public const FDOECABHIEL Mirror = 3;
}
public enum DPENHJMNKFO
{
	// Fields
	public const DPENHJMNKFO EventTriggerNone = 0;
	public const DPENHJMNKFO EventTriggerEnterForce = 1;
}
public enum COONHFJFEHG
{
	// Fields
	public const COONHFJFEHG MailCollectibleUnkonw = 0;
	public const COONHFJFEHG MailNotCollectible = 1;
	public const COONHFJFEHG MailCollectibleUncollected = 2;
	public const COONHFJFEHG MailCollectibleCollected = 3;
}
public enum CEBEGOKNPHM
{
	// Fields
	public const CEBEGOKNPHM MpSettingNoEnter = 0;
	public const CEBEGOKNPHM MpSettingEnterFreely = 1;
	public const CEBEGOKNPHM MpSettingEnterAfterApply = 2;
}
public enum JOCIFJKMAAJ
{
	// Fields
	public const JOCIFJKMAAJ LanguageNone = 0;
	public const JOCIFJKMAAJ LanguageEn = 1;
	public const JOCIFJKMAAJ LanguageSc = 2;
	public const JOCIFJKMAAJ LanguageTc = 3;
	public const JOCIFJKMAAJ LanguageFr = 4;
	public const JOCIFJKMAAJ LanguageDe = 5;
	public const JOCIFJKMAAJ LanguageEs = 6;
	public const JOCIFJKMAAJ LanguagePt = 7;
	public const JOCIFJKMAAJ LanguageRu = 8;
	public const JOCIFJKMAAJ LanguageJp = 9;
	public const JOCIFJKMAAJ LanguageKr = 10;
	public const JOCIFJKMAAJ LanguageTh = 11;
	public const JOCIFJKMAAJ LanguageVn = 12;
	public const JOCIFJKMAAJ LanguageId = 13;
	public const JOCIFJKMAAJ LanguageTr = 14;
	public const JOCIFJKMAAJ LanguageIt = 15;
}
public enum IIINMHIAOCN
{
	// Fields
	public const IIINMHIAOCN Editor = 0;
	public const IIINMHIAOCN Ios = 1;
	public const IIINMHIAOCN Android = 2;
	public const IIINMHIAOCN Pc = 3;
	public const IIINMHIAOCN Ps4 = 4;
	public const IIINMHIAOCN Server = 5;
	public const IIINMHIAOCN CloudAndroid = 6;
	public const IIINMHIAOCN CloudIos = 7;
	public const IIINMHIAOCN Ps5 = 8;
	public const IIINMHIAOCN CloudWeb = 9;
	public const IIINMHIAOCN CloudTv = 10;
	public const IIINMHIAOCN CloudMac = 11;
	public const IIINMHIAOCN CloudPc = 12;
	public const IIINMHIAOCN CloudThirdPartyMobile = 13;
	public const IIINMHIAOCN CloudThirdPartyPc = 14;
}
public enum IPLKIIFIDJK
{
	// Fields
	public const IPLKIIFIDJK Npc = 0;
	public const IPLKIIFIDJK Quest = 1;
	public const IPLKIIFIDJK Special = 2;
	public const IPLKIIFIDJK Mine = 3;
	public const IPLKIIFIDJK Collection = 4;
	public const IPLKIIFIDJK Monster = 5;
	public const IPLKIIFIDJK FishPool = 6;
}
public enum ICFEJHJADHJ
{
	// Fields
	public const ICFEJHJADHJ Noe = 0;
	public const ICFEJHJADHJ Monster = 1;
	public const ICFEJHJADHJ Quest = 2;
}
public enum BCLNCCOHMKK
{
	// Fields
	public const BCLNCCOHMKK None = 0;
	public const BCLNCCOHMKK Dungeon = 1;
	public const BCLNCCOHMKK MpPlay = 2;
	public const BCLNCCOHMKK Mechanicus = 3;
	public const BCLNCCOHMKK General = 4;
	public const BCLNCCOHMKK Gcg = 5;
}
public enum JNDALNPMINN
{
	// Fields
	public const JNDALNPMINN MatchNone = 0;
	public const JNDALNPMINN MatchFinish = 1;
	public const JNDALNPMINN MatchPlayerCancel = 2;
	public const JNDALNPMINN MatchTimeout = 3;
	public const JNDALNPMINN MatchPlayerConfirm = 4;
	public const JNDALNPMINN MatchFailed = 5;
	public const JNDALNPMINN MatchSystemError = 6;
	public const JNDALNPMINN MatchInterrupted = 7;
	public const JNDALNPMINN MatchMpUnavailable = 8;
	public const JNDALNPMINN MatchConfirmTimeout = 9;
}
public enum CMELEBGINMN
{
	// Fields
	public const CMELEBGINMN LuashellNone = 0;
	public const CMELEBGINMN LuashellNormal = 1;
	public const CMELEBGINMN LuashellSecurity = 2;
	public const CMELEBGINMN LuashellShellCode = 3;
}
public enum CNCIMIAOHLE
{
	// Fields
	public const CNCIMIAOHLE SalesmanStatusNone = 0;
	public const CNCIMIAOHLE SalesmanStatusUnstarted = 1;
	public const CNCIMIAOHLE SalesmanStatusStarted = 2;
	public const CNCIMIAOHLE SalesmanStatusDelivered = 3;
}
public enum PHKDBEICLGJ
{
	// Fields
	public const PHKDBEICLGJ CodexNone = 0;
	public const PHKDBEICLGJ CodexQuest = 1;
	public const PHKDBEICLGJ CodexWeapon = 2;
	public const PHKDBEICLGJ CodexAnimal = 3;
	public const PHKDBEICLGJ CodexMaterial = 4;
	public const PHKDBEICLGJ CodexBooks = 5;
	public const PHKDBEICLGJ CodexPushtips = 6;
	public const PHKDBEICLGJ CodexView = 7;
	public const PHKDBEICLGJ CodexReliquary = 8;
}
public enum JFEDOFPBNLC
{
	// Fields
	public const JFEDOFPBNLC AsterLittleStageNone = 0;
	public const JFEDOFPBNLC AsterLittleStageUnstarted = 1;
	public const JFEDOFPBNLC AsterLittleStageStarted = 2;
	public const JFEDOFPBNLC AsterLittleStageFinished = 3;
}
public enum OLEMKEOPABD
{
	// Fields
	public const OLEMKEOPABD None = 0;
	public const OLEMKEOPABD Started = 1;
	public const OLEMKEOPABD Unstarted = 2;
	public const OLEMKEOPABD Succ = 3;
}
public enum IMOCPNKHOFP
{
	// Fields
	public const IMOCPNKHOFP RegionSearchNone = 0;
	public const IMOCPNKHOFP RegionSearchUnstarted = 1;
	public const IMOCPNKHOFP RegionSearchStarted = 2;
	public const IMOCPNKHOFP RegionSearchWaitReward = 3;
	public const IMOCPNKHOFP RegionSearchFinished = 4;
}
public enum AJJHDKCAIAA
{
	// Fields
	public const AJJHDKCAIAA ReportReasonNone = 0;
	public const AJJHDKCAIAA ReportReasonDeceptiveAds = 1;
	public const AJJHDKCAIAA ReportReasonAbusing = 2;
	public const AJJHDKCAIAA ReportReasonCheat = 3;
	public const AJJHDKCAIAA ReportReasonPolitical = 4;
	public const AJJHDKCAIAA ReportReasonOther = 5;
	public const AJJHDKCAIAA ReportReasonHome = 6;
}
public enum BGFLLGLOJJP
{
	// Fields
	public const BGFLLGLOJJP MarkTipsDungeonElementTrial = 0;
}
public enum MKKHEKAJHKN
{
	// Fields
	public const MKKHEKAJHKN ExpeditionNone = 0;
	public const MKKHEKAJHKN ExpeditionStarted = 1;
	public const MKKHEKAJHKN ExpeditionFinished = 2;
	public const MKKHEKAJHKN ExpeditionRewarded = 3;
	public const MKKHEKAJHKN ExpeditionLocked = 4;
}
public enum FEDMMHJNFCH
{
	// Fields
	public const FEDMMHJNFCH NeedConfirm = 0;
	public const FEDMMHJNFCH Refuse = 1;
	public const FEDMMHJNFCH Direct = 2;
}
public enum HFLIAJKFJIG
{
	// Fields
	public const HFLIAJKFJIG ChannelTeam = 0;
	public const HFLIAJKFJIG ChannelFriend = 1;
	public const HFLIAJKFJIG ChannelNone = 2;
	public const HFLIAJKFJIG ChannelHideandseek = 3;
	public const HFLIAJKFJIG ChannelHideandseekTeam = 5;
	public const HFLIAJKFJIG ChannelLanV3Boat = 6;
	public const HFLIAJKFJIG ChannelAll = 10;
	public const HFLIAJKFJIG ChannelTest = 100;
}
public enum AINNNEOCPMB
{
	// Fields
	public const AINNNEOCPMB Idle = 0;
	public const AINNNEOCPMB ChangingAvatar = 1;
	public const AINNNEOCPMB Ready = 2;
}
public enum BJACKBJGDPJ
{
	// Fields
	public const BJACKBJGDPJ LunaRiteHintStatusDefault = 0;
	public const BJACKBJGDPJ LunaRiteHintStatusNoCount = 1;
	public const BJACKBJGDPJ LunaRiteHintStatusFinish = 2;
}
public enum KBPCMOCENDE
{
	// Fields
	public const KBPCMOCENDE LunaRiteHintTypeNone = 0;
	public const KBPCMOCENDE LunaRiteHintTypeRune = 1;
	public const KBPCMOCENDE LunaRiteHintTypeChest = 2;
}
public enum NPODOLLHBFD
{
	// Fields
	public const NPODOLLHBFD ClientInputNone = 0;
	public const NPODOLLHBFD ClientInputKeybordMouse = 1;
	public const NPODOLLHBFD ClientInputGamepad = 2;
	public const NPODOLLHBFD ClientInputTouchPanel = 3;
}
public enum OMEFMODIDAM
{
	// Fields
	public const OMEFMODIDAM None = 0;
	public const OMEFMODIDAM Collectable = 1;
	public const OMEFMODIDAM Collected = 2;
	public const OMEFMODIDAM Finished = 3;
}
public enum GBHPBGNKCEE
{
	// Fields
	public const GBHPBGNKCEE AuditNone = 0;
	public const GBHPBGNKCEE AuditWaiting = 1;
	public const GBHPBGNKCEE AuditFailed = 2;
}
public enum EDGEOCMAKEP
{
	// Fields
	public const EDGEOCMAKEP None = 0;
	public const EDGEOCMAKEP Transculent = 1;
}
public enum PAPLIDJPGCN.JJHHJNKODNN
{
	// Fields
	public const PAPLIDJPGCN.JJHHJNKODNN None = 0;
	public const PAPLIDJPGCN.JJHHJNKODNN Ival = 2;
	public const PAPLIDJPGCN.JJHHJNKODNN Fval = 3;
}
public enum KDAEKECNJGG.LINLOFFMMGE
{
	// Fields
	public const KDAEKECNJGG.LINLOFFMMGE None = 0;
	public const KDAEKECNJGG.LINLOFFMMGE ForceUdpate = 4;
	public const KDAEKECNJGG.LINLOFFMMGE StopServer = 5;
}
public enum PBOFCEEINNH.IMIEEGAJICA
{
	// Fields
	public const PBOFCEEINNH.IMIEEGAJICA None = 0;
	public const PBOFCEEINNH.IMIEEGAJICA CountDownDelete = 2;
	public const PBOFCEEINNH.IMIEEGAJICA DateDelete = 3;
	public const PBOFCEEINNH.IMIEEGAJICA DelayWeekCountDownDelete = 4;
}
public enum PDGCLANHIJP.MKEECCJKLEL
{
	// Fields
	public const PDGCLANHIJP.MKEECCJKLEL None = 0;
	public const PDGCLANHIJP.MKEECCJKLEL Reliquary = 1;
	public const PDGCLANHIJP.MKEECCJKLEL Weapon = 2;
}
public enum FKONGMBBBAN.CJHGKMIFBEB
{
	// Fields
	public const FKONGMBBBAN.CJHGKMIFBEB None = 0;
	public const FKONGMBBBAN.CJHGKMIFBEB Material = 5;
	public const FKONGMBBBAN.CJHGKMIFBEB Equip = 6;
	public const FKONGMBBBAN.CJHGKMIFBEB Furniture = 7;
}
public enum CPMJBNHKIEA.IOHAJLMNBHB
{
	// Fields
	public const CPMJBNHKIEA.IOHAJLMNBHB None = 0;
	public const CPMJBNHKIEA.IOHAJLMNBHB Str = 1;
	public const CPMJBNHKIEA.IOHAJLMNBHB Hash = 2;
}
public enum JLEGECKKDKB.GKMCJCCLLLN
{
	// Fields
	public const JLEGECKKDKB.GKMCJCCLLLN None = 0;
	public const JLEGECKKDKB.GKMCJCCLLLN FloatValue = 3;
	public const JLEGECKKDKB.GKMCJCCLLLN StringValue = 4;
	public const JLEGECKKDKB.GKMCJCCLLLN IntValue = 5;
	public const JLEGECKKDKB.GKMCJCCLLLN UintValue = 6;
}
public enum EOKIFGHJBHD.BDKNBIIIKOH.OIEFFFMMFLE
{
	// Fields
	public const EOKIFGHJBHD.BDKNBIIIKOH.OIEFFFMMFLE ActionTypeNone = 0;
	public const EOKIFGHJBHD.BDKNBIIIKOH.OIEFFFMMFLE ActionTypeLaunchBall = 1;
	public const EOKIFGHJBHD.BDKNBIIIKOH.OIEFFFMMFLE ActionTypeDestroyBall = 2;
	public const EOKIFGHJBHD.BDKNBIIIKOH.OIEFFFMMFLE ActionTypeFallingObject = 3;
	public const EOKIFGHJBHD.BDKNBIIIKOH.OIEFFFMMFLE ActionTypeMissile = 4;
}
public enum AACFCFOGCMC.ODPIMCEFOJD
{
	// Fields
	public const AACFCFOGCMC.ODPIMCEFOJD None = 0;
	public const AACFCFOGCMC.ODPIMCEFOJD InstancedAbilityId = 1;
	public const AACFCFOGCMC.ODPIMCEFOJD InstancedModifierId = 2;
}
public enum CIBJHBFKKAN.BGOAPCKFBFL
{
	// Fields
	public const CIBJHBFKKAN.BGOAPCKFBFL None = 0;
	public const CIBJHBFKKAN.BGOAPCKFBFL FishInfo = 50;
	public const CIBJHBFKKAN.BGOAPCKFBFL FishtankFishInfo = 51;
}
public enum KMEPMNFPJFH.CAFMDJBFBDM
{
	// Fields
	public const KMEPMNFPJFH.CAFMDJBFBDM None = 0;
	public const KMEPMNFPJFH.CAFMDJBFBDM Velocity = 11;
	public const KMEPMNFPJFH.CAFMDJBFBDM Time = 12;
}
public enum KMEPMNFPJFH.KNJLBLKBHMJ
{
	// Fields
	public const KMEPMNFPJFH.KNJLBLKBHMJ None = 0;
	public const KMEPMNFPJFH.KNJLBLKBHMJ Rotation = 21;
	public const KMEPMNFPJFH.KNJLBLKBHMJ RotationSpeed = 22;
	public const KMEPMNFPJFH.KNJLBLKBHMJ AxisSpeed = 23;
}
public enum OJOGHGHFEEP.LBEALPOKLMO
{
	// Fields
	public const OJOGHGHFEEP.LBEALPOKLMO None = 0;
	public const OJOGHGHFEEP.LBEALPOKLMO CrucibleInfo = 21;
}
public enum CAHMGNJLGHD.OJFPDBFHIAP
{
	// Fields
	public const CAHMGNJLGHD.OJFPDBFHIAP None = 0;
	public const CAHMGNJLGHD.OJFPDBFHIAP TrifleItem = 12;
	public const CAHMGNJLGHD.OJFPDBFHIAP GatherGadget = 13;
	public const CAHMGNJLGHD.OJFPDBFHIAP Worktop = 14;
	public const CAHMGNJLGHD.OJFPDBFHIAP ClientGadget = 15;
	public const CAHMGNJLGHD.OJFPDBFHIAP Weather = 17;
	public const CAHMGNJLGHD.OJFPDBFHIAP AbilityGadget = 18;
	public const CAHMGNJLGHD.OJFPDBFHIAP StatueGadget = 19;
	public const CAHMGNJLGHD.OJFPDBFHIAP BossChest = 20;
	public const CAHMGNJLGHD.OJFPDBFHIAP BlossomChest = 41;
	public const CAHMGNJLGHD.OJFPDBFHIAP MpPlayReward = 42;
	public const CAHMGNJLGHD.OJFPDBFHIAP GeneralReward = 43;
	public const CAHMGNJLGHD.OJFPDBFHIAP OfferingInfo = 44;
	public const CAHMGNJLGHD.OJFPDBFHIAP FoundationInfo = 45;
	public const CAHMGNJLGHD.OJFPDBFHIAP VehicleInfo = 46;
	public const CAHMGNJLGHD.OJFPDBFHIAP ShellInfo = 47;
	public const CAHMGNJLGHD.OJFPDBFHIAP ScreenInfo = 48;
	public const CAHMGNJLGHD.OJFPDBFHIAP FishPoolInfo = 59;
	public const CAHMGNJLGHD.OJFPDBFHIAP CustomGadgetTreeInfo = 60;
	public const CAHMGNJLGHD.OJFPDBFHIAP RoguelikeGadgetInfo = 61;
	public const CAHMGNJLGHD.OJFPDBFHIAP NightCrowGadgetInfo = 62;
	public const CAHMGNJLGHD.OJFPDBFHIAP DeshretObeliskGadgetInfo = 63;
	public const CAHMGNJLGHD.OJFPDBFHIAP CoinCollectOperatorInfo = 64;
}
public enum GGDPCAPPPNF.OIOEIBHALJO
{
	// Fields
	public const GGDPCAPPPNF.OIOEIBHALJO None = 0;
	public const GGDPCAPPPNF.OIOEIBHALJO IntVal = 2;
	public const GGDPCAPPPNF.OIOEIBHALJO FloatVal = 3;
	public const GGDPCAPPPNF.OIOEIBHALJO BoolVal = 4;
}
public enum HLAAMJAKIEJ.MBNNHEIFBAK
{
	// Fields
	public const HLAAMJAKIEJ.MBNNHEIFBAK None = 0;
	public const HLAAMJAKIEJ.MBNNHEIFBAK Avatar = 10;
	public const HLAAMJAKIEJ.MBNNHEIFBAK Monster = 11;
	public const HLAAMJAKIEJ.MBNNHEIFBAK Npc = 12;
	public const HLAAMJAKIEJ.MBNNHEIFBAK Gadget = 13;
}
public enum KKJAKFLICEJ.MALMACLBKAE
{
	// Fields
	public const KKJAKFLICEJ.MALMACLBKAE None = 0;
	public const KKJAKFLICEJ.MALMACLBKAE MonsterId = 1;
	public const KKJAKFLICEJ.MALMACLBKAE NpcId = 2;
	public const KKJAKFLICEJ.MALMACLBKAE GadgetId = 3;
	public const KKJAKFLICEJ.MALMACLBKAE ItemId = 4;
}
public enum KKJAKFLICEJ.DNGAALHHDPL
{
	// Fields
	public const KKJAKFLICEJ.DNGAALHHDPL None = 0;
	public const KKJAKFLICEJ.DNGAALHHDPL Gadget = 13;
}
public enum KPPGCJMONCN.PLFINCDDDFG
{
	// Fields
	public const KPPGCJMONCN.PLFINCDDDFG None = 0;
	public const KPPGCJMONCN.PLFINCDDDFG Reliquary = 2;
	public const KPPGCJMONCN.PLFINCDDDFG Weapon = 3;
}
public enum JENPONLBPJB.OGHOPCHGDEO
{
	// Fields
	public const JENPONLBPJB.OGHOPCHGDEO None = 0;
	public const JENPONLBPJB.OGHOPCHGDEO WaterInfo = 4;
	public const JENPONLBPJB.OGHOPCHGDEO GrassInfo = 5;
	public const JENPONLBPJB.OGHOPCHGDEO BoxInfo = 6;
}
public enum KOKAKAIJKDI.JJEHKNFLOPP
{
	// Fields
	public const KOKAKAIJKDI.JJEHKNFLOPP None = 0;
	public const KOKAKAIJKDI.JJEHKNFLOPP WaterInfo = 6;
	public const KOKAKAIJKDI.JJEHKNFLOPP GrassInfo = 7;
	public const KOKAKAIJKDI.JJEHKNFLOPP BoxInfo = 8;
}
public enum OOHOEKGOKIO.NOIBIJLJMBA
{
	// Fields
	public const OOHOEKGOKIO.NOIBIJLJMBA None = 0;
	public const OOHOEKGOKIO.NOIBIJLJMBA ResinCard = 101;
}
public enum HNCPFKLDBIF.DMPBFJOKMIO
{
	// Fields
	public const HNCPFKLDBIF.DMPBFJOKMIO None = 0;
	public const HNCPFKLDBIF.DMPBFJOKMIO NpcData = 6;
	public const HNCPFKLDBIF.DMPBFJOKMIO SuiteData = 7;
}
public enum Retcode
{
	// Fields
	public const Retcode RetSucc = 0;
	public const Retcode RetFail = -1;
	public const Retcode RetSvrError = 1;
	public const Retcode RetUnknownError = 2;
	public const Retcode RetFrequent = 3;
	public const Retcode RetNodeForwardError = 4;
	public const Retcode RetNotFoundConfig = 5;
	public const Retcode RetSystemBusy = 6;
	public const Retcode RetGmUidBind = 7;
	public const Retcode RetForbidden = 8;
	public const Retcode RetStopRegister = 10;
	public const Retcode RetStopServer = 11;
	public const Retcode RetAccountVeirfyError = 12;
	public const Retcode RetAccountFreeze = 13;
	public const Retcode RetRepeatLogin = 14;
	public const Retcode RetClientVersionError = 15;
	public const Retcode RetTokenError = 16;
	public const Retcode RetAccountNotExist = 17;
	public const Retcode RetWaitOtherLogin = 18;
	public const Retcode RetAnotherLogin = 19;
	public const Retcode RetClientForceUpdate = 20;
	public const Retcode RetBlackUid = 21;
	public const Retcode RetLoginDbFail = 22;
	public const Retcode RetLoginInitFail = 23;
	public const Retcode RetMysqlDuplicate = 24;
	public const Retcode RetMaxPlayer = 25;
	public const Retcode RetAntiAddict = 26;
	public const Retcode RetPsPlayerWithoutOnlineId = 27;
	public const Retcode RetOnlineIdNotFound = 28;
	public const Retcode RetOnlneIdNotMatch = 29;
	public const Retcode RetRegisterIsFull = 30;
	public const Retcode RetChecksumInvalid = 31;
	public const Retcode RetBlackRegisterIp = 32;
	public const Retcode RetExceedRegisterRate = 33;
	public const Retcode RetUnknownPlatform = 34;
	public const Retcode RetTokenParamError = 35;
	public const Retcode RetAntiOfflineError = 36;
	public const Retcode RetBlackLoginIp = 37;
	public const Retcode RetGetTokenSessionHasUid = 38;
	public const Retcode RetEnvironmentError = 39;
	public const Retcode RetCheckClientVersionHashFail = 40;
	public const Retcode RetMinorRegisterFobidden = 41;
	public const Retcode RetSecurityLibraryError = 42;
	public const Retcode RetGateTicketCheckError = 43;
	public const Retcode RetAvatarInCd = 101;
	public const Retcode RetAvatarNotAlive = 102;
	public const Retcode RetAvatarNotOnScene = 103;
	public const Retcode RetCanNotFindAvatar = 104;
	public const Retcode RetCanNotDelCurAvatar = 105;
	public const Retcode RetDuplicateAvatar = 106;
	public const Retcode RetAvatarIsSameOne = 107;
	public const Retcode RetAvatarLevelLessThan = 108;
	public const Retcode RetAvatarCanNotChangeElement = 109;
	public const Retcode RetAvatarBreakLevelLessThan = 110;
	public const Retcode RetAvatarOnMaxBreakLevel = 111;
	public const Retcode RetAvatarIdAlreadyExist = 112;
	public const Retcode RetAvatarNotDead = 113;
	public const Retcode RetAvatarIsReviving = 114;
	public const Retcode RetAvatarIdError = 115;
	public const Retcode RetRepeatSetPlayerBornData = 116;
	public const Retcode RetPlayerLevelLessThan = 117;
	public const Retcode RetAvatarLimitLevelError = 118;
	public const Retcode RetCurAvatarNotAlive = 119;
	public const Retcode RetCanNotFindTeam = 120;
	public const Retcode RetCanNotFindCurTeam = 121;
	public const Retcode RetAvatarNotExistInTeam = 122;
	public const Retcode RetCanNotRemoveCurAvatarFromTeam = 123;
	public const Retcode RetCanNotUseReviveItemForCurAvatar = 124;
	public const Retcode RetTeamCostExceedLimit = 125;
	public const Retcode RetTeamAvatarInExpedition = 126;
	public const Retcode RetTeamCanNotChoseReplaceUse = 127;
	public const Retcode RetAvatarInCombat = 128;
	public const Retcode RetNicknameUtf8Error = 130;
	public const Retcode RetNicknameTooLong = 131;
	public const Retcode RetNicknameWordIllegal = 132;
	public const Retcode RetNicknameTooManyDigits = 133;
	public const Retcode RetNicknameIsEmpty = 134;
	public const Retcode RetNicknameMonthlyLimit = 135;
	public const Retcode RetNicknameNotChanged = 136;
	public const Retcode RetPlayerNotOnline = 140;
	public const Retcode RetOpenStateNotOpen = 141;
	public const Retcode RetFeatureClosed = 142;
	public const Retcode RetAvatarExpeditionAvatarDie = 152;
	public const Retcode RetAvatarExpeditionCountLimit = 153;
	public const Retcode RetAvatarExpeditionMainForbid = 154;
	public const Retcode RetAvatarExpeditionTrialForbid = 155;
	public const Retcode RetTeamNameIllegal = 156;
	public const Retcode RetIsNotInStandby = 157;
	public const Retcode RetIsInDungeon = 158;
	public const Retcode RetIsInLockAvatarQuest = 159;
	public const Retcode RetIsUsingTrialAvatar = 160;
	public const Retcode RetIsUsingTempAvatar = 161;
	public const Retcode RetNotHasFlycloak = 162;
	public const Retcode RetFetterRewardAlreadyGot = 163;
	public const Retcode RetFetterRewardLevelNotEnough = 164;
	public const Retcode RetWorldLevelAdjustMinLevel = 165;
	public const Retcode RetWorldLevelAdjustCd = 166;
	public const Retcode RetNotHasCostume = 167;
	public const Retcode RetCostumeAvatarError = 168;
	public const Retcode RetFlycloakPlatformTypeErr = 169;
	public const Retcode RetInTransfer = 170;
	public const Retcode RetIsInLockAvatar = 171;
	public const Retcode RetFullBackupTeam = 172;
	public const Retcode RetBackupTeamIdNotValid = 173;
	public const Retcode RetBackupTeamIsCurTeam = 174;
	public const Retcode RetAvatarRenameInCd = 175;
	public const Retcode RetAvatarRenameInAudit = 176;
	public const Retcode RetAvatarRenameInIpBlackList = 177;
	public const Retcode RetFloatError = 201;
	public const Retcode RetNpcNotExist = 301;
	public const Retcode RetNpcTooFar = 302;
	public const Retcode RetNotCurrentTalk = 303;
	public const Retcode RetNpcCreateFail = 304;
	public const Retcode RetNpcMoveFail = 305;
	public const Retcode RetQuestNotExist = 401;
	public const Retcode RetQuestIsFail = 402;
	public const Retcode RetQuestContentError = 403;
	public const Retcode RetBargainNotActivated = 404;
	public const Retcode RetBargainFinished = 405;
	public const Retcode RetInferenceAssociateWordError = 406;
	public const Retcode RetInferenceSubmitWordNoConclusion = 407;
	public const Retcode RetPointNotUnlocked = 501;
	public const Retcode RetPointTooFar = 502;
	public const Retcode RetPointAlreayUnlocked = 503;
	public const Retcode RetEntityNotExist = 504;
	public const Retcode RetEnterSceneFail = 505;
	public const Retcode RetPlayerIsEnterScene = 506;
	public const Retcode RetCityMaxLevel = 507;
	public const Retcode RetAreaLocked = 508;
	public const Retcode RetJoinOtherWait = 509;
	public const Retcode RetWeatherAreaNotFound = 510;
	public const Retcode RetWeatherIsLocked = 511;
	public const Retcode RetNotInSelfScene = 512;
	public const Retcode RetGroupNotExist = 513;
	public const Retcode RetMarkNameIllegal = 514;
	public const Retcode RetMarkAlreadyExists = 515;
	public const Retcode RetMarkOverflow = 516;
	public const Retcode RetMarkNotExists = 517;
	public const Retcode RetMarkUnknownType = 518;
	public const Retcode RetMarkNameTooLong = 519;
	public const Retcode RetDistanceLong = 520;
	public const Retcode RetEnterSceneTokenInvalid = 521;
	public const Retcode RetNotInWorldScene = 522;
	public const Retcode RetAnyGalleryStarted = 523;
	public const Retcode RetGalleryNotStart = 524;
	public const Retcode RetGalleryInterruptOnlyOnSingleMode = 525;
	public const Retcode RetGalleryCannotInterrupt = 526;
	public const Retcode RetGalleryWorldNotMeet = 527;
	public const Retcode RetGallerySceneNotMeet = 528;
	public const Retcode RetCurPlayCannotTransfer = 529;
	public const Retcode RetCantUseWidgetInHomeScene = 530;
	public const Retcode RetSceneGroupNotMatch = 531;
	public const Retcode RetPosRotInvalid = 551;
	public const Retcode RetMarkInvalidSceneId = 552;
	public const Retcode RetInvalidSceneToUseAnchorPoint = 553;
	public const Retcode RetEnterHomeSceneFail = 554;
	public const Retcode RetCurSceneIsNull = 555;
	public const Retcode RetGroupIdError = 556;
	public const Retcode RetGalleryInterruptNotOwner = 557;
	public const Retcode RetNoSpringInArea = 558;
	public const Retcode RetAreaNotInScene = 559;
	public const Retcode RetInvalidCityId = 560;
	public const Retcode RetInvalidSceneId = 561;
	public const Retcode RetDestSceneIsNotAllow = 562;
	public const Retcode RetLevelTagSwitchInCd = 563;
	public const Retcode RetLevelTagAlreadyExist = 564;
	public const Retcode RetInvalidAreaId = 565;
	public const Retcode RetGalleryOngoingForbid = 566;
	public const Retcode RetItemNotExist = 601;
	public const Retcode RetPackExceedMaxWeight = 602;
	public const Retcode RetItemNotDropable = 603;
	public const Retcode RetItemNotUsable = 604;
	public const Retcode RetItemInvalidUseCount = 605;
	public const Retcode RetItemInvalidDropCount = 606;
	public const Retcode RetItemAlreadyExist = 607;
	public const Retcode RetItemInCooldown = 608;
	public const Retcode RetItemCountNotEnough = 609;
	public const Retcode RetItemInvalidTarget = 610;
	public const Retcode RetRecipeNotExist = 611;
	public const Retcode RetRecipeLocked = 612;
	public const Retcode RetRecipeUnlocked = 613;
	public const Retcode RetCompoundQueueFull = 614;
	public const Retcode RetCompoundNotFinish = 615;
	public const Retcode RetMailItemNotGet = 616;
	public const Retcode RetItemExceedLimit = 617;
	public const Retcode RetAvatarCanNotUse = 618;
	public const Retcode RetItemNeedPlayerLevel = 619;
	public const Retcode RetRecipeNotAutoQte = 620;
	public const Retcode RetCompoundBusyQueue = 621;
	public const Retcode RetNeedMoreScoin = 622;
	public const Retcode RetSkillDepotNotFound = 623;
	public const Retcode RetHcoinNotEnough = 624;
	public const Retcode RetScoinNotEnough = 625;
	public const Retcode RetHcoinExceedLimit = 626;
	public const Retcode RetScoinExceedLimit = 627;
	public const Retcode RetMailExpired = 628;
	public const Retcode RetRewardHasTaken = 629;
	public const Retcode RetCombineCountTooLarge = 630;
	public const Retcode RetGivingItemWrong = 631;
	public const Retcode RetGivingIsFinished = 632;
	public const Retcode RetGivingNotActived = 633;
	public const Retcode RetForgeQueueFull = 634;
	public const Retcode RetForgeQueueCapacity = 635;
	public const Retcode RetForgeQueueNotFound = 636;
	public const Retcode RetForgeQueueEmpty = 637;
	public const Retcode RetNotSupportItem = 638;
	public const Retcode RetItemEmpty = 639;
	public const Retcode RetVirtualExceedLimit = 640;
	public const Retcode RetMaterialExceedLimit = 641;
	public const Retcode RetEquipExceedLimit = 642;
	public const Retcode RetItemShouldHaveNoLevel = 643;
	public const Retcode RetWeaponPromoteLevelExceedLimit = 644;
	public const Retcode RetWeaponLevelInvalid = 645;
	public const Retcode RetUnknowItemType = 646;
	public const Retcode RetItemCountIsZero = 647;
	public const Retcode RetItemIsExpired = 648;
	public const Retcode RetItemExceedOutputLimit = 649;
	public const Retcode RetEquipLevelHigher = 650;
	public const Retcode RetEquipCanNotWakeOffWeapon = 651;
	public const Retcode RetEquipHasBeenWeared = 652;
	public const Retcode RetEquipWearedCannotDrop = 653;
	public const Retcode RetAwakenLevelMax = 654;
	public const Retcode RetMcoinNotEnough = 655;
	public const Retcode RetMcoinExceedLimit = 656;
	public const Retcode RetResinNotEnough = 660;
	public const Retcode RetResinExceedLimit = 661;
	public const Retcode RetResinOpenstateOff = 662;
	public const Retcode RetResinBoughtCountExceeded = 663;
	public const Retcode RetResinCardDailyRewardHasTaken = 664;
	public const Retcode RetResinCardExpired = 665;
	public const Retcode RetAvatarCanNotCook = 666;
	public const Retcode RetAttachAvatarCd = 667;
	public const Retcode RetAutoRecoverOpenstateOff = 668;
	public const Retcode RetAutoRecoverBoughtCountExceeded = 669;
	public const Retcode RetResinGainFailed = 670;
	public const Retcode RetWidgetOrnamentsTypeError = 671;
	public const Retcode RetAllTargetSatiationFull = 672;
	public const Retcode RetForgeWorldLevelNotMatch = 673;
	public const Retcode RetForgePointNotEnough = 674;
	public const Retcode RetWidgetAnchorPointFull = 675;
	public const Retcode RetWidgetAnchorPointNotFound = 676;
	public const Retcode RetAllBonfireExceedMaxCount = 677;
	public const Retcode RetBonfireExceedMaxCount = 678;
	public const Retcode RetLunchBoxDataError = 679;
	public const Retcode RetInvalidQuickUseWidget = 680;
	public const Retcode RetInvalidReplaceResinCount = 681;
	public const Retcode RetPrevDetectedGatherNotFound = 682;
	public const Retcode RetGotAllOneoffGahter = 683;
	public const Retcode RetInvalidWidgetMaterialId = 684;
	public const Retcode RetWidgetDetectorNoHintToClear = 685;
	public const Retcode RetWidgetAlreadyWithinNearbyRadius = 686;
	public const Retcode RetWidgetClientCollectorNeedPoints = 687;
	public const Retcode RetWidgetInCombat = 688;
	public const Retcode RetWidgetNotSetQuickUse = 689;
	public const Retcode RetAlreadyAttachWidget = 690;
	public const Retcode RetEquipIsLocked = 691;
	public const Retcode RetForgeIsLocked = 692;
	public const Retcode RetCombineIsLocked = 693;
	public const Retcode RetForgeOutputStackLimit = 694;
	public const Retcode RetAlreadyDettachWidget = 695;
	public const Retcode RetGadgetBuilderExceedMaxCount = 696;
	public const Retcode RetReunionPrivilegeResinTypeIsNormal = 697;
	public const Retcode RetBonusCountExceedDoubleLimit = 698;
	public const Retcode RetReliquaryDecomposeParamError = 699;
	public const Retcode RetItemCombineCountNotEnough = 700;
	public const Retcode RetGoodsNotExist = 701;
	public const Retcode RetGoodsMaterialNotEnough = 702;
	public const Retcode RetGoodsNotInTime = 703;
	public const Retcode RetGoodsBuyNumNotEnough = 704;
	public const Retcode RetGoodsBuyNumError = 705;
	public const Retcode RetShopNotOpen = 706;
	public const Retcode RetShopContentNotMatch = 707;
	public const Retcode RetShopBatchBuyShopLimit = 708;
	public const Retcode RetShopBatchBuyCountLimit = 709;
	public const Retcode RetChatForbidden = 798;
	public const Retcode RetChatCd = 799;
	public const Retcode RetChatFrequently = 800;
	public const Retcode RetGadgetNotExist = 801;
	public const Retcode RetGadgetNotInteractive = 802;
	public const Retcode RetGadgetNotGatherable = 803;
	public const Retcode RetChestIsLocked = 804;
	public const Retcode RetGadgetCreateFail = 805;
	public const Retcode RetWorktopOptionNotExist = 806;
	public const Retcode RetGadgetStatueNotActive = 807;
	public const Retcode RetGadgetStatueOpened = 808;
	public const Retcode RetBossChestNoQualification = 809;
	public const Retcode RetBossChestLifeTimeOver = 810;
	public const Retcode RetBossChestWeekNumLimit = 811;
	public const Retcode RetBossChestGuestWorldLevel = 812;
	public const Retcode RetBossChestHasTaken = 813;
	public const Retcode RetBlossomChestNoQualification = 814;
	public const Retcode RetBlossomChestLifeTimeOver = 815;
	public const Retcode RetBlossomChestHasTaken = 816;
	public const Retcode RetBlossomChestGuestWorldLevel = 817;
	public const Retcode RetMpPlayRewardNoQualification = 818;
	public const Retcode RetMpPlayRewardHasTaken = 819;
	public const Retcode RetGeneralRewardNoQualification = 820;
	public const Retcode RetGeneralRewardLifeTimeOver = 821;
	public const Retcode RetGeneralRewardHasTaken = 822;
	public const Retcode RetGadgetNotVehicle = 823;
	public const Retcode RetVehicleSlotOccupied = 824;
	public const Retcode RetNotInVehicle = 825;
	public const Retcode RetCreateVehicleInCd = 826;
	public const Retcode RetCreateVehiclePosInvalid = 827;
	public const Retcode RetVehiclePointNotUnlock = 828;
	public const Retcode RetGadgetInteractCondNotMeet = 829;
	public const Retcode RetGadgetInteractParamError = 830;
	public const Retcode RetGadgetCustomCombinationInvalid = 831;
	public const Retcode RetDeshretObeliskDuplicateInteract = 832;
	public const Retcode RetDeshretObeliskNoAvailChest = 833;
	public const Retcode RetVehicleSorushNotReplace = 834;
	public const Retcode RetVehicleSorushNotUnload = 835;
	public const Retcode RetVehicleSorushStateNotMatch = 836;
	public const Retcode RetActivityClose = 860;
	public const Retcode RetActivityItemError = 861;
	public const Retcode RetActivityContributionNotEnough = 862;
	public const Retcode RetSeaLampPhaseNotFinish = 863;
	public const Retcode RetSeaLampFlyNumLimit = 864;
	public const Retcode RetSeaLampFlyLampWordIllegal = 865;
	public const Retcode RetActivityWatcherRewardTaken = 866;
	public const Retcode RetActivityWatcherRewardNotFinished = 867;
	public const Retcode RetSalesmanAlreadyDelivered = 868;
	public const Retcode RetSalesmanRewardCountNotEnough = 869;
	public const Retcode RetSalesmanPositionInvalid = 870;
	public const Retcode RetDeliverNotFinishAllQuest = 871;
	public const Retcode RetDeliverAlreadyTakeDailyReward = 872;
	public const Retcode RetAsterProgressExceedLimit = 873;
	public const Retcode RetAsterCreditExceedLimit = 874;
	public const Retcode RetAsterTokenExceedLimit = 875;
	public const Retcode RetAsterCreditNotEnough = 876;
	public const Retcode RetAsterTokenNotEnough = 877;
	public const Retcode RetAsterSpecialRewardHasTaken = 878;
	public const Retcode RetFlightGroupActivityNotStarted = 879;
	public const Retcode RetAsterMidPreviousBattleNotFinished = 880;
	public const Retcode RetDragonSpineShimmeringEssenceExceedLimit = 881;
	public const Retcode RetDragonSpineWarmEssenceExceedLimit = 882;
	public const Retcode RetDragonSpineWondrousEssenceExceedLimit = 883;
	public const Retcode RetDragonSpineShimmeringEssenceNotEnough = 884;
	public const Retcode RetDragonSpineWarmEssenceNotEnough = 885;
	public const Retcode RetDragonSpineWondrousEssenceNotEnough = 886;
	public const Retcode RetEffigyFirstPassRewardHasTaken = 891;
	public const Retcode RetEffigyRewardHasTaken = 892;
	public const Retcode RetTreasureMapAddTokenExceedLimit = 893;
	public const Retcode RetTreasureMapTokenNotEnought = 894;
	public const Retcode RetSeaLampCoinExceedLimit = 895;
	public const Retcode RetSeaLampCoinNotEnough = 896;
	public const Retcode RetSeaLampPopularityExceedLimit = 897;
	public const Retcode RetActivityAvatarRewardNotOpen = 898;
	public const Retcode RetActivityAvatarRewardHasTaken = 899;
	public const Retcode RetArenaActivityAlreadyStarted = 900;
	public const Retcode RetTalentAlreayUnlocked = 901;
	public const Retcode RetPrevTalentNotUnlocked = 902;
	public const Retcode RetBigTalentPointNotEnough = 903;
	public const Retcode RetSmallTalentPointNotEnough = 904;
	public const Retcode RetProudSkillAlreadyGot = 905;
	public const Retcode RetPrevProudSkillNotGet = 906;
	public const Retcode RetProudSkillMaxLevel = 907;
	public const Retcode RetCandidateSkillDepotIdNotFind = 910;
	public const Retcode RetSkillDepotIsTheSame = 911;
	public const Retcode RetMonsterNotExist = 1001;
	public const Retcode RetMonsterCreateFail = 1002;
	public const Retcode RetDungeonEnterFail = 1101;
	public const Retcode RetDungeonQuitFail = 1102;
	public const Retcode RetDungeonEnterExceedDayCount = 1103;
	public const Retcode RetDungeonReviveExceedMaxCount = 1104;
	public const Retcode RetDungeonReviveFail = 1105;
	public const Retcode RetDungeonNotSucceed = 1106;
	public const Retcode RetDungeonCanNotCancel = 1107;
	public const Retcode RetDestDungeonSettled = 1108;
	public const Retcode RetDungeonCandidateTeamIsFull = 1109;
	public const Retcode RetDungeonCandidateTeamIsDismiss = 1110;
	public const Retcode RetDungeonCandidateTeamNotAllReady = 1111;
	public const Retcode RetDungeonCandidateTeamHasRepeatAvatar = 1112;
	public const Retcode RetDungeonCandidateNotSingelPass = 1113;
	public const Retcode RetDungeonReplayNeedAllPlayerDie = 1114;
	public const Retcode RetDungeonReplayHasReviveCount = 1115;
	public const Retcode RetDungeonOthersLeave = 1116;
	public const Retcode RetDungeonEnterLevelLimit = 1117;
	public const Retcode RetDungeonCannotEnterPlotInMp = 1118;
	public const Retcode RetDungeonDropSubfieldLimit = 1119;
	public const Retcode RetDungeonBeInvitePlayerAvatarAllDie = 1120;
	public const Retcode RetDungeonCannotKick = 1121;
	public const Retcode RetDungeonCandidateTeamSomeoneLevelLimit = 1122;
	public const Retcode RetDungeonInForceQuit = 1123;
	public const Retcode RetDungeonGuestQuitDungeon = 1124;
	public const Retcode RetDungeonTicketFail = 1125;
	public const Retcode RetCurDungeonSettled = 1126;
	public const Retcode RetCurDungeonNotPlot = 1127;
	public const Retcode RetCurDungeonNotAllowSwitchTeam = 1128;
	public const Retcode RetMpNotInMyWorld = 1201;
	public const Retcode RetMpInMpMode = 1202;
	public const Retcode RetMpSceneIsFull = 1203;
	public const Retcode RetMpModeNotAvailable = 1204;
	public const Retcode RetMpPlayerNotEnterable = 1205;
	public const Retcode RetMpQuestBlockMp = 1206;
	public const Retcode RetMpInRoomScene = 1207;
	public const Retcode RetMpWorldIsFull = 1208;
	public const Retcode RetMpPlayerNotAllowEnter = 1209;
	public const Retcode RetMpPlayerDisconnected = 1210;
	public const Retcode RetMpNotInMpMode = 1211;
	public const Retcode RetMpOwnerNotEnter = 1212;
	public const Retcode RetMpAllowEnterPlayerFull = 1213;
	public const Retcode RetMpTargetPlayerInTransfer = 1214;
	public const Retcode RetMpTargetEnteringOther = 1215;
	public const Retcode RetMpOtherEntering = 1216;
	public const Retcode RetMpEnterMainPlayerInPlot = 1217;
	public const Retcode RetMpNotPsPlayer = 1218;
	public const Retcode RetMpPlayNotActive = 1219;
	public const Retcode RetMpPlayRemainRewards = 1220;
	public const Retcode RetMpPlayNoReward = 1221;
	public const Retcode RetMpOpenStateFail = 1223;
	public const Retcode RetMpPlayerInBlacklist = 1224;
	public const Retcode RetMpReplyTimeout = 1225;
	public const Retcode RetMpIsBlock = 1226;
	public const Retcode RetMpEnterMainPlayerInMpPlay = 1227;
	public const Retcode RetMpInMpPlayBattle = 1228;
	public const Retcode RetMpGuestHasRewardRemained = 1229;
	public const Retcode RetMpQuitMpInvalid = 1230;
	public const Retcode RetMpOtherDataVersionNotLatest = 1231;
	public const Retcode RetMpDataVersionNotLatest = 1232;
	public const Retcode RetMpCurWorldNotEnterable = 1233;
	public const Retcode RetMpAnyGalleryStarted = 1234;
	public const Retcode RetMpHasActiveDraft = 1235;
	public const Retcode RetMpPlayerInDungeon = 1236;
	public const Retcode RetMpMatchFull = 1237;
	public const Retcode RetMpMatchLimit = 1238;
	public const Retcode RetMpMatchInPunish = 1239;
	public const Retcode RetMpIsInMultistage = 1240;
	public const Retcode RetMpMatchPlayNotOpen = 1241;
	public const Retcode RetMpOnlyMpWithPsPlayer = 1242;
	public const Retcode RetMpGuestLoadingFirstEnter = 1243;
	public const Retcode RetMpSummerTimeSprintBoatOngoing = 1244;
	public const Retcode RetMpBlitzRushParkourChallengeOngoing = 1245;
	public const Retcode RetMpMusicGameOngoing = 1246;
	public const Retcode RetMpInMpingMode = 1247;
	public const Retcode RetMpOwnerInSingleScene = 1248;
	public const Retcode RetMpInSingleScene = 1249;
	public const Retcode RetMpReplyNoValidAvatar = 1250;
	public const Retcode RetMpIsNotInTransferGuard = 1251;
	public const Retcode RetMpCannotExecGivingInSingleModeQuest = 1252;
	public const Retcode RetMailParaErr = 1301;
	public const Retcode RetMailMaxNum = 1302;
	public const Retcode RetMailItemNumExceed = 1303;
	public const Retcode RetMailTitleLenExceed = 1304;
	public const Retcode RetMailContentLenExceed = 1305;
	public const Retcode RetMailSenderLenExceed = 1306;
	public const Retcode RetMailParsePacketFail = 1307;
	public const Retcode RetOfflineMsgMaxNum = 1308;
	public const Retcode RetOfflineMsgSameTicket = 1309;
	public const Retcode RetMailExcelMailTypeError = 1310;
	public const Retcode RetMailCannotSendMcoin = 1311;
	public const Retcode RetMailHcoinExceedLimit = 1312;
	public const Retcode RetMailScoinExceedLimit = 1313;
	public const Retcode RetMailMaterialIdInvalid = 1314;
	public const Retcode RetMailAvatarExceedLimit = 1315;
	public const Retcode RetMailGachaTicketEtcExceedLimit = 1316;
	public const Retcode RetMailItemExceedCehuaLimit = 1317;
	public const Retcode RetMailSpaceOrRestNumNotEnough = 1318;
	public const Retcode RetMailTicketIsEmpty = 1319;
	public const Retcode RetMailTransactionIsEmpty = 1320;
	public const Retcode RetMailDeleteCollected = 1321;
	public const Retcode RetMailCollectionIsFull = 1322;
	public const Retcode RetDailyTaskNotFinish = 1330;
	public const Retcode RetDailyTaksHasTaken = 1331;
	public const Retcode RetSocialOfflineMsgNumExceed = 1332;
	public const Retcode RetDailyTaskFilterCityNotOpen = 1333;
	public const Retcode RetGachaInavailable = 1401;
	public const Retcode RetGachaRandomNotMatch = 1402;
	public const Retcode RetGachaScheduleNotMatch = 1403;
	public const Retcode RetGachaInvalidTimes = 1404;
	public const Retcode RetGachaCostItemNotEnough = 1405;
	public const Retcode RetGachaTimesLimit = 1406;
	public const Retcode RetGachaWishSameItem = 1407;
	public const Retcode RetGachaWishInvalidItem = 1408;
	public const Retcode RetGachaMinorsTimesLimit = 1409;
	public const Retcode RetGachaGeneralTimesLimit = 1410;
	public const Retcode RetInvestigaitonNotInProgress = 1501;
	public const Retcode RetInvestigaitonUncomplete = 1502;
	public const Retcode RetInvestigaitonRewardTaken = 1503;
	public const Retcode RetInvestigaitonTargetStateError = 1504;
	public const Retcode RetPushTipsNotFound = 1505;
	public const Retcode RetSignInRecordNotFound = 1506;
	public const Retcode RetAlreadyHaveSignedIn = 1507;
	public const Retcode RetSignInCondNotSatisfied = 1508;
	public const Retcode RetBonusActivityNotUnrewarded = 1509;
	public const Retcode RetSignInRewarded = 1510;
	public const Retcode RetTowerNotOpen = 1521;
	public const Retcode RetTowerHaveDailyRecord = 1522;
	public const Retcode RetTowerNotRecord = 1523;
	public const Retcode RetTowerHaveRecord = 1524;
	public const Retcode RetTowerTeamNumError = 1525;
	public const Retcode RetTowerFloorNotOpen = 1526;
	public const Retcode RetTowerNoFloorStarRecord = 1527;
	public const Retcode RetAlreadyHasTowerBuff = 1528;
	public const Retcode RetDuplicateEnterLevel = 1529;
	public const Retcode RetNotInTowerLevel = 1530;
	public const Retcode RetInTowerLevel = 1531;
	public const Retcode RetTowerPrevFloorNotFinish = 1532;
	public const Retcode RetTowerStarNotEnough = 1533;
	public const Retcode RetBattlePassNoSchedule = 1541;
	public const Retcode RetBattlePassHasBuyed = 1542;
	public const Retcode RetBattlePassLevelOverflow = 1543;
	public const Retcode RetBattlePassProductExpired = 1544;
	public const Retcode RetMatchHostQuit = 1561;
	public const Retcode RetMatchAlreadyInMatch = 1562;
	public const Retcode RetMatchNotInMatch = 1563;
	public const Retcode RetMatchApplyingEnterMp = 1564;
	public const Retcode RetMatchIncorrectScene = 1565;
	public const Retcode RetWidgetTreasureSpotNotFound = 1581;
	public const Retcode RetWidgetTreasureEntityExists = 1582;
	public const Retcode RetWidgetTreasureSpotFarAway = 1583;
	public const Retcode RetWidgetTreasureFinishedToday = 1584;
	public const Retcode RetWidgetQuickUseReqParamError = 1585;
	public const Retcode RetWidgetCameraScanIdError = 1586;
	public const Retcode RetWidgetNotActive = 1587;
	public const Retcode RetWidgetFeatherNotActive = 1588;
	public const Retcode RetWidgetFeatherGadgetTooFarAway = 1589;
	public const Retcode RetWidgetCaptureAnimalNotExist = 1590;
	public const Retcode RetWidgetCaptureAnimalDropBagLimit = 1591;
	public const Retcode RetWidgetCaptureAnimalCanNotCapture = 1592;
	public const Retcode RetWidgetSkyCrystalAllCollected = 1593;
	public const Retcode RetWidgetSkyCrystalHintAlreadyExist = 1594;
	public const Retcode RetWidgetSkyCrystalNotFound = 1595;
	public const Retcode RetWidgetSkyCrystalNoHintToClear = 1596;
	public const Retcode RetWidgetLightStoneEnergyNotEnough = 1597;
	public const Retcode RetWidgetToyCrystalEnergyNotEnough = 1598;
	public const Retcode RetWidgetLightStoneLevelNotEnough = 1599;
	public const Retcode RetUidNotExist = 2001;
	public const Retcode RetParseBinError = 2002;
	public const Retcode RetAccountInfoNotExist = 2003;
	public const Retcode RetOrderInfoNotExist = 2004;
	public const Retcode RetSnapshotIndexError = 2005;
	public const Retcode RetMailHasBeenSent = 2006;
	public const Retcode RetProductNotExist = 2007;
	public const Retcode RetUnfinishOrder = 2008;
	public const Retcode RetIdNotExist = 2009;
	public const Retcode RetOrderTradeEarly = 2010;
	public const Retcode RetOrderFinished = 2011;
	public const Retcode RetGameserverVersionWrong = 2012;
	public const Retcode RetOfflineOpFullLength = 2013;
	public const Retcode RetConcertProductObtainLimit = 2014;
	public const Retcode RetConcertProductTicketDuplicated = 2015;
	public const Retcode RetConcertProductTicketEmpty = 2016;
	public const Retcode RetRedisModified = 5001;
	public const Retcode RetRedisUidNotExist = 5002;
	public const Retcode RetPathfindingDataNotExist = 6001;
	public const Retcode RetPathfindingDestinationNotExist = 6002;
	public const Retcode RetPathfindingErrorScene = 6003;
	public const Retcode RetPathfindingSceneDataLoading = 6004;
	public const Retcode RetFriendCountExceeded = 7001;
	public const Retcode RetPlayerNotExist = 7002;
	public const Retcode RetAlreadySentAddRequest = 7003;
	public const Retcode RetAskFriendListFull = 7004;
	public const Retcode RetPlayerAlreadyIsFriend = 7005;
	public const Retcode RetPlayerNotAskFriend = 7006;
	public const Retcode RetTargetFriendCountExceed = 7007;
	public const Retcode RetNotFriend = 7008;
	public const Retcode RetBirthdayCannotBeSetTwice = 7009;
	public const Retcode RetCannotAddSelfFriend = 7010;
	public const Retcode RetSignatureIllegal = 7011;
	public const Retcode RetPsPlayerCannotAddFriends = 7012;
	public const Retcode RetPsPlayerCannotRemoveFriends = 7013;
	public const Retcode RetNameCardNotUnlocked = 7014;
	public const Retcode RetAlreadyInBlacklist = 7015;
	public const Retcode RetPsPaleyrsCannotAddBlacklist = 7016;
	public const Retcode RetPlayerBlacklistFull = 7017;
	public const Retcode RetPlayerNotInBlacklist = 7018;
	public const Retcode RetBlacklistPlayerCannotAddFriend = 7019;
	public const Retcode RetInTargetBlacklist = 7020;
	public const Retcode RetCannotAddTargetFriend = 7021;
	public const Retcode RetBirthdayFormatError = 7022;
	public const Retcode RetOnlineIdNotExists = 7023;
	public const Retcode RetFirstShareRewardHasTaken = 7024;
	public const Retcode RetPsPlayerCannotRemoveBlacklist = 7025;
	public const Retcode RetReportCd = 7026;
	public const Retcode RetReportContentIllegal = 7027;
	public const Retcode RetRemarkWordIllegal = 7028;
	public const Retcode RetRemarkTooLong = 7029;
	public const Retcode RetRemarkUtf8Error = 7030;
	public const Retcode RetRemarkIsEmpty = 7031;
	public const Retcode RetAskAddFriendCd = 7032;
	public const Retcode RetShowAvatarInfoNotExist = 7033;
	public const Retcode RetPlayerNotShowAvatar = 7034;
	public const Retcode RetSocialUpdateShowListRepeatId = 7035;
	public const Retcode RetPsnIdNotFound = 7036;
	public const Retcode RetEmojiCollectionNumExceedLimit = 7037;
	public const Retcode RetRemarkEmpty = 7038;
	public const Retcode RetInTargetPsnBlacklist = 7039;
	public const Retcode RetSignatureNotChanged = 7040;
	public const Retcode RetSignatureMonthlyLimit = 7041;
	public const Retcode RetReqFriendAvatarFrequently = 7042;
	public const Retcode RetPsnGetPlayerSocialDetailFail = 7043;
	public const Retcode RetOfferingNotOpen = 7081;
	public const Retcode RetOfferingLevelLimit = 7082;
	public const Retcode RetOfferingLevelNotReach = 7083;
	public const Retcode RetOfferingLevelHasTaken = 7084;
	public const Retcode RetOfferingPariSearchNotOpen = 7085;
	public const Retcode RetOfferingPariNotFinish = 7086;
	public const Retcode RetOfferingPariFinishRewardHasTaken = 7087;
	public const Retcode RetOfferingPariSearchAllFinish = 7088;
	public const Retcode RetCityReputationNotOpen = 7101;
	public const Retcode RetCityReputationLevelTaken = 7102;
	public const Retcode RetCityReputationLevelNotReach = 7103;
	public const Retcode RetCityReputationParentQuestTaken = 7104;
	public const Retcode RetCityReputationParentQuestUnfinish = 7105;
	public const Retcode RetCityReputationAcceptRequest = 7106;
	public const Retcode RetCityReputationNotAcceptRequest = 7107;
	public const Retcode RetCityReputationAcceptRequestLimit = 7108;
	public const Retcode RetCityReputationEntranceNotOpen = 7109;
	public const Retcode RetCityReputationTakenRequestReward = 7110;
	public const Retcode RetCityReputationSwitchClose = 7111;
	public const Retcode RetCityReputationEntraceSwitchClose = 7112;
	public const Retcode RetCityReputationTakenExploreReward = 7113;
	public const Retcode RetCityReputationExploreNotReach = 7114;
	public const Retcode RetMechanicusNotOpen = 7120;
	public const Retcode RetMechanicusGearUnlock = 7121;
	public const Retcode RetMechanicusGearLock = 7122;
	public const Retcode RetMechanicusGearLevelLimit = 7123;
	public const Retcode RetMechanicusCoinNotEnough = 7124;
	public const Retcode RetMechanicusNoSequence = 7125;
	public const Retcode RetMechanicusSequenceLimitLevel = 7126;
	public const Retcode RetMechanicusSequenceLimitOpen = 7127;
	public const Retcode RetMechanicusDifficultNotSupport = 7128;
	public const Retcode RetMechanicusTicketNotEnough = 7129;
	public const Retcode RetMechanicusTeachNotFinish = 7130;
	public const Retcode RetMechanicusTeachFinished = 7131;
	public const Retcode RetMechanicusPrevDifficultLevelBlock = 7132;
	public const Retcode RetMechanicusPlayerLimit = 7133;
	public const Retcode RetMechanicusPunishTime = 7134;
	public const Retcode RetMechanicusSwitchClose = 7135;
	public const Retcode RetMechanicusBattleNotInDungeon = 7150;
	public const Retcode RetMechanicusBattlePlayNotFound = 7151;
	public const Retcode RetMechanicusBattleDuplicatePickCard = 7152;
	public const Retcode RetMechanicusBattlePlayerNotInPlay = 7153;
	public const Retcode RetMechanicusBattleCardNotAvailable = 7154;
	public const Retcode RetMechanicusBattleNotInCardStage = 7155;
	public const Retcode RetMechanicusBattleCardIsWaiting = 7156;
	public const Retcode RetMechanicusBattleCardAllConfirmed = 7157;
	public const Retcode RetMechanicusBattleCardAlreadyConfirmed = 7158;
	public const Retcode RetMechanicusBattleCardConfirmedByOther = 7159;
	public const Retcode RetMechanicusBattleCardNotEnoughPoints = 7160;
	public const Retcode RetMechanicusBattleCardAlreadySkipped = 7161;
	public const Retcode RetLegendaryKeyNotEnough = 8001;
	public const Retcode RetLegendaryKeyExceedLimit = 8002;
	public const Retcode RetDailyTaskNotEnoughToRedeem = 8003;
	public const Retcode RetPersonalLineOpenStateOff = 8004;
	public const Retcode RetPersonalLineLevelNotEnough = 8005;
	public const Retcode RetPersonalLineNotOpen = 8006;
	public const Retcode RetPersonalLinePreQuestNotFinish = 8007;
	public const Retcode RetHuntingAlreadyFinishOfferLimit = 8201;
	public const Retcode RetHuntingHasUnfinishedOffer = 8202;
	public const Retcode RetHuntingFailedOfferNotCdReady = 8203;
	public const Retcode RetHuntingNotTakeOffer = 8204;
	public const Retcode RetHuntingCannotTakeTwice = 8205;
	public const Retcode RetRpivateChatInvalidContentType = 8901;
	public const Retcode RetPrivateChatTargetIsNotFriend = 8902;
	public const Retcode RetPrivateChatContentNotSupported = 8903;
	public const Retcode RetPrivateChatContentTooLong = 8904;
	public const Retcode RetPrivateChatPullTooFast = 8905;
	public const Retcode RetPrivateChatRepeatRead = 8906;
	public const Retcode RetPrivateChatReadNotFriend = 8907;
	public const Retcode RetReunionFinished = 9001;
	public const Retcode RetReunionNotActivated = 9002;
	public const Retcode RetReunionAlreadyTakeFirstReward = 9003;
	public const Retcode RetReunionSignInRewarded = 9004;
	public const Retcode RetReunionWatcherRewarded = 9005;
	public const Retcode RetReunionWatcherNotFinish = 9006;
	public const Retcode RetReunionMissionRewarded = 9007;
	public const Retcode RetReunionMissionNotFinish = 9008;
	public const Retcode RetReunionWatcherRewardNotUnlocked = 9009;
	public const Retcode RetBlessingContentClosed = 9101;
	public const Retcode RetBlessingNotActive = 9102;
	public const Retcode RetBlessingNotTodayEntity = 9103;
	public const Retcode RetBlessingEntityExceedScanNumLimit = 9104;
	public const Retcode RetBlessingDailyScanNumExceedLimit = 9105;
	public const Retcode RetBlessingRedeemRewardNumExceedLimit = 9106;
	public const Retcode RetBlessingRedeemPicNumNotEnough = 9107;
	public const Retcode RetBlessingPicNotEnough = 9108;
	public const Retcode RetBlessingPicHasReceived = 9109;
	public const Retcode RetBlessingTargetRecvNumExceed = 9110;
	public const Retcode RetFleurFairCreditExceedLimit = 9111;
	public const Retcode RetFleurFairCreditNotEnough = 9112;
	public const Retcode RetFleurFairTokenExceedLimit = 9113;
	public const Retcode RetFleurFairTokenNotEnough = 9114;
	public const Retcode RetFleurFairMinigameNotOpen = 9115;
	public const Retcode RetFleurFairMusicGameDifficultyNotUnlock = 9116;
	public const Retcode RetFleurFairDungeonLocked = 9117;
	public const Retcode RetFleurFairDungeonPunishTime = 9118;
	public const Retcode RetFleurFairOnlyOwnerCanRestartMinigam = 9119;
	public const Retcode RetWaterSpiritCoinExceedLimit = 9120;
	public const Retcode RetWaterSpiritCoinNotEnough = 9121;
	public const Retcode RetRegionSearchNoSearch = 9122;
	public const Retcode RetRegionSearchStateError = 9123;
	public const Retcode RetChannellerSlabLoopDungeonStageNotOpen = 9130;
	public const Retcode RetChannellerSlabLoopDungeonNotOpen = 9131;
	public const Retcode RetChannellerSlabLoopDungeonFirstPassRewardHasTaken = 9132;
	public const Retcode RetChannellerSlabLoopDungeonScoreRewardHasTaken = 9133;
	public const Retcode RetChannellerSlabInvalidOneOffDungeon = 9134;
	public const Retcode RetChannellerSlabOneOffDungeonDone = 9135;
	public const Retcode RetChannellerSlabOneOffDungeonStageNotOpen = 9136;
	public const Retcode RetChannellerSlabTokenExceedLimit = 9137;
	public const Retcode RetChannellerSlabTokenNotEnough = 9138;
	public const Retcode RetChannellerSlabPlayerNotInOneOffDungeon = 9139;
	public const Retcode RetMistTrialSelectCharacterNumNotEnough = 9150;
	public const Retcode RetMistTrialAlreadyUsingTrialAvatar = 9151;
	public const Retcode RetHideAndSeekPlayNotOpen = 9160;
	public const Retcode RetHideAndSeekPlayMapNotOpen = 9161;
	public const Retcode RetHideAndSeekPlayMapNotChosen = 9162;
	public const Retcode RetSummerTimeDraftWoordExceedLimit = 9170;
	public const Retcode RetSummerTimeDraftWoordNotEnough = 9171;
	public const Retcode RetSummerTimeMiniHarpastumExceedLimit = 9172;
	public const Retcode RetSummerTimeMiniHarpastumnotEnough = 9173;
	public const Retcode RetBounceConjuringCoinExceedLimit = 9180;
	public const Retcode RetBounceConjuringCoinNotEnough = 9181;
	public const Retcode RetChessTeachMapFinished = 9183;
	public const Retcode RetChessTeachMapUnfinished = 9184;
	public const Retcode RetChessCoinExceedLimit = 9185;
	public const Retcode RetChessCoinNotEnough = 9186;
	public const Retcode RetChessInPunishTime = 9187;
	public const Retcode RetChessPrevMapUnfinished = 9188;
	public const Retcode RetChessMapLocked = 9189;
	public const Retcode RetBlitzRushNotOpen = 9192;
	public const Retcode RetBlitzRushDungeonNotOpen = 9193;
	public const Retcode RetBlitzRushCoinAExceedLimit = 9194;
	public const Retcode RetBlitzRushCoinBExceedLimit = 9195;
	public const Retcode RetBlitzRushCoinANotEnough = 9196;
	public const Retcode RetBlitzRushCoinBNotEnough = 9197;
	public const Retcode RetMiracleRingValueNotEnough = 9201;
	public const Retcode RetMiracleRingCd = 9202;
	public const Retcode RetMiracleRingRewardNotTaken = 9203;
	public const Retcode RetMiracleRingNotDeliver = 9204;
	public const Retcode RetMiracleRingDeliverExceed = 9205;
	public const Retcode RetMiracleRingHasCreated = 9206;
	public const Retcode RetMiracleRingHasNotCreated = 9207;
	public const Retcode RetMiracleRingNotYours = 9208;
	public const Retcode RetGadgetFoundationUnauthorized = 9251;
	public const Retcode RetGadgetFoundationSceneNotFound = 9252;
	public const Retcode RetGadgetFoundationNotInInitState = 9253;
	public const Retcode RetGadgetFoundationBildingPointNotEnought = 9254;
	public const Retcode RetGadgetFoundationNotInBuiltState = 9255;
	public const Retcode RetGadgetFoundationOpNotSupported = 9256;
	public const Retcode RetGadgetFoundationReqPlayerNotInScene = 9257;
	public const Retcode RetGadgetFoundationLockedByAnotherPlayer = 9258;
	public const Retcode RetGadgetFoundationNotLocked = 9259;
	public const Retcode RetGadgetFoundationDuplicateLock = 9260;
	public const Retcode RetGadgetFoundationPlayerNotFound = 9261;
	public const Retcode RetGadgetFoundationPlayerGearNotFound = 9262;
	public const Retcode RetGadgetFoundationRotaionDisabled = 9263;
	public const Retcode RetGadgetFoundationReachDungeonGearLimit = 9264;
	public const Retcode RetGadgetFoundationReachSingleGearLimit = 9265;
	public const Retcode RetGadgetFoundationRotationOnGoing = 9266;
	public const Retcode RetOpActivityBonusNotFound = 9301;
	public const Retcode RetOpActivityNotOpen = 9302;
	public const Retcode RetMultistagePlayPlayerNotInScene = 9501;
	public const Retcode RetMultistagePlayNotFound = 9502;
	public const Retcode RetMultistagePlayInOtherStage = 9503;
	public const Retcode RetCoopChapterNotOpen = 9601;
	public const Retcode RetCoopCondNotMeet = 9602;
	public const Retcode RetCoopPointLocked = 9603;
	public const Retcode RetCoopNotHaveProgress = 9604;
	public const Retcode RetCoopRewardHasTaken = 9605;
	public const Retcode RetDraftHasActiveDraft = 9651;
	public const Retcode RetDraftNotInMyWorld = 9652;
	public const Retcode RetDraftNotSupportMp = 9653;
	public const Retcode RetDraftPlayerNotEnough = 9654;
	public const Retcode RetDraftIncorrectScene = 9655;
	public const Retcode RetDraftOtherPlayerEntering = 9656;
	public const Retcode RetDraftGuestIsTransferring = 9657;
	public const Retcode RetDraftGuestNotInDraftScene = 9658;
	public const Retcode RetDraftInviteOverTime = 9659;
	public const Retcode RetDraftTwiceConfirmOverTimer = 9660;
	public const Retcode RetDraftGuestNotInWorldScene = 9661;
	public const Retcode RetHomeUnkown = 9701;
	public const Retcode RetHomeInvalidClientParam = 9702;
	public const Retcode RetHomeTargePlayerHasNoHome = 9703;
	public const Retcode RetHomeNotOnline = 9704;
	public const Retcode RetHomePlayerFull = 9705;
	public const Retcode RetHomeBlocked = 9706;
	public const Retcode RetHomeAlreadyInTargetHomeWorld = 9707;
	public const Retcode RetHomeInEditMode = 9708;
	public const Retcode RetHomeNotInEditMode = 9709;
	public const Retcode RetHomeHasGuest = 9710;
	public const Retcode RetHomeCantEnterByInEditMode = 9711;
	public const Retcode RetHomeClientParamInvalid = 9712;
	public const Retcode RetHomePlayerNotInHomeWorld = 9713;
	public const Retcode RetHomePlayerNotInSelfHomeWorld = 9714;
	public const Retcode RetHomeNotFoundInMem = 9715;
	public const Retcode RetHomePlayerInHomeRoomScene = 9716;
	public const Retcode RetHomeHomeRefuseGuestEnter = 9717;
	public const Retcode RetHomeOwnerRefuseToEnterHome = 9718;
	public const Retcode RetHomeOwnerOffline = 9719;
	public const Retcode RetHomeFurnitureExceedLimit = 9720;
	public const Retcode RetHomeFurnitureCountNotEnough = 9721;
	public const Retcode RetHomeInTryEnterProcess = 9722;
	public const Retcode RetHomeAlreadyInTargetScene = 9723;
	public const Retcode RetHomeCoinExceedLimit = 9724;
	public const Retcode RetHomeCoinNotEnough = 9725;
	public const Retcode RetHomeModuleNotUnlocked = 9726;
	public const Retcode RetHomeCurModuleClosed = 9727;
	public const Retcode RetHomeFurnitureSuiteNotUnlocked = 9728;
	public const Retcode RetHomeInMatch = 9729;
	public const Retcode RetHomeInCombat = 9730;
	public const Retcode RetHomeEditModeCd = 9731;
	public const Retcode RetHomeUpdateFurnitureCd = 9732;
	public const Retcode RetHomeBlockFurnitureLimit = 9733;
	public const Retcode RetHomeNotSupport = 9734;
	public const Retcode RetHomeStateNotOpen = 9735;
	public const Retcode RetHomeTargetStateNotOpen = 9736;
	public const Retcode RetHomeApplyEnterOtherHomeFail = 9737;
	public const Retcode RetHomeSaveNoMainHouse = 9738;
	public const Retcode RetHomeInDungeon = 9739;
	public const Retcode RetHomeAnyGalleryStarted = 9740;
	public const Retcode RetHomeQuestBlockHome = 9741;
	public const Retcode RetHomeWaitingPriorCheck = 9742;
	public const Retcode RetHomePersistentCheckFail = 9743;
	public const Retcode RetHomeFindOnlineHomeFail = 9744;
	public const Retcode RetHomeJoinSceneFail = 9745;
	public const Retcode RetHomeMaxPlayer = 9746;
	public const Retcode RetHomeInTransfer = 9747;
	public const Retcode RetHomeAnyHomeGalleryStarted = 9748;
	public const Retcode RetHomeCanNotEnterInAudit = 9749;
	public const Retcode RetFurnitureMakeIndexError = 9750;
	public const Retcode RetFurnitureMakeLocked = 9751;
	public const Retcode RetFurnitureMakeConfigError = 9752;
	public const Retcode RetFurnitureMakeSlotFull = 9753;
	public const Retcode RetFurnitureMakeAddFurnitureFail = 9754;
	public const Retcode RetFurnitureMakeUnfinish = 9755;
	public const Retcode RetFurnitureMakeIsFinish = 9756;
	public const Retcode RetFurnitureMakeNotInCorrectHome = 9757;
	public const Retcode RetFurnitureMakeNoCount = 9758;
	public const Retcode RetFurnitureMakeAccelerateLimit = 9759;
	public const Retcode RetFurnitureMakeNoMakeData = 9760;
	public const Retcode RetHomeLimitedShopClose = 9761;
	public const Retcode RetHomeAvatarNotShow = 9762;
	public const Retcode RetHomeEventCondNotSatisfied = 9763;
	public const Retcode RetHomeInvalidArrangeAnimalParam = 9764;
	public const Retcode RetHomeInvalidArrangeNpcParam = 9765;
	public const Retcode RetHomeInvalidArrangeSuiteParam = 9766;
	public const Retcode RetHomeInvalidArrangeMainHouseParam = 9767;
	public const Retcode RetHomeAvatarStateNotOpen = 9768;
	public const Retcode RetHomePlantFieldNotEmpty = 9769;
	public const Retcode RetHomePlantFieldEmpty = 9770;
	public const Retcode RetHomePlantFieldTypeError = 9771;
	public const Retcode RetHomePlantTimeNotEnough = 9772;
	public const Retcode RetHomePlantSubFieldNumNotEnough = 9773;
	public const Retcode RetHomePlantFieldParamError = 9774;
	public const Retcode RetHomeFurnitureGuidError = 9775;
	public const Retcode RetHomeFurnitureArrangeLimit = 9776;
	public const Retcode RetHomeFishFarmingLimit = 9777;
	public const Retcode RetHomeFishCountNotEnough = 9778;
	public const Retcode RetHomeFurnitureCostLimit = 9779;
	public const Retcode RetHomeCustomFurnitureInvalid = 9780;
	public const Retcode RetHomeInvalidArrangeGroupParam = 9781;
	public const Retcode RetHomeFurnitureArrangeGroupLimit = 9782;
	public const Retcode RetHomePictureFrameCoopCgGenderError = 9783;
	public const Retcode RetHomePictureFrameCoopCgNotUnlock = 9784;
	public const Retcode RetHomeFurnitureCannotArrange = 9785;
	public const Retcode RetHomeFurnitureInDuplicateSuite = 9786;
	public const Retcode RetHomeFurnitureCustomSuiteTooSmall = 9787;
	public const Retcode RetHomeFurnitureCustomSuiteTooBig = 9788;
	public const Retcode RetHomeFurnitureSuiteExceedLimit = 9789;
	public const Retcode RetHomeFurnitureCustomSuiteExceedLimit = 9790;
	public const Retcode RetHomeFurnitureCustomSuiteInvalidSurfaceType = 9791;
	public const Retcode RetHomeBgmIdNotFound = 9792;
	public const Retcode RetHomeBgmNotUnlocked = 9793;
	public const Retcode RetHomeBgmFurnitureNotFound = 9794;
	public const Retcode RetHomeBgmNotSupportByCurScene = 9795;
	public const Retcode RetHomeLimitedShopGoodsDisable = 9796;
	public const Retcode RetHomeWorldWoodMaterialEmpty = 9797;
	public const Retcode RetHomeWorldWoodMaterialNotFound = 9798;
	public const Retcode RetHomeWorldWoodMaterialCountInvalid = 9799;
	public const Retcode RetHomeWorldWoodExchangeExceedLimit = 9800;
	public const Retcode RetHomeBlueprintSearchSelf = 9801;
	public const Retcode RetHomeBlueprintShareCodeInvalid = 9802;
	public const Retcode RetHomeBlueprintNotExist = 9803;
	public const Retcode RetHomeBlueprintSlotHasExistShareCode = 9804;
	public const Retcode RetHomeBlueprintSlotNotExistShareCode = 9805;
	public const Retcode RetHomeBlueprintCanNotCreateInAudit = 9806;
	public const Retcode RetHomeBlockNotUnlocked = 9807;
	public const Retcode RetHomeBlueprintCreateCd = 9808;
	public const Retcode RetHomeBlueprintSetOptionCd = 9809;
	public const Retcode RetHomeBlueprintNotAllowFriendCopy = 9810;
	public const Retcode RetHomeFurniturePosUnderDieY = 9811;
	public const Retcode RetHomeBlueprintGenShareCodeFail = 9812;
	public const Retcode RetHomeBlueprintSearchCd = 9813;
	public const Retcode RetHomeBlueprintPreviewCd = 9814;
	public const Retcode RetHomeBlueprintPreviewSceneNotMatch = 9815;
	public const Retcode RetHomeBlueprintSlotFull = 9816;
	public const Retcode RetHomeBlueprintOwnerRejectCopy = 9817;
	public const Retcode RetHomeBlueprintSaveToSlotCd = 9818;
	public const Retcode RetHomeBlueprintReplyTimeout = 9819;
	public const Retcode RetSumoActivityStageNotOpen = 10000;
	public const Retcode RetSumoActivitySwitchTeamInCd = 10001;
	public const Retcode RetSumoActivityTeamNumIncorrect = 10002;
	public const Retcode RetLunaRiteActivityAreaIdError = 10004;
	public const Retcode RetLunaRiteActivityBattleNotFinish = 10005;
	public const Retcode RetLunaRiteActivityAlreadySacrifice = 10006;
	public const Retcode RetLunaRiteActivityAlreadyTakeReward = 10007;
	public const Retcode RetLunaRiteActivitySacrificeNotEnough = 10008;
	public const Retcode RetLunaRiteActivitySearchingCondNotMeet = 10009;
	public const Retcode RetDigGadgetConfigIdNotMatch = 10015;
	public const Retcode RetDigFindNearestPosFail = 10016;
	public const Retcode RetMusicGameLevelNotOpen = 10021;
	public const Retcode RetMusicGameLevelNotUnlock = 10022;
	public const Retcode RetMusicGameLevelNotStarted = 10023;
	public const Retcode RetMusicGameLevelConfigNotFound = 10024;
	public const Retcode RetMusicGameLevelIdNotMatch = 10025;
	public const Retcode RetRoguelikeCoinANotEnough = 10031;
	public const Retcode RetRoguelikeCoinBNotEnough = 10032;
	public const Retcode RetRoguelikeCoinCNotEnough = 10033;
	public const Retcode RetRoguelikeCoinAExceedLimit = 10034;
	public const Retcode RetRoguelikeCoinBExceedLimit = 10035;
	public const Retcode RetRoguelikeCoinCExceedLimit = 10036;
	public const Retcode RetRoguelikeRuneCountNotEnough = 10037;
	public const Retcode RetRoguelikeNotInRogueDungeon = 10038;
	public const Retcode RetRoguelikeCellNotFound = 10039;
	public const Retcode RetRoguelikeCellTypeIncorrect = 10040;
	public const Retcode RetRoguelikeCellAlreadyFinished = 10041;
	public const Retcode RetRoguelikeDungeonHaveUnfinishedProgress = 10042;
	public const Retcode RetRoguelikeStageNotFinished = 10043;
	public const Retcode RetRoguelikeStageFirstPassRewardHasTaken = 10045;
	public const Retcode RetRoguelikeActivityContentClosed = 10046;
	public const Retcode RetRoguelikeDungeonPreQuestNotFinished = 10047;
	public const Retcode RetRoguelikeDungeonNotOpen = 10048;
	public const Retcode RetRoguelikeSprintIsBanned = 10049;
	public const Retcode RetRoguelikeDungeonPreStageNotFinished = 10050;
	public const Retcode RetRoguelikeAllAvatarDieCannotResume = 10051;
	public const Retcode RetPlantFlowerAlreadyTakeSeed = 10056;
	public const Retcode RetPlantFlowerFriendHaveFlowerLimit = 10057;
	public const Retcode RetPlantFlowerCanGiveFlowerNotEnough = 10058;
	public const Retcode RetPlantFlowerWishFlowerKindsLimit = 10059;
	public const Retcode RetPlantFlowerHaveFlowerNotEnough = 10060;
	public const Retcode RetPlantFlowerFlowerCombinationInvalid = 10061;
	public const Retcode RetHachiDungeonNotValid = 10052;
	public const Retcode RetHachiDungeonStageNotOpen = 10053;
	public const Retcode RetHachiDungeonTeammateNotPass = 10054;
	public const Retcode RetWinterCampCoinANotEnough = 10071;
	public const Retcode RetWinterCampCoinBNotEnough = 10072;
	public const Retcode RetWinterCampCoinAExceedLimit = 10073;
	public const Retcode RetWinterCampCoinBExceedLimit = 10074;
	public const Retcode RetWinterCampWishIdInvalid = 10075;
	public const Retcode RetWinterCampNotFoundRecvItemData = 10076;
	public const Retcode RetWinterCampFriendItemCountOverflow = 10077;
	public const Retcode RetWinterCampSelectItemDataInvalid = 10078;
	public const Retcode RetWinterCampItemListEmpty = 10079;
	public const Retcode RetWinterCampRewardAlreadyTaken = 10080;
	public const Retcode RetWinterCampStageNotFinish = 10081;
	public const Retcode RetWinterCampGadgetInvalid = 10082;
	public const Retcode RetLanternRiteCoinANotEnough = 10090;
	public const Retcode RetLanternRiteCoinBNotEnough = 10091;
	public const Retcode RetLanternRiteCoinCNotEnough = 10092;
	public const Retcode RetLanternRiteCoinAExceedLimit = 10093;
	public const Retcode RetLanternRiteCoinBExceedLimit = 10094;
	public const Retcode RetLanternRiteCoinCExceedLimit = 10095;
	public const Retcode RetLanternRiteProjectionContentClosed = 10096;
	public const Retcode RetLanternRiteProjectionCanNotStart = 10097;
	public const Retcode RetLanternRiteDungeonNotOpen = 10098;
	public const Retcode RetLanternRiteHasTakenSkinReward = 10099;
	public const Retcode RetLanternRiteNotFinishedSkinWatchers = 10100;
	public const Retcode RetLanternRiteFireworksContentClosed = 10101;
	public const Retcode RetLanternRiteFireworksChallengeNotStart = 10102;
	public const Retcode RetLanternRiteFireworksReformParamError = 10103;
	public const Retcode RetLanternRiteFireworksReformSkillLock = 10104;
	public const Retcode RetLanternRiteFireworksReformStaminaNotEnough = 10105;
	public const Retcode RetPotionActivityStageNotOpen = 10110;
	public const Retcode RetPotionActivityLevelHavePass = 10111;
	public const Retcode RetPotionActivityTeamNumIncorrect = 10112;
	public const Retcode RetPotionActivityAvatarInCd = 10113;
	public const Retcode RetPotionActivityBuffInCd = 10114;
	public const Retcode RetIrodoriPoetryInvalidLineId = 10120;
	public const Retcode RetIrodoriPoetryInvalidThemeId = 10121;
	public const Retcode RetIrodoriPoetryNotGetAllInspiration = 10122;
	public const Retcode RetIrodoriPoetryInspirationReachLimie = 10123;
	public const Retcode RetIrodoriPoetryEntityAlreadyScanned = 10124;
	public const Retcode RetActivityBannerAlreadyCleared = 10300;
	public const Retcode RetIrodoriChessNotOpen = 10301;
	public const Retcode RetIrodoriChessLevelNotOpen = 10302;
	public const Retcode RetIrodoriChessMapNotOpen = 10303;
	public const Retcode RetIrodoriChessMapCardAlreadyEquiped = 10304;
	public const Retcode RetIrodoriChessEquipCardExceedLimit = 10305;
	public const Retcode RetIrodoriChessMapCardNotEquiped = 10306;
	public const Retcode RetIrodoriChessEnterFailCardExceedLimit = 10307;
	public const Retcode RetActivityFriendHaveGiftLimit = 10310;
	public const Retcode RetGachaActivityHaveRewardLimit = 10315;
	public const Retcode RetGachaActivityHaveRobotLimit = 10316;
	public const Retcode RetSummerTimeV2CoinExceedLimit = 10317;
	public const Retcode RetSummerTimeV2CoinNotEnough = 10318;
	public const Retcode RetSummerTimeV2DungeonStageNotOpen = 10319;
	public const Retcode RetSummerTimeV2PrevDungeonNotComplete = 10320;
	public const Retcode RetRogueDiaryAvatarDeath = 10350;
	public const Retcode RetRogueDiaryAvatarTired = 10351;
	public const Retcode RetRogueDiaryAvatarDuplicated = 10352;
	public const Retcode RetRogueDiaryCoinNotEnough = 10353;
	public const Retcode RetRogueDiaryVirtualCoinExceedLimit = 10354;
	public const Retcode RetRogueDiaryVirtualCoinNotEnough = 10355;
	public const Retcode RetRogueDiaryContentClosed = 10366;
	public const Retcode RetGravenInnocenceCoinANotEnough = 10380;
	public const Retcode RetGravenInnocenceCoinBNotEnough = 10381;
	public const Retcode RetGravenInnocenceCoinAExceedLimit = 10382;
	public const Retcode RetGravenInnocenceCoinBExceedLimit = 10383;
	public const Retcode RetIslandPartyStageNotOpen = 10371;
	public const Retcode RetWindFieldStageNotOpen = 10390;
	public const Retcode RetVintageContentClosed = 10396;
	public const Retcode RetVintageStoreContentFinished = 10397;
	public const Retcode RetVintageStoreAttrTooSmall = 10398;
	public const Retcode RetVintageStoreAttrTooLarge = 10399;
	public const Retcode RetVintageStoreContentInterrupt = 10400;
	public const Retcode RetVintageVirtualCoinNotEnough = 10401;
	public const Retcode RetVintageStoreAttrLessThanZero = 10402;
	public const Retcode RetFungusFighterCaptureCoinNotEnough = 10406;
	public const Retcode RetFungusFighterTrainingCoinNotEnough = 10407;
	public const Retcode RetFungusFighterCaptureCoinExceedLimit = 10408;
	public const Retcode RetFungusFighterTrainingCoinExceedLimit = 10409;
	public const Retcode RetFungusFighterContentClosed = 10410;
	public const Retcode RetFungusFighterPlotStageNotOpen = 10411;
	public const Retcode RetFungusFighterFungusIdConfigNotValid = 10412;
	public const Retcode RetFungusFighterFungusNotCultivated = 10413;
	public const Retcode RetFungusFighterTrainingDungeonNotOpen = 10414;
	public const Retcode RetEffigyChallengeV2CoinNotEnough = 10427;
	public const Retcode RetEffigyChallengeV2CoinExceedLimit = 10428;
	public const Retcode RetCharAmusementStageNotOpen = 10436;
	public const Retcode RetCoinCollectLevelNotOpen = 10446;
	public const Retcode RetCoinCollectNotEquipWidget = 10447;
	public const Retcode RetCoinCollectSceneNotMatch = 10448;
	public const Retcode RetCoinCollectCantEnterMpMode = 10449;
	public const Retcode RetCoinCollectPlayerNumFail = 10450;
	public const Retcode RetBrickBreakerPlayerNumFail = 10456;
	public const Retcode RetBrickBreakerStageNotUnlock = 10457;
	public const Retcode RetBrickBreakerNormalLevelNotFinish = 10458;
	public const Retcode RetBrickBreakerPreLevelNotFinish = 10459;
	public const Retcode RetBrickBreakerPreStageNotFinish = 10460;
	public const Retcode RetBrickBreakerWorldLevelNotUnlock = 10461;
	public const Retcode RetBrickBreakerDungeonLevelNotUnlock = 10462;
	public const Retcode RetBrickBreakerCoinNotEnough = 10463;
	public const Retcode RetBrickBreakerCoinExceedLimit = 10464;
	public const Retcode RetTeamchainWorldInMpMode = 10466;
	public const Retcode RetLanV3BoatPlayerNumNotValid = 10481;
	public const Retcode RetLanV3BoatPlayNotOpen = 10482;
	public const Retcode RetLanV3BoatNotInWorldScene = 10483;
	public const Retcode RetFleurFairV2PacmanPlayNotOpen = 10500;
	public const Retcode RetFleurFairV2PacmanPlayerNumIncorrect = 10501;
	public const Retcode RetFleurFairV2CoinNotEnough = 10502;
	public const Retcode RetFleurFairV2CoinExceedLimit = 10503;
	public const Retcode RetAkaFesRhythmLevelNotOpen = 10521;
	public const Retcode RetAkaFesRhythmGalleryInitFail = 10522;
	public const Retcode RetAkaFesRhythmNotInExpectedDungeon = 10533;
	public const Retcode RetAkaFesReasoningLevelNotOpen = 10531;
	public const Retcode RetAkaFesAstrolabeLevelNotOpen = 10541;
	public const Retcode RetAkaFesAstrolabePreLevelNotFinish = 10542;
	public const Retcode RetActivityContentClosed = 10901;
	public const Retcode RetNotInFishing = 11001;
	public const Retcode RetFishStateError = 11002;
	public const Retcode RetFishBaitLimit = 11003;
	public const Retcode RetFishingMaxDistance = 11004;
	public const Retcode RetFishingInCombat = 11005;
	public const Retcode RetFishingBattleTooShort = 11006;
	public const Retcode RetFishGoneAway = 11007;
	public const Retcode RetCanNotEditOtherDungeon = 11051;
	public const Retcode RetCustomDungeonDismatch = 11052;
	public const Retcode RetNoCustomDungeonData = 11053;
	public const Retcode RetBuildCustomDungeonFail = 11054;
	public const Retcode RetCustomDungeonRoomCheckFail = 11055;
	public const Retcode RetCustomDungeonSaveMayFail = 11056;
	public const Retcode RetNotInCustomDungeon = 11057;
	public const Retcode RetCustomDungeonInternalFail = 11058;
	public const Retcode RetCustomDungeonCanNotTry = 11059;
	public const Retcode RetCustomDungeonNoStartRoom = 11060;
	public const Retcode RetCustomDungeonNoRoomData = 11061;
	public const Retcode RetCustomDungeonSaveTooFrequent = 11062;
	public const Retcode RetCustomDungeonNotSelfPass = 11063;
	public const Retcode RetCustomDungeonLackCoin = 11064;
	public const Retcode RetCustomDungeonNoFinishBrick = 11065;
	public const Retcode RetCustomDungeonMultiFinish = 11066;
	public const Retcode RetCustomDungeonNotPublished = 11067;
	public const Retcode RetCustomDungeonFullStore = 11068;
	public const Retcode RetCustomDungeonStoreRepeat = 11069;
	public const Retcode RetCustomDungeonCanNotStoreSelf = 11070;
	public const Retcode RetCustomDungeonNotSaveSucc = 11071;
	public const Retcode RetCustomDungeonCanNotLikeSelf = 11072;
	public const Retcode RetCustomDungeonNotFound = 11073;
	public const Retcode RetCustomDungeonInvalidSetting = 11074;
	public const Retcode RetCustomDungeonNoFinishSetting = 11075;
	public const Retcode RetCustomDungeonSaveNothing = 11076;
	public const Retcode RetCustomDungeonNotInGroup = 11077;
	public const Retcode RetCustomDungeonNotOfficial = 11078;
	public const Retcode RetCustomDungeonLifeNumError = 11079;
	public const Retcode RetCustomDungeonNoOpenRoom = 11080;
	public const Retcode RetCustomDungeonBrickExceedLimit = 11081;
	public const Retcode RetCustomDungeonOfficialNotUnlock = 11082;
	public const Retcode RetCanNotEditOfficialSetting = 11083;
	public const Retcode RetCustomDungeonBanPublish = 11084;
	public const Retcode RetCustomDungeonCanNotReplay = 11085;
	public const Retcode RetCustomDungeonNotOpenGroup = 11086;
	public const Retcode RetCustomDungeonMaxEditNum = 11087;
	public const Retcode RetCustomDungeonCanNotOutStuck = 11088;
	public const Retcode RetCustomDungeonMaxTag = 11089;
	public const Retcode RetCustomDungeonInvalidTag = 11090;
	public const Retcode RetCustomDungeonMaxCost = 11091;
	public const Retcode RetCustomDungeonRequestTooFrequent = 11092;
	public const Retcode RetCustomDungeonNotOpen = 11093;
	public const Retcode RetShareCdIdError = 11101;
	public const Retcode RetShareCdIndexError = 11102;
	public const Retcode RetShareCdInCd = 11103;
	public const Retcode RetShareCdTokenNotEnough = 11104;
	public const Retcode RetUgcDismatch = 11151;
	public const Retcode RetUgcDataNotFound = 11152;
	public const Retcode RetUgcBriefNotFound = 11153;
	public const Retcode RetUgcDisabled = 11154;
	public const Retcode RetUgcLimited = 11155;
	public const Retcode RetUgcLocked = 11156;
	public const Retcode RetUgcNotAuth = 11157;
	public const Retcode RetUgcNotOpen = 11158;
	public const Retcode RetUgcBanPublish = 11159;
	public const Retcode RetUgcMusicExceedLimit = 11160;
	public const Retcode RetUgcMusicSaveTooFrequent = 11161;
	public const Retcode RetCompoundBoostItemNotExist = 11201;
	public const Retcode RetCompoundBoostTargetNotExist = 11202;
	public const Retcode RetQuickHitTreeEmptyTrees = 11211;
	public const Retcode RetGcgFindGameModeFail = 12000;
	public const Retcode RetGcgOperationParamError = 12001;
	public const Retcode RetGcgGameNotRunning = 12002;
	public const Retcode RetGcgOpNotAllow = 12003;
	public const Retcode RetGcgOpNotMatchPhase = 12004;
	public const Retcode RetGcgSelectHandCardGuidError = 12005;
	public const Retcode RetGcgDiceIndexInvalid = 12006;
	public const Retcode RetGcgCharacterGuidInvalid = 12007;
	public const Retcode RetGcgCharacterAlreadyDie = 12008;
	public const Retcode RetGcgCharacterAlreadyOnStage = 12009;
	public const Retcode RetGcgCharacterForbiddenAttack = 12010;
	public const Retcode RetGcgSelectDiceNotMatch = 12011;
	public const Retcode RetGcgFindSkillFail = 12012;
	public const Retcode RetGcgSkillCanNotActiveUse = 12013;
	public const Retcode RetGcgEnergyNotEnough = 12014;
	public const Retcode RetGcgPlayCardTargetNotMatch = 12015;
	public const Retcode RetGcgPlayCardZoneCannotAdd = 12016;
	public const Retcode RetGcgRebootSelectDiceInvalid = 12017;
	public const Retcode RetGcgRebootSelectCardInvalid = 12018;
	public const Retcode RetGcgPlayCardConditionCheckFail = 12019;
	public const Retcode RetGcgPlayCardParamInvalid = 12020;
	public const Retcode RetGcgMaxGame = 12021;
	public const Retcode RetGcgSendPacketFail = 12022;
	public const Retcode RetGcgAlreadySettle = 12023;
	public const Retcode RetGcgCoinExceedLimit = 12101;
	public const Retcode RetGcgCoinNotEnough = 12102;
	public const Retcode RetGcgNotInSelfWorld = 12103;
	public const Retcode RetGcgAlreadyInDuel = 12104;
	public const Retcode RetGcgNotInPlayerWorld = 12105;
	public const Retcode RetGcgGalleryStarted = 12106;
	public const Retcode RetGcgInviteTargetIsSelf = 12107;
	public const Retcode RetGcgInviteTargetNotInWorld = 12108;
	public const Retcode RetGcgApplyInviteNotAllow = 12109;
	public const Retcode RetGcgApplyInviteTimeout = 12110;
	public const Retcode RetGcgCurDeckInvalid = 12111;
	public const Retcode RetGcgNeedResourceComplete = 12112;
	public const Retcode RetGcgOpponentPlayerIsSelf = 12113;
	public const Retcode RetGcgGameIdInvalid = 12114;
	public const Retcode RetGcgMatchInPunish = 12115;
	public const Retcode RetGcgSettleStillInDuel = 12116;
	public const Retcode RetGcgSettleNotInDungeon = 12117;
	public const Retcode RetGcgUnsupportSettleOption = 12118;
	public const Retcode RetGcgNotInGcgDungeon = 12119;
	public const Retcode RetGcgWorldLevelLocked = 12120;
	public const Retcode RetGcgBossLevelLocked = 12121;
	public const Retcode RetGcgNotInTavern = 12122;
	public const Retcode RetGcgWeekNpcNotExist = 12123;
	public const Retcode RetGcgEnterGameFrequent = 12124;
	public const Retcode RetGcgBreakLevelQuestNotUnfinished = 12125;
	public const Retcode RetGcgGuideLevelAlreadyFinished = 12126;
	public const Retcode RetGcgLevelCannotRestart = 12127;
	public const Retcode RetGcgTargetCheckEnterFail = 12128;
	public const Retcode RetGcgAlreadyInDungeon = 12129;
	public const Retcode RetGcgBackDuelNoGame = 12130;
	public const Retcode RetGcgConstLevelLocked = 12131;
	public const Retcode RetGcgQuestIdError = 12132;
	public const Retcode RetGcgQuestNeedUnfinished = 12133;
	public const Retcode RetGcgInMatch = 12134;
	public const Retcode RetGcgDataVersionNotLatest = 12135;
	public const Retcode RetGcgInviteTargetEnterGameFrequent = 12136;
	public const Retcode RetGcgInviteTargetNeedResourceComplete = 12137;
	public const Retcode RetGcgInviteTargetSceneIsNull = 12138;
	public const Retcode RetGcgInviteTargetInTransfer = 12139;
	public const Retcode RetGcgInviteTargetDataVersionNotLatest = 12140;
	public const Retcode RetGcgInviteTargetCurDeckInvalid = 12141;
	public const Retcode RetGcgClientDataVersionNotMatch = 12142;
	public const Retcode RetGcgClientDataVersoinForbid = 12143;
	public const Retcode RetGcgMpCantMatch = 12144;
	public const Retcode RetGcgInviteTargetStateNotOpen = 12145;
	public const Retcode RetGcgCreateTimeOut = 12146;
	public const Retcode RetGcgBanMatch = 12147;
	public const Retcode RetGcgBanInvite = 12148;
	public const Retcode RetGcgTargetBanInvite = 12149;
	public const Retcode RetGcgInviteAlreadyInvite = 12150;
	public const Retcode RetGcgFestivalModeNotOpen = 12151;
	public const Retcode RetGcgTargetFestivalModeNotOpen = 12152;
	public const Retcode RetGcgBackDuelPsToOther = 12153;
	public const Retcode RetGcgBackDuelOtherToPs = 12154;
	public const Retcode RetGcgDsDeckLocked = 12201;
	public const Retcode RetGcgDsDeckNameInvalid = 12202;
	public const Retcode RetGcgDsDeckCharCardNumInvalid = 12204;
	public const Retcode RetGcgDsDeckCardNumInvalid = 12205;
	public const Retcode RetGcgDsCardNumExceedLimit = 12206;
	public const Retcode RetGcgDsDeckInvalid = 12207;
	public const Retcode RetGcgDsCardIdInvalid = 12208;
	public const Retcode RetGcgDsCardFaceAlreadyUnlock = 12209;
	public const Retcode RetGcgDsCardFaceIsLock = 12210;
	public const Retcode RetGcgDsFieldLock = 12211;
	public const Retcode RetGcgDsFieldAlreadyUnlock = 12212;
	public const Retcode RetGcgDsFieldIdInvalid = 12213;
	public const Retcode RetGcgDsCardBackLocked = 12214;
	public const Retcode RetGcgDsCardBackAlreadyUnlock = 12215;
	public const Retcode RetGcgDsCardBackIdInvalid = 12216;
	public const Retcode RetGcgDsCardFaceIdInvalid = 12217;
	public const Retcode RetGcgDsDeckNameIllegal = 12218;
	public const Retcode RetGcgDsDeckSaveCd = 12219;
	public const Retcode RetGcgDsDeckChangeNameCd = 12220;
	public const Retcode RetGcgMatchDeckInvalid = 12221;
	public const Retcode RetGcgDsDeckAlreadyUnlocked = 12222;
	public const Retcode RetGcgDsAtLeastOneDeck = 12223;
	public const Retcode RetGcgTcCharacternotMatchLevel = 12251;
	public const Retcode RetGcgTcMustInSelfWorld = 12252;
	public const Retcode RetGcgTcMustInTavern = 12253;
	public const Retcode RetGcgTcAlreadyInGame = 12254;
	public const Retcode RetGcgTcAlreadyInMatch = 12255;
	public const Retcode RetGcgTcUnlockCharacterQuestNotFinish = 12256;
	public const Retcode RetGcgTcLevelLocked = 12257;
	public const Retcode RetGcgTcNoInviteData = 12258;
	public const Retcode RetGcgTcCurDeckInvalid = 12259;
	public const Retcode RetGcgTcCondQuest = 12260;
	public const Retcode RetGcgLevelRewardLevelError = 12301;
	public const Retcode RetGcgLevelRewardAlreadyTaken = 12302;
	public const Retcode RetGcgLevelRewardNoReward = 12303;
	public const Retcode RetGcgNotInReplayDungeon = 12311;
	public const Retcode RetGcgInvalidReplay = 12312;
	public const Retcode RetGcgSetFavoriteLimitNum = 12313;
	public const Retcode RetGcgReplayExpire = 12314;
}
public enum AMLJGHFKOGH.EANBAFOPPJA
{
	// Fields
	public uint value__; // 0x10
	public const AMLJGHFKOGH.EANBAFOPPJA Varint = 0;
	public const AMLJGHFKOGH.EANBAFOPPJA Fixed64 = 1;
	public const AMLJGHFKOGH.EANBAFOPPJA LengthDelimited = 2;
	public const AMLJGHFKOGH.EANBAFOPPJA StartGroup = 3;
	public const AMLJGHFKOGH.EANBAFOPPJA EndGroup = 4;
	public const AMLJGHFKOGH.EANBAFOPPJA Fixed32 = 5;
}
public enum ELPFBEBLHAP
{
	// Fields
	public const ELPFBEBLHAP NullValue = 0;
}
public enum COOPBDDBNCG.AOOPNKNHMBO
{
	// Fields
	public const COOPBDDBNCG.AOOPNKNHMBO None = 0;
	public const COOPBDDBNCG.AOOPNKNHMBO NullValue = 1;
	public const COOPBDDBNCG.AOOPNKNHMBO NumberValue = 2;
	public const COOPBDDBNCG.AOOPNKNHMBO StringValue = 3;
	public const COOPBDDBNCG.AOOPNKNHMBO BoolValue = 4;
	public const COOPBDDBNCG.AOOPNKNHMBO StructValue = 5;
	public const COOPBDDBNCG.AOOPNKNHMBO ListValue = 6;
}
public enum KEDFNMGJJIA
{
	// Fields
	public const KEDFNMGJJIA Proto2 = 0;
	public const KEDFNMGJJIA Proto3 = 1;
}
public enum MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP
{
	// Fields
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeUnknown = 0;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeDouble = 1;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeFloat = 2;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeInt64 = 3;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeUint64 = 4;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeInt32 = 5;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeFixed64 = 6;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeFixed32 = 7;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeBool = 8;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeString = 9;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeGroup = 10;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeMessage = 11;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeBytes = 12;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeUint32 = 13;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeEnum = 14;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeSfixed32 = 15;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeSfixed64 = 16;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeSint32 = 17;
	public const MANOILLOPPB.CECIEBGGEFI.NBCMFEDJEGP TypeSint64 = 18;
}
public enum MANOILLOPPB.CECIEBGGEFI.IODEHHECEDJ
{
	// Fields
	public const MANOILLOPPB.CECIEBGGEFI.IODEHHECEDJ Unknown = 0;
	public const MANOILLOPPB.CECIEBGGEFI.IODEHHECEDJ Optional = 1;
	public const MANOILLOPPB.CECIEBGGEFI.IODEHHECEDJ Required = 2;
	public const MANOILLOPPB.CECIEBGGEFI.IODEHHECEDJ Repeated = 3;
}
public enum FFBFKHGFAJJ
{
	// Fields
	public const FFBFKHGFAJJ Double = 0;
	public const FFBFKHGFAJJ Float = 1;
	public const FFBFKHGFAJJ Int64 = 2;
	public const FFBFKHGFAJJ UInt64 = 3;
	public const FFBFKHGFAJJ Int32 = 4;
	public const FFBFKHGFAJJ Fixed64 = 5;
	public const FFBFKHGFAJJ Fixed32 = 6;
	public const FFBFKHGFAJJ Bool = 7;
	public const FFBFKHGFAJJ String = 8;
	public const FFBFKHGFAJJ Group = 9;
	public const FFBFKHGFAJJ Message = 10;
	public const FFBFKHGFAJJ Bytes = 11;
	public const FFBFKHGFAJJ UInt32 = 12;
	public const FFBFKHGFAJJ SFixed32 = 13;
	public const FFBFKHGFAJJ SFixed64 = 14;
	public const FFBFKHGFAJJ SInt32 = 15;
	public const FFBFKHGFAJJ SInt64 = 16;
	public const FFBFKHGFAJJ Enum = 17;
}
public enum NLLKPHEIHMG
{
	// Fields
	public const NLLKPHEIHMG EventNotSet = -1;
	public const NLLKPHEIHMG EventConnect = 0;
	public const NLLKPHEIHMG EventConnectFailed = 1;
	public const NLLKPHEIHMG EventDisconnect = 2;
	public const NLLKPHEIHMG EventRecvMsg = 3;
	public const NLLKPHEIHMG EventCount = 4;
}
public enum EffectCheckType
{
	// Fields
	public const EffectCheckType Normal = 0;
	public const EffectCheckType Stage = 1;
}
public enum EffectCheckSetting.GroupAnchor
{
	// Fields
	public const EffectCheckSetting.GroupAnchor TopLeft = 0;
	public const EffectCheckSetting.GroupAnchor TopRight = 1;
	public const EffectCheckSetting.GroupAnchor BottomLeft = 2;
}
public enum HJPCGKHPOMJ
{
	// Fields
	public uint value__; // 0x10
	public const HJPCGKHPOMJ None = 0;
	public const HJPCGKHPOMJ AnimRecurrentSpeech = 1;
	public const HJPCGKHPOMJ WeatherSpeech = 2;
	public const HJPCGKHPOMJ VoiceTriggerCD = 4;
	public const HJPCGKHPOMJ ReportAreaChanged = 8;
	public const HJPCGKHPOMJ All = 4294967295;
}
public enum COAEBAHIEAE
{
	// Fields
	public const COAEBAHIEAE None = 0;
	public const COAEBAHIEAE Background = 1;
	public const COAEBAHIEAE Video = 2;
}
public enum PPCEAGMACCL.EIINONBNOAB
{
	// Fields
	public const PPCEAGMACCL.EIINONBNOAB Drop = 0;
	public const PPCEAGMACCL.EIINONBNOAB Overwrite = 1;
	public const PPCEAGMACCL.EIINONBNOAB Realloc = 2;
}
public enum PPCEAGMACCL.GIOPLPBGEPJ
{
	// Fields
	public const PPCEAGMACCL.GIOPLPBGEPJ None = 0;
	public const PPCEAGMACCL.GIOPLPBGEPJ Warn = 1;
	public const PPCEAGMACCL.GIOPLPBGEPJ Throw = 2;
}
public enum BaseComponent.HandleEventType
{
	// Fields
	public const BaseComponent.HandleEventType OnEvent = 0;
	public const BaseComponent.HandleEventType OnEventResolved = 1;
	public const BaseComponent.HandleEventType ListenEvent = 2;
}
public enum KGAOABMEICO.JNIDIPFFHKH
{
	// Fields
	public const KGAOABMEICO.JNIDIPFFHKH Default = 0;
	public const KGAOABMEICO.JNIDIPFFHKH Appear = 1;
	public const KGAOABMEICO.JNIDIPFFHKH Revive = 2;
	public const KGAOABMEICO.JNIDIPFFHKH Reuse = 3;
}
public enum KGAOABMEICO.MGAMCFMBJPD
{
	// Fields
	public const KGAOABMEICO.MGAMCFMBJPD Invalid = 0;
	public const KGAOABMEICO.MGAMCFMBJPD Miss = 1;
	public const KGAOABMEICO.MGAMCFMBJPD Die = 2;
	public const KGAOABMEICO.MGAMCFMBJPD Revive = 3;
	public const KGAOABMEICO.MGAMCFMBJPD TalentRefresh = 4;
	public const KGAOABMEICO.MGAMCFMBJPD OnDisable = 5;
	public const KGAOABMEICO.MGAMCFMBJPD ReUse = 6;
}
public enum KGAOABMEICO.FGDMCCLJFEI
{
	// Fields
	public const KGAOABMEICO.FGDMCCLJFEI None = 0;
	public const KGAOABMEICO.FGDMCCLJFEI Loading = 1;
	public const KGAOABMEICO.FGDMCCLJFEI Loaded = 2;
}
public enum KGAOABMEICO.LGJFKCAPCBJ
{
	// Fields
	public const KGAOABMEICO.LGJFKCAPCBJ Tick = 1;
	public const KGAOABMEICO.LGJFKCAPCBJ Init = 2;
	public const KGAOABMEICO.LGJFKCAPCBJ Loading = 4;
	public const KGAOABMEICO.LGJFKCAPCBJ Gameplay = 8;
	public const KGAOABMEICO.LGJFKCAPCBJ ReInit = 16;
}
public enum KGAOABMEICO.BKGKENPIOHO
{
	// Fields
	public const KGAOABMEICO.BKGKENPIOHO Tick = 1;
	public const KGAOABMEICO.BKGKENPIOHO Init = 2;
	public const KGAOABMEICO.BKGKENPIOHO Loading = 4;
	public const KGAOABMEICO.BKGKENPIOHO Ability = 8;
}
public enum EAKBIEDIKCH.LEOGHMCIKEA
{
	// Fields
	public const EAKBIEDIKCH.LEOGHMCIKEA NotSynced = 0;
	public const EAKBIEDIKCH.LEOGHMCIKEA HasSynced = 1;
}
public enum FPKNMMOAJMP.HNKIPFOILBH
{
	// Fields
	public const FPKNMMOAJMP.HNKIPFOILBH BitesTarget = 0;
	public const FPKNMMOAJMP.HNKIPFOILBH PretendTarget = 1;
	public const FPKNMMOAJMP.HNKIPFOILBH FleeTarget = 2;
}
public enum NLOPHOPLIKL.HLNLKNGKDLE
{
	// Fields
	public const NLOPHOPLIKL.HLNLKNGKDLE InValid = 0;
	public const NLOPHOPLIKL.HLNLKNGKDLE Started = 1;
	public const NLOPHOPLIKL.HLNLKNGKDLE ScriptedStarted = 2;
	public const NLOPHOPLIKL.HLNLKNGKDLE ScriptedPaused = 3;
	public const NLOPHOPLIKL.HLNLKNGKDLE ScriptedEnded = 4;
	public const NLOPHOPLIKL.HLNLKNGKDLE MoveEnd = 5;
	public const NLOPHOPLIKL.HLNLKNGKDLE Stopped = 6;
	public const NLOPHOPLIKL.HLNLKNGKDLE BurrowMove = 7;
	public const NLOPHOPLIKL.HLNLKNGKDLE BurrowMoveStopped = 8;
}
public enum BKKMOHLHKAI.HLAJGIHHAJL
{
	// Fields
	public const BKKMOHLHKAI.HLAJGIHHAJL NoCollision = 0;
	public const BKKMOHLHKAI.HLAJGIHHAJL CollisionScene = 1;
	public const BKKMOHLHKAI.HLAJGIHHAJL CollisionEntity = 2;
}
public enum BECMFLKDCNN.ENLMHOIFPDA
{
	// Fields
	public const BECMFLKDCNN.ENLMHOIFPDA None = 0;
	public const BECMFLKDCNN.ENLMHOIFPDA Reconnect = 1;
	public const BECMFLKDCNN.ENLMHOIFPDA ChangeAuthority = 2;
}
public enum BGDOEFAGPFL.BNJGDADGGJP
{
	// Fields
	public const BGDOEFAGPFL.BNJGDADGGJP RefreshAll = 0;
	public const BGDOEFAGPFL.BNJGDADGGJP RefreshNum = 1;
	public const BGDOEFAGPFL.BNJGDADGGJP SwitchGrpLightOn = 2;
	public const BGDOEFAGPFL.BNJGDADGGJP SwitchGrpLightOff = 3;
	public const BGDOEFAGPFL.BNJGDADGGJP HintOn = 4;
	public const BGDOEFAGPFL.BNJGDADGGJP HintOff = 5;
	public const BGDOEFAGPFL.BNJGDADGGJP MusicRiddleHintOn = 6;
	public const BGDOEFAGPFL.BNJGDADGGJP MusicRiddleHintOff = 7;
	public const BGDOEFAGPFL.BNJGDADGGJP Count = 8;
}
public enum DIMBOGNAFNP.HKGKEBGGNPN
{
	// Fields
	public const DIMBOGNAFNP.HKGKEBGGNPN InValid = 0;
	public const DIMBOGNAFNP.HKGKEBGGNPN OnGround = 2;
	public const DIMBOGNAFNP.HKGKEBGGNPN ToAir = 4;
	public const DIMBOGNAFNP.HKGKEBGGNPN InAir = 8;
	public const DIMBOGNAFNP.HKGKEBGGNPN ToGround = 16;
	public const DIMBOGNAFNP.HKGKEBGGNPN TurnState = 32;
	public const DIMBOGNAFNP.HKGKEBGGNPN NoMoveState = 64;
}
public enum DIMBOGNAFNP.DEBEBKGHNMG
{
	// Fields
	public const DIMBOGNAFNP.DEBEBKGHNMG InValid = 0;
	public const DIMBOGNAFNP.DEBEBKGHNMG Standby = 1;
	public const DIMBOGNAFNP.DEBEBKGHNMG FloatingUp = 2;
	public const DIMBOGNAFNP.DEBEBKGHNMG FloatingDown = 3;
	public const DIMBOGNAFNP.DEBEBKGHNMG Hover = 4;
}
public enum VCAvatarEquipController.FHJHKFIIPPJ
{
	// Fields
	public const VCAvatarEquipController.FHJHKFIIPPJ SheathPoint = 0;
	public const VCAvatarEquipController.FHJHKFIIPPJ AttachPoint = 1;
}
public enum EGHACNEKIEL.JAJMBIKBKAK
{
	// Fields
	public const EGHACNEKIEL.JAJMBIKBKAK Set = 0;
	public const EGHACNEKIEL.JAJMBIKBKAK Pause = 1;
	public const EGHACNEKIEL.JAJMBIKBKAK Resume = 2;
	public const EGHACNEKIEL.JAJMBIKBKAK Stop = 3;
}
public enum EGHACNEKIEL.BAPJNHAKJLH
{
	// Fields
	public const EGHACNEKIEL.BAPJNHAKJLH MiddlePoint = 0;
	public const EGHACNEKIEL.BAPJNHAKJLH FinalPoint = 1;
}
public enum EGHACNEKIEL.LOIFFMEOBJN
{
	// Fields
	public const EGHACNEKIEL.LOIFFMEOBJN PathQuery = 0;
	public const EGHACNEKIEL.LOIFFMEOBJN SteerTo = 1;
}
public enum EOFLMBDJBME.JNHMKBMGGHL
{
	// Fields
	public const EOFLMBDJBME.JNHMKBMGGHL Action = 0;
	public const EOFLMBDJBME.JNHMKBMGGHL Attack = 1;
	public const EOFLMBDJBME.JNHMKBMGGHL Enemy = 2;
	public const EOFLMBDJBME.JNHMKBMGGHL Item = 3;
	public const EOFLMBDJBME.JNHMKBMGGHL Npc = 4;
	public const EOFLMBDJBME.JNHMKBMGGHL Max = 5;
}
public enum EOFLMBDJBME.CKDOGBOOGJH
{
	// Fields
	public const EOFLMBDJBME.CKDOGBOOGJH Default = 0;
	public const EOFLMBDJBME.CKDOGBOOGJH Target = 1;
	public const EOFLMBDJBME.CKDOGBOOGJH Force = 2;
}
public enum VCBaseInputController.JGMBJLHFLNI
{
	// Fields
	public const VCBaseInputController.JGMBJLHFLNI Skill = 0;
	public const VCBaseInputController.JGMBJLHFLNI Move = 1;
	public const VCBaseInputController.JGMBJLHFLNI Animation = 2;
}
public enum BHLNDEJGHKK.OJOBMKDAFNA
{
	// Fields
	public const BHLNDEJGHKK.OJOBMKDAFNA Undefined = 0;
	public const BHLNDEJGHKK.OJOBMKDAFNA Move = 1;
	public const BHLNDEJGHKK.OJOBMKDAFNA Climb = 2;
	public const BHLNDEJGHKK.OJOBMKDAFNA Air = 3;
	public const BHLNDEJGHKK.OJOBMKDAFNA Fly = 4;
	public const BHLNDEJGHKK.OJOBMKDAFNA Combat = 5;
	public const BHLNDEJGHKK.OJOBMKDAFNA Swim = 6;
	public const BHLNDEJGHKK.OJOBMKDAFNA SwimJump = 7;
	public const BHLNDEJGHKK.OJOBMKDAFNA Else = 8;
}
public enum BHLNDEJGHKK.FBEAHFPNLAI
{
	// Fields
	public const BHLNDEJGHKK.FBEAHFPNLAI Undefined = 0;
	public const BHLNDEJGHKK.FBEAHFPNLAI AirTilt = 1;
	public const BHLNDEJGHKK.FBEAHFPNLAI FixRot = 2;
}
public enum NGPGCJFBCCB.EDDHKODOIKM
{
	// Fields
	public const NGPGCJFBCCB.EDDHKODOIKM None = 0;
	public const NGPGCJFBCCB.EDDHKODOIKM ByVelocity = 1;
	public const NGPGCJFBCCB.EDDHKODOIKM Rotating = 2;
}
public enum CFNHGDBFFHM.EJEDOPMHGCK
{
	// Fields
	public const CFNHGDBFFHM.EJEDOPMHGCK Normal = 0;
	public const CFNHGDBFFHM.EJEDOPMHGCK Special = 1;
}
public enum JFFPBMAKLFF.EHIAKCDBMED
{
	// Fields
	public const JFFPBMAKLFF.EHIAKCDBMED None = 0;
	public const JFFPBMAKLFF.EHIAKCDBMED Show = 1;
	public const JFFPBMAKLFF.EHIAKCDBMED Hide = 2;
}
public enum LLMOKLIAADJ.DPMHPJACILI
{
	// Fields
	public const LLMOKLIAADJ.DPMHPJACILI DEFAULT = 0;
	public const LLMOKLIAADJ.DPMHPJACILI FORCE = 1;
	public const LLMOKLIAADJ.DPMHPJACILI COUNT = 2;
}
public enum KCFGCBCBAEA.PFDBLEFBHKC
{
	// Fields
	public const KCFGCBCBAEA.PFDBLEFBHKC Limited = 0;
	public const KCFGCBCBAEA.PFDBLEFBHKC Active = 1;
}
public enum LGDJEEKJEEN.BPOKNCPLNEF
{
	// Fields
	public const LGDJEEKJEEN.BPOKNCPLNEF None = 0;
	public const LGDJEEKJEEN.BPOKNCPLNEF BossAdjust = 1;
	public const LGDJEEKJEEN.BPOKNCPLNEF LockingV2 = 2;
	public const LGDJEEKJEEN.BPOKNCPLNEF LockingV3 = 3;
}
public enum LGDJEEKJEEN.OEJCBKMHLGH
{
	// Fields
	public const LGDJEEKJEEN.OEJCBKMHLGH Enter = 0;
	public const LGDJEEKJEEN.OEJCBKMHLGH Exit = 1;
}
public enum CDGBDKKIJAF.DCBJJGALOGJ
{
	// Fields
	public const CDGBDKKIJAF.DCBJJGALOGJ None = 0;
	public const CDGBDKKIJAF.DCBJJGALOGJ CM_Shot_WaitEventToExit = 1;
	public const CDGBDKKIJAF.DCBJJGALOGJ CMBrain_ActiveCamera_WrongInNormal = 2;
}
public enum CDGBDKKIJAF.EBDKGOLGCPG
{
	// Fields
	public const CDGBDKKIJAF.EBDKGOLGCPG None = 0;
	public const CDGBDKKIJAF.EBDKGOLGCPG Checking = 1;
	public const CDGBDKKIJAF.EBDKGOLGCPG Confirm = 2;
}
public enum CDGBDKKIJAF.GCMDCEPJKEK
{
	// Fields
	public const CDGBDKKIJAF.GCMDCEPJKEK CINE_ENTER = 0;
	public const CDGBDKKIJAF.GCMDCEPJKEK CINE_CLEAR = 1;
	public const CDGBDKKIJAF.GCMDCEPJKEK STORY_ENTER = 2;
	public const CDGBDKKIJAF.GCMDCEPJKEK STORY_EXIT = 3;
	public const CDGBDKKIJAF.GCMDCEPJKEK FOCUS_ENTER = 4;
	public const CDGBDKKIJAF.GCMDCEPJKEK FOCUS_EXIT = 5;
	public const CDGBDKKIJAF.GCMDCEPJKEK BOSSADJUST_ENTER = 6;
	public const CDGBDKKIJAF.GCMDCEPJKEK BOSSADJUST_EXIT = 7;
	public const CDGBDKKIJAF.GCMDCEPJKEK PHOTOGRAPH_ENTER = 8;
	public const CDGBDKKIJAF.GCMDCEPJKEK PHOTOGRAPH_EXIT = 9;
	public const CDGBDKKIJAF.GCMDCEPJKEK HOMEWORLD_ENTER = 10;
	public const CDGBDKKIJAF.GCMDCEPJKEK HOMEWORLD_EXIT = 11;
	public const CDGBDKKIJAF.GCMDCEPJKEK FIRSTPERSON_ENTER = 12;
	public const CDGBDKKIJAF.GCMDCEPJKEK FIRSTPERSON_EXIT = 13;
	public const CDGBDKKIJAF.GCMDCEPJKEK BOAT_ENTER = 14;
	public const CDGBDKKIJAF.GCMDCEPJKEK BOAT_EXIT = 15;
	public const CDGBDKKIJAF.GCMDCEPJKEK GADGET_ENTER = 16;
	public const CDGBDKKIJAF.GCMDCEPJKEK GADGET_EXIT = 17;
	public const CDGBDKKIJAF.GCMDCEPJKEK CUSTOMLEVEL_ENTER = 18;
	public const CDGBDKKIJAF.GCMDCEPJKEK CUSTOMLEVEL_EXIT = 19;
	public const CDGBDKKIJAF.GCMDCEPJKEK GCG_CARD_ENTER = 20;
	public const CDGBDKKIJAF.GCMDCEPJKEK GCG_CARD_EXIT = 21;
	public const CDGBDKKIJAF.GCMDCEPJKEK SWITCH_BOSSADJUST_CONFIG = 22;
	public const CDGBDKKIJAF.GCMDCEPJKEK SPLINE_ENTER = 23;
	public const CDGBDKKIJAF.GCMDCEPJKEK SPLINE_EXIT = 24;
	public const CDGBDKKIJAF.GCMDCEPJKEK FOLLOWTRANS_ENTER = 25;
	public const CDGBDKKIJAF.GCMDCEPJKEK FOLLOWTRANS_EXIT = 26;
	public const CDGBDKKIJAF.GCMDCEPJKEK FIXEDPOINT_ENTER = 27;
	public const CDGBDKKIJAF.GCMDCEPJKEK FIXEDPOINT_EXIT = 28;
	public const CDGBDKKIJAF.GCMDCEPJKEK BOXRANGE_ENTER = 29;
	public const CDGBDKKIJAF.GCMDCEPJKEK BOXRANGE_EXIT = 30;
	public const CDGBDKKIJAF.GCMDCEPJKEK PHOTOGRAPH_APPLY_PRESET = 31;
	public const CDGBDKKIJAF.GCMDCEPJKEK ORBITENTITY_ENTER = 32;
	public const CDGBDKKIJAF.GCMDCEPJKEK ORBITENTITY_EXIT = 33;
	public const CDGBDKKIJAF.GCMDCEPJKEK LOCKINGV3_ENTER = 38;
	public const CDGBDKKIJAF.GCMDCEPJKEK LOCKINGV3_EXIT = 39;
	public const CDGBDKKIJAF.GCMDCEPJKEK SWITCH_LOCKINGV3_CONFIG = 40;
	public const CDGBDKKIJAF.GCMDCEPJKEK SIDESCROLLER_ENTER = 41;
	public const CDGBDKKIJAF.GCMDCEPJKEK SIDESCROLLER_EXIT = 42;
	public const CDGBDKKIJAF.GCMDCEPJKEK AIRCRAFT_ENTER = 43;
	public const CDGBDKKIJAF.GCMDCEPJKEK AIRCRAFT_EXIT = 44;
}
public enum LLIEBNIDMEG.LBLGMJNPNHC
{
	// Fields
	public const LLIEBNIDMEG.LBLGMJNPNHC TRIGGER_ENTER = 1;
	public const LLIEBNIDMEG.LBLGMJNPNHC TRIGGER_STAY = 2;
}
public enum DPDPEBCIKPH.FBELOLHNMAI
{
	// Fields
	public const DPDPEBCIKPH.FBELOLHNMAI Move = 0;
	public const DPDPEBCIKPH.FBELOLHNMAI TurnDirection = 1;
	public const DPDPEBCIKPH.FBELOLHNMAI FallOnGround = 2;
	public const DPDPEBCIKPH.FBELOLHNMAI GoUpstairs = 3;
	public const DPDPEBCIKPH.FBELOLHNMAI JumpUpWallReady = 4;
	public const DPDPEBCIKPH.FBELOLHNMAI Climb = 5;
	public const DPDPEBCIKPH.FBELOLHNMAI JumpUpWallForStandby = 6;
	public const DPDPEBCIKPH.FBELOLHNMAI StandbyToClimb = 7;
	public const DPDPEBCIKPH.FBELOLHNMAI Jump = 8;
	public const DPDPEBCIKPH.FBELOLHNMAI Drop = 9;
	public const DPDPEBCIKPH.FBELOLHNMAI Fly = 10;
	public const DPDPEBCIKPH.FBELOLHNMAI CombatMove = 11;
	public const DPDPEBCIKPH.FBELOLHNMAI CombatSkillMove = 12;
	public const DPDPEBCIKPH.FBELOLHNMAI CombatFallOnGround = 13;
	public const DPDPEBCIKPH.FBELOLHNMAI CombatAir = 14;
	public const DPDPEBCIKPH.FBELOLHNMAI Swim = 15;
	public const DPDPEBCIKPH.FBELOLHNMAI SwimJump = 16;
	public const DPDPEBCIKPH.FBELOLHNMAI Ladder = 17;
	public const DPDPEBCIKPH.FBELOLHNMAI FlyGateLoading = 18;
	public const DPDPEBCIKPH.FBELOLHNMAI Crouch = 19;
	public const DPDPEBCIKPH.FBELOLHNMAI Perform = 20;
	public const DPDPEBCIKPH.FBELOLHNMAI FlyFollowRoute = 21;
	public const DPDPEBCIKPH.FBELOLHNMAI CurveMove = 22;
	public const DPDPEBCIKPH.FBELOLHNMAI Null = 23;
	public const DPDPEBCIKPH.FBELOLHNMAI Vehicle = 24;
	public const DPDPEBCIKPH.FBELOLHNMAI Skiff = 25;
	public const DPDPEBCIKPH.FBELOLHNMAI AirVehicle = 26;
}
public enum KLOACFDJODA.EDBDHOMJAMA
{
	// Fields
	public const KLOACFDJODA.EDBDHOMJAMA SAFE = 0;
	public const KLOACFDJODA.EDBDHOMJAMA ALMOST = 1;
	public const KLOACFDJODA.EDBDHOMJAMA CLOSE = 2;
}
public enum IPNHPCOFAOL.JEAMCDCOHLJ
{
	// Fields
	public const IPNHPCOFAOL.JEAMCDCOHLJ Uninit = 0;
	public const IPNHPCOFAOL.JEAMCDCOHLJ Panding = 1;
	public const IPNHPCOFAOL.JEAMCDCOHLJ Init = 2;
	public const IPNHPCOFAOL.JEAMCDCOHLJ Ignore = 3;
}
public enum IPNHPCOFAOL.DFJCFIMCELP
{
	// Fields
	public const IPNHPCOFAOL.DFJCFIMCELP Unknow = 0;
	public const IPNHPCOFAOL.DFJCFIMCELP NotUse = 1;
	public const IPNHPCOFAOL.DFJCFIMCELP Server = 2;
	public const IPNHPCOFAOL.DFJCFIMCELP Client = 3;
}
public enum IPNHPCOFAOL.FBDBAGPCNOO
{
	// Fields
	public const IPNHPCOFAOL.FBDBAGPCNOO GadgetAppear1 = 0;
	public const IPNHPCOFAOL.FBDBAGPCNOO GadgetAppear2 = 1;
	public const IPNHPCOFAOL.FBDBAGPCNOO GadgetAppear3 = 2;
	public const IPNHPCOFAOL.FBDBAGPCNOO visualEntityTool = 3;
	public const IPNHPCOFAOL.FBDBAGPCNOO ObstacleEnable = 4;
	public const IPNHPCOFAOL.FBDBAGPCNOO ObstacleDisable = 5;
	public const IPNHPCOFAOL.FBDBAGPCNOO ObstacleAdd = 6;
	public const IPNHPCOFAOL.FBDBAGPCNOO ObstacleRemove = 7;
	public const IPNHPCOFAOL.FBDBAGPCNOO ObstacleAdd2 = 8;
	public const IPNHPCOFAOL.FBDBAGPCNOO ObstacleRemove2 = 9;
	public const IPNHPCOFAOL.FBDBAGPCNOO ObstacleDestroy = 10;
}
public enum DCJFIAMNCCM.OHJCBNEJAOK
{
	// Fields
	public const DCJFIAMNCCM.OHJCBNEJAOK Unknow = 0;
	public const DCJFIAMNCCM.OHJCBNEJAOK NotUse = 1;
	public const DCJFIAMNCCM.OHJCBNEJAOK Server = 2;
}
public enum DCJFIAMNCCM.HFJIHCPGDJJ
{
	// Fields
	public const DCJFIAMNCCM.HFJIHCPGDJJ Uninit = 0;
	public const DCJFIAMNCCM.HFJIHCPGDJJ Pending = 1;
	public const DCJFIAMNCCM.HFJIHCPGDJJ Init = 2;
	public const DCJFIAMNCCM.HFJIHCPGDJJ Ignore = 3;
}
public enum BAGCDCEEFIA.MECMDCGOMHA
{
	// Fields
	public const BAGCDCEEFIA.MECMDCGOMHA TargetReady = 0;
	public const BAGCDCEEFIA.MECMDCGOMHA TargetNone = 1;
	public const BAGCDCEEFIA.MECMDCGOMHA TargetNotReady = 2;
}
public enum HJKPCLOFJPP.NGDPKGNPKNM
{
	// Fields
	public const HJKPCLOFJPP.NGDPKGNPKNM Default = 0;
	public const HJKPCLOFJPP.NGDPKGNPKNM Aiming = 1;
}
public enum FOGNDHGMMMJ.FLJEJIBKLOP
{
	// Fields
	public const FOGNDHGMMMJ.FLJEJIBKLOP Normal = 0;
	public const FOGNDHGMMMJ.FLJEJIBKLOP Cold = 1;
	public const FOGNDHGMMMJ.FLJEJIBKLOP Hot = 2;
	public const FOGNDHGMMMJ.FLJEJIBKLOP ColdEnd = 3;
	public const FOGNDHGMMMJ.FLJEJIBKLOP HotEnd = 4;
}
public enum ComponentManager.HandleEventActionType
{
	// Fields
	public const ComponentManager.HandleEventActionType None = 0;
	public const ComponentManager.HandleEventActionType OnEventAction = 1;
	public const ComponentManager.HandleEventActionType OnEventResolvedAction = 2;
	public const ComponentManager.HandleEventActionType ListenEventAction = 3;
}
public enum EPGDIFMBIMF
{
	// Fields
	public const EPGDIFMBIMF MixinNone = 0;
	public const EPGDIFMBIMF AbliltyMixin = 1;
	public const EPGDIFMBIMF ModifierMixin = 2;
}
public enum EMLDMODLHFF.IOMJJJDLIIB
{
	// Fields
	public const EMLDMODLHFF.IOMJJJDLIIB OnEvent = 0;
	public const EMLDMODLHFF.IOMJJJDLIIB OnEventRemote = 1;
	public const EMLDMODLHFF.IOMJJJDLIIB OnEventResolved = 2;
	public const EMLDMODLHFF.IOMJJJDLIIB ListenEvent = 3;
}
public enum IOFKIMOMDML.OHHICDHJGGH
{
	// Fields
	public const IOFKIMOMDML.OHHICDHJGGH playerNumChange = 0;
	public const IOFKIMOMDML.OHHICDHJGGH init = 1;
	public const IOFKIMOMDML.OHHICDHJGGH reinit = 2;
}
public enum JNBGPHNBDAG.IGDJPOLMOGN
{
	// Fields
	public const JNBGPHNBDAG.IGDJPOLMOGN Normal = 1;
	public const JNBGPHNBDAG.IGDJPOLMOGN Element = 2;
}
public enum PCMLLEOMLCH.CBAMDEDHGFO
{
	// Fields
	public const PCMLLEOMLCH.CBAMDEDHGFO Normal = 1;
	public const PCMLLEOMLCH.CBAMDEDHGFO Element = 2;
}
public enum PAPMHNCBJEG.EFPBJKLDBOJ
{
	// Fields
	public const PAPMHNCBJEG.EFPBJKLDBOJ None = 0;
	public const PAPMHNCBJEG.EFPBJKLDBOJ SyncInnerData = 1;
	public const PAPMHNCBJEG.EFPBJKLDBOJ StartCountDown = 2;
	public const PAPMHNCBJEG.EFPBJKLDBOJ SyncStatus = 3;
	public const PAPMHNCBJEG.EFPBJKLDBOJ SyncBulletSchedule = 4;
	public const PAPMHNCBJEG.EFPBJKLDBOJ FireBulletFinish = 5;
}
public enum PAPMHNCBJEG.EBGMJMNJEBH
{
	// Fields
	public const PAPMHNCBJEG.EBGMJMNJEBH Idle = 0;
	public const PAPMHNCBJEG.EBGMJMNJEBH CountDown = 1;
	public const PAPMHNCBJEG.EBGMJMNJEBH FiringBullet = 2;
}
public enum EGBEJBHMNKC.NFOOHDKFPIA
{
	// Fields
	public const EGBEJBHMNKC.NFOOHDKFPIA None = 0;
	public const EGBEJBHMNKC.NFOOHDKFPIA Starting = 1;
	public const EGBEJBHMNKC.NFOOHDKFPIA Recovering = 2;
	public const EGBEJBHMNKC.NFOOHDKFPIA RollingBack = 3;
	public const EGBEJBHMNKC.NFOOHDKFPIA Playing = 4;
	public const EGBEJBHMNKC.NFOOHDKFPIA Ending = 5;
	public const EGBEJBHMNKC.NFOOHDKFPIA Ended = 6;
}
public enum EGBEJBHMNKC.NCBEBKLALBE
{
	// Fields
	public const EGBEJBHMNKC.NCBEBKLALBE Invalid = 0;
	public const EGBEJBHMNKC.NCBEBKLALBE Outside = 1;
	public const EGBEJBHMNKC.NCBEBKLALBE Inside = 2;
	public const EGBEJBHMNKC.NCBEBKLALBE UpSide = 3;
	public const EGBEJBHMNKC.NCBEBKLALBE DownSide = 4;
	public const EGBEJBHMNKC.NCBEBKLALBE LeftSide = 5;
	public const EGBEJBHMNKC.NCBEBKLALBE RightSide = 6;
	public const EGBEJBHMNKC.NCBEBKLALBE UpperLeftCorner = 7;
	public const EGBEJBHMNKC.NCBEBKLALBE LowerLeftCorner = 8;
	public const EGBEJBHMNKC.NCBEBKLALBE UpperRightCorner = 9;
	public const EGBEJBHMNKC.NCBEBKLALBE LowerRightCorner = 10;
}
public enum EGBEJBHMNKC.PDKOECOJFMG
{
	// Fields
	public uint value__; // 0x10
	public const EGBEJBHMNKC.PDKOECOJFMG ElementReaction = 0;
	public const EGBEJBHMNKC.PDKOECOJFMG Invincible = 1;
	public const EGBEJBHMNKC.PDKOECOJFMG OverrideSpeed = 2;
	public const EGBEJBHMNKC.PDKOECOJFMG LaunchBallCD = 3;
	public const EGBEJBHMNKC.PDKOECOJFMG SuperconductorBall = 4;
	public const EGBEJBHMNKC.PDKOECOJFMG SkillWidePaddle = 5;
	public const EGBEJBHMNKC.PDKOECOJFMG SkillFastBall = 6;
	public const EGBEJBHMNKC.PDKOECOJFMG SkillBarrier = 7;
	public const EGBEJBHMNKC.PDKOECOJFMG SkillExtraBall = 8;
	public const EGBEJBHMNKC.PDKOECOJFMG SkillBonus = 9;
	public const EGBEJBHMNKC.PDKOECOJFMG SkillMissile = 10;
}
public enum EGBEJBHMNKC.ILHFOKNJBAB
{
	// Fields
	public const EGBEJBHMNKC.ILHFOKNJBAB Unique = 0;
	public const EGBEJBHMNKC.ILHFOKNJBAB Refresh = 1;
	public const EGBEJBHMNKC.ILHFOKNJBAB Replace = 2;
	public const EGBEJBHMNKC.ILHFOKNJBAB Multiple = 3;
}
public enum EGBEJBHMNKC.MHKHFNONADB
{
	// Fields
	public uint value__; // 0x10
	public const EGBEJBHMNKC.MHKHFNONADB ToBeLaunched = 0;
	public const EGBEJBHMNKC.MHKHFNONADB Launching = 1;
	public const EGBEJBHMNKC.MHKHFNONADB PredictLaunching = 2;
	public const EGBEJBHMNKC.MHKHFNONADB Normal = 3;
	public const EGBEJBHMNKC.MHKHFNONADB ToBeRemoved = 4;
	public const EGBEJBHMNKC.MHKHFNONADB Destroyed = 5;
	public const EGBEJBHMNKC.MHKHFNONADB InStock = 6;
}
public enum EGBEJBHMNKC.JOFBAOMKFLP
{
	// Fields
	public const EGBEJBHMNKC.JOFBAOMKFLP Active = 1;
	public const EGBEJBHMNKC.JOFBAOMKFLP Element = 2;
	public const EGBEJBHMNKC.JOFBAOMKFLP ElementReaction = 4;
	public const EGBEJBHMNKC.JOFBAOMKFLP Damage = 8;
	public const EGBEJBHMNKC.JOFBAOMKFLP State = 16;
	public const EGBEJBHMNKC.JOFBAOMKFLP Size = 32;
	public const EGBEJBHMNKC.JOFBAOMKFLP Level = 64;
}
public enum EGBEJBHMNKC.EOPGIEDOPNE
{
	// Fields
	public uint value__; // 0x10
	public const EGBEJBHMNKC.EOPGIEDOPNE Catch = 0;
	public const EGBEJBHMNKC.EOPGIEDOPNE Miss = 1;
}
public enum EGBEJBHMNKC.KMNIJLAPEGH
{
	// Fields
	public uint value__; // 0x10
	public const EGBEJBHMNKC.KMNIJLAPEGH None = 0;
	public const EGBEJBHMNKC.KMNIJLAPEGH Bonus = 1;
}
public enum EGBEJBHMNKC.HKIPNLHCGIF
{
	// Fields
	public uint value__; // 0x10
	public const EGBEJBHMNKC.HKIPNLHCGIF Normal = 0;
	public const EGBEJBHMNKC.HKIPNLHCGIF WaitingAction = 1;
	public const EGBEJBHMNKC.HKIPNLHCGIF Ended = 2;
}
public enum EGBEJBHMNKC.JBCLABOFBFF
{
	// Fields
	public uint value__; // 0x10
	public const EGBEJBHMNKC.JBCLABOFBFF None = 0;
	public const EGBEJBHMNKC.JBCLABOFBFF Ball = 1;
	public const EGBEJBHMNKC.JBCLABOFBFF Paddle = 2;
	public const EGBEJBHMNKC.JBCLABOFBFF Brick = 3;
	public const EGBEJBHMNKC.JBCLABOFBFF Boss = 4;
	public const EGBEJBHMNKC.JBCLABOFBFF WallGroup = 5;
	public const EGBEJBHMNKC.JBCLABOFBFF MirrorGroup = 6;
	public const EGBEJBHMNKC.JBCLABOFBFF FallingObject = 7;
	public const EGBEJBHMNKC.JBCLABOFBFF Missile = 8;
	public const EGBEJBHMNKC.JBCLABOFBFF SpawnPoint = 9;
	public const EGBEJBHMNKC.JBCLABOFBFF Count = 10;
}
public enum EGBEJBHMNKC.MPJCNIDIOAD
{
	// Fields
	public const EGBEJBHMNKC.MPJCNIDIOAD Model = 0;
	public const EGBEJBHMNKC.MPJCNIDIOAD Element = 1;
	public const EGBEJBHMNKC.MPJCNIDIOAD ElementReaction = 2;
	public const EGBEJBHMNKC.MPJCNIDIOAD Level = 3;
	public const EGBEJBHMNKC.MPJCNIDIOAD State = 4;
	public const EGBEJBHMNKC.MPJCNIDIOAD Command = 5;
}
public enum EGBEJBHMNKC.KJLOAFJBBOI.LPMPOGCBIJC
{
	// Fields
	public const EGBEJBHMNKC.KJLOAFJBBOI.LPMPOGCBIJC None = 0;
	public const EGBEJBHMNKC.KJLOAFJBBOI.LPMPOGCBIJC FireEffect = 1;
	public const EGBEJBHMNKC.KJLOAFJBBOI.LPMPOGCBIJC AttachEffect = 2;
	public const EGBEJBHMNKC.KJLOAFJBBOI.LPMPOGCBIJC DetachEffect = 3;
}
public enum BreakoutElementReactionType
{
	// Fields
	public const BreakoutElementReactionType None = 0;
	public const BreakoutElementReactionType Explode = 1;
	public const BreakoutElementReactionType Freeze = 2;
	public const BreakoutElementReactionType Shock = 3;
	public const BreakoutElementReactionType Steam = 4;
	public const BreakoutElementReactionType Melt = 5;
	public const BreakoutElementReactionType Superconductor = 6;
	public const BreakoutElementReactionType FrozenBroken = 7;
}
public enum BreakoutElementType
{
	// Fields
	public const BreakoutElementType None = 0;
	public const BreakoutElementType Fire = 1;
	public const BreakoutElementType Water = 2;
	public const BreakoutElementType Electric = 3;
	public const BreakoutElementType Ice = 4;
	public const BreakoutElementType Invincible = 6;
	public const BreakoutElementType Count = 7;
}
public enum BreakoutWaveOrderType
{
	// Fields
	public const BreakoutWaveOrderType Default = 0;
	public const BreakoutWaveOrderType Sequence = 1;
	public const BreakoutWaveOrderType Loop = 2;
}
public enum DHFIDOFNDDL
{
	// Fields
	public uint value__; // 0x10
	public const DHFIDOFNDDL A = 0;
	public const DHFIDOFNDDL B = 1;
	public const DHFIDOFNDDL C = 2;
}
public enum PaddleReboundMode
{
	// Fields
	public const PaddleReboundMode ArcPaddle = 0;
	public const PaddleReboundMode FixDirection = 1;
	public const PaddleReboundMode PlayerVelocity = 2;
}
public enum EKIEFKBNFLK.HNJJBPEGCMD
{
	// Fields
	public const EKIEFKBNFLK.HNJJBPEGCMD MinAngleToAxisX = 0;
	public const EKIEFKBNFLK.HNJJBPEGCMD MinAngleToAxisY = 1;
	public const EKIEFKBNFLK.HNJJBPEGCMD MinAngleToAxisXY = 2;
}
public enum BDIIKKGFPEN
{
	// Fields
	public const BDIIKKGFPEN Default = 0;
	public const BDIIKKGFPEN EntityDestroy = 1;
	public const BDIIKKGFPEN Reconnect = 2;
	public const BDIIKKGFPEN EntityClear = 3;
	public const BDIIKKGFPEN EntityMiss = 4;
	public const BDIIKKGFPEN AttacherEntityDestroy = 5;
	public const BDIIKKGFPEN AttacherEntityMiss = 6;
}
public enum EEDMPOMKDDP
{
	// Fields
	public const EEDMPOMKDDP None = 0;
	public const EEDMPOMKDDP Ability = 1;
	public const EEDMPOMKDDP Modifier = 2;
}
public enum FOEHLAAJGEF.MOEHCNGKOND
{
	// Fields
	public const FOEHLAAJGEF.MOEHCNGKOND ExportJson = 0;
	public const FOEHLAAJGEF.MOEHCNGKOND ExportBinary = 1;
	public const FOEHLAAJGEF.MOEHCNGKOND LoadJson = 2;
	public const FOEHLAAJGEF.MOEHCNGKOND LoadBinary = 3;
	public const FOEHLAAJGEF.MOEHCNGKOND StartRecord = 4;
	public const FOEHLAAJGEF.MOEHCNGKOND ClickSearch = 5;
	public const FOEHLAAJGEF.MOEHCNGKOND ClickNodeButton = 6;
	public const FOEHLAAJGEF.MOEHCNGKOND ChangePreviewContentFilter = 7;
	public const FOEHLAAJGEF.MOEHCNGKOND ChangeEntityFilter = 8;
}
public enum OEEMKHHEOHE
{
	// Fields
	public const OEEMKHHEOHE None = 0;
	public const OEEMKHHEOHE Box = 1;
	public const OEEMKHHEOHE Sphere = 2;
	public const OEEMKHHEOHE Capsule = 3;
}
public enum MonoGadgetTurn.GOBHHLPFBBH
{
	// Fields
	public const MonoGadgetTurn.GOBHHLPFBBH UnInit = 0;
	public const MonoGadgetTurn.GOBHHLPFBBH Turning = 1;
	public const MonoGadgetTurn.GOBHHLPFBBH Done = 2;
}
public enum FPMFGLJCOPL
{
	// Fields
	public const FPMFGLJCOPL None = 0;
	public const FPMFGLJCOPL Standby = 1;
	public const FPMFGLJCOPL Run = 2;
	public const FPMFGLJCOPL Sprint = 3;
	public const FPMFGLJCOPL Swim = 4;
	public const FPMFGLJCOPL Ignore = 5;
	public const FPMFGLJCOPL Fly = 6;
	public const FPMFGLJCOPL Air = 7;
}
public enum FGJIFIHADCE.KKNNOICGBHI
{
	// Fields
	public const FGJIFIHADCE.KKNNOICGBHI Move = 0;
	public const FGJIFIHADCE.KKNNOICGBHI Slip = 1;
	public const FGJIFIHADCE.KKNNOICGBHI Air = 2;
	public const FGJIFIHADCE.KKNNOICGBHI NoStandGround = 3;
}
public enum MCOMOJEIHNG.DIMCBFJGIFP
{
	// Fields
	public const MCOMOJEIHNG.DIMCBFJGIFP Default = 0;
	public const MCOMOJEIHNG.DIMCBFJGIFP LockForward = 1;
}
public enum KPPBGMFLCAO.CHAELKAGENF
{
	// Fields
	public const KPPBGMFLCAO.CHAELKAGENF Move = 0;
	public const KPPBGMFLCAO.CHAELKAGENF Climb = 1;
	public const KPPBGMFLCAO.CHAELKAGENF Air = 2;
	public const KPPBGMFLCAO.CHAELKAGENF Swim = 3;
	public const KPPBGMFLCAO.CHAELKAGENF Ladder = 4;
	public const KPPBGMFLCAO.CHAELKAGENF ClimbDown = 5;
}
public enum KPPBGMFLCAO.HDKJBJODBOI
{
	// Fields
	public const KPPBGMFLCAO.HDKJBJODBOI ClimbToStandbyLight = 0;
	public const KPPBGMFLCAO.HDKJBJODBOI JumpUpstairs = 1;
	public const KPPBGMFLCAO.HDKJBJODBOI ClimbToStandbyMiddle = 2;
	public const KPPBGMFLCAO.HDKJBJODBOI ClimbToStandby50Middle = 3;
	public const KPPBGMFLCAO.HDKJBJODBOI ClimbToStandbyHard = 4;
	public const KPPBGMFLCAO.HDKJBJODBOI ClimbToStandby50Hard = 5;
	public const KPPBGMFLCAO.HDKJBJODBOI ClimbtoStandbyGentle = 6;
}
public enum DOMBMJAKDLM.POPEKEJPAMA
{
	// Fields
	public const DOMBMJAKDLM.POPEKEJPAMA jump = 0;
	public const DOMBMJAKDLM.POPEKEJPAMA jumpForWalk = 1;
	public const DOMBMJAKDLM.POPEKEJPAMA jumpForRun = 2;
	public const DOMBMJAKDLM.POPEKEJPAMA jumpForSprint = 3;
}
public enum AEGKALIIDHC.IAJBEMILHMH
{
	// Fields
	public const AEGKALIIDHC.IAJBEMILHMH In = 0;
	public const AEGKALIIDHC.IAJBEMILHMH Stay = 1;
	public const AEGKALIIDHC.IAJBEMILHMH Out = 2;
}
public enum IIKHBEJPLDK
{
	// Fields
	public const IIKHBEJPLDK Success = 0;
	public const IIKHBEJPLDK NoPath = 1;
	public const IIKHBEJPLDK TooFrequent = 2;
	public const IIKHBEJPLDK Error = 3;
}
public enum CMBPPBOJPMI.LCDLAHNEIOG
{
	// Fields
	public const CMBPPBOJPMI.LCDLAHNEIOG NotReady = 0;
	public const CMBPPBOJPMI.LCDLAHNEIOG Ready = 1;
}
public enum BADEFANDHNC.KBJPAPHONDJ
{
	// Fields
	public const BADEFANDHNC.KBJPAPHONDJ Inactive = 0;
	public const BADEFANDHNC.KBJPAPHONDJ Pending = 1;
	public const BADEFANDHNC.KBJPAPHONDJ Partial = 2;
	public const BADEFANDHNC.KBJPAPHONDJ Success = 3;
	public const BADEFANDHNC.KBJPAPHONDJ Fail = 4;
	public const BADEFANDHNC.KBJPAPHONDJ ToBeRecycled = 5;
}
public enum BADEFANDHNC.MHBJKAFENPO
{
	// Fields
	public const BADEFANDHNC.MHBJKAFENPO Arrived = 0;
	public const BADEFANDHNC.MHBJKAFENPO Near = 1;
	public const BADEFANDHNC.MHBJKAFENPO Far = 2;
	public const BADEFANDHNC.MHBJKAFENPO FirstPoint = 3;
}
public enum KLOPAAFKHEA
{
	// Fields
	public const KLOPAAFKHEA CreatedByClient = 1;
	public const KLOPAAFKHEA CreatedByServer = 2;
	public const KLOPAAFKHEA CreatedFromServer = 3;
}
public enum OHHPLELCPEK
{
	// Fields
	public const OHHPLELCPEK Burn = 0;
	public const OHHPLELCPEK ElectricAdd = 1;
	public const OHHPLELCPEK Freeze = 2;
	public const OHHPLELCPEK VehicleMuteIce = 3;
	public const OHHPLELCPEK FullState = 4;
	public const OHHPLELCPEK Steam = 5;
	public const OHHPLELCPEK Melt = 6;
	public const OHHPLELCPEK Count = 7;
}
public enum FEENCMLLPFL
{
	// Fields
	public const FEENCMLLPFL None = 0;
	public const FEENCMLLPFL Burning = 1;
	public const FEENCMLLPFL Burned = 2;
}
public enum GOKCGIGMJDM
{
	// Fields
	public const GOKCGIGMJDM None = 0;
	public const GOKCGIGMJDM Freeze = 1;
	public const GOKCGIGMJDM FreezeEnd = 2;
}
public enum EKAHHOEEMJJ
{
	// Fields
	public const EKAHHOEEMJJ Original = 0;
	public const EKAHHOEEMJJ UC = 1;
	public const EKAHHOEEMJJ QIHOO = 2;
	public const EKAHHOEEMJJ OPPO = 3;
	public const EKAHHOEEMJJ VIVO = 4;
	public const EKAHHOEEMJJ HUAWEI = 5;
	public const EKAHHOEEMJJ XIAOMI = 6;
	public const EKAHHOEEMJJ TENCENT = 7;
	public const EKAHHOEEMJJ GIONEE = 8;
	public const EKAHHOEEMJJ LENOVO = 9;
	public const EKAHHOEEMJJ BAIDU = 10;
	public const EKAHHOEEMJJ COOLPAD = 11;
	public const EKAHHOEEMJJ WANDOUJIA = 12;
	public const EKAHHOEEMJJ MEIZU = 13;
	public const EKAHHOEEMJJ BILIBILI = 14;
	public const EKAHHOEEMJJ LESHI = 15;
	public const EKAHHOEEMJJ JAPAN = 16;
	public const EKAHHOEEMJJ TAIWAN = 17;
	public const EKAHHOEEMJJ KOREA = 18;
	public const EKAHHOEEMJJ OVERSEAS = 19;
	public const EKAHHOEEMJJ GLOBAL = 20;
}
public enum FOFFLGEIFJA
{
	// Fields
	public const FOFFLGEIFJA DEFAULT = 0;
	public const FOFFLGEIFJA APPSTORE_CN = 1;
	public const FOFFLGEIFJA ORIGINAL_ANDROID_PAY = 2;
	public const FOFFLGEIFJA GOOGLE_ANDROID_PAY = 3;
}
public enum BEMEGIOPLEP.GFCOILEOGJN
{
	// Fields
	public const BEMEGIOPLEP.GFCOILEOGJN Number = 0;
	public const BEMEGIOPLEP.GFCOILEOGJN StringKey = 1;
	public const BEMEGIOPLEP.GFCOILEOGJN NumberArray = 2;
	public const BEMEGIOPLEP.GFCOILEOGJN Grade = 3;
	public const BEMEGIOPLEP.GFCOILEOGJN Bool = 4;
	public const BEMEGIOPLEP.GFCOILEOGJN Combine = 5;
}
public enum BEMEGIOPLEP.JHJBEEHEOMM
{
	// Fields
	public const BEMEGIOPLEP.JHJBEEHEOMM PlayerEntry = 0;
	public const BEMEGIOPLEP.JHJBEEHEOMM CombineItem = 1;
	public const BEMEGIOPLEP.JHJBEEHEOMM ItemPerfRating = 2;
	public const BEMEGIOPLEP.JHJBEEHEOMM DeviceSpecOverride = 3;
	public const BEMEGIOPLEP.JHJBEEHEOMM OverrideMap = 4;
	public const BEMEGIOPLEP.JHJBEEHEOMM InvalidDefault = 5;
}
public enum EPMNOIBDACF.MNBDBGMJHJH
{
	// Fields
	public const EPMNOIBDACF.MNBDBGMJHJH High = 1;
	public const EPMNOIBDACF.MNBDBGMJHJH Middle = 2;
	public const EPMNOIBDACF.MNBDBGMJHJH Low = 3;
}
public enum PKJJADLHMFA.FDPILAGFMPC.LBNKBEJGCOH
{
	// Fields
	public const PKJJADLHMFA.FDPILAGFMPC.LBNKBEJGCOH Init = 0;
	public const PKJJADLHMFA.FDPILAGFMPC.LBNKBEJGCOH Recycled = 1;
	public const PKJJADLHMFA.FDPILAGFMPC.LBNKBEJGCOH Loading = 2;
	public const PKJJADLHMFA.FDPILAGFMPC.LBNKBEJGCOH BlockLoadedOnAsyncLoad = 3;
	public const PKJJADLHMFA.FDPILAGFMPC.LBNKBEJGCOH Loaded = 4;
	public const PKJJADLHMFA.FDPILAGFMPC.LBNKBEJGCOH Destroy = 5;
}
public enum DIBAGILHOEB
{
	// Fields
	public const DIBAGILHOEB AnimatorEventEffect = 0;
	public const DIBAGILHOEB AnimatorEventStopAllEffects = 1;
	public const DIBAGILHOEB AnimatorEventStopAllEffectsImmediately = 2;
	public const DIBAGILHOEB AnimatorEventAnimEventHandler = 3;
	public const DIBAGILHOEB AnimatorEventTurnDirection = 5;
	public const DIBAGILHOEB AnimatorEventClearTrigger = 6;
	public const DIBAGILHOEB AnimatorEventRushMove = 7;
	public const DIBAGILHOEB AnimatorEventDieEnd = 8;
	public const DIBAGILHOEB AnimatorEventTriggerAbility = 9;
	public const DIBAGILHOEB AnimatorEventAudio = 10;
	public const DIBAGILHOEB AnimatorEventClimbStep = 11;
	public const DIBAGILHOEB AnimatorEventWalkStep = 12;
	public const DIBAGILHOEB AnimatorEventMonsterTryDropEquips = 13;
	public const DIBAGILHOEB AnimatorEventPickUp = 14;
	public const DIBAGILHOEB AnimatorEventCameraMove = 15;
	public const DIBAGILHOEB AnimatorEventSupportOut = 16;
	public const DIBAGILHOEB AnimatorEventSwimStep = 17;
	public const DIBAGILHOEB AnimatorEventWaterEffectStep = 20;
	public const DIBAGILHOEB AnimatorEventSkillStart = 23;
	public const DIBAGILHOEB AnimatorEventWeaponFadeOut = 24;
	public const DIBAGILHOEB AnimatorEventFaceAnimation = 25;
	public const DIBAGILHOEB AnimatorEventPushCollider = 26;
	public const DIBAGILHOEB AnimatorEventEmotion = 27;
	public const DIBAGILHOEB AnimatorEventFreeInteraction = 28;
	public const DIBAGILHOEB AnimatorEventFade = 29;
	public const DIBAGILHOEB AnimatorEventSetVisiable = 30;
	public const DIBAGILHOEB AnimatorEventCutscene = 31;
	public const DIBAGILHOEB AnimatorEventEnableLand = 32;
	public const DIBAGILHOEB AnimatorEventSetComboCount = 33;
	public const DIBAGILHOEB AnimatorEventSetParamValue = 34;
	public const DIBAGILHOEB AnimatorEventEmoSync = 35;
	public const DIBAGILHOEB AnimatorEventFreeStyleReset = 36;
	public const DIBAGILHOEB AnimatorEventVoice = 37;
	public const DIBAGILHOEB AnimatorEventManekinPutWeapon = 38;
	public const DIBAGILHOEB AnimatorEventManekinTakeWeapon = 39;
	public const DIBAGILHOEB AnimatorEventAttach = 40;
	public const DIBAGILHOEB AnimatorEventEffectTrigger = 41;
	public const DIBAGILHOEB AnimatorEventSwimDashHandEffect = 42;
	public const DIBAGILHOEB AnimatorEventOverrideTargetingParams = 43;
	public const DIBAGILHOEB AnimatorEventFixedMonsterRushMove = 44;
	public const DIBAGILHOEB AnimatorEventCompensatePosDiff = 45;
	public const DIBAGILHOEB AnimatorEventEnableAfterImage = 46;
	public const DIBAGILHOEB AnimatorEventSyncLoopAnim = 47;
	public const DIBAGILHOEB AnimatorEventTriggerFishingQTE = 48;
	public const DIBAGILHOEB AnimatorEventForceSyncAnimation = 49;
	public const DIBAGILHOEB AnimatorEventShowWeapon = 50;
	public const DIBAGILHOEB AnimatorEventEffectByPlayerType = 51;
	public const DIBAGILHOEB AnimatorEventPutSubWeapon = 52;
	public const DIBAGILHOEB AnimatorEventTakeSubWeapon = 53;
	public const DIBAGILHOEB AnimatorEventSubWeaponFadeOut = 54;
	public const DIBAGILHOEB AnimatorEventAttachBartenderEffect = 55;
	public const DIBAGILHOEB AnimatorEventDetachBartenderEffect = 56;
	public const DIBAGILHOEB AnimatorEventTrampolineJump = 57;
	public const DIBAGILHOEB AnimatorEventEnableHDMesh = 58;
	public const DIBAGILHOEB AnimatorEventEffectByWidgetID = 59;
	public const DIBAGILHOEB AnimatorEventRandomEffect = 60;
}
public enum AnimatorTriggerType
{
	// Fields
	public const AnimatorTriggerType None = 0;
	public const AnimatorTriggerType ForceTriggerOnExitImediately = 1;
	public const AnimatorTriggerType ForceTriggerOnTransition = 2;
	public const AnimatorTriggerType ForceTriggerOnTransitionFinish = 3;
}
public enum NLODKFKOJJH.NKDHAAFJLBH
{
	// Fields
	public const NLODKFKOJJH.NKDHAAFJLBH None = 0;
	public const NLODKFKOJJH.NKDHAAFJLBH AttachToStateLayer = 1;
	public const NLODKFKOJJH.NKDHAAFJLBH AttachToAnimatorState = 2;
}
public enum EMNNEIBKJFO.PICCNMGKFAE
{
	// Fields
	public const EMNNEIBKJFO.PICCNMGKFAE Set = 0;
	public const EMNNEIBKJFO.PICCNMGKFAE Clear = 1;
}
public enum FIBMNOHFPCI.BIFBAJOPFEM
{
	// Fields
	public const FIBMNOHFPCI.BIFBAJOPFEM Overwrite = 0;
	public const FIBMNOHFPCI.BIFBAJOPFEM Addition = 1;
}
public enum FIBMNOHFPCI.EILCHHCIDNM
{
	// Fields
	public const FIBMNOHFPCI.EILCHHCIDNM Integer = 0;
}
public enum IKHIOICHDGE.CGKKOJAPHDL
{
	// Fields
	public const IKHIOICHDGE.CGKKOJAPHDL DIALOG = 0;
	public const IKHIOICHDGE.CGKKOJAPHDL EMO_SYNC_ONLY = 1;
}
public enum KFEHLJOCLLI.HICIKNDCOKO
{
	// Fields
	public const KFEHLJOCLLI.HICIKNDCOKO None = 0;
	public const KFEHLJOCLLI.HICIKNDCOKO AttachToStateLayer = 1;
	public const KFEHLJOCLLI.HICIKNDCOKO AttachToAnimatorState = 2;
}
public enum GLIHPCDEING.LKEAMJEILKB
{
	// Fields
	public const GLIHPCDEING.LKEAMJEILKB None = 0;
	public const GLIHPCDEING.LKEAMJEILKB AttachToStateLayer = 1;
	public const GLIHPCDEING.LKEAMJEILKB AttachToAnimatorState = 2;
}
public enum GNADBOMNLIK.PMBLKBBLIFJ
{
	// Fields
	public const GNADBOMNLIK.PMBLKBBLIFJ None = 0;
	public const GNADBOMNLIK.PMBLKBBLIFJ AttachToStateLayer = 1;
	public const GNADBOMNLIK.PMBLKBBLIFJ AttachToAnimatorState = 2;
}
public enum CFJCBAMKAGM
{
	// Fields
	public const CFJCBAMKAGM All = 0;
	public const CFJCBAMKAGM Female = 1;
	public const CFJCBAMKAGM Male = 2;
	public const CFJCBAMKAGM Others = 3;
}
public enum MHCBLCPEOND
{
	// Fields
	public const MHCBLCPEOND QueueAtFront = 0;
	public const MHCBLCPEOND QueueAtEnd = 1;
	public const MHCBLCPEOND Drop = 2;
}
public enum MEMDLDDBIAG.NGBAEIFKHGH
{
	// Fields
	public const MEMDLDDBIAG.NGBAEIFKHGH NormalMove = 0;
	public const MEMDLDDBIAG.NGBAEIFKHGH Jump = 1;
	public const MEMDLDDBIAG.NGBAEIFKHGH Climb = 2;
	public const MEMDLDDBIAG.NGBAEIFKHGH Fly = 3;
	public const MEMDLDDBIAG.NGBAEIFKHGH Slip = 4;
	public const MEMDLDDBIAG.NGBAEIFKHGH Swim = 5;
	public const MEMDLDDBIAG.NGBAEIFKHGH Ladder = 6;
	public const MEMDLDDBIAG.NGBAEIFKHGH Hit = 7;
	public const MEMDLDDBIAG.NGBAEIFKHGH Skill = 8;
	public const MEMDLDDBIAG.NGBAEIFKHGH Die = 9;
	public const MEMDLDDBIAG.NGBAEIFKHGH Crouch = 10;
	public const MEMDLDDBIAG.NGBAEIFKHGH Perform = 11;
	public const MEMDLDDBIAG.NGBAEIFKHGH Drop = 12;
}
public enum BHPLCDFPBIC
{
	// Fields
	public short value__; // 0x10
	public const BHPLCDFPBIC Default = 0;
	public const BHPLCDFPBIC Effect = 1;
	public const BHPLCDFPBIC Gadget = 2;
	public const BHPLCDFPBIC Camera = 3;
}
public enum CNIIJCECNGC.HPCFNJKMJKN
{
	// Fields
	public const CNIIJCECNGC.HPCFNJKMJKN Release = 0;
	public const CNIIJCECNGC.HPCFNJKMJKN Loading = 1;
	public const CNIIJCECNGC.HPCFNJKMJKN Loaded = 2;
}
public enum NLEGINKLBCB.COAOBKLJMHF
{
	// Fields
	public const NLEGINKLBCB.COAOBKLJMHF Normal = 0;
	public const NLEGINKLBCB.COAOBKLJMHF AlwaysWalk = 1;
	public const NLEGINKLBCB.COAOBKLJMHF AlwaysRun = 2;
	public const NLEGINKLBCB.COAOBKLJMHF AlwaysSprint = 3;
}
public enum HBMEDHLNELK.IGEOMHMBPFD
{
	// Fields
	public const HBMEDHLNELK.IGEOMHMBPFD Physical = 0;
	public const HBMEDHLNELK.IGEOMHMBPFD Fire = 1;
	public const HBMEDHLNELK.IGEOMHMBPFD Electric = 2;
	public const HBMEDHLNELK.IGEOMHMBPFD Ice = 3;
	public const HBMEDHLNELK.IGEOMHMBPFD Biology = 4;
}
public enum HBMEDHLNELK.EPGGGHICGCJ
{
	// Fields
	public const HBMEDHLNELK.EPGGGHICGCJ HitEntityNotEnemy = 0;
	public const HBMEDHLNELK.EPGGGHICGCJ HitStage = 1;
	public const HBMEDHLNELK.EPGGGHICGCJ HitNothing = 2;
}
public enum CLFJDBIGHDE.LGCPNPHKIDN
{
	// Fields
	public const CLFJDBIGHDE.LGCPNPHKIDN NormalMove = 0;
	public const CLFJDBIGHDE.LGCPNPHKIDN Hit = 1;
	public const CLFJDBIGHDE.LGCPNPHKIDN Skill = 2;
	public const CLFJDBIGHDE.LGCPNPHKIDN Die = 3;
}
public enum JNDFCOPKLDI.IFOKLODFIIE
{
	// Fields
	public byte value__; // 0x10
	public const JNDFCOPKLDI.IFOKLODFIIE Other = 0;
	public const JNDFCOPKLDI.IFOKLODFIIE EntityRelease = 1;
	public const JNDFCOPKLDI.IFOKLODFIIE LowMemory = 2;
	public const JNDFCOPKLDI.IFOKLODFIIE RegionChange = 3;
	public const JNDFCOPKLDI.IFOKLODFIIE ConfigPerf = 4;
	public const JNDFCOPKLDI.IFOKLODFIIE PreloadEff = 5;
}
public enum JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO
{
	// Fields
	public const JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO Effects = 0;
	public const JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO Abilities = 1;
	public const JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO Gadgets = 2;
	public const JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO Cameras = 3;
	public const JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO AnimEventPatterns = 4;
	public const JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO SkillIcons = 5;
	public const JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO MiscObjPaths = 6;
	public const JNDFCOPKLDI.AJDLAGJDGPG.GMKDIPKONCO Weathers = 7;
}
public enum MDNKBMIKCNC
{
	// Fields
	public const MDNKBMIKCNC _Invalid = 0;
	public const MDNKBMIKCNC _Object = 1;
	public const MDNKBMIKCNC _List = 2;
	public const MDNKBMIKCNC _Dict = 3;
}
public enum DCLOFONCNEP.GMFMABOJPAB
{
	// Fields
	public const DCLOFONCNEP.GMFMABOJPAB NONEXCEL = 0;
	public const DCLOFONCNEP.GMFMABOJPAB EXCEL = 1;
	public const DCLOFONCNEP.GMFMABOJPAB SECTR = 2;
}
public enum SCameraShotScriptData.DDKBEKEAINI
{
	// Fields
	public const SCameraShotScriptData.DDKBEKEAINI INVALID = -1;
	public const SCameraShotScriptData.DDKBEKEAINI LOCAL_AVATAR = 0;
	public const SCameraShotScriptData.DDKBEKEAINI TARGET = 1;
	public const SCameraShotScriptData.DDKBEKEAINI GROUP_TARGET = 2;
	public const SCameraShotScriptData.DDKBEKEAINI EXTRA_DUMMY = 3;
	public const SCameraShotScriptData.DDKBEKEAINI FROM_TARGET = 4;
}
public enum GamePlayLevelConfig.GNMHMOKADMD
{
	// Fields
	public const GamePlayLevelConfig.GNMHMOKADMD LDWhiteBox = 0;
	public const GamePlayLevelConfig.GNMHMOKADMD LABigWorldSector = 1;
	public const GamePlayLevelConfig.GNMHMOKADMD LAWhiteBox = 2;
}
public enum BFJIOKAOGAE
{
	// Fields
	public const BFJIOKAOGAE None = 0;
	public const BFJIOKAOGAE Around = 1;
	public const BFJIOKAOGAE Always = 2;
}
public enum MPKLKKJNJCP
{
	// Fields
	public const MPKLKKJNJCP Top = 0;
	public const MPKLKKJNJCP Bottom = 1;
}
public enum PropFormat
{
	// Fields
	public const PropFormat Integer = 0;
	public const PropFormat Percent = 1;
	public const PropFormat Float1 = 2;
	public const PropFormat Float2 = 3;
	public const PropFormat Float1Percent = 4;
	public const PropFormat Float2Percent = 5;
}
public enum PropShowType
{
	// Fields
	public const PropShowType Default = 0;
	public const PropShowType BaseAdd = 1;
}
public enum EMPAGCPGLHF
{
	// Fields
	public const EMPAGCPGLHF FeedBack = 0;
	public const EMPAGCPGLHF Bulletin = 1;
	public const EMPAGCPGLHF AvatarList = 2;
	public const EMPAGCPGLHF TimeAcceleration = 3;
	public const EMPAGCPGLHF Setting = 4;
	public const EMPAGCPGLHF Mail = 5;
	public const EMPAGCPGLHF Friends = 6;
	public const EMPAGCPGLHF Shop = 7;
	public const EMPAGCPGLHF Handbook = 8;
	public const EMPAGCPGLHF Team = 9;
	public const EMPAGCPGLHF Mall = 10;
	public const EMPAGCPGLHF Community = 11;
	public const EMPAGCPGLHF Character = 12;
	public const EMPAGCPGLHF Bag = 13;
	public const EMPAGCPGLHF Quest = 14;
	public const EMPAGCPGLHF Map = 15;
	public const EMPAGCPGLHF Activity = 16;
	public const EMPAGCPGLHF AdventureHandbook = 17;
	public const EMPAGCPGLHF Gacha = 18;
	public const EMPAGCPGLHF BattlePass = 19;
	public const EMPAGCPGLHF Multiplayer = 20;
	public const EMPAGCPGLHF Photograph = 21;
	public const EMPAGCPGLHF Achievement = 22;
	public const EMPAGCPGLHF Codex = 23;
	public const EMPAGCPGLHF DerivativeMall = 24;
	public const EMPAGCPGLHF ActivityH5 = 25;
	public const EMPAGCPGLHF Survey = 26;
	public const EMPAGCPGLHF CloudGame = 27;
	public const EMPAGCPGLHF HomeworldHandbook = 28;
	public const EMPAGCPGLHF AdaptiveHandbook = 29;
	public const EMPAGCPGLHF GcgHandbook = 30;
}
public enum BBCKKIDKPAK
{
	// Fields
	public const BBCKKIDKPAK Team = 0;
	public const BBCKKIDKPAK BattlePass = 1;
	public const BBCKKIDKPAK CoopDefault = 2;
	public const BBCKKIDKPAK CoopFire = 3;
	public const BBCKKIDKPAK CoopWater = 4;
	public const BBCKKIDKPAK CoopGrass = 5;
	public const BBCKKIDKPAK CoopElectric = 6;
	public const BBCKKIDKPAK CoopWind = 7;
	public const BBCKKIDKPAK CoopIce = 8;
	public const BBCKKIDKPAK CoopRock = 9;
	public const BBCKKIDKPAK Default = 10;
}
public enum BJGIABLGAHP
{
	// Fields
	public const BJGIABLGAHP Default = 0;
	public const BJGIABLGAHP MonoEffectPluginLightning = 1;
	public const BJGIABLGAHP MonoEffectPluginMoveToTarget = 2;
	public const BJGIABLGAHP MonoEffectPluginFollow = 3;
	public const BJGIABLGAHP MonoEffectPluginLookAt = 4;
	public const BJGIABLGAHP MonoEffectPluginSyncAnimatorTimeScale = 5;
	public const BJGIABLGAHP MonoEffectPluginLineLink = 6;
	public const BJGIABLGAHP MonoEffectPluginElementViewLookAt = 7;
	public const BJGIABLGAHP MonoEffectPluginBakeMesh = 8;
	public const BJGIABLGAHP MonoEffectPluginLineNode = 9;
	public const BJGIABLGAHP MonoEffectPluginLightningAndParticleMissile = 10;
	public const BJGIABLGAHP MonoEffectPluginAnimatorPose = 11;
	public const BJGIABLGAHP MonoEffectPluginAudio = 12;
	public const BJGIABLGAHP MonoEffectPluginBurstControl = 13;
	public const BJGIABLGAHP MonoEffectPluginSetTargetToLineEffect = 14;
	public const BJGIABLGAHP MonoEffectPluginSetSectorAngleByPeerEntity = 15;
	public const BJGIABLGAHP MonoEffectPluginStencil = 16;
	public const BJGIABLGAHP MonoEffectPluginSimulateControl = 17;
	public const BJGIABLGAHP MonoEffectPluginLightFade = 18;
	public const BJGIABLGAHP MonoEffectPluginCameraScreenFit = 19;
	public const BJGIABLGAHP MonoEffectPluginGpuParticleSystem = 20;
}
public enum MonoEffectElectricChain.JGDMMEEFILL
{
	// Fields
	public const MonoEffectElectricChain.JGDMMEEFILL ScaledFromStart2End = 0;
	public const MonoEffectElectricChain.JGDMMEEFILL DirectlyValue = 1;
}
public enum MonoEffectElectricChain.OBEFBDPMKEB
{
	// Fields
	public const MonoEffectElectricChain.OBEFBDPMKEB Sphere = 0;
	public const MonoEffectElectricChain.OBEFBDPMKEB Box = 1;
}
public enum MonoEffectPluginLineWave.KAFNLKFLHNI
{
	// Fields
	public const MonoEffectPluginLineWave.KAFNLKFLHNI Start = 0;
	public const MonoEffectPluginLineWave.KAFNLKFLHNI Middle = 1;
}
public enum MonoEffectPluginLineWave.APCBBAAPNGD
{
	// Fields
	public const MonoEffectPluginLineWave.APCBBAAPNGD Default = 0;
	public const MonoEffectPluginLineWave.APCBBAAPNGD Scene = 1;
	public const MonoEffectPluginLineWave.APCBBAAPNGD BulletHit = 2;
}
public enum MonoEffect.IIBBLGHCJKK
{
	// Fields
	public const MonoEffect.IIBBLGHCJKK Ignore = 0;
	public const MonoEffect.IIBBLGHCJKK StopEmit = 1;
	public const MonoEffect.IIBBLGHCJKK StopEmitAndClearParticles = 2;
	public const MonoEffect.IIBBLGHCJKK StopEmitAndSetParticlesRemainingLifeTime = 3;
}
public enum MonoEffect.HJHIJDMNOOA
{
	// Fields
	public const MonoEffect.HJHIJDMNOOA Ignore = 0;
	public const MonoEffect.HJHIJDMNOOA Disable = 1;
	public const MonoEffect.HJHIJDMNOOA Deallocate = 2;
}
public enum MonoEffect.FFFAKMBANAK
{
	// Fields
	public const MonoEffect.FFFAKMBANAK PublicUse = 0;
	public const MonoEffect.FFFAKMBANAK EntityDither = 1;
	public const MonoEffect.FFFAKMBANAK ForceUpOnGroundHide = 2;
	public const MonoEffect.FFFAKMBANAK VisibleControlPlugin_Weather = 3;
	public const MonoEffect.FFFAKMBANAK EffectDisableByCS = 4;
	public const MonoEffect.FFFAKMBANAK Count = 5;
}
public enum MonoEffectPluginElementView.IKOFOOFIPBB
{
	// Fields
	public const MonoEffectPluginElementView.IKOFOOFIPBB AlwaysShow = 0;
	public const MonoEffectPluginElementView.IKOFOOFIPBB OnlyShowInElementView = 1;
	public const MonoEffectPluginElementView.IKOFOOFIPBB OnlyShowInNotElementView = 2;
}
public enum MonoEffectPluginFollowLocalAvatar.BHHGKHGJCCO
{
	// Fields
	public const MonoEffectPluginFollowLocalAvatar.BHHGKHGJCCO None = 0;
	public const MonoEffectPluginFollowLocalAvatar.BHHGKHGJCCO AvatarRootRotation = 1;
	public const MonoEffectPluginFollowLocalAvatar.BHHGKHGJCCO AttachPointRotation = 2;
	public const MonoEffectPluginFollowLocalAvatar.BHHGKHGJCCO AttachPointYRotation = 3;
}
public enum MonoEffectPluginForEmojiBubble.FHHMACIBMHH
{
	// Fields
	public const MonoEffectPluginForEmojiBubble.FHHMACIBMHH Center = 0;
	public const MonoEffectPluginForEmojiBubble.FHHMACIBMHH Left = -1;
	public const MonoEffectPluginForEmojiBubble.FHHMACIBMHH Right = 1;
}
public enum MonoEffectPluginForEmojiBubble.FLOBNOBAMMO
{
	// Fields
	public const MonoEffectPluginForEmojiBubble.FLOBNOBAMMO Center = 0;
	public const MonoEffectPluginForEmojiBubble.FLOBNOBAMMO Top = 1;
	public const MonoEffectPluginForEmojiBubble.FLOBNOBAMMO Buttom = -1;
}
public enum MonoEffectPluginHeadShake.AHAJMCCLDDN
{
	// Fields
	public const MonoEffectPluginHeadShake.AHAJMCCLDDN Loop = 0;
	public const MonoEffectPluginHeadShake.AHAJMCCLDDN PingPong = 1;
	public const MonoEffectPluginHeadShake.AHAJMCCLDDN Once = 2;
}
public enum MonoEffectPluginLightningAndParticleMissile.EPJOLDOACOD
{
	// Fields
	public const MonoEffectPluginLightningAndParticleMissile.EPJOLDOACOD Point = 0;
	public const MonoEffectPluginLightningAndParticleMissile.EPJOLDOACOD Edge = 1;
	public const MonoEffectPluginLightningAndParticleMissile.EPJOLDOACOD Circle = 2;
	public const MonoEffectPluginLightningAndParticleMissile.EPJOLDOACOD Sphere = 3;
}
public enum MonoEffectPluginLightningAndParticleMissile.CAFPAECBCNP
{
	// Fields
	public const MonoEffectPluginLightningAndParticleMissile.CAFPAECBCNP View = 0;
	public const MonoEffectPluginLightningAndParticleMissile.CAFPAECBCNP Local = 1;
}
public enum MonoEffectPluginLightningAndParticleMissile.MNPGEJOFIFH
{
	// Fields
	public const MonoEffectPluginLightningAndParticleMissile.MNPGEJOFIFH Stretch = 0;
	public const MonoEffectPluginLightningAndParticleMissile.MNPGEJOFIFH Tile = 1;
	public const MonoEffectPluginLightningAndParticleMissile.MNPGEJOFIFH DistributePerSegment = 2;
	public const MonoEffectPluginLightningAndParticleMissile.MNPGEJOFIFH RepeatPerSegment = 3;
}
public enum PBLMDPBABKO
{
	// Fields
	public const PBLMDPBABKO Clear = 0;
	public const PBLMDPBABKO AnimTrigger = 1;
}
public enum MonoEffectPluginLineNode.LAHHPJNAGEF
{
	// Fields
	public const MonoEffectPluginLineNode.LAHHPJNAGEF None = 0;
	public const MonoEffectPluginLineNode.LAHHPJNAGEF NearestBeforeSelfBorn = 1;
}
public enum MonoEffectPluginLookAt.NBADPGEHDPM
{
	// Fields
	public const MonoEffectPluginLookAt.NBADPGEHDPM None = 0;
	public const MonoEffectPluginLookAt.NBADPGEHDPM Rotate = 1;
	public const MonoEffectPluginLookAt.NBADPGEHDPM Move = 2;
}
public enum MonoEffectPluginManualOcclusion.EJJEKIAAFNJ
{
	// Fields
	public const MonoEffectPluginManualOcclusion.EJJEKIAAFNJ AlwaysShow = 0;
	public const MonoEffectPluginManualOcclusion.EJJEKIAAFNJ OnlyShowInManualOcclusion = 1;
	public const MonoEffectPluginManualOcclusion.EJJEKIAAFNJ OnlyShowInNotManualOcclusion = 2;
}
public enum MonoEffectPluginVisibleControl.ShowWeather
{
	// Fields
	public const MonoEffectPluginVisibleControl.ShowWeather All = 0;
	public const MonoEffectPluginVisibleControl.ShowWeather Rain = 1;
	public const MonoEffectPluginVisibleControl.ShowWeather NotRain = 2;
	public const MonoEffectPluginVisibleControl.ShowWeather Snow = 3;
	public const MonoEffectPluginVisibleControl.ShowWeather NotSnow = 4;
}
public enum OAMLAKMHKCC
{
	// Fields
	public const OAMLAKMHKCC Normal = 0;
	public const OAMLAKMHKCC Clamp = 1;
	public const OAMLAKMHKCC Loop = 2;
}
public enum FaceAnimationEditor.MJJPINGMAED
{
	// Fields
	public const FaceAnimationEditor.MJJPINGMAED LeftEye = 0;
	public const FaceAnimationEditor.MJJPINGMAED RightEye = 1;
	public const FaceAnimationEditor.MJJPINGMAED Mouth = 2;
}
public enum MonoSimpleAnimation.JNIOGNPKMPB
{
	// Fields
	public const MonoSimpleAnimation.JNIOGNPKMPB DoNothing = 0;
	public const MonoSimpleAnimation.JNIOGNPKMPB IgnoreTimeScale = 1;
	public const MonoSimpleAnimation.JNIOGNPKMPB UseLevelTimeScale = 2;
}
public enum MonoEffectAfterImage.IFLBCNANMLO
{
	// Fields
	public const MonoEffectAfterImage.IFLBCNANMLO FixedMesh = 0;
	public const MonoEffectAfterImage.IFLBCNANMLO SampleClip = 1;
	public const MonoEffectAfterImage.IFLBCNANMLO TransformAll = 2;
}
public enum POHHJDPMALF
{
	// Fields
	public const POHHJDPMALF CanNotReused = 0;
	public const POHHJDPMALF GadgetReused = 1;
	public const POHHJDPMALF MonsterReused = 2;
}
public enum MDILBNIIPKA
{
	// Fields
	public const MDILBNIIPKA INVALID = -1;
	public const MDILBNIIPKA EntityComponent = 0;
	public const MDILBNIIPKA COUNT = 1;
}
public enum FHJANFIBOFA
{
	// Fields
	public const FHJANFIBOFA None = 0;
	public const FHJANFIBOFA LerpingIn = 1;
	public const FHJANFIBOFA Free = 2;
	public const FHJANFIBOFA LerpingOut = 3;
}
public enum MBFNFEGOEDK.OACHEIAMCKB
{
	// Fields
	public const MBFNFEGOEDK.OACHEIAMCKB Invalid = 0;
	public const MBFNFEGOEDK.OACHEIAMCKB Preparing = 1;
	public const MBFNFEGOEDK.OACHEIAMCKB Loading = 2;
	public const MBFNFEGOEDK.OACHEIAMCKB SceneInitFinish = 3;
	public const MBFNFEGOEDK.OACHEIAMCKB Ready = 4;
	public const MBFNFEGOEDK.OACHEIAMCKB Destroied = 5;
}
public enum MBFNFEGOEDK.LLGKANMDCPE
{
	// Fields
	public const MBFNFEGOEDK.LLGKANMDCPE None = 0;
	public const MBFNFEGOEDK.LLGKANMDCPE ClearAsset = 1;
	public const MBFNFEGOEDK.LLGKANMDCPE LoadScene = 2;
	public const MBFNFEGOEDK.LLGKANMDCPE PreLoadRes = 3;
	public const MBFNFEGOEDK.LLGKANMDCPE PreInit = 4;
	public const MBFNFEGOEDK.LLGKANMDCPE Init = 5;
	public const MBFNFEGOEDK.LLGKANMDCPE LoadStage = 6;
	public const MBFNFEGOEDK.LLGKANMDCPE LoadEntity = 7;
	public const MBFNFEGOEDK.LLGKANMDCPE AllReady = 8;
	public const MBFNFEGOEDK.LLGKANMDCPE UIInit = 9;
	public const MBFNFEGOEDK.LLGKANMDCPE PostLua = 10;
	public const MBFNFEGOEDK.LLGKANMDCPE PostReady = 11;
	public const MBFNFEGOEDK.LLGKANMDCPE Finish = 12;
	public const MBFNFEGOEDK.LLGKANMDCPE Transmit = 13;
}
public enum LGEIBHFBEEF.OHKNNKDEKOI
{
	// Fields
	public const LGEIBHFBEEF.OHKNNKDEKOI Inactive = 0;
	public const LGEIBHFBEEF.OHKNNKDEKOI ThreadInactive = 1;
	public const LGEIBHFBEEF.OHKNNKDEKOI WaitingQuery = 2;
	public const LGEIBHFBEEF.OHKNNKDEKOI MoveToAP = 3;
	public const LGEIBHFBEEF.OHKNNKDEKOI WaitChargingQuery = 4;
	public const LGEIBHFBEEF.OHKNNKDEKOI Charging = 5;
	public const LGEIBHFBEEF.OHKNNKDEKOI Rest = 6;
}
public enum DOFHANGGBON.DOACGPFLDPK
{
	// Fields
	public const DOFHANGGBON.DOACGPFLDPK Invalid = 0;
	public const DOFHANGGBON.DOACGPFLDPK Aiding = 1;
	public const DOFHANGGBON.DOACGPFLDPK MoveTo = 2;
	public const DOFHANGGBON.DOACGPFLDPK RotateToTarget = 3;
	public const DOFHANGGBON.DOACGPFLDPK Exit = 4;
}
public enum DOFHANGGBON.HFIHCOEGGCI
{
	// Fields
	public const DOFHANGGBON.HFIHCOEGGCI None = 0;
	public const DOFHANGGBON.HFIHCOEGGCI Aiding = 1;
	public const DOFHANGGBON.HFIHCOEGGCI MoveTo = 2;
}
public enum GPPHMCIHIFH.EEPIFKECDEL
{
	// Fields
	public const GPPHMCIHIFH.EEPIFKECDEL None = 0;
	public const GPPHMCIHIFH.EEPIFKECDEL Enter = 1;
	public const GPPHMCIHIFH.EEPIFKECDEL StartDither = 2;
	public const GPPHMCIHIFH.EEPIFKECDEL Dithering = 3;
}
public enum PIOPOONJLAD.IPMDMNBPBCP
{
	// Fields
	public const PIOPOONJLAD.IPMDMNBPBCP Inactive = 0;
	public const PIOPOONJLAD.IPMDMNBPBCP Resting = 1;
	public const PIOPOONJLAD.IPMDMNBPBCP Moving = 2;
}
public enum EGMHLHALFMM.EJEMHAOIOJB
{
	// Fields
	public const EGMHLHALFMM.EJEMHAOIOJB Inactive = 0;
	public const EGMHLHALFMM.EJEMHAOIOJB FollowingInner = 1;
	public const EGMHLHALFMM.EJEMHAOIOJB FollowingMiddle = 2;
	public const EGMHLHALFMM.EJEMHAOIOJB FollowingOuter = 3;
}
public enum HNFNFFKBJLC.HANEDGBANCG
{
	// Fields
	public const HNFNFFKBJLC.HANEDGBANCG Rest = 0;
	public const HNFNFFKBJLC.HANEDGBANCG Moving = 1;
}
public enum EMFPGMIMGIB.PILBCCBKIFD
{
	// Fields
	public const EMFPGMIMGIB.PILBCCBKIFD Inactive = 0;
	public const EMFPGMIMGIB.PILBCCBKIFD CreateTask = 1;
	public const EMFPGMIMGIB.PILBCCBKIFD Moving = 2;
	public const EMFPGMIMGIB.PILBCCBKIFD Fading = 3;
	public const EMFPGMIMGIB.PILBCCBKIFD Fadout = 4;
	public const EMFPGMIMGIB.PILBCCBKIFD MoveEnded = 5;
}
public enum FIFEGEPEEEA.KJCLMFICOPF
{
	// Fields
	public const FIFEGEPEEEA.KJCLMFICOPF None = 0;
	public const FIFEGEPEEEA.KJCLMFICOPF Talk = 1;
	public const FIFEGEPEEEA.KJCLMFICOPF Cutscene = 2;
}
public enum MLNJDEFBJFP.GKFBAJMIBFK
{
	// Fields
	public const MLNJDEFBJFP.GKFBAJMIBFK None = 0;
	public const MLNJDEFBJFP.GKFBAJMIBFK ElementReaction = 1;
	public const MLNJDEFBJFP.GKFBAJMIBFK Attack = 2;
}
public enum CPFMHGIPPMJ.CFJBAJAPAIG
{
	// Fields
	public const CPFMHGIPPMJ.CFJBAJAPAIG INVALID = -1;
	public const CPFMHGIPPMJ.CFJBAJAPAIG SET_STATE = 0;
	public const CPFMHGIPPMJ.CFJBAJAPAIG PICK_UP = 1;
	public const CPFMHGIPPMJ.CFJBAJAPAIG QUEST = 2;
	public const CPFMHGIPPMJ.CFJBAJAPAIG WEAPON_APPEAR = 3;
	public const CPFMHGIPPMJ.CFJBAJAPAIG BLACK_SCREEN = 4;
	public const CPFMHGIPPMJ.CFJBAJAPAIG TOGGLE_FEATURE = 5;
	public const CPFMHGIPPMJ.CFJBAJAPAIG AREA_CHANGE = 6;
}
public enum CPFMHGIPPMJ.NAJCHEPMGMK
{
	// Fields
	public const CPFMHGIPPMJ.NAJCHEPMGMK NONE = -1;
	public const CPFMHGIPPMJ.NAJCHEPMGMK INTERACTION = 0;
	public const CPFMHGIPPMJ.NAJCHEPMGMK CUTSCENE = 1;
	public const CPFMHGIPPMJ.NAJCHEPMGMK LUA_ACTOR = 2;
}
public enum LAEMPFJMDFN.LFPDBIPJEEF
{
	// Fields
	public const LAEMPFJMDFN.LFPDBIPJEEF Default = 0;
	public const LAEMPFJMDFN.LFPDBIPJEEF Drop = 1;
	public const LAEMPFJMDFN.LFPDBIPJEEF Swim = 2;
}
public enum IICFAICNOJI.EACHNBOGOIO
{
	// Fields
	public const IICFAICNOJI.EACHNBOGOIO INVALID = -1;
	public const IICFAICNOJI.EACHNBOGOIO ON = 0;
	public const IICFAICNOJI.EACHNBOGOIO OFF = 1;
}
public enum DPONBPIPKII.JLMHOMDMINI
{
	// Fields
	public const DPONBPIPKII.JLMHOMDMINI INVALID = -1;
	public const DPONBPIPKII.JLMHOMDMINI ENTER = 0;
	public const DPONBPIPKII.JLMHOMDMINI EXIT = 1;
	public const DPONBPIPKII.JLMHOMDMINI INTERRUT = 2;
}
public enum NMPGBOMPGBO.FHLBIJAKGDD
{
	// Fields
	public const NMPGBOMPGBO.FHLBIJAKGDD INVALID = -1;
	public const NMPGBOMPGBO.FHLBIJAKGDD ENTER = 0;
	public const NMPGBOMPGBO.FHLBIJAKGDD EXIT = 1;
	public const NMPGBOMPGBO.FHLBIJAKGDD INTERRUT = 2;
}
public enum JLLMPDJDFAM.AMFODAIAKAI
{
	// Fields
	public const JLLMPDJDFAM.AMFODAIAKAI Fight = 0;
	public const JLLMPDJDFAM.AMFODAIAKAI Normal = 1;
}
public enum EBJPEDBMKGP.KJLDJOOKHCG
{
	// Fields
	public const EBJPEDBMKGP.KJLDJOOKHCG INVALID = -1;
	public const EBJPEDBMKGP.KJLDJOOKHCG START = 0;
	public const EBJPEDBMKGP.KJLDJOOKHCG FINISH = 1;
}
public enum MHDHPAKEJIB.ODJCDFFPDOF
{
	// Fields
	public const MHDHPAKEJIB.ODJCDFFPDOF Land = 0;
	public const MHDHPAKEJIB.ODJCDFFPDOF Water = 1;
	public const MHDHPAKEJIB.ODJCDFFPDOF LandUnderWater = 2;
}
public enum GFNNCLDILPN.LOPINALLGBP
{
	// Fields
	public const GFNNCLDILPN.LOPINALLGBP None = 0;
	public const GFNNCLDILPN.LOPINALLGBP HP = 1;
	public const GFNNCLDILPN.LOPINALLGBP Energy = 2;
}
public enum DIDOLFNGGKD.BKNPMBIHPLM
{
	// Fields
	public const DIDOLFNGGKD.BKNPMBIHPLM RageUp = 0;
	public const DIDOLFNGGKD.BKNPMBIHPLM RageDown = 1;
	public const DIDOLFNGGKD.BKNPMBIHPLM StaminaEmpty = 2;
}
public enum MFOGEANPDPN.JANMBPBPKNF
{
	// Fields
	public const MFOGEANPDPN.JANMBPBPKNF Add = 0;
	public const MFOGEANPDPN.JANMBPBPKNF Remove = 1;
}
public enum NBLMDCICBEH.FEHBHPBCGEM
{
	// Fields
	public const NBLMDCICBEH.FEHBHPBCGEM None = 0;
	public const NBLMDCICBEH.FEHBHPBCGEM NitrogenSpeedUpOnBoat = 1;
}
public enum JKIBHNJGKIK.DPLFHIDDIGC
{
	// Fields
	public const JKIBHNJGKIK.DPLFHIDDIGC Invalid = 0;
	public const JKIBHNJGKIK.DPLFHIDDIGC PostEvent = 1;
	public const JKIBHNJGKIK.DPLFHIDDIGC Switch = 2;
	public const JKIBHNJGKIK.DPLFHIDDIGC State = 3;
	public const JKIBHNJGKIK.DPLFHIDDIGC RTPC = 4;
	public const JKIBHNJGKIK.DPLFHIDDIGC PostMIDIEvent = 5;
}
public enum AOKNJCAIGGE.OPMNLEJPPGM
{
	// Fields
	public const AOKNJCAIGGE.OPMNLEJPPGM EliteShield = 0;
	public const AOKNJCAIGGE.OPMNLEJPPGM GlobalShield = 1;
}
public enum EHHOLIANLLJ.MNHNMGKLGEP
{
	// Fields
	public const EHHOLIANLLJ.MNHNMGKLGEP Default = 0;
	public const EHHOLIANLLJ.MNHNMGKLGEP Wormhole = 1;
	public const EHHOLIANLLJ.MNHNMGKLGEP Quick = 2;
	public const EHHOLIANLLJ.MNHNMGKLGEP DirectlySetPos = 3;
	public const EHHOLIANLLJ.MNHNMGKLGEP QuickWithoutPaimonReminder = 4;
	public const EHHOLIANLLJ.MNHNMGKLGEP QuickV2 = 5;
}
public enum POJONKCMMEP.PACOGHLGEDB
{
	// Fields
	public const POJONKCMMEP.PACOGHLGEDB INVALID = -1;
	public const POJONKCMMEP.PACOGHLGEDB START = 0;
	public const POJONKCMMEP.PACOGHLGEDB FINISH = 8;
}
public enum PFCIMEBKOHF.OBNNGKIPECE
{
	// Fields
	public const PFCIMEBKOHF.OBNNGKIPECE FirstWindBullet = 0;
	public const PFCIMEBKOHF.OBNNGKIPECE SecondWindBullet = 1;
	public const PFCIMEBKOHF.OBNNGKIPECE SpawnWindField = 2;
}
public enum IFBCBKACLEA.NPLNJLOLAHD
{
	// Fields
	public const IFBCBKACLEA.NPLNJLOLAHD Inactive = 0;
	public const IFBCBKACLEA.NPLNJLOLAHD OnMove = 1;
}
public enum LCBAAMHMAPN.BBPCJCCADBK
{
	// Fields
	public const LCBAAMHMAPN.BBPCJCCADBK Inactive = 0;
	public const LCBAAMHMAPN.BBPCJCCADBK Chasing = 1;
	public const LCBAAMHMAPN.BBPCJCCADBK FindBack = 2;
	public const LCBAAMHMAPN.BBPCJCCADBK Finish = 3;
}
public enum PJOFPDPAPDF.IHPHCKJIPPI
{
	// Fields
	public const PJOFPDPAPDF.IHPHCKJIPPI Invalid = 0;
	public const PJOFPDPAPDF.IHPHCKJIPPI CloseTo = 1;
	public const PJOFPDPAPDF.IHPHCKJIPPI Pretend = 2;
	public const PJOFPDPAPDF.IHPHCKJIPPI QTE = 3;
}
public enum FPEPAACJAOB.EGEFENBLONF
{
	// Fields
	public const FPEPAACJAOB.EGEFENBLONF Inactive = 0;
	public const FPEPAACJAOB.EGEFENBLONF Fleeing = 1;
	public const FPEPAACJAOB.EGEFENBLONF FleeFinish = 2;
	public const FPEPAACJAOB.EGEFENBLONF RotateToTarget = 3;
}
public enum NLILKMNNLMH.OPLLLOECLMP
{
	// Fields
	public const NLILKMNNLMH.OPLLLOECLMP Invalid = 0;
	public const NLILKMNNLMH.OPLLLOECLMP CloseTo = 1;
	public const NLILKMNNLMH.OPLLLOECLMP RotateTo = 2;
}
public enum AOCGFAIHGJI.EADJJCNKODC
{
	// Fields
	public const AOCGFAIHGJI.EADJJCNKODC Inactive = 0;
	public const AOCGFAIHGJI.EADJJCNKODC MoveToPoint = 1;
	public const AOCGFAIHGJI.EADJJCNKODC DoAction = 2;
}
public enum MBEJHKLEFGO.GHAMMKHPHNF
{
	// Fields
	public const MBEJHKLEFGO.GHAMMKHPHNF Inactive = 0;
	public const MBEJHKLEFGO.GHAMMKHPHNF Fleeing = 1;
	public const MBEJHKLEFGO.GHAMMKHPHNF FleeFinish = 2;
	public const MBEJHKLEFGO.GHAMMKHPHNF RotateToTarget = 3;
}
public enum AAPANBPHCIF.OJNJLGDBCAD
{
	// Fields
	public const AAPANBPHCIF.OJNJLGDBCAD Inactive = 0;
	public const AAPANBPHCIF.OJNJLGDBCAD Fleeing = 1;
	public const AAPANBPHCIF.OJNJLGDBCAD FleeFinish = 2;
}
public enum ODOKILMKBHM.INLGOBGKFIB
{
	// Fields
	public const ODOKILMKBHM.INLGOBGKFIB ResumePath = 0;
	public const ODOKILMKBHM.INLGOBGKFIB MoveToNextPoint = 1;
	public const ODOKILMKBHM.INLGOBGKFIB WaitOnPoint = 2;
	public const ODOKILMKBHM.INLGOBGKFIB Reached = 3;
	public const ODOKILMKBHM.INLGOBGKFIB Done = 4;
}
public enum KMDDKLJGBKA.OKOBBHENKPC
{
	// Fields
	public const KMDDKLJGBKA.OKOBBHENKPC ResumePath = 0;
	public const KMDDKLJGBKA.OKOBBHENKPC MoveToNextPoint = 1;
	public const KMDDKLJGBKA.OKOBBHENKPC RotateToTarget = 2;
	public const KMDDKLJGBKA.OKOBBHENKPC WaitPoint = 3;
	public const KMDDKLJGBKA.OKOBBHENKPC Done = 4;
}
public enum LEIHGLMJPFL.DGPOCPHECAL
{
	// Fields
	public const LEIHGLMJPFL.DGPOCPHECAL Idle = 0;
	public const LEIHGLMJPFL.DGPOCPHECAL Move = 1;
	public const LEIHGLMJPFL.DGPOCPHECAL QueryingBigTurn = 2;
	public const LEIHGLMJPFL.DGPOCPHECAL BigTurn = 3;
}
public enum LEIHGLMJPFL.MFCPPGNNKBA
{
	// Fields
	public const LEIHGLMJPFL.MFCPPGNNKBA WhoKnows = 0;
	public const LEIHGLMJPFL.MFCPPGNNKBA Distance = 1;
	public const LEIHGLMJPFL.MFCPPGNNKBA ChangeDir = 2;
	public const LEIHGLMJPFL.MFCPPGNNKBA LeaveTactic = 3;
}
public enum PLFNEPODCNN.BKADDPCBLCG
{
	// Fields
	public const PLFNEPODCNN.BKADDPCBLCG Inactive = 0;
	public const PLFNEPODCNN.BKADDPCBLCG Inspect = 1;
	public const PLFNEPODCNN.BKADDPCBLCG LookAround = 2;
	public const PLFNEPODCNN.BKADDPCBLCG ReturnToStart = 3;
}
public enum LNAPAKJKOFH.GAPPIIIJFIF
{
	// Fields
	public const LNAPAKJKOFH.GAPPIIIJFIF Inactive = 0;
	public const LNAPAKJKOFH.GAPPIIIJFIF Descending = 1;
	public const LNAPAKJKOFH.GAPPIIIJFIF Landing = 2;
	public const LNAPAKJKOFH.GAPPIIIJFIF Landed = 3;
}
public enum DHEBHBFIFKJ.PNJFHEJGAKK
{
	// Fields
	public const DHEBHBFIFKJ.PNJFHEJGAKK Invalid = 0;
	public const DHEBHBFIFKJ.PNJFHEJGAKK Scene = 1;
	public const DHEBHBFIFKJ.PNJFHEJGAKK Dungeon = 2;
	public const DHEBHBFIFKJ.PNJFHEJGAKK Goto = 3;
}
public enum DHEBHBFIFKJ.KHOJLNELBIO
{
	// Fields
	public const DHEBHBFIFKJ.KHOJLNELBIO Invalid = 0;
	public const DHEBHBFIFKJ.KHOJLNELBIO Queuing = 1;
	public const DHEBHBFIFKJ.KHOJLNELBIO EnterScene = 2;
	public const DHEBHBFIFKJ.KHOJLNELBIO ShowLoadingPage = 3;
	public const DHEBHBFIFKJ.KHOJLNELBIO WaitingPeerID = 4;
	public const DHEBHBFIFKJ.KHOJLNELBIO SceneReady = 5;
	public const DHEBHBFIFKJ.KHOJLNELBIO InitScene = 6;
	public const DHEBHBFIFKJ.KHOJLNELBIO LoadStage = 7;
	public const DHEBHBFIFKJ.KHOJLNELBIO SceneInitFinish = 8;
	public const DHEBHBFIFKJ.KHOJLNELBIO SceneDone = 9;
	public const DHEBHBFIFKJ.KHOJLNELBIO LoadingFinish = 10;
}
public enum LMJAOPFNFBL.GLMDDOKGEGJ
{
	// Fields
	public const LMJAOPFNFBL.GLMDDOKGEGJ Inactive = 0;
	public const LMJAOPFNFBL.GLMDDOKGEGJ Charging = 1;
	public const LMJAOPFNFBL.GLMDDOKGEGJ Failed = 2;
}
public enum DMICPPILKMM.FGKEJOHOPJM
{
	// Fields
	public const DMICPPILKMM.FGKEJOHOPJM Invalid = 0;
	public const DMICPPILKMM.FGKEJOHOPJM BeginAction = 1;
	public const DMICPPILKMM.FGKEJOHOPJM MoveTo = 2;
	public const DMICPPILKMM.FGKEJOHOPJM ChangeTarget = 3;
	public const DMICPPILKMM.FGKEJOHOPJM TargetPointAction = 4;
	public const DMICPPILKMM.FGKEJOHOPJM WaitEnd = 5;
}
public enum DHBMLPKCFBA.AAHFPGDBLFK
{
	// Fields
	public const DHBMLPKCFBA.AAHFPGDBLFK Inactive = 0;
	public const DHBMLPKCFBA.AAHFPGDBLFK Moving = 1;
	public const DHBMLPKCFBA.AAHFPGDBLFK Waiting = 2;
}
public enum NpcActor.EHoldState
{
	// Fields
	public const NpcActor.EHoldState None = 0;
	public const NpcActor.EHoldState Hold = 1;
	public const NpcActor.EHoldState UnHold = 2;
}
public enum PBFMJFKGGLK.HKNFKJJLABM
{
	// Fields
	public const PBFMJFKGGLK.HKNFKJJLABM Inactive = 0;
	public const PBFMJFKGGLK.HKNFKJJLABM Rotating = 1;
}
public enum AAPAKNLNOFC.HIOJBECDLPM
{
	// Fields
	public const AAPAKNLNOFC.HIOJBECDLPM Inactive = 0;
	public const AAPAKNLNOFC.HIOJBECDLPM Charging = 1;
}
public enum PKPELCNIEPI.ALFIBFMMPAG
{
	// Fields
	public const PKPELCNIEPI.ALFIBFMMPAG Inactive = 0;
	public const PKPELCNIEPI.ALFIBFMMPAG MoveToPoint = 1;
	public const PKPELCNIEPI.ALFIBFMMPAG TurnToCenter = 2;
	public const PKPELCNIEPI.ALFIBFMMPAG DoAction = 3;
	public const PKPELCNIEPI.ALFIBFMMPAG Interrupted = 4;
}
public enum HPIFGKOFOBG.HLFNGOOJHDP
{
	// Fields
	public const HPIFGKOFOBG.HLFNGOOJHDP Inactive = 0;
	public const HPIFGKOFOBG.HLFNGOOJHDP ReturnToBorn = 1;
	public const HPIFGKOFOBG.HLFNGOOJHDP Fading = 2;
	public const HPIFGKOFOBG.HLFNGOOJHDP Teleported = 3;
	public const HPIFGKOFOBG.HLFNGOOJHDP Perform = 4;
	public const HPIFGKOFOBG.HLFNGOOJHDP PerformAfterReturn = 5;
}
public enum HPIFGKOFOBG.ACLGCCCNPNK
{
	// Fields
	public const HPIFGKOFOBG.ACLGCCCNPNK Loose = 0;
	public const HPIFGKOFOBG.ACLGCCCNPNK Exact = 1;
}
public enum HPIFGKOFOBG.BLGIODDLGAO
{
	// Fields
	public const HPIFGKOFOBG.BLGIODDLGAO Normal = 0;
	public const HPIFGKOFOBG.BLGIODDLGAO Fadeout = 1;
	public const HPIFGKOFOBG.BLGIODDLGAO Perform = 2;
}
public enum EKDKHKGGBAN.NKPIGJLHNNB
{
	// Fields
	public const EKDKHKGGBAN.NKPIGJLHNNB Inactive = 0;
	public const EKDKHKGGBAN.NKPIGJLHNNB CreateTask = 1;
	public const EKDKHKGGBAN.NKPIGJLHNNB Moving = 2;
	public const EKDKHKGGBAN.NKPIGJLHNNB Fading = 3;
	public const EKDKHKGGBAN.NKPIGJLHNNB Fadout = 4;
}
public enum EKDKHKGGBAN.GIDMAJLPEHC
{
	// Fields
	public const EKDKHKGGBAN.GIDMAJLPEHC Set = 0;
	public const EKDKHKGGBAN.GIDMAJLPEHC Pause = 1;
	public const EKDKHKGGBAN.GIDMAJLPEHC Resume = 2;
}
public enum EKDKHKGGBAN.EGKEDOIJMAJ
{
	// Fields
	public const EKDKHKGGBAN.EGKEDOIJMAJ MiddlePoint = 0;
	public const EKDKHKGGBAN.EGKEDOIJMAJ FinalPoint = 1;
}
public enum HLADDNGDPLD.HKCCCPIOGBG
{
	// Fields
	public const HLADDNGDPLD.HKCCCPIOGBG BinInfo = 0;
	public const HLADDNGDPLD.HKCCCPIOGBG JsonConfig = 1;
	public const HLADDNGDPLD.HKCCCPIOGBG Count = 2;
}
public enum JEPAOIHMDKO.JIJNDONECHO
{
	// Fields
	public const JEPAOIHMDKO.JIJNDONECHO Unloaded = 0;
	public const JEPAOIHMDKO.JIJNDONECHO Loading = 1;
	public const JEPAOIHMDKO.JIJNDONECHO Loaded = 2;
	public const JEPAOIHMDKO.JIJNDONECHO Unloading = 3;
}
public enum JEPAOIHMDKO.EPBIOKLJMLK
{
	// Fields
	public const JEPAOIHMDKO.EPBIOKLJMLK DontKnow = 0;
	public const JEPAOIHMDKO.EPBIOKLJMLK True = 1;
	public const JEPAOIHMDKO.EPBIOKLJMLK False = 2;
}
public enum FHMPDJPDJIN.LHJKJGBADMH
{
	// Fields
	public const FHMPDJPDJIN.LHJKJGBADMH Load = 0;
	public const FHMPDJPDJIN.LHJKJGBADMH Loaded = 1;
	public const FHMPDJPDJIN.LHJKJGBADMH UnLoad = 2;
}
public enum JJEKMCBBHOE.JNBBDODGGFP
{
	// Fields
	public const JJEKMCBBHOE.JNBBDODGGFP None = 0;
	public const JJEKMCBBHOE.JNBBDODGGFP Loaded = 1;
	public const JJEKMCBBHOE.JNBBDODGGFP AsyncLoading = 2;
	public const JJEKMCBBHOE.JNBBDODGGFP Hibernate = 3;
	public const JJEKMCBBHOE.JNBBDODGGFP Cleared = 4;
	public const JJEKMCBBHOE.JNBBDODGGFP Unloaded = 5;
}
public enum JJEKMCBBHOE.FNLPKAEDJKM
{
	// Fields
	public const JJEKMCBBHOE.FNLPKAEDJKM None = 0;
	public const JJEKMCBBHOE.FNLPKAEDJKM LOD = 1;
	public const JJEKMCBBHOE.FNLPKAEDJKM HLOD = 2;
}
public enum JJEKMCBBHOE.EONGOMFEODK
{
	// Fields
	public const JJEKMCBBHOE.EONGOMFEODK Unloaded = 0;
	public const JJEKMCBBHOE.EONGOMFEODK Loaded = 1;
}
public enum EEGHNLIELCL.MMDFKLBICEM
{
	// Fields
	public const EEGHNLIELCL.MMDFKLBICEM Unload = 0;
	public const EEGHNLIELCL.MMDFKLBICEM Init = 1;
	public const EEGHNLIELCL.MMDFKLBICEM Loading = 2;
	public const EEGHNLIELCL.MMDFKLBICEM Loaded = 3;
}
public enum ECMIOFMOPNB.HIKKEEKOHBG
{
	// Fields
	public const ECMIOFMOPNB.HIKKEEKOHBG EARS_None = 0;
	public const ECMIOFMOPNB.HIKKEEKOHBG EARS_RequestLoad = 1;
	public const ECMIOFMOPNB.HIKKEEKOHBG EARS_Loading = 2;
	public const ECMIOFMOPNB.HIKKEEKOHBG EARS_Loaded = 3;
	public const ECMIOFMOPNB.HIKKEEKOHBG EARS_RequestUnload = 4;
	public const ECMIOFMOPNB.HIKKEEKOHBG EARS_Unloaded = 5;
	public const ECMIOFMOPNB.HIKKEEKOHBG EARS_Recycled = 6;
}
public enum KNICBMOHDIN.DLCHGPPMMDD
{
	// Fields
	public const KNICBMOHDIN.DLCHGPPMMDD Unload = 0;
	public const KNICBMOHDIN.DLCHGPPMMDD Unloading = 1;
	public const KNICBMOHDIN.DLCHGPPMMDD Init = 2;
	public const KNICBMOHDIN.DLCHGPPMMDD Loading = 3;
	public const KNICBMOHDIN.DLCHGPPMMDD Loaded = 4;
}
public enum AKDDCCMFAMF.ANIPAFEFBAC
{
	// Fields
	public const AKDDCCMFAMF.ANIPAFEFBAC None = 0;
	public const AKDDCCMFAMF.ANIPAFEFBAC Loading = 1;
	public const AKDDCCMFAMF.ANIPAFEFBAC Loaded = 2;
	public const AKDDCCMFAMF.ANIPAFEFBAC Unloading = 3;
}
public enum AKDDCCMFAMF.FFFIKCKGOAH
{
	// Fields
	public const AKDDCCMFAMF.FFFIKCKGOAH Active = 0;
	public const AKDDCCMFAMF.FFFIKCKGOAH Activing = 1;
}
public enum AKDDCCMFAMF.DDMAHBMGMOB
{
	// Fields
	public const AKDDCCMFAMF.DDMAHBMGMOB None = 0;
	public const AKDDCCMFAMF.DDMAHBMGMOB Terrain = 1;
	public const AKDDCCMFAMF.DDMAHBMGMOB LOD = 2;
	public const AKDDCCMFAMF.DDMAHBMGMOB VO = 3;
	public const AKDDCCMFAMF.DDMAHBMGMOB Other = 4;
}
public enum LJFFDOJAHAH.KJKHNCDLOBC
{
	// Fields
	public const LJFFDOJAHAH.KJKHNCDLOBC Unload = 0;
	public const LJFFDOJAHAH.KJKHNCDLOBC Init = 1;
	public const LJFFDOJAHAH.KJKHNCDLOBC Loading = 2;
	public const LJFFDOJAHAH.KJKHNCDLOBC Loaded = 3;
}
public enum PCIKJPEMCPK.KOLAPEJJINI
{
	// Fields
	public const PCIKJPEMCPK.KOLAPEJJINI Default = 0;
	public const PCIKJPEMCPK.KOLAPEJJINI Cache = 1;
	public const PCIKJPEMCPK.KOLAPEJJINI Unload = 2;
	public const PCIKJPEMCPK.KOLAPEJJINI Init = 3;
	public const PCIKJPEMCPK.KOLAPEJJINI Iter = 4;
	public const PCIKJPEMCPK.KOLAPEJJINI Editor = 5;
	public const PCIKJPEMCPK.KOLAPEJJINI Preload = 6;
	public const PCIKJPEMCPK.KOLAPEJJINI Count = 7;
}
public enum PCIKJPEMCPK.FJNMIJGIAAO
{
	// Fields
	public const PCIKJPEMCPK.FJNMIJGIAAO Volume = 0;
	public const PCIKJPEMCPK.FJNMIJGIAAO Normal = 1;
	public const PCIKJPEMCPK.FJNMIJGIAAO City = 2;
	public const PCIKJPEMCPK.FJNMIJGIAAO Collider = 3;
	public const PCIKJPEMCPK.FJNMIJGIAAO Fog = 4;
	public const PCIKJPEMCPK.FJNMIJGIAAO Navmesh = 5;
	public const PCIKJPEMCPK.FJNMIJGIAAO Water = 6;
	public const PCIKJPEMCPK.FJNMIJGIAAO HeightGrass = 7;
	public const PCIKJPEMCPK.FJNMIJGIAAO Count = 8;
}
public enum PCIKJPEMCPK.AFHJHHIIJED
{
	// Fields
	public const PCIKJPEMCPK.AFHJHHIIJED Loading = 0;
	public const PCIKJPEMCPK.AFHJHHIIJED Finish = 1;
}
public enum PCIKJPEMCPK.EIDNNCPPJIC
{
	// Fields
	public const PCIKJPEMCPK.EIDNNCPPJIC Sector = 0;
	public const PCIKJPEMCPK.EIDNNCPPJIC Layer = 1;
	public const PCIKJPEMCPK.EIDNNCPPJIC NearObject = 2;
	public const PCIKJPEMCPK.EIDNNCPPJIC MiddleObject = 3;
	public const PCIKJPEMCPK.EIDNNCPPJIC FarObject = 4;
	public const PCIKJPEMCPK.EIDNNCPPJIC Count = 5;
}
public enum PCIKJPEMCPK.FABMDICMFFI
{
	// Fields
	public const PCIKJPEMCPK.FABMDICMFFI Cutscene = 0;
	public const PCIKJPEMCPK.FABMDICMFFI Enviro = 1;
	public const PCIKJPEMCPK.FABMDICMFFI Clock = 2;
	public const PCIKJPEMCPK.FABMDICMFFI Count = 3;
}
public enum PCIKJPEMCPK.KNMPPBFOJJH
{
	// Fields
	public const PCIKJPEMCPK.KNMPPBFOJJH Sector = 0;
	public const PCIKJPEMCPK.KNMPPBFOJJH Group = 1;
	public const PCIKJPEMCPK.KNMPPBFOJJH Layer = 2;
}
public enum PCIKJPEMCPK.JILELBKFELE
{
	// Fields
	public const PCIKJPEMCPK.JILELBKFELE Volume = 0;
	public const PCIKJPEMCPK.JILELBKFELE Weather = 1;
	public const PCIKJPEMCPK.JILELBKFELE ESP = 2;
	public const PCIKJPEMCPK.JILELBKFELE Region = 3;
	public const PCIKJPEMCPK.JILELBKFELE Default = 4;
	public const PCIKJPEMCPK.JILELBKFELE Count = 5;
}
public enum PCIKJPEMCPK.LDADHJOAJNF
{
	// Fields
	public const PCIKJPEMCPK.LDADHJOAJNF COLLIDER = 0;
	public const PCIKJPEMCPK.LDADHJOAJNF SECTR_LOD = 1;
	public const PCIKJPEMCPK.LDADHJOAJNF LAYER_LOD = 2;
	public const PCIKJPEMCPK.LDADHJOAJNF OBJ_LOD = 3;
	public const PCIKJPEMCPK.LDADHJOAJNF COUNT = 4;
}
public enum ENMJFLNFEMP.BFLJDJEODJN
{
	// Fields
	public const ENMJFLNFEMP.BFLJDJEODJN None = 0;
	public const ENMJFLNFEMP.BFLJDJEODJN WaitingLoading = 1;
	public const ENMJFLNFEMP.BFLJDJEODJN Loading = 2;
	public const ENMJFLNFEMP.BFLJDJEODJN Loaded = 3;
}
public enum EFGOHJIMGMB.BEGJMJHHLJL
{
	// Fields
	public const EFGOHJIMGMB.BEGJMJHHLJL Invalid = 0;
	public const EFGOHJIMGMB.BEGJMJHHLJL LOD = 1;
	public const EFGOHJIMGMB.BEGJMJHHLJL Collider = 2;
	public const EFGOHJIMGMB.BEGJMJHHLJL Split = 3;
	public const EFGOHJIMGMB.BEGJMJHHLJL Main = 4;
}
public enum EFGOHJIMGMB.FPCHHEHBMIA
{
	// Fields
	public const EFGOHJIMGMB.FPCHHEHBMIA ReleaseSceneProp = 0;
	public const EFGOHJIMGMB.FPCHHEHBMIA LoadObject = 1;
	public const EFGOHJIMGMB.FPCHHEHBMIA LoadByte = 2;
	public const EFGOHJIMGMB.FPCHHEHBMIA VirtualObj = 3;
	public const EFGOHJIMGMB.FPCHHEHBMIA UnloadObj = 4;
	public const EFGOHJIMGMB.FPCHHEHBMIA MainThreadCB = 5;
	public const EFGOHJIMGMB.FPCHHEHBMIA DelayAction = 6;
	public const EFGOHJIMGMB.FPCHHEHBMIA VolumeObject = 7;
	public const EFGOHJIMGMB.FPCHHEHBMIA VolumeRefresh = 8;
	public const EFGOHJIMGMB.FPCHHEHBMIA ConditionAction = 9;
	public const EFGOHJIMGMB.FPCHHEHBMIA SetShadowVisibility = 10;
}
public enum GFFJDPHHMFH.MLAOKBLNGOH
{
	// Fields
	public const GFFJDPHHMFH.MLAOKBLNGOH Idle = 0;
	public const GFFJDPHHMFH.MLAOKBLNGOH Move = 1;
	public const GFFJDPHHMFH.MLAOKBLNGOH QueryingBigTurn = 2;
	public const GFFJDPHHMFH.MLAOKBLNGOH BigTurn = 3;
}
public enum KDGDCCDPPAH.FADGAJNGCDH
{
	// Fields
	public const KDGDCCDPPAH.FADGAJNGCDH Chasing = 0;
	public const KDGDCCDPPAH.FADGAJNGCDH Idle = 1;
	public const KDGDCCDPPAH.FADGAJNGCDH Inactive = 2;
}
public enum FLEEDJKMHDA.HAPEEGEENFH
{
	// Fields
	public const FLEEDJKMHDA.HAPEEGEENFH Inactive = 0;
	public const FLEEDJKMHDA.HAPEEGEENFH Probing = 1;
}
public enum HMDNHFIBLFB.MDIDLCJKGEM
{
	// Fields
	public const HMDNHFIBLFB.MDIDLCJKGEM Idle = 0;
	public const HMDNHFIBLFB.MDIDLCJKGEM Moving = 1;
	public const HMDNHFIBLFB.MDIDLCJKGEM QueryingTurn = 2;
	public const HMDNHFIBLFB.MDIDLCJKGEM Turning = 3;
}
public enum HMDNHFIBLFB.ELDANLKBKFG
{
	// Fields
	public const HMDNHFIBLFB.ELDANLKBKFG Undefined = 0;
	public const HMDNHFIBLFB.ELDANLKBKFG InCone = 1;
	public const HMDNHFIBLFB.ELDANLKBKFG Left = 2;
	public const HMDNHFIBLFB.ELDANLKBKFG Right = 3;
}
public enum LJJLBIKKNJO.OOILMMCCFAA
{
	// Fields
	public const LJJLBIKKNJO.OOILMMCCFAA Idle = 0;
	public const LJJLBIKKNJO.OOILMMCCFAA Move = 1;
	public const LJJLBIKKNJO.OOILMMCCFAA QueryingBigTurn = 2;
	public const LJJLBIKKNJO.OOILMMCCFAA BigTurn = 3;
}
public enum EEKHMKKIIBE.BJBHJIKFMMH
{
	// Fields
	public const EEKHMKKIIBE.BJBHJIKFMMH Inactive = 0;
	public const EEKHMKKIIBE.BJBHJIKFMMH Wandering = 1;
}
public enum ShaderProperty_General.PFKKJDHFFFF
{
	// Fields
	public const ShaderProperty_General.PFKKJDHFFFF float = 0;
	public const ShaderProperty_General.PFKKJDHFFFF color = 1;
	public const ShaderProperty_General.PFKKJDHFFFF vector = 2;
	public const ShaderProperty_General.PFKKJDHFFFF int = 3;
	public const ShaderProperty_General.PFKKJDHFFFF range = 4;
	public const ShaderProperty_General.PFKKJDHFFFF texture = 5;
}
public enum LCBJANALMOC
{
	// Fields
	public const LCBJANALMOC Invalid = -1;
	public const LCBJANALMOC BeforeAnimation = 0;
	public const LCBJANALMOC LoopAnimation = 1;
	public const LCBJANALMOC AfterAnimation = 2;
	public const LCBJANALMOC Finished = 3;
}
public enum IHPPJOLNIJF.AKEOEECENJB
{
	// Fields
	public const IHPPJOLNIJF.AKEOEECENJB Default = 0;
	public const IHPPJOLNIJF.AKEOEECENJB Talk = 1;
	public const IHPPJOLNIJF.AKEOEECENJB Count = 2;
}
public enum KKBKEPGCLCA
{
	// Fields
	public const KKBKEPGCLCA None = 0;
	public const KKBKEPGCLCA CustomBound = 1;
	public const KKBKEPGCLCA CustomCollider = 2;
}
public enum NOLIKFJMIAD
{
	// Fields
	public const NOLIKFJMIAD None = 0;
	public const NOLIKFJMIAD X = 1;
	public const NOLIKFJMIAD NegX = 2;
	public const NOLIKFJMIAD Y = 3;
	public const NOLIKFJMIAD NegY = 4;
	public const NOLIKFJMIAD Z = 5;
	public const NOLIKFJMIAD NegZ = 6;
}
public enum ALHNOAHDLDP
{
	// Fields
	public const ALHNOAHDLDP InvalidTarget = 0;
	public const ALHNOAHDLDP PointTarget = 1;
	public const ALHNOAHDLDP EntityTarget = 2;
}
public enum FDOGIIONEOB
{
	// Fields
	public const FDOGIIONEOB Invalid = 0;
	public const FDOGIIONEOB Failed = 1;
	public const FDOGIIONEOB Success = 2;
}
public enum KIPIAKLFOJD
{
	// Fields
	public const KIPIAKLFOJD Threat = 0;
	public const KIPIAKLFOJD Buddy = 1;
}
public enum APNJDHHBAFJ
{
	// Fields
	public const APNJDHHBAFJ InvalidTactic = 0;
	public const APNJDHHBAFJ OnAware = 1;
	public const APNJDHHBAFJ Idle = 2;
	public const APNJDHHBAFJ FreeSkill = 3;
	public const APNJDHHBAFJ Wander = 4;
	public const APNJDHHBAFJ FollowScriptedPath = 5;
	public const APNJDHHBAFJ Investigate = 6;
	public const APNJDHHBAFJ ReturnToBornPos = 7;
	public const APNJDHHBAFJ ReactActionPoint = 8;
	public const APNJDHHBAFJ PatrolFollow = 9;
	public const APNJDHHBAFJ FollowServerRoute = 10;
	public const APNJDHHBAFJ MoveToSpecialAlertTarget = 11;
	public const APNJDHHBAFJ ParallelTo = 12;
	public const APNJDHHBAFJ MoveToTargetPoint = 13;
	public const APNJDHHBAFJ OnAlert = 100;
	public const APNJDHHBAFJ CombatIdle = 101;
	public const APNJDHHBAFJ CombatSkillPrepare = 102;
	public const APNJDHHBAFJ CombatSkill = 103;
	public const APNJDHHBAFJ MeleeCharge = 104;
	public const APNJDHHBAFJ FacingMove = 105;
	public const APNJDHHBAFJ Surround = 106;
	public const APNJDHHBAFJ FindBack = 107;
	public const APNJDHHBAFJ CombatFixedMove = 108;
	public const APNJDHHBAFJ CrabMove = 109;
	public const APNJDHHBAFJ BuddySkill = 110;
	public const APNJDHHBAFJ CombatFollowMove = 111;
	public const APNJDHHBAFJ SpacialFacingMove = 112;
	public const APNJDHHBAFJ GroupSurround = 113;
	public const APNJDHHBAFJ Aiding = 114;
	public const APNJDHHBAFJ ActionPointMeleeCharge = 115;
	public const APNJDHHBAFJ SpacialChase = 200;
	public const APNJDHHBAFJ SpacialProbe = 201;
	public const APNJDHHBAFJ SpacialAdjust = 202;
	public const APNJDHHBAFJ SpacialWander = 203;
	public const APNJDHHBAFJ ScriptedMoveTo = 300;
	public const APNJDHHBAFJ Landing = 301;
	public const APNJDHHBAFJ Extraction = 302;
	public const APNJDHHBAFJ Flee = 303;
	public const APNJDHHBAFJ OnNerve = 305;
	public const APNJDHHBAFJ BirdCircling = 306;
	public const APNJDHHBAFJ FleeOnBlockAvatarLanding = 307;
	public const APNJDHHBAFJ DirectMoveTo = 308;
	public const APNJDHHBAFJ AutoPlayerFollowTarget = 400;
	public const APNJDHHBAFJ BrownianMotion = 500;
	public const APNJDHHBAFJ FishingBitesBait = 600;
	public const APNJDHHBAFJ FishingPretendBites = 601;
	public const APNJDHHBAFJ FishingFlee = 602;
	public const APNJDHHBAFJ Max = 1024;
}
public enum HAGDILLKEID
{
	// Fields
	public const HAGDILLKEID Invalid = 0;
	public const HAGDILLKEID None = 1;
	public const HAGDILLKEID GoTo = 2;
	public const HAGDILLKEID Attack = 3;
	public const HAGDILLKEID SkillStart = 4;
	public const HAGDILLKEID SkillEnd = 5;
}
public enum FJMCPIFNFDL
{
	// Fields
	public const FJMCPIFNFDL Idle = 0;
	public const FJMCPIFNFDL Walk = 1;
	public const FJMCPIFNFDL Run = 2;
	public const FJMCPIFNFDL Sprint = 5;
}
public enum CMOKNEGNKGI
{
	// Fields
	public const CMOKNEGNKGI AISound_Broadcast = 0;
	public const CMOKNEGNKGI AISound_Attraction = 1;
}
public enum BKIEAOKDJDI
{
	// Fields
	public const BKIEAOKDJDI LOD0 = 0;
	public const BKIEAOKDJDI LOD1 = 1;
	public const BKIEAOKDJDI LOD2 = 2;
}
public enum EBNOHIFHKAD
{
	// Fields
	public const EBNOHIFHKAD Hostile = 0;
	public const EBNOHIFHKAD Neutral = 1;
	public const EBNOHIFHKAD Friendly = 2;
}
public enum OALEILCHMON
{
	// Fields
	public const OALEILCHMON NoActDecision = 0;
	public const OALEILCHMON OnAware = 1;
	public const OALEILCHMON OnAlert = 2;
	public const OALEILCHMON OnNerve = 3;
	public const OALEILCHMON FreeSkill = 4;
	public const OALEILCHMON ActionPointSkill = 5;
	public const OALEILCHMON CombatSkill = 6;
	public const OALEILCHMON CombatSkillPrepare = 7;
	public const OALEILCHMON Aiming = 8;
	public const OALEILCHMON FixedMovePointSkill = 9;
	public const OALEILCHMON BuddySkill = 10;
}
public enum EFMDPNJHJOP
{
	// Fields
	public const EFMDPNJHJOP NoMoveDecision = 0;
	public const EFMDPNJHJOP StandStill = 1;
	public const EFMDPNJHJOP ReturnToBorn = 2;
	public const EFMDPNJHJOP Wander = 3;
	public const EFMDPNJHJOP FollowScriptedPath = 4;
	public const EFMDPNJHJOP Investigate = 5;
	public const EFMDPNJHJOP ReactActionPoint = 6;
	public const EFMDPNJHJOP PatrolFollow = 7;
	public const EFMDPNJHJOP FollowServerRoute = 8;
	public const EFMDPNJHJOP MoveToSpecialAlertTarget = 9;
	public const EFMDPNJHJOP ParallelTo = 10;
	public const EFMDPNJHJOP SkillPrepare = 11;
	public const EFMDPNJHJOP MeleeCharge = 12;
	public const EFMDPNJHJOP CombatFollowMove = 13;
	public const EFMDPNJHJOP FacingMove = 14;
	public const EFMDPNJHJOP Surround = 15;
	public const EFMDPNJHJOP GroupSurround = 16;
	public const EFMDPNJHJOP FindBack = 17;
	public const EFMDPNJHJOP CombatFixedMove = 18;
	public const EFMDPNJHJOP CrabMove = 19;
	public const EFMDPNJHJOP BezierMove = 20;
	public const EFMDPNJHJOP SpacialFacingMove = 21;
	public const EFMDPNJHJOP Aiding = 22;
	public const EFMDPNJHJOP ActionPointMeleeCharge = 23;
	public const EFMDPNJHJOP SpacialChase = 24;
	public const EFMDPNJHJOP SpacialProbe = 25;
	public const EFMDPNJHJOP SpacialAdjust = 26;
	public const EFMDPNJHJOP SpacialWander = 27;
	public const EFMDPNJHJOP ScriptedMoveTo = 28;
	public const EFMDPNJHJOP Landing = 29;
	public const EFMDPNJHJOP Extraction = 30;
	public const EFMDPNJHJOP Flee = 31;
	public const EFMDPNJHJOP FleeOnBlockAvatarLanding = 32;
	public const EFMDPNJHJOP BirdCircling = 33;
	public const EFMDPNJHJOP DirectMoveTo = 34;
	public const EFMDPNJHJOP MoveToTargetPoint = 35;
	public const EFMDPNJHJOP AutoPlayerSkillPrepare = 36;
	public const EFMDPNJHJOP AutoPlayerFollowTarget = 37;
	public const EFMDPNJHJOP BrownianMove = 38;
	public const EFMDPNJHJOP FishingBitesBait = 39;
	public const EFMDPNJHJOP FishingPretendBites = 40;
	public const EFMDPNJHJOP FishingFlee = 41;
	public const EFMDPNJHJOP MoveDecisionCount = 42;
}
public enum IBBMJLGPPMA
{
	// Fields
	public const IBBMJLGPPMA Inactive = 0;
	public const IBBMJLGPPMA Preparing = 1;
	public const IBBMJLGPPMA Prepared = 2;
	public const IBBMJLGPPMA Querying = 3;
	public const IBBMJLGPPMA Playing = 4;
}
public enum BJDNBNMENMH
{
	// Fields
	public const BJDNBNMENMH Impulse = 0;
	public const BJDNBNMENMH Status = 1;
}
public enum AKIHMFDCFOA
{
	// Fields
	public const AKIHMFDCFOA L1 = 0;
	public const AKIHMFDCFOA L2 = 1;
	public const AKIHMFDCFOA L3 = 2;
}
public enum LDGBLAHFHFM
{
	// Fields
	public const LDGBLAHFHFM Unaware = 0;
	public const LDGBLAHFHFM Aware = 1;
	public const LDGBLAHFHFM Alert = 2;
	public const LDGBLAHFHFM ForceAlert = 3;
}
public enum COHNFCBEHDG
{
	// Fields
	public const COHNFCBEHDG NoReason = 0;
	public const COHNFCBEHDG Vision = 1;
	public const COHNFCBEHDG SensingArea = 2;
	public const COHNFCBEHDG Feel = 3;
	public const COHNFCBEHDG Footstep = 4;
	public const COHNFCBEHDG Hit = 5;
	public const COHNFCBEHDG Taunt = 6;
	public const COHNFCBEHDG Broadcast = 7;
	public const COHNFCBEHDG AISoundEvent = 8;
	public const COHNFCBEHDG LevelEvent = 9;
	public const COHNFCBEHDG NerveTarget = 10;
	public const COHNFCBEHDG SpecialAlert = 11;
	public const COHNFCBEHDG ByChildren = 12;
	public const COHNFCBEHDG BySummon = 13;
	public const COHNFCBEHDG ManualCommand = 14;
}
public enum GMAJDFJKFLC
{
	// Fields
	public const GMAJDFJKFLC Self = 0;
	public const GMAJDFJKFLC EntityInvalid = 1;
	public const GMAJDFJKFLC EntityDisappear = 2;
	public const GMAJDFJKFLC EntityFar = 3;
	public const GMAJDFJKFLC EntityFarOutDefindArea = 4;
	public const GMAJDFJKFLC LostPath = 5;
	public const GMAJDFJKFLC OutOfZone = 6;
	public const GMAJDFJKFLC PathFinding = 7;
	public const GMAJDFJKFLC Force = 8;
	public const GMAJDFJKFLC VehicleNoAvatar = 9;
	public const GMAJDFJKFLC ClearHatredSGV = 10;
	public const GMAJDFJKFLC ChangeAvatar = 11;
	public const GMAJDFJKFLC ChangeAvatarCandidate = 12;
	public const GMAJDFJKFLC ForceLeaveCombat = 13;
}
public enum JKPCDKIPDDJ.NJFNLBHOMOB
{
	// Fields
	public const JKPCDKIPDDJ.NJFNLBHOMOB General = 0;
	public const JKPCDKIPDDJ.NJFNLBHOMOB AlertnessBroadcast = 1;
}
public enum NCDCCKBIHPM.GKGGOLKCMOP
{
	// Fields
	public const NCDCCKBIHPM.GKGGOLKCMOP GroupId = 0;
	public const NCDCCKBIHPM.GKGGOLKCMOP AIGroupId = 1;
}
public enum OEOFBFKLIMN.DIPPDJKBENK
{
	// Fields
	public const OEOFBFKLIMN.DIPPDJKBENK AI_MAIN = 0;
	public const OEOFBFKLIMN.DIPPDJKBENK SENSING = 1;
	public const OEOFBFKLIMN.DIPPDJKBENK THREAT = 2;
	public const OEOFBFKLIMN.DIPPDJKBENK ORDER = 3;
	public const OEOFBFKLIMN.DIPPDJKBENK PRECOMBAT = 4;
	public const OEOFBFKLIMN.DIPPDJKBENK EQUIP = 5;
	public const OEOFBFKLIMN.DIPPDJKBENK AREA = 6;
	public const OEOFBFKLIMN.DIPPDJKBENK PATHFINDING = 7;
	public const OEOFBFKLIMN.DIPPDJKBENK AVOIDANCE = 8;
	public const OEOFBFKLIMN.DIPPDJKBENK BUDDY = 9;
	public const OEOFBFKLIMN.DIPPDJKBENK MIXIN = 10;
	public const OEOFBFKLIMN.DIPPDJKBENK POSE_CONTROL = 11;
}
public enum OEOFBFKLIMN.EDOFLLPGGGE
{
	// Fields
	public const OEOFBFKLIMN.EDOFLLPGGGE AIMANAGER_COMBAT_INFO = 0;
	public const OEOFBFKLIMN.EDOFLLPGGGE AIMANAGER_LEVEL_INFO = 1;
	public const OEOFBFKLIMN.EDOFLLPGGGE AIMANAGER_MELEESLOT_INFO = 2;
	public const OEOFBFKLIMN.EDOFLLPGGGE AIMANAGER_PATHFOLLOW_AVOIDANCE = 3;
	public const OEOFBFKLIMN.EDOFLLPGGGE UI_INDICATOR_VISIBILITY_CHECK = 4;
	public const OEOFBFKLIMN.EDOFLLPGGGE UI_INDICATOR_THREATLIST_UPDATE = 5;
}
public enum OCELAHMLOIB
{
	// Fields
	public const OCELAHMLOIB Running = 0;
	public const OCELAHMLOIB Interrupted = 1;
	public const OCELAHMLOIB Finished = 2;
}
public enum HCDANCHELCI.AHAJHKNJJBC.JACJKFIENGF
{
	// Fields
	public const HCDANCHELCI.AHAJHKNJJBC.JACJKFIENGF Auto = 0;
	public const HCDANCHELCI.AHAJHKNJJBC.JACJKFIENGF ForceUse = 1;
	public const HCDANCHELCI.AHAJHKNJJBC.JACJKFIENGF NotUse = 2;
}
public enum KMKDDJKOEBM.DOPCGJGEKBE
{
	// Fields
	public const KMKDDJKOEBM.DOPCGJGEKBE KeepMoving = 0;
	public const KMKDDJKOEBM.DOPCGJGEKBE Stop = 1;
	public const KMKDDJKOEBM.DOPCGJGEKBE StopOnlyByPathEnd = 2;
	public const KMKDDJKOEBM.DOPCGJGEKBE Teleport = 3;
}
public enum PNNMELHJGKF.BNJCDLDCLGB
{
	// Fields
	public const PNNMELHJGKF.BNJCDLDCLGB None = 0;
	public const PNNMELHJGKF.BNJCDLDCLGB Navmesh = 1;
	public const PNNMELHJGKF.BNJCDLDCLGB Spacial = 2;
}
public enum BGEDHCLKKDN
{
	// Fields
	public const BGEDHCLKKDN NONE = 0;
	public const BGEDHCLKKDN BAKING = 1;
	public const BGEDHCLKKDN READY = 2;
}
public enum HPJLDEBMKFH.CIJCEAIIFFC
{
	// Fields
	public const HPJLDEBMKFH.CIJCEAIIFFC NOTHING = 0;
	public const HPJLDEBMKFH.CIJCEAIIFFC WAITING = 1;
	public const HPJLDEBMKFH.CIJCEAIIFFC DONE = 2;
	public const HPJLDEBMKFH.CIJCEAIIFFC FAIL = 3;
}
public enum KHGECEOGLOJ.IAHFIEPCDAG
{
	// Fields
	public const KHGECEOGLOJ.IAHFIEPCDAG INVALID = -1;
	public const KHGECEOGLOJ.IAHFIEPCDAG SPHERE = 0;
	public const KHGECEOGLOJ.IAHFIEPCDAG BOX = 1;
}
public enum GJFACLEACNA.OFPNCCGFAFI
{
	// Fields
	public uint value__; // 0x10
	public const GJFACLEACNA.OFPNCCGFAFI None = 0;
	public const GJFACLEACNA.OFPNCCGFAFI OnlyShake = 1;
	public const GJFACLEACNA.OFPNCCGFAFI Break = 2;
}
public enum EOFLPMDEDGI
{
	// Fields
	public const EOFLPMDEDGI Local = 0;
	public const EOFLPMDEDGI IsForwarded = 1;
}
public enum ICABDNEEAMG
{
	// Fields
	public const ICABDNEEAMG None = 0;
	public const ICABDNEEAMG Active = 1;
	public const ICABDNEEAMG Deactive = 2;
}
public enum MoleMole.EventID
{
	// Fields
	public const MoleMole.EventID None = 0;
	public const MoleMole.EventID EvtAbilityAudio = 1;
	public const MoleMole.EventID EvtAbilityStart = 2;
	public const MoleMole.EventID EvtAbilityStartWithAditionalMessage = 3;
	public const MoleMole.EventID EvtAddShieldToLocalAvatar = 4;
	public const MoleMole.EventID EvtApplyModifier = 5;
	public const MoleMole.EventID EvtAttachment = 6;
	public const MoleMole.EventID EvtAttackLanded = 7;
	public const MoleMole.EventID EvtAudio = 8;
	public const MoleMole.EventID EvtAvatarBecomeThreat = 9;
	public const MoleMole.EventID EvtAvatarAppear = 10;
	public const MoleMole.EventID EvtAvatarChanged = 11;
	public const MoleMole.EventID EvtAvatarDieEnd = 12;
	public const MoleMole.EventID EvtAvatarEnterFocus = 13;
	public const MoleMole.EventID EvtAvatarEquipChanged = 14;
	public const MoleMole.EventID EvtAvatarExitFocus = 15;
	public const MoleMole.EventID EvtAvatarInBattle = 16;
	public const MoleMole.EventID EvtBeingHealed = 17;
	public const MoleMole.EventID EvtBeingHit = 18;
	public const MoleMole.EventID EvtBeingHitEnd = 19;
	public const MoleMole.EventID EvtBeingHitResult = 20;
	public const MoleMole.EventID EvtBillboard = 21;
	public const MoleMole.EventID EvtBuffAdd = 22;
	public const MoleMole.EventID EvtBuffRemove = 23;
	public const MoleMole.EventID EvtCameraFrameTransition = 24;
	public const MoleMole.EventID EvtCameraMove = 25;
	public const MoleMole.EventID EvtCameraMoveClear = 26;
	public const MoleMole.EventID EvtCameraSceneLook = 27;
	public const MoleMole.EventID EvtCameraFieldLook = 28;
	public const MoleMole.EventID EvtCameraAircraftParam = 29;
	public const MoleMole.EventID EvtPlayerDie = 30;
	public const MoleMole.EventID EvtChangeAvatar = 31;
	public const MoleMole.EventID EvtChangeProp = 32;
	public const MoleMole.EventID EvtCombatEnd = 33;
	public const MoleMole.EventID EvtCrash = 34;
	public const MoleMole.EventID EvtCreateGadgetToEquipPart = 35;
	public const MoleMole.EventID EvtCure = 36;
	public const MoleMole.EventID EvtBleeding = 37;
	public const MoleMole.EventID EvtCutsceneNotify = 38;
	public const MoleMole.EventID EvtDoSkillSucc = 39;
	public const MoleMole.EventID EvtForceUseSkillSucc = 40;
	public const MoleMole.EventID EvtEntityEffectChange = 41;
	public const MoleMole.EventID EvtElementReaction = 42;
	public const MoleMole.EventID EvtEntityEnterSurface = 43;
	public const MoleMole.EventID EvtEntityExitSurface = 44;
	public const MoleMole.EventID EvtEntityResetSurface = 45;
	public const MoleMole.EventID EvtEquipAttached = 46;
	public const MoleMole.EventID EvtEquipDestroy = 47;
	public const MoleMole.EventID EvtEquipDetached = 48;
	public const MoleMole.EventID EvtEquipModifierChanged = 49;
	public const MoleMole.EventID EvtFallOnGround = 50;
	public const MoleMole.EventID EvtFieldEnter = 51;
	public const MoleMole.EventID EvtFieldExit = 52;
	public const MoleMole.EventID EvtFightPropChangeReason = 53;
	public const MoleMole.EventID EvtFlag = 54;
	public const MoleMole.EventID EvtForceQuitStoryCamera = 55;
	public const MoleMole.EventID EvtGadgetState = 56;
	public const MoleMole.EventID EvtGadgetEnableInteract = 57;
	public const MoleMole.EventID EvtHeadControl = 58;
	public const MoleMole.EventID EvtHeal = 59;
	public const MoleMole.EventID EvtHittingOther = 60;
	public const MoleMole.EventID EvtBeHittingOhter = 61;
	public const MoleMole.EventID EvtHittingScene = 62;
	public const MoleMole.EventID EvtHPChange = 63;
	public const MoleMole.EventID EvtInteraction = 64;
	public const MoleMole.EventID EvtInterFree = 65;
	public const MoleMole.EventID EvtInterruptIntee = 66;
	public const MoleMole.EventID EvtKill = 67;
	public const MoleMole.EventID EvtMonsterTryDropEquip = 68;
	public const MoleMole.EventID EvtOpenChest = 69;
	public const MoleMole.EventID EvtPickupGadget = 70;
	public const MoleMole.EventID EvtPickupGadgetCallBack = 71;
	public const MoleMole.EventID EvtGatherGadget = 72;
	public const MoleMole.EventID EvtRemoveModifier = 73;
	public const MoleMole.EventID EvtRevive = 74;
	public const MoleMole.EventID EvtRutimeIDRetarget = 75;
	public const MoleMole.EventID EvtDoTileAction = 76;
	public const MoleMole.EventID EvtSceneAudioPostMIDIEvent = 77;
	public const MoleMole.EventID EvtSetCameraLockTime = 78;
	public const MoleMole.EventID EvtShoppingFinish = 79;
	public const MoleMole.EventID EvtSkillStart = 80;
	public const MoleMole.EventID EvtShareCDSkillStart = 81;
	public const MoleMole.EventID EvtCameraLock = 82;
	public const MoleMole.EventID EvtTeamChanged = 83;
	public const MoleMole.EventID EvtReserveTeamChanged = 84;
	public const MoleMole.EventID EvtThrowGadget = 85;
	public const MoleMole.EventID EvtTransmitAvatar = 86;
	public const MoleMole.EventID EvtTurnDirection = 87;
	public const MoleMole.EventID EvtUIBackBlur = 88;
	public const MoleMole.EventID EvtWorktopOption = 89;
	public const MoleMole.EventID EvtLoopStart = 90;
	public const MoleMole.EventID EvtInterFinish = 91;
	public const MoleMole.EventID EvtInterDialogFinish = 92;
	public const MoleMole.EventID EvtAttachAnimatorParam = 93;
	public const MoleMole.EventID EvtEntityDestroy = 94;
	public const MoleMole.EventID EvtEntityTimeScaleChange = 95;
	public const MoleMole.EventID EvtEntityOrLevelTimeScaleChange = 96;
	public const MoleMole.EventID EvtEntityGhostChange = 97;
	public const MoleMole.EventID EvtEntityActiveChange = 98;
	public const MoleMole.EventID EvtEntityAliveChange = 99;
	public const MoleMole.EventID EvtPlayStageChange = 100;
	public const MoleMole.EventID EvtPlayUidChange = 101;
	public const MoleMole.EventID EvtGlobalValueChange = 102;
	public const MoleMole.EventID EvtGlobalValueCreated = 103;
	public const MoleMole.EventID EvtGlobalValueClear = 104;
	public const MoleMole.EventID EvtServerGlobalValueChange = 105;
	public const MoleMole.EventID EvtAppearFromServer = 106;
	public const MoleMole.EventID EvtEntityReconnect = 107;
	public const MoleMole.EventID EvtEntityReconnectDispatch = 108;
	public const MoleMole.EventID EvtGrassFlammableChanged = 109;
	public const MoleMole.EventID EvtInteractFlowerTreeReward = 110;
	public const MoleMole.EventID EvtAbilityRefreshed = 111;
	public const MoleMole.EventID EvtAISoundBroadcast = 112;
	public const MoleMole.EventID EvtAISoundAttraction = 113;
	public const MoleMole.EventID EvtAISpecialAlertTargetBrocast = 114;
	public const MoleMole.EventID EvtAIDeadth = 115;
	public const MoleMole.EventID EvtBoundInCity = 116;
	public const MoleMole.EventID EvtEntityActive = 117;
	public const MoleMole.EventID EvtEntityCreated = 118;
	public const MoleMole.EventID EvtEntityReady = 119;
	public const MoleMole.EventID EvtEntityRemoved = 120;
	public const MoleMole.EventID EvtEntityResetPos = 121;
	public const MoleMole.EventID EvtEntitySynced = 122;
	public const MoleMole.EventID EvtInputChange = 123;
	public const MoleMole.EventID EvtMsgBoard = 124;
	public const MoleMole.EventID EvtMultiplayer = 125;
	public const MoleMole.EventID EvtPlatformChangeRoute = 126;
	public const MoleMole.EventID EvtPlatformStartRoute = 127;
	public const MoleMole.EventID EvtPlatformStopRoute = 128;
	public const MoleMole.EventID EvtRoomVisiable = 129;
	public const MoleMole.EventID EvtSceneCollider = 130;
	public const MoleMole.EventID EvtSceneRouteChange = 131;
	public const MoleMole.EventID EvtShowReminder = 132;
	public const MoleMole.EventID EvtInterruptReminder = 133;
	public const MoleMole.EventID EvtDropNextReminder = 134;
	public const MoleMole.EventID EvtTemplateReminder = 135;
	public const MoleMole.EventID EvtStageCreated = 136;
	public const MoleMole.EventID EvtStageDestroying = 137;
	public const MoleMole.EventID EvtStageProgress = 138;
	public const MoleMole.EventID EvtStageReady = 139;
	public const MoleMole.EventID EvtWillCreateStage = 140;
	public const MoleMole.EventID EvtQuestState = 141;
	public const MoleMole.EventID EvtWeatherChange = 142;
	public const MoleMole.EventID EvtThunder = 143;
	public const MoleMole.EventID EvtSkyThunder = 144;
	public const MoleMole.EventID EvtWindSeedNotify = 145;
	public const MoleMole.EventID EvtWindSeedMixinInfo = 146;
	public const MoleMole.EventID EvtTransportAvatar = 147;
	public const MoleMole.EventID EvtMonsterAppear = 148;
	public const MoleMole.EventID EvtShieldAdded = 149;
	public const MoleMole.EventID EvtCreateShield = 150;
	public const MoleMole.EventID EvtWatcherSysAction = 151;
	public const MoleMole.EventID EvtWatcherSysStageAction = 152;
	public const MoleMole.EventID EvtAreaLevelChange = 153;
	public const MoleMole.EventID EvtAnimatorStateChanged = 154;
	public const MoleMole.EventID EvtAnimatorTransitionFinish = 155;
	public const MoleMole.EventID EvtStateIDChanged = 156;
	public const MoleMole.EventID EvtEntityReadyPost = 157;
	public const MoleMole.EventID EvtGainCrystalSeed = 158;
	public const MoleMole.EventID EvtMovingWaterStop = 159;
	public const MoleMole.EventID EvtMovingWaterChangeState = 160;
	public const MoleMole.EventID EvtAnimatorStateChangedBeforeClear = 161;
	public const MoleMole.EventID EvtSkillDepotIdChanged = 162;
	public const MoleMole.EventID EvtEntityAnimeLoadFinishPost = 163;
	public const MoleMole.EventID EvtEntityAnimeReadyPost = 164;
	public const MoleMole.EventID EvtAvatarDownRayTrigger = 165;
	public const MoleMole.EventID EvtGadgetChainLevelChange = 166;
	public const MoleMole.EventID EvtSceneOwnerGadgetChainLevelChange = 167;
	public const MoleMole.EventID EvtGadgetChainInteracted = 168;
	public const MoleMole.EventID EvtVehicleInteract = 169;
	public const MoleMole.EventID EvtZoneInteract = 170;
	public const MoleMole.EventID EvtChangeFly = 171;
	public const MoleMole.EventID EvtElectricCoreMoveEnterP1 = 172;
	public const MoleMole.EventID EvtElectricCoreMoveInterrupt = 173;
	public const MoleMole.EventID EvtAvatarEnterViewBias = 174;
	public const MoleMole.EventID EvtAvatarExitViewBias = 175;
	public const MoleMole.EventID EvtWidgetActiveStateChange = 176;
	public const MoleMole.EventID EvtMultiplayersCountChanged = 177;
	public const MoleMole.EventID EvtWidgetExCDChange = 178;
	public const MoleMole.EventID EvtPlayerLevelUpdate = 179;
	public const MoleMole.EventID EvtNormalSceneTransPointUnlock = 180;
	public const MoleMole.EventID EvtFireworkStartCountDown = 181;
	public const MoleMole.EventID EvtInteractionBanSGVChange = 182;
	public const MoleMole.EventID EvtTalkStart = 183;
	public const MoleMole.EventID EvtLevelTagChange = 184;
	public const MoleMole.EventID EvtTriggerUGCGadgetMove = 185;
	public const MoleMole.EventID EvtUIInteract = 186;
	public const MoleMole.EventID EvtInteeTeleport = 187;
	public const MoleMole.EventID EvtBroadcastGV = 188;
	public const MoleMole.EventID EvtRequestSyncGV = 189;
	public const MoleMole.EventID EvtSkillReady = 190;
	public const MoleMole.EventID EvtGVTurnStart = 191;
	public const MoleMole.EventID EvtVehicleSkillChange = 192;
	public const MoleMole.EventID EvtOnLocalVehicle = 193;
	public const MoleMole.EventID EvtCutSceneHidingEffectStateChange = 194;
	public const MoleMole.EventID EvtAvatarInGrapplingHookArea = 195;
	public const MoleMole.EventID EvtGrapplingHookTargetChange = 196;
	public const MoleMole.EventID EvtGrapplingHookReachedPoint = 197;
	public const MoleMole.EventID EvtFootprintZone = 198;
	public const MoleMole.EventID EvtEffectLineHitEntity = 199;
	public const MoleMole.EventID EvtEffectLineHitReceiveEntity = 200;
	public const MoleMole.EventID EvtStatueTransPointUnlock = 201;
	public const MoleMole.EventID EvtTriggerCountCheck = 202;
	public const MoleMole.EventID EvtAttackChain = 203;
	public const MoleMole.EventID EvtPerformOperation = 204;
	public const MoleMole.EventID EvtBreakoutLaunchBall = 205;
	public const MoleMole.EventID EvtBreakoutAddActiveSkill = 206;
	public const MoleMole.EventID EvtFollowRouteStateChange = 207;
	public const MoleMole.EventID EvtLevelCurveArrive = 208;
	public const MoleMole.EventID EvtActEnter = 209;
	public const MoleMole.EventID EvtCount = 210;
}
public enum MGEPBEEKOGH.LGNJNEEHBCO.CFJJHGODLLO
{
	// Fields
	public const MGEPBEEKOGH.LGNJNEEHBCO.CFJJHGODLLO Variate = 0;
	public const MGEPBEEKOGH.LGNJNEEHBCO.CFJJHGODLLO Operator = 1;
	public const MGEPBEEKOGH.LGNJNEEHBCO.CFJJHGODLLO Value = 2;
}
public enum LOABLAKOLAH
{
	// Fields
	public const LOABLAKOLAH SUCCESS = 0;
	public const LOABLAKOLAH BRANCHED = 1;
	public const LOABLAKOLAH INTERRUPTED = 2;
	public const LOABLAKOLAH DECAYED = 3;
}
public enum AFNGMBIPHKF.PNIOKMBNEMJ
{
	// Fields
	public const AFNGMBIPHKF.PNIOKMBNEMJ INVALID = -1;
	public const AFNGMBIPHKF.PNIOKMBNEMJ EVENT = 0;
	public const AFNGMBIPHKF.PNIOKMBNEMJ BEING_HIT = 1;
	public const AFNGMBIPHKF.PNIOKMBNEMJ ABILITY_START = 2;
	public const AFNGMBIPHKF.PNIOKMBNEMJ MASSIVE_SYNC = 3;
}
public enum BLADPDPOIII
{
	// Fields
	public const BLADPDPOIII RegistAttack = 0;
	public const BLADPDPOIII UnRegistAttack = 1;
	public const BLADPDPOIII RegistAction = 2;
}
public enum JOKBDBHPBPP.PMNDEOJJPJE
{
	// Fields
	public const JOKBDBHPBPP.PMNDEOJJPJE BURNING = 0;
	public const JOKBDBHPBPP.PMNDEOJJPJE EXPLODE = 1;
	public const JOKBDBHPBPP.PMNDEOJJPJE SUPERCONDUCTOR = 2;
	public const JOKBDBHPBPP.PMNDEOJJPJE MELT = 3;
	public const JOKBDBHPBPP.PMNDEOJJPJE STEAM = 4;
	public const JOKBDBHPBPP.PMNDEOJJPJE FREEZE = 5;
	public const JOKBDBHPBPP.PMNDEOJJPJE FROZEN = 6;
	public const JOKBDBHPBPP.PMNDEOJJPJE ELECTRIC_ADD = 7;
	public const JOKBDBHPBPP.PMNDEOJJPJE VEHICLEMUTEICE = 8;
	public const JOKBDBHPBPP.PMNDEOJJPJE BASIC = 9;
	public const JOKBDBHPBPP.PMNDEOJJPJE COUNT = 10;
}
public enum LADDIBFMBGA
{
	// Fields
	public const LADDIBFMBGA INVALID = 0;
	public const LADDIBFMBGA MASSIVE_ELEMENT_GLOBAL_DURABILITY = 1;
	public const LADDIBFMBGA MASSIVE_ELEMENT_ELEMENT_REACTION = 2;
	public const LADDIBFMBGA COUNT = 3;
}
public enum MOMKBJLLDKC
{
	// Fields
	public const MOMKBJLLDKC INVALID = -1;
	public const MOMKBJLLDKC MOVE = 0;
	public const MOMKBJLLDKC MOVE_ROUTE = 1;
	public const MOMKBJLLDKC FREE_STYLE = 2;
	public const MOMKBJLLDKC FREE_STYLE_CANCEL_DEFAULT = 3;
	public const MOMKBJLLDKC FREE_STATE_TRIGGER = 4;
	public const MOMKBJLLDKC SIT_ON_CHAIR = 5;
	public const MOMKBJLLDKC STAND_FROM_CHAIR = 6;
	public const MOMKBJLLDKC NOTIFY = 7;
	public const MOMKBJLLDKC HIDE = 8;
	public const MOMKBJLLDKC DESTROY = 9;
	public const MOMKBJLLDKC ATTACH = 10;
	public const MOMKBJLLDKC LOOKAT = 11;
	public const MOMKBJLLDKC START_CALL = 12;
	public const MOMKBJLLDKC ADD_GENERAL_MARK = 13;
	public const MOMKBJLLDKC QUEST_MOVE_TASK = 14;
	public const MOMKBJLLDKC DISABLE_INTEE_HEADCTRL = 15;
	public const MOMKBJLLDKC QUEST_FORCE_AVATAR_WALK = 16;
	public const MOMKBJLLDKC QUEST_NARRATOR_TASK = 17;
	public const MOMKBJLLDKC QUEST_MOVE_PAUSE_TASK = 18;
	public const MOMKBJLLDKC WALK_SPEED = 19;
	public const MOMKBJLLDKC ATTACH_EFFECT = 20;
	public const MOMKBJLLDKC EMO_SYNC = 21;
	public const MOMKBJLLDKC CHANGE_NPC_MAT = 22;
	public const MOMKBJLLDKC NPC_FOLLOW_TASK = 23;
	public const MOMKBJLLDKC NPC_DYN_TO_GROUND = 24;
	public const MOMKBJLLDKC NPC_RUN_AWAY_TASK = 25;
	public const MOMKBJLLDKC CHECK_PLAYER_DIST_TASK = 26;
	public const MOMKBJLLDKC NPC_SHOW_WITH_LEVEL_TAG = 27;
	public const MOMKBJLLDKC FLOATING_WALK_SPEED = 28;
	public const MOMKBJLLDKC ATTACH_OPERATE = 29;
	public const MOMKBJLLDKC SET_FLOATING_HEIGHT = 30;
	public const MOMKBJLLDKC NPC_AVATAR_CHANGE_PENDANT_VISUAL = 31;
	public const MOMKBJLLDKC SET_DAILY_NPC_HOLD = 32;
	public const MOMKBJLLDKC SET_NPC_TITLE = 33;
	public const MOMKBJLLDKC SET_NPC_BILLBOARD_FORCE_SHOW = 34;
	public const MOMKBJLLDKC SET_NPC_ANIMATOR = 35;
	public const MOMKBJLLDKC ATTACH_QUEST_LOCAL_GADGET = 36;
	public const MOMKBJLLDKC SWITCH_EVENT_PATTERN = 37;
	public const MOMKBJLLDKC COUNT = 38;
}
public enum AIFHBNBCAJD
{
	// Fields
	public const AIFHBNBCAJD NONE = 0;
	public const AIFHBNBCAJD ALL = 1;
	public const AIFHBNBCAJD MOVE = 2;
	public const AIFHBNBCAJD FREESTYLE = 3;
	public const AIFHBNBCAJD COUNT = 4;
}
public enum OAMFNGKLIHD.LLDLGEIAKOL
{
	// Fields
	public const OAMFNGKLIHD.LLDLGEIAKOL INVALID = 0;
	public const OAMFNGKLIHD.LLDLGEIAKOL SET_VISIBLE = 1;
	public const OAMFNGKLIHD.LLDLGEIAKOL SET_ANIMATOR_INTEGER = 2;
	public const OAMFNGKLIHD.LLDLGEIAKOL SET_ANIMATOR_TRIGGER = 3;
}
public enum IHAFKHCBJAK.OAJNEOLMCCH
{
	// Fields
	public const IHAFKHCBJAK.OAJNEOLMCCH Invalid = -1;
	public const IHAFKHCBJAK.OAJNEOLMCCH ForceFinish = 0;
	public const IHAFKHCBJAK.OAJNEOLMCCH PlayEmo = 1;
	public const IHAFKHCBJAK.OAJNEOLMCCH CancelDefaultEmo = 2;
}
public enum CCHCDHJLOCA.IGGGANJILAD
{
	// Fields
	public const CCHCDHJLOCA.IGGGANJILAD Normal = 0;
	public const CCHCDHJLOCA.IGGGANJILAD NpPerform = 1;
	public const CCHCDHJLOCA.IGGGANJILAD Directly = 2;
}
public enum GHLPKLLFJIN.HPFHEBHMLNG
{
	// Fields
	public byte value__; // 0x10
	public const GHLPKLLFJIN.HPFHEBHMLNG At = 0;
	public const GHLPKLLFJIN.HPFHEBHMLNG Hold = 1;
	public const GHLPKLLFJIN.HPFHEBHMLNG UnHold = 2;
}
public enum LJPHOMIAHDE.MNDHIHAIDIC
{
	// Fields
	public const LJPHOMIAHDE.MNDHIHAIDIC INVALID = -1;
	public const LJPHOMIAHDE.MNDHIHAIDIC TALK = 0;
	public const LJPHOMIAHDE.MNDHIHAIDIC CONFIG = 1;
}
public enum BGKBJKNPLBA.JPLHIDLPLKF
{
	// Fields
	public const BGKBJKNPLBA.JPLHIDLPLKF Default = 0;
	public const BGKBJKNPLBA.JPLHIDLPLKF DelayTime = 1;
}
public enum ILDHKBJANDI
{
	// Fields
	public const ILDHKBJANDI None = 0;
	public const ILDHKBJANDI Protect = 1;
	public const ILDHKBJANDI NormalWidget = 2;
}
public enum KLPAIECOEOO
{
	// Fields
	public const KLPAIECOEOO Self = 0;
	public const KLPAIECOEOO Current = 1;
}
public enum AMLENMJGAOA
{
	// Fields
	public const AMLENMJGAOA NONE = 0;
	public const AMLENMJGAOA COUNTDOWN = 1;
	public const AMLENMJGAOA DATE = 2;
	public const AMLENMJGAOA DELAY_WEEK_COUNTDOWN = 3;
}
public enum COFEGLMPLBE
{
	// Fields
	public const COFEGLMPLBE Invalid = 0;
	public const COFEGLMPLBE UnLock = 1;
	public const COFEGLMPLBE Lock = 2;
}
public enum NNLDJECPPBF
{
	// Fields
	public const NNLDJECPPBF PlayerVars = 1;
	public const NNLDJECPPBF HomeWorld = 2;
	public const NNLDJECPPBF TrialAvatar = 3;
}
public enum BBBFMJFDGPJ
{
	// Fields
	public const BBBFMJFDGPJ GalleryForce = 0;
	public const BBBFMJFDGPJ GalleryPlaying = 1;
	public const BBBFMJFDGPJ Debug = 2;
	public const BBBFMJFDGPJ GadgetPlay = 3;
	public const BBBFMJFDGPJ ScenePlay = 4;
	public const BBBFMJFDGPJ MultistagePlay = 5;
}
public enum NBGJAPLGIOG.NJCEEHAINFM
{
	// Fields
	public const NBGJAPLGIOG.NJCEEHAINFM Page = 0;
	public const NBGJAPLGIOG.NJCEEHAINFM Interaction = 1;
	public const NBGJAPLGIOG.NJCEEHAINFM Cutscene = 2;
	public const NBGJAPLGIOG.NJCEEHAINFM Lua = 3;
	public const NBGJAPLGIOG.NJCEEHAINFM Video = 4;
}
public enum LPOCBENFIPH
{
	// Fields
	public const LPOCBENFIPH None = 0;
	public const LPOCBENFIPH ClientStartEnd = 1;
	public const LPOCBENFIPH AccountLoginEnd = 2;
	public const LPOCBENFIPH ChooseServerEnd = 3;
	public const LPOCBENFIPH DownloadResourcesEnd = 4;
	public const LPOCBENFIPH LoadResourcesEnd = 5;
	public const LPOCBENFIPH OpenDoorEnd = 6;
	public const LPOCBENFIPH Finish = 7;
	public const LPOCBENFIPH DownloadResourceInternal = 8;
}
public enum JBCMIKMEOOL
{
	// Fields
	public const JBCMIKMEOOL FunnelPass = 1000;
	public const JBCMIKMEOOL OPEN_SHOPMALL_PAGE = 1001;
	public const JBCMIKMEOOL OPEN_BATTLEPASS_PAGE = 1002;
	public const JBCMIKMEOOL OPEN_ACTIVITY_PAGE = 1003;
	public const JBCMIKMEOOL WIDGET_CREATE_BONFIRE = 1004;
	public const JBCMIKMEOOL OPEN_BULLETIN = 1005;
	public const JBCMIKMEOOL UNIWEBVIEW_GAMEGOTO = 1006;
	public const JBCMIKMEOOL OPEN_PLAYERPROFILE_PAGE = 1007;
	public const JBCMIKMEOOL REDPOINT_ACTIVITY_H5 = 1008;
	public const JBCMIKMEOOL OPEN_POP_IMAGE = 1009;
	public const JBCMIKMEOOL GOOGLE_PROMOTION = 1010;
	public const JBCMIKMEOOL PREDOWNLOAD_CONFIRM = 1011;
	public const JBCMIKMEOOL PREDOWNLOAD_ENTER = 1012;
	public const JBCMIKMEOOL PREDOWNLOAD_PAUSE = 1013;
	public const JBCMIKMEOOL PREDOWNLOAD_FINISH = 1014;
	public const JBCMIKMEOOL OPEN_ADVENTURE_HANDBOOK = 1015;
	public const JBCMIKMEOOL WIDGET_USE_QUICK_USE = 2001;
	public const JBCMIKMEOOL WIDGET_USE_FROM_BAG = 2002;
	public const JBCMIKMEOOL WIDGET_PET_ATTACH = 2003;
	public const JBCMIKMEOOL WIDGET_PET_REPLACE = 2004;
	public const JBCMIKMEOOL WIDGET_PET_DETACH = 2005;
	public const JBCMIKMEOOL LANGUAGE_TEXT_CHANGED = 3001;
	public const JBCMIKMEOOL LANGUAGE_VOICE_CHANGED = 3002;
	public const JBCMIKMEOOL CHAT_FAST_TALK = 3003;
	public const JBCMIKMEOOL INPUT_DEVICE_TYPE = 3004;
	public const JBCMIKMEOOL AUDIO_DEVICE_INFO = 3005;
	public const JBCMIKMEOOL RESOURCE_STATUS = 3006;
	public const JBCMIKMEOOL RESOURCE_MANAGEMENT = 3007;
	public const JBCMIKMEOOL USER_NETWORK_STATE = 4001;
	public const JBCMIKMEOOL SERVER_NETWORK_PROBE = 4002;
	public const JBCMIKMEOOL OPEN_COOP_PAGE = 5001;
	public const JBCMIKMEOOL TOWER_PLAY_INFO = 6000;
	public const JBCMIKMEOOL SHARE_PAGE_ACTION = 7000;
	public const JBCMIKMEOOL DESHRET_GUIDE_PAGE = 7001;
	public const JBCMIKMEOOL HOMEWORLD_BLUEPRINT = 8000;
	public const JBCMIKMEOOL GCG_RESOURCE = 8001;
	public const JBCMIKMEOOL GCG_GAMEPLAY = 8002;
	public const JBCMIKMEOOL GCG_REPLAY = 8003;
	public const JBCMIKMEOOL CLOUD_GAME_GET_CLIP_BOARD = 59001;
}
public enum OJNIHCEAHFF.DPFHFEHGDEN
{
	// Fields
	public const OJNIHCEAHFF.DPFHFEHGDEN Default = 0;
	public const OJNIHCEAHFF.DPFHFEHGDEN Loading = 1;
	public const OJNIHCEAHFF.DPFHFEHGDEN UIPage = 2;
	public const OJNIHCEAHFF.DPFHFEHGDEN UIScene = 3;
	public const OJNIHCEAHFF.DPFHFEHGDEN Map = 4;
	public const OJNIHCEAHFF.DPFHFEHGDEN Gacha = 5;
	public const OJNIHCEAHFF.DPFHFEHGDEN Cutscene = 6;
	public const OJNIHCEAHFF.DPFHFEHGDEN UIDialog = 7;
	public const OJNIHCEAHFF.DPFHFEHGDEN AdditionalScene = 8;
	public const OJNIHCEAHFF.DPFHFEHGDEN GcgDeckSystem = 9;
	public const OJNIHCEAHFF.DPFHFEHGDEN Count = 10;
}
public enum AENDDIDNMGA
{
	// Fields
	public const AENDDIDNMGA OnDayNightChange = 0;
	public const AENDDIDNMGA OnAvatarFetterChange = 1;
	public const AENDDIDNMGA OnHomeEvent = 2;
	public const AENDDIDNMGA OnMainQuestStateUpdate = 3;
	public const AENDDIDNMGA OnQuestStateUpdate = 4;
	public const AENDDIDNMGA OnScenePointUnlock = 5;
	public const AENDDIDNMGA OnQuestGlobalVarUpdate = 6;
	public const AENDDIDNMGA OnActivityCondUpdate = 7;
	public const AENDDIDNMGA OnLevelTagChange = 8;
	public const AENDDIDNMGA OnTaskVarChange = 9;
	public const AENDDIDNMGA OnCardEvent = 10;
	public const AENDDIDNMGA OnNpcCommonCondEvent = 11;
}
public enum JMIANMJMGJJ.HMDLLPFBBJL
{
	// Fields
	public const JMIANMJMGJJ.HMDLLPFBBJL None = 0;
	public const JMIANMJMGJJ.HMDLLPFBBJL SoloAvatar = 1;
	public const JMIANMJMGJJ.HMDLLPFBBJL SoloNpc = 2;
	public const JMIANMJMGJJ.HMDLLPFBBJL Coop = 3;
}
public enum LANBIPGLLDO
{
	// Fields
	public const LANBIPGLLDO NORMAL = 0;
	public const LANBIPGLLDO RESET = 1;
}
public enum OIMEJAODAFK.GAMCEBEJENO
{
	// Fields
	public const OIMEJAODAFK.GAMCEBEJENO IN = 0;
	public const OIMEJAODAFK.GAMCEBEJENO OUT = 1;
}
public enum FIDJGEJKNLK.JPCGKNFPPMN
{
	// Fields
	public const FIDJGEJKNLK.JPCGKNFPPMN None = 0;
	public const FIDJGEJKNLK.JPCGKNFPPMN V1 = 1;
	public const FIDJGEJKNLK.JPCGKNFPPMN V22 = 2;
}
public enum PHEHOFEAHEA
{
	// Fields
	public const PHEHOFEAHEA OK = 0;
	public const PHEHOFEAHEA FormatErr = 1;
	public const PHEHOFEAHEA DNSErr = 2;
	public const PHEHOFEAHEA DomainNoExist = 3;
	public const PHEHOFEAHEA DNSNoSuppot = 4;
	public const PHEHOFEAHEA DNSRefuse = 5;
}
public enum BFOMKDHLPBJ
{
	// Fields
	public const BFOMKDHLPBJ IN = 1;
	public const BFOMKDHLPBJ CSNET = 2;
	public const BFOMKDHLPBJ CHAOS = 3;
	public const BFOMKDHLPBJ HESIOD = 4;
	public const BFOMKDHLPBJ ANY = 255;
}
public enum GDCCDCGOMFI
{
	// Fields
	public const GDCCDCGOMFI A = 1;
	public const GDCCDCGOMFI NS = 2;
	public const GDCCDCGOMFI MD = 3;
	public const GDCCDCGOMFI MF = 4;
	public const GDCCDCGOMFI CNAME = 5;
	public const GDCCDCGOMFI SOA = 6;
	public const GDCCDCGOMFI MB = 7;
	public const GDCCDCGOMFI MG = 8;
	public const GDCCDCGOMFI MR = 9;
	public const GDCCDCGOMFI NULL = 10;
	public const GDCCDCGOMFI WKS = 11;
	public const GDCCDCGOMFI PTR = 12;
	public const GDCCDCGOMFI HINFO = 13;
	public const GDCCDCGOMFI MINFO = 14;
	public const GDCCDCGOMFI MX = 15;
	public const GDCCDCGOMFI TXT = 16;
	public const GDCCDCGOMFI UINFO = 100;
	public const GDCCDCGOMFI UID = 101;
	public const GDCCDCGOMFI GID = 102;
	public const GDCCDCGOMFI ANY = 255;
}
public enum FAKDLKPGKJD
{
	// Fields
	public const FAKDLKPGKJD EFFECT_PLUGIN_LINE_WAVE = 0;
	public const FAKDLKPGKJD COUNT = 1;
}
public enum GLNJOLODFDD.DDDEGAOLIPK
{
	// Fields
	public const GLNJOLODFDD.DDDEGAOLIPK GameDetail = 0;
	public const GLNJOLODFDD.DDDEGAOLIPK HyperLinkDetail = 1;
	public const GLNJOLODFDD.DDDEGAOLIPK CardDetailDialog = 2;
	public const GLNJOLODFDD.DDDEGAOLIPK Shop = 3;
}
public enum GLNJOLODFDD.KKJFGBJDFOI
{
	// Fields
	public const GLNJOLODFDD.KKJFGBJDFOI Small = 0;
	public const GLNJOLODFDD.KKJFGBJDFOI Large = 1;
}
public enum HEDFDJMHNGN
{
	// Fields
	public const HEDFDJMHNGN FixN = 1;
	public const HEDFDJMHNGN FixSight = 2;
}
public enum KHFHFOBLFLL.ODDCAJHKDON
{
	// Fields
	public const KHFHFOBLFLL.ODDCAJHKDON Free = 0;
	public const KHFHFOBLFLL.ODDCAJHKDON InBattle = 1;
}
public enum MJDGCBOLNOC.PGGJCAHOHIA
{
	// Fields
	public const MJDGCBOLNOC.PGGJCAHOHIA Default = 0;
	public const MJDGCBOLNOC.PGGJCAHOHIA Photograph = 1;
	public const MJDGCBOLNOC.PGGJCAHOHIA MPPlay = 2;
	public const MJDGCBOLNOC.PGGJCAHOHIA PhotographGallery = 3;
	public const MJDGCBOLNOC.PGGJCAHOHIA Count = 4;
}
public enum JPEOPEKHGKP.HJHAMGEIJNH
{
	// Fields
	public const JPEOPEKHGKP.HJHAMGEIJNH None = 0;
	public const JPEOPEKHGKP.HJHAMGEIJNH Weak = 1;
	public const JPEOPEKHGKP.HJHAMGEIJNH Middle = 2;
	public const JPEOPEKHGKP.HJHAMGEIJNH Strong = 3;
	public const JPEOPEKHGKP.HJHAMGEIJNH Count = 4;
}
public enum JPEOPEKHGKP.DFHHFCDBFPM
{
	// Fields
	public const JPEOPEKHGKP.DFHHFCDBFPM UI = 0;
	public const JPEOPEKHGKP.DFHHFCDBFPM Camera = 1;
	public const JPEOPEKHGKP.DFHHFCDBFPM CutScene = 2;
}
public enum IJOAEPICPNO.DKKDLDLEAAG
{
	// Fields
	public const IJOAEPICPNO.DKKDLDLEAAG None = 0;
	public const IJOAEPICPNO.DKKDLDLEAAG FixedTick = 1;
	public const IJOAEPICPNO.DKKDLDLEAAG Tick = 2;
	public const IJOAEPICPNO.DKKDLDLEAAG LateTick = 3;
	public const IJOAEPICPNO.DKKDLDLEAAG LateTickPre = 4;
	public const IJOAEPICPNO.DKKDLDLEAAG LateTickPreEnd = 5;
	public const IJOAEPICPNO.DKKDLDLEAAG LateTickPost = 6;
	public const IJOAEPICPNO.DKKDLDLEAAG LateTickPostEnd = 7;
}
public enum ODNIBGHBFAM
{
	// Fields
	public const ODNIBGHBFAM None = 0;
	public const ODNIBGHBFAM CoopSelectedEvent = 1;
	public const ODNIBGHBFAM CoopActionInProcessing = 2;
	public const ODNIBGHBFAM CoopActionFinish = 3;
	public const ODNIBGHBFAM FinishCurrCoopNode = 4;
	public const ODNIBGHBFAM CoopFailEnd = 5;
}
public enum LJNHIOALHGE.GALLJMPLOJC
{
	// Fields
	public const LJNHIOALHGE.GALLJMPLOJC None = 0;
	public const LJNHIOALHGE.GALLJMPLOJC EntityManagerMissing = 1;
	public const LJNHIOALHGE.GALLJMPLOJC LocalAvatarNotAlive = 2;
	public const LJNHIOALHGE.GALLJMPLOJC LocalAvatarInCombat = 3;
	public const LJNHIOALHGE.GALLJMPLOJC LocalAvatarFSMStateNotApproved = 4;
	public const LJNHIOALHGE.GALLJMPLOJC LocalAvatarMoving = 5;
	public const LJNHIOALHGE.GALLJMPLOJC LocalAvatarFocusing = 6;
	public const LJNHIOALHGE.GALLJMPLOJC LocalAvatarStateRestricted = 7;
	public const LJNHIOALHGE.GALLJMPLOJC LocalAvatarSkillDisabled = 8;
	public const LJNHIOALHGE.GALLJMPLOJC VCAvatarCombatMissing = 9;
	public const LJNHIOALHGE.GALLJMPLOJC ActionPanelStateNotApproved = 10;
	public const LJNHIOALHGE.GALLJMPLOJC OnVehicle = 11;
}
public enum JFOJMFFOHEI
{
	// Fields
	public const JFOJMFFOHEI None = 0;
	public const JFOJMFFOHEI Normal = 1;
	public const JFOJMFFOHEI LackOfCoin = 2;
	public const JFOJMFFOHEI LackOfDest = 3;
	public const JFOJMFFOHEI LackOfCoinAndDest = 4;
}
public enum ACABDJFCGLK
{
	// Fields
	public const ACABDJFCGLK MONSTER = 0;
	public const ACABDJFCGLK SLEEP = 1;
	public const ACABDJFCGLK ABILITY = 2;
	public const ACABDJFCGLK COMBAT_EX_GW = 3;
	public const ACABDJFCGLK ALL_EX_GW = 4;
	public const ACABDJFCGLK GRASS = 5;
	public const ACABDJFCGLK WATER = 6;
	public const ACABDJFCGLK PICKABLE = 7;
	public const ACABDJFCGLK SELECT_PICKABLE = 8;
	public const ACABDJFCGLK PROP_ACCURATE_MOVE = 9;
	public const ACABDJFCGLK LOCAL = 10;
	public const ACABDJFCGLK WIND_SEED = 11;
	public const ACABDJFCGLK GADGET = 12;
	public const ACABDJFCGLK FOUNDATION = 13;
	public const ACABDJFCGLK VEHICLE = 14;
	public const ACABDJFCGLK DYNAMIC_BARRIER = 15;
	public const ACABDJFCGLK COUNT = 16;
}
public enum HHMMCJBELLD
{
	// Fields
	public const HHMMCJBELLD COMBAT_CAMP_EX_GW = 0;
	public const HHMMCJBELLD COMBAT_CAMP_GW = 1;
	public const HHMMCJBELLD COUNT = 2;
}
public enum PMMNGAPPKLF
{
	// Fields
	public const PMMNGAPPKLF COMMON_MOVE = 0;
	public const PMMNGAPPKLF AI = 1;
	public const PMMNGAPPKLF DYNAMIC_BONE_ARRAY = 2;
	public const PMMNGAPPKLF TERRAIN_GRASS = 3;
	public const PMMNGAPPKLF ABILITY_SYSTEM = 4;
	public const PMMNGAPPKLF ABILITY_TILE_ATTACK = 5;
	public const PMMNGAPPKLF AI_COLLECT = 6;
	public const PMMNGAPPKLF ENTITY_RECYCLE = 7;
	public const PMMNGAPPKLF LC_SIMULATE_PHYSICS = 8;
	public const PMMNGAPPKLF COUNT = 9;
}
public enum MENIEKNGFKL.BLFECDGFAHK
{
	// Fields
	public const MENIEKNGFKL.BLFECDGFAHK Enviro = 0;
	public const MENIEKNGFKL.BLFECDGFAHK QuestShow = 1;
	public const MENIEKNGFKL.BLFECDGFAHK Skill = 2;
	public const MENIEKNGFKL.BLFECDGFAHK ElementView = 3;
	public const MENIEKNGFKL.BLFECDGFAHK Cutscene = 4;
}
public enum MENIEKNGFKL.GDIICKHHJAH
{
	// Fields
	public const MENIEKNGFKL.GDIICKHHJAH Unlock = 0;
	public const MENIEKNGFKL.GDIICKHHJAH UIComponent = 1;
	public const MENIEKNGFKL.GDIICKHHJAH Count = 2;
}
public enum JMKPHABAIAO.DKEFBFHAHBO
{
	// Fields
	public const JMKPHABAIAO.DKEFBFHAHBO ALL = 0;
	public const JMKPHABAIAO.DKEFBFHAHBO FRAME = 1;
	public const JMKPHABAIAO.DKEFBFHAHBO NEXT = 2;
}
public enum GNLKIDBDAJE.PNPCOCKKODO
{
	// Fields
	public const GNLKIDBDAJE.PNPCOCKKODO Refused = 0;
	public const GNLKIDBDAJE.PNPCOCKKODO Allowed = 1;
	public const GNLKIDBDAJE.PNPCOCKKODO FromShare = 2;
}
public enum EEOCPNPIADI.IEPNGGKGBGG
{
	// Fields
	public const EEOCPNPIADI.IEPNGGKGBGG AllowAll = 0;
	public const EEOCPNPIADI.IEPNGGKGBGG Refuse = 1;
	public const EEOCPNPIADI.IEPNGGKGBGG NeedConfirm = 2;
}
public enum PMPMHOACCKI
{
	// Fields
	public const PMPMHOACCKI InvalidForUnknownError = 0;
	public const PMPMHOACCKI InvalidForNotReachMinimumCompleteness = 1;
	public const PMPMHOACCKI InValidForMissingCriticalFurniture = 2;
	public const PMPMHOACCKI InValidForNoMainHouseInBlueprint = 3;
	public const PMPMHOACCKI Valid = 100;
}
public enum HLDALFCAOPA.LNGFDGDAGGP
{
	// Fields
	public const HLDALFCAOPA.LNGFDGDAGGP OK = 0;
	public const HLDALFCAOPA.LNGFDGDAGGP BelongToSuit = 1;
	public const HLDALFCAOPA.LNGFDGDAGGP BelongToGroup = 2;
	public const HLDALFCAOPA.LNGFDGDAGGP BelongToCustomSuite = 3;
	public const HLDALFCAOPA.LNGFDGDAGGP NotValidType = 4;
}
public enum GFJDCGAIFBE
{
	// Fields
	public const GFJDCGAIFBE playing = 0;
	public const GFJDCGAIFBE Editing = 1;
	public const GFJDCGAIFBE PlayToEdit = 2;
	public const GFJDCGAIFBE EditToPlay = 3;
}
public enum FFJDKMONECH
{
	// Fields
	public const FFJDKMONECH Hide = 0;
	public const FFJDKMONECH Planted = 1;
	public const FFJDKMONECH Sprout = 2;
	public const FFJDKMONECH Ripe = 3;
}
public enum CODFCBJFFJC.NJMENGBDGAJ
{
	// Fields
	public const CODFCBJFFJC.NJMENGBDGAJ Action1 = 0;
	public const CODFCBJFFJC.NJMENGBDGAJ Action2 = 1;
	public const CODFCBJFFJC.NJMENGBDGAJ Action3 = 2;
	public const CODFCBJFFJC.NJMENGBDGAJ Action4 = 3;
	public const CODFCBJFFJC.NJMENGBDGAJ Action5 = 4;
	public const CODFCBJFFJC.NJMENGBDGAJ Action6 = 5;
	public const CODFCBJFFJC.NJMENGBDGAJ Action7 = 6;
	public const CODFCBJFFJC.NJMENGBDGAJ Action8 = 7;
	public const CODFCBJFFJC.NJMENGBDGAJ Action9 = 8;
	public const CODFCBJFFJC.NJMENGBDGAJ Action10 = 9;
	public const CODFCBJFFJC.NJMENGBDGAJ Count = 10;
}
public enum ADAKNNNIEJJ
{
	// Fields
	public const ADAKNNNIEJJ ElectroherculesBattle = 0;
	public const ADAKNNNIEJJ VehicleSkillController = 1;
	public const ADAKNNNIEJJ Count = 2;
}
public enum InteractionManager.ELockReason
{
	// Fields
	public const InteractionManager.ELockReason UI_CLOCK = 0;
}
public enum DPDFCKCOFPJ
{
	// Fields
	public const DPDFCKCOFPJ NICE_TO_HAVE = 0;
	public const DPDFCKCOFPJ IN_QUEUE = 1;
}
public enum DEHGMJEIJKD
{
	// Fields
	public const DEHGMJEIJKD DEFAULT = 0;
	public const DEHGMJEIJKD ALL = 1;
}
public enum OHEHADGCFNN
{
	// Fields
	public const OHEHADGCFNN Default = 0;
	public const OHEHADGCFNN DoAction = 1;
}
public enum JBEALCLNLIC
{
	// Fields
	public const JBEALCLNLIC BanFemale = 0;
	public const JBEALCLNLIC BanMale = 1;
	public const JBEALCLNLIC TeleportTo_BackStandby = 2;
	public const JBEALCLNLIC LookAt_UseNeckOffset = 3;
	public const JBEALCLNLIC Count = 4;
}
public enum PEEFAJHNODC.BAKOAGBLDBM
{
	// Fields
	public const PEEFAJHNODC.BAKOAGBLDBM RadialBlur = 0;
}
public enum ICPMNLBMCBH.JLEDEHACMNJ
{
	// Fields
	public const ICPMNLBMCBH.JLEDEHACMNJ Key = 0;
	public const ICPMNLBMCBH.JLEDEHACMNJ UI = 1;
	public const ICPMNLBMCBH.JLEDEHACMNJ Count = 2;
}
public enum HCPKLEMACOP.IFKMFMBDJCD
{
	// Fields
	public const HCPKLEMACOP.IFKMFMBDJCD None = 0;
	public const HCPKLEMACOP.IFKMFMBDJCD Morning = 1;
	public const HCPKLEMACOP.IFKMFMBDJCD Day = 2;
	public const HCPKLEMACOP.IFKMFMBDJCD Afternoon = 3;
	public const HCPKLEMACOP.IFKMFMBDJCD Night = 4;
	public const HCPKLEMACOP.IFKMFMBDJCD BadWeather = 5;
}
public enum HLJHPOHCIJN.NDGFNABLOEL
{
	// Fields
	public const HLJHPOHCIJN.NDGFNABLOEL Normal = 0;
	public const HLJHPOHCIJN.NDGFNABLOEL HalfTransparent = 1;
}
public enum HLJHPOHCIJN.CEBFGDNDBLD
{
	// Fields
	public const HLJHPOHCIJN.CEBFGDNDBLD None = 0;
	public const HLJHPOHCIJN.CEBFGDNDBLD HaveEntity = 1;
	public const HLJHPOHCIJN.CEBFGDNDBLD NoEntity = 2;
}
public enum HLJHPOHCIJN.HJHGPIHBKGA
{
	// Fields
	public const HLJHPOHCIJN.HJHGPIHBKGA None = 0;
	public const HLJHPOHCIJN.HJHGPIHBKGA TrackingHide = 1;
	public const HLJHPOHCIJN.HJHGPIHBKGA TrackingShow = 2;
}
public enum HLJHPOHCIJN.BMMFJBGABKH
{
	// Fields
	public const HLJHPOHCIJN.BMMFJBGABKH None = 0;
	public const HLJHPOHCIJN.BMMFJBGABKH HaveEntity = 1;
	public const HLJHPOHCIJN.BMMFJBGABKH NoEntity = 2;
}
public enum HLJHPOHCIJN.NHNOOCMCANE.CKBIHJMFKEF
{
	// Fields
	public const HLJHPOHCIJN.NHNOOCMCANE.CKBIHJMFKEF DEFAULT = 0;
	public const HLJHPOHCIJN.NHNOOCMCANE.CKBIHJMFKEF POI = 1;
	public const HLJHPOHCIJN.NHNOOCMCANE.CKBIHJMFKEF COUNT = 2;
}
public enum HLJHPOHCIJN.POLMNNKEDCN
{
	// Fields
	public const HLJHPOHCIJN.POLMNNKEDCN NONE = 0;
	public const HLJHPOHCIJN.POLMNNKEDCN TASK = 1;
	public const HLJHPOHCIJN.POLMNNKEDCN QUEST = 2;
}
public enum CHGFPGJJNOM.IDEFKCAHBPM
{
	// Fields
	public const CHGFPGJJNOM.IDEFKCAHBPM MainPage = 0;
	public const CHGFPGJJNOM.IDEFKCAHBPM Cutscene = 1;
}
public enum ECMHCDKFLOD
{
	// Fields
	public const ECMHCDKFLOD None = 0;
	public const ECMHCDKFLOD Loading = 1;
	public const ECMHCDKFLOD Loaded = 2;
	public const ECMHCDKFLOD Start = 3;
	public const ECMHCDKFLOD Finish = 4;
}
public enum GAODOHDMFJL
{
	// Fields
	public const GAODOHDMFJL None = 0;
	public const GAODOHDMFJL Start = 1;
	public const GAODOHDMFJL Finish = 2;
}
public enum FDOPNONAOGI
{
	// Fields
	public const FDOPNONAOGI None = 0;
	public const FDOPNONAOGI StepSuccess = 1;
	public const FDOPNONAOGI StepFail = 2;
	public const FDOPNONAOGI PowerBarValueChange = 3;
	public const FDOPNONAOGI PowerBarPressDown = 4;
	public const FDOPNONAOGI ButtonClick = 5;
	public const FDOPNONAOGI SlideDirectionSuccess = 6;
}
public enum MoleMole.RedPointId
{
	// Fields
	public const MoleMole.RedPointId REDPOINT_RELIC_TAB = 1000;
	public const MoleMole.RedPointId REDPOINT_RELIC_BRACER = 1001;
	public const MoleMole.RedPointId REDPOINT_RELIC_DRESS = 1002;
	public const MoleMole.RedPointId REDPOINT_RELIC_SHOES = 1003;
	public const MoleMole.RedPointId REDPOINT_RELIC_RING = 1004;
	public const MoleMole.RedPointId REDPOINT_RELIC_NECKLACE = 1005;
	public const MoleMole.RedPointId REDPOINT_AVATAR_LEVELUP_BTN = 1006;
	public const MoleMole.RedPointId REDPOINT_AVATAR_PROMOTE_BTN = 1007;
	public const MoleMole.RedPointId REDPOINT_AVATAR_TAB_ONE = 1008;
	public const MoleMole.RedPointId REDPOINT_AVATAR_TAB_TWO = 1009;
	public const MoleMole.RedPointId REDPOINT_AVATAR_TAB_THREE = 1010;
	public const MoleMole.RedPointId REDPOINT_AVATAR_TAB_FOUR = 1011;
	public const MoleMole.RedPointId REDPOINT_CHARACTER_ICON = 1012;
	public const MoleMole.RedPointId REDPOINT_PAIMON_ICON = 1013;
	public const MoleMole.RedPointId REDPOINT_GUIDE_ICON = 1014;
	public const MoleMole.RedPointId REDPOINT_HANDBOOK_ICON = 1015;
	public const MoleMole.RedPointId REDPOINT_HANDBOOK_DUNGEON_TAB = 1016;
	public const MoleMole.RedPointId REDPOINT_HANDBOOK_INVESTIGATION_TAB = 1017;
	public const MoleMole.RedPointId REDPOINT_HANDBOOK_DUNGEON_TRIAL_TAB = 1018;
	public const MoleMole.RedPointId REDPOINT_HANDBOOK_TASK_TAB = 1019;
	public const MoleMole.RedPointId REDPOINT_HANDBOOK_QUEST_GUIDE_TAB = 1020;
	public const MoleMole.RedPointId REDPOINT_HANDBOOK_EDUCATION_TAB = 1021;
	public const MoleMole.RedPointId REDPOINT_PLAYER_MAIL = 1022;
	public const MoleMole.RedPointId REDPOINT_PLAYER_FRIEND = 1023;
	public const MoleMole.RedPointId REDPOINT_FRIEND_REQUEST = 1024;
	public const MoleMole.RedPointId REDPOINT_PLAYER_COMMUNITY = 1025;
	public const MoleMole.RedPointId REDPOINT_PLAYER_BULLETIN = 1026;
	public const MoleMole.RedPointId REDPOINT_CODEX_PUSHTIPS_ALL = 1027;
	public const MoleMole.RedPointId REDPOINT_PAIMON_EDITPANEL = 1028;
	public const MoleMole.RedPointId REDPOINT_PAIMON_EDITPANEL_NAMECARD = 1029;
	public const MoleMole.RedPointId REDPOINT_PAIMON_EDITPANEL_BIRTHDAY = 1030;
	public const MoleMole.RedPointId REDPOINT_AVATAR_PREVIEW = 1031;
	public const MoleMole.RedPointId REDPOINT_FORGE_QUEUE_FINISH = 1032;
	public const MoleMole.RedPointId REDPOINT_TALENT_TAB = 1033;
	public const MoleMole.RedPointId REDPOINT_AVATAR_PREVIEW_DETAIL = 1034;
	public const MoleMole.RedPointId REDPOINT_CHARACTER_SELECT_BTN = 1035;
	public const MoleMole.RedPointId REDPOINT_COOK_COMPOUND_FINISH = 1036;
	public const MoleMole.RedPointId REDPOINT_BATTLEPASS_ICON = 1037;
	public const MoleMole.RedPointId REDPOINT_BATTLEPASS_REWARD_TAB = 1038;
	public const MoleMole.RedPointId REDPOINT_BATTLEPASS_MISSION_TAB = 1039;
	public const MoleMole.RedPointId REDPOINT_BATTLEPASS_MISSION_TODAY_TAB = 1040;
	public const MoleMole.RedPointId REDPOINT_BATTLEPASS_MISSION_WEEK_TAB = 1041;
	public const MoleMole.RedPointId REDPOINT_BATTLEPASS_MISSION_SCHEDULE_TAB = 1042;
	public const MoleMole.RedPointId REDPOINT_RELICTAB_TYPE1 = 1043;
	public const MoleMole.RedPointId REDPOINT_RELICTAB_TYPE2 = 1044;
	public const MoleMole.RedPointId REDPOINT_RELICTAB_TYPE3 = 1045;
	public const MoleMole.RedPointId REDPOINT_RELICTAB_TYPE4 = 1046;
	public const MoleMole.RedPointId REDPOINT_RELICTAB_TYPE5 = 1047;
	public const MoleMole.RedPointId REDPOINT_BAG_ICON = 1048;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_1 = 1049;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_2 = 1050;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_3 = 1051;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_4 = 1052;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_5 = 1053;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_6 = 1054;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_7 = 1055;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_8 = 1056;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_9 = 1057;
	public const MoleMole.RedPointId REDPOINT_BAG_TAB_10 = 1058;
	public const MoleMole.RedPointId REDPOINT_GACHA = 1059;
	public const MoleMole.RedPointId REDPOINT_GACHA_TAB = 1060;
	public const MoleMole.RedPointId REDPOINT_GACHA_WISH = 1061;
	public const MoleMole.RedPointId REDPOINT_PLAYER_BULLETIN_IMPORTANT = 1062;
	public const MoleMole.RedPointId REDPOINT_PAIMON_EDITPANEL_NICKNAME = 1063;
	public const MoleMole.RedPointId REDPOINT_PAIMON_EDITPANEL_SIGNATURE = 1064;
	public const MoleMole.RedPointId REDPOINT_HANDBOOK_QUEST_GUIDE_MAIN_QUEST_REWARD = 1065;
	public const MoleMole.RedPointId REDPOINT_AVATAR_FASHION = 1100;
	public const MoleMole.RedPointId REDPOINT_FETTER_BUTTON = 1101;
	public const MoleMole.RedPointId REDPOINT_PROP_BUTTON = 1102;
	public const MoleMole.RedPointId REDPOINT_FETTER_REWARD = 1103;
	public const MoleMole.RedPointId REDPOINT_FETTER_STORY = 1104;
	public const MoleMole.RedPointId REDPOINT_FETTER_VOICE = 1105;
	public const MoleMole.RedPointId REDPOINT_AVATAR_FASHION_FLYCLOAK = 1106;
	public const MoleMole.RedPointId REDPOINT_AVATAR_FASHION_COSTUME = 1107;
	public const MoleMole.RedPointId REDPOINT_MAIL_FAVORITES = 1120;
	public const MoleMole.RedPointId REDPOINT_PROMOTE_REWARD = 1150;
	public const MoleMole.RedPointId REDPOINT_PROMOTE_REWARD_BREACH_MATERIAL_STAR_1 = 1151;
	public const MoleMole.RedPointId REDPOINT_PROMOTE_REWARD_BREACH_MATERIAL_STAR_2 = 1152;
	public const MoleMole.RedPointId REDPOINT_PROMOTE_REWARD_BREACH_MATERIAL_STAR_3 = 1153;
	public const MoleMole.RedPointId REDPOINT_PROMOTE_REWARD_BREACH_MATERIAL_STAR_4 = 1154;
	public const MoleMole.RedPointId REDPOINT_PROMOTE_REWARD_BREACH_MATERIAL_STAR_5 = 1155;
	public const MoleMole.RedPointId REDPOINT_PROMOTE_REWARD_BREACH_MATERIAL_STAR_6 = 1156;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY = 1200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SEAMLAMP_CONTRI = 1201;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SEAMLAMP_PHASE = 1202;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SEAMLAMP_TAB1 = 1203;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SEAMLAMP_TAB2 = 1204;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SEAMLAMP_TAB3 = 1205;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGY = 1210;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGY_REWARD = 1211;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGY_REWARD_FIRST = 1212;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERNRITE = 1213;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERNRITE_MAIN_QUEST = 1214;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERNRITE_MINI_QUEST = 1215;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERNRITE_CHESS = 1216;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERNRITE_SHOP = 1217;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERNRITE_CONTRACT = 1206;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MECHANICUS_GEAR_MAIN = 1218;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MECHANICUS_GEAR_MATCH = 1219;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_NORMAL = 1220;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SIGNIN_START = 1221;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BONUS_START = 1230;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TOWER_RESET = 1240;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRUCIBLE = 1300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRUCIBLE_BTN = 1301;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TRIAL_CHARACTER = 1302;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TRIAL_TAB_CHARACTER = 1303;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SALESMAN = 1310;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_NEWBEE_BONUS = 1320;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PERSONALLINE_START = 1330;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FOOD_DELIVERY = 1340;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER = 1350;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_LITTLE_MAINBTN = 1351;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_MIDDLE_MAINBTN = 1352;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_LARGE_MAINBTN = 1353;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_LITTLE_TASK = 1354;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_MIDDLE_TASK = 1355;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_LARGE_TASK = 1356;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_REWARD = 1357;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_SUBPAGE_GOTOBTN = 1358;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_Little_STAGE_2 = 1359;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ASTER_Little_STAGE_3 = 1360;
	public const MoleMole.RedPointId REDPOINT_REUNION_TASK_DAY_TAB = 1375;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_REUNION_WEB = 1379;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_REUNION_TAB = 1380;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_REUNION_SIGNIN_BTN = 1381;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_REUNION_TASK_BTN = 1382;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_REUNION_GUIDE_BTN = 1383;
	public const MoleMole.RedPointId REDPOINT_REUNION_SIGNIN_TAB = 1385;
	public const MoleMole.RedPointId REDPOINT_REUNION_TASK_TAB = 1386;
	public const MoleMole.RedPointId REDPOINT_REUNION_GUIDE_TAB = 1387;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BLESSING = 1390;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BLESSING_RECEIVEPIC = 1391;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BLESSING_FRIEND_RECEIVE = 1392;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EXPEDITION_TAB = 1400;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EXPEDITION_CHALLENGE = 1401;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EXPEDITION_TOPTAB = 1402;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EXPEDITION_S_LEVEL = 1403;
	public const MoleMole.RedPointId REDPOINT_AVATAR_TAB = 1500;
	public const MoleMole.RedPointId REDPOINT_AVATAR_TAB_UPPER_LIMIT = 1600;
	public const MoleMole.RedPointId REDPOINT_PLAYER_SETTING = 1700;
	public const MoleMole.RedPointId REDPOINT_PLAYER_SETTING_ACCOUNT = 1701;
	public const MoleMole.RedPointId REDPOINT_PLAYER_SETTING_ACCOUNT_BIND_ACCOUNT = 1702;
	public const MoleMole.RedPointId REDPOINT_PLAYER_SETTING_PRESSKEY = 1703;
	public const MoleMole.RedPointId REDPOINT_PLAYER_SETTING_RESOURCE = 1704;
	public const MoleMole.RedPointId REDPOINT_PLAYER_SETTING_RESOURCE_PREDOWNLOAD = 1705;
	public const MoleMole.RedPointId REDPOINT_ACHIEVEMENT_ENTRY = 1800;
	public const MoleMole.RedPointId REDPOINT_ACHIEVEMENT_OVERVIEW_PAGE = 1801;
	public const MoleMole.RedPointId REDPOINT_ACHIEVEMENT_INSIDE_PAGE = 1802;
	public const MoleMole.RedPointId REDPOINT_PERSONALLINE_QUEST = 1810;
	public const MoleMole.RedPointId REDPOINT_PERSONALLINE_ENTRY = 1811;
	public const MoleMole.RedPointId REDPOINT_PERSONALLINE_UNLOCK_BTN = 1812;
	public const MoleMole.RedPointId REDPOINT_PERSONALLINE_UNLOCK_CHAPTER = 1813;
	public const MoleMole.RedPointId REDPOINT_FLIGHTCHALLENGE_DETAIL_BTN = 1900;
	public const MoleMole.RedPointId REDPOINT_FLIGHTCHALLENGE_TAB = 1901;
	public const MoleMole.RedPointId REDPOINT_FLIGHTCHALLENGE_DAY_START = 1902;
	public const MoleMole.RedPointId REDPOINT_FLIGHTCHALLENGE_Medal_START = 1909;
	public const MoleMole.RedPointId REDPOINT_REPUTATION_LEVEL_REWARD = 2000;
	public const MoleMole.RedPointId REDPOINT_REPUTATION_HUNTING = 2001;
	public const MoleMole.RedPointId REDPOINT_REPUTATION_REQUEST = 2002;
	public const MoleMole.RedPointId REDPOINT_REPUTATION_QUEST = 2003;
	public const MoleMole.RedPointId REDPOINT_REPUTATION_EXPLORE = 2004;
	public const MoleMole.RedPointId REDPOINT_DRAGONSPINE_TAB = 2100;
	public const MoleMole.RedPointId REDPOINT_DRAGONSPINE_ACTIVITY_BTN = 2102;
	public const MoleMole.RedPointId REDPOINT_DRAGONSPINE_CHAPTER_START = 2102;
	public const MoleMole.RedPointId REDPOINT_PAIMON_MALL = 2200;
	public const MoleMole.RedPointId REDPOINT_PAIMON_SURVEY = 2201;
	public const MoleMole.RedPointId REDPOINT_PAIMON_MALL_RECOMMEND = 2210;
	public const MoleMole.RedPointId REDPOINT_PAIMON_MALL_RECOMMEND_RESINCARD = 2211;
	public const MoleMole.RedPointId REDPOINT_PAIMON_FEEDBACK = 2212;
	public const MoleMole.RedPointId REDPOINT_PAIMON_HANDBOOK = 2213;
	public const MoleMole.RedPointId REDPOINT_PAIMON_COMMUNITY_PAIMON_ICON = 2214;
	public const MoleMole.RedPointId REDPOINT_PAIMON_COMMUNITY_NO_PAIMON = 2215;
	public const MoleMole.RedPointId REDPOINT_PAIMON_COMMUNITY_FOR_SHOW = 2216;
	public const MoleMole.RedPointId REDPOINT_TREASUREHUNT_TAB = 2300;
	public const MoleMole.RedPointId REDPOINT_TREASUREHUNT_DETAIL_BTN = 2301;
	public const MoleMole.RedPointId REDPOINT_TREASUREHUNT_BONUS_BTN = 2302;
	public const MoleMole.RedPointId REDPOINT_MISTTRIAL_TAB = 2320;
	public const MoleMole.RedPointId REDPOINT_MISTTRIAL_DUNGEON_PANEL = 2321;
	public const MoleMole.RedPointId REDPOINT_PAIMON_EDITPANEL_EDITPROFILE = 2400;
	public const MoleMole.RedPointId REDPOINT_PAIMON_CLOUDGAME = 2401;
	public const MoleMole.RedPointId REDPOINT_PAIMON_EDITPANEL_NAMECARD_BIND_PAIMON = 2402;
	public const MoleMole.RedPointId REDPOINT_PAIMON_EDITPANEL_EDITPROFILE_BIND_PAIMON = 2403;
	public const MoleMole.RedPointId REDPOINT_MONSTER_BANNER_DRAKE_PRIMO_ROCK_TAB = 2500;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_TAB = 2501;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_TAB_BALLOON = 2502;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_TAB_FALL = 2503;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_TAB_MUSIC = 2504;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_BALLOON_LEVEL_NEW = 2505;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_FALL_LEVEL_NEW = 2509;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_MUSIC_LEVEL_NEW = 2513;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_LEVEL_REWARD = 2517;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_AVATAR_REWARD = 2521;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_TAB_MINIGAME_ENTRY = 2524;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_TAB_ENTRUST_ENTRY = 2525;
	public const MoleMole.RedPointId REDPOINT_FLEUR_FAIR_TAB_DUNGEON_ENTRY = 2526;
	public const MoleMole.RedPointId REDPOINT_COOP_ACTIVITY_TAB = 2600;
	public const MoleMole.RedPointId REDPOINT_COOP_LEGEND_TAB = 2601;
	public const MoleMole.RedPointId REDPOINT_COOP_LEGEND_AVATAR = 2602;
	public const MoleMole.RedPointId REDPOINT_COOP_LEGEND_CHAPTER = 2603;
	public const MoleMole.RedPointId REDPOINT_COOP_LEGEND_CHAPTER_REWARD = 2604;
	public const MoleMole.RedPointId REDPOINT_COOP_POINT_CHAPTER_REWARD = 2605;
	public const MoleMole.RedPointId REDPOINT_WATER_SPRITE_TAB = 2700;
	public const MoleMole.RedPointId REDPOINT_WATER_SPRITE_EXPLORE_BUTTON = 2701;
	public const MoleMole.RedPointId REDPOINT_WATER_SPRITE_FINAL_QUEST_BUTTON = 2702;
	public const MoleMole.RedPointId REDPOINT_WATER_SPRITE_FINAL_RECORD_BUTTON = 2703;
	public const MoleMole.RedPointId REDPOINT_WATER_SPRITE_COURSE_BUTTON = 2704;
	public const MoleMole.RedPointId REDPOINT_WATER_SPRITE_NEW_REGION_OPEN = 2705;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_TAB = 2800;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_ACTIVITY_DETAIL = 2801;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_ACTIVITY_STAGE_BUTTON_BASE = 2810;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_ACTIVITY_STAGE_BUTTON_PLOT_BASE = 2820;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_STAGE2_TAB = 2830;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_STAGE2_MISSION_TOTAL_START = 2831;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_STAGE2_MISSION_TOTAL_END = 2836;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_STAGE2_MISSION_MEDAL_START = 2837;
	public const MoleMole.RedPointId REDPOINT_SUMMERTIME_STAGE2_MISSION_MEDAL_END = 2854;
	public const MoleMole.RedPointId REDPOINT_BLITZ_RUSH_TAB = 2900;
	public const MoleMole.RedPointId REDPOINT_BLITZ_RUSH_PARKOUR_LEVEL_BASE = 2910;
	public const MoleMole.RedPointId REDPOINT_BLITZ_RUSH_OATH = 2930;
	public const MoleMole.RedPointId REDPOINT_BLITZ_RUSH_PREV_STAGE = 2931;
	public const MoleMole.RedPointId REDPOINT_BLITZ_RUSH_NEXT_STAGE = 2932;
	public const MoleMole.RedPointId REDPOINT_BLITZ_RUSH_PREQUEST_GOTO = 2933;
	public const MoleMole.RedPointId REDPOINT_BLITZ_RUSH_STAGE_TAB_BASE = 2940;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_OPERATION_BONUS_START = 3000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_OPERATION_BONUS_END = 3999;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_TAB = 4000;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_STAGE_START = 4001;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_CHARACTER = 4005;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_BUFF_ENTRANCE = 4006;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_DRIVE_ADD = 4008;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_DRIVE_FRIEND = 4009;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_LOOPDUNGEON_GOTO = 4010;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_BUFF_EQUIP_SINGLE = 4011;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_BUFF_EQUIP_MULTI = 4012;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_LOOPDUNGEON_START = 4013;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_LOOPDUNGEON_REWARD = 4030;
	public const MoleMole.RedPointId REDPOINT_BOUNCE_CONJURING_TAB = 4031;
	public const MoleMole.RedPointId REDPOINT_BOUNCE_CONJURING_CHAPTER_START = 4032;
	public const MoleMole.RedPointId REDPOINT_MINITOMO_HILIWEI_TAB = 4050;
	public const MoleMole.RedPointId REDPOINT_MINITOMO_HILIWEI_SUBDETAIL = 4051;
	public const MoleMole.RedPointId REDPOINT_MINITOMO_HILIWEI_DETAIL = 4052;
	public const MoleMole.RedPointId REDPOINT_MINITOMO_HILIWEI_REWARD = 4053;
	public const MoleMole.RedPointId REDPOINT_MINITOMO_HILIWEI_GUIDE_QUEST = 4054;
	public const MoleMole.RedPointId REDPOINT_MINITOMO_HILIWEI_END_QUEST = 4055;
	public const MoleMole.RedPointId REDPOINT_MONSTER_BANNER_EFFIGY_ICE_TAB = 4100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_TAB = 4200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_SCORE_REWAR = 4201;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_WATCHER_REWAR = 4202;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_SKILL_BTN = 4203;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_SCORE_REWAR_DIALOG = 4204;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_WATCHER_REWAR_DIALOG = 4205;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_MAP_BTN = 4206;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_CHOOSE_MATCH_MAP = 4207;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HIDE_AND_SEEK_VIEW_GHOST_SKILL = 4208;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HOMEWORLD_TAB = 4300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HOMEWORLD_GOTO = 4301;
	public const MoleMole.RedPointId REDPOINT_HOMEWORLD_HANDBOOK = 4310;
	public const MoleMole.RedPointId REDPOINT_HOMEWORLD_HANDBOOK_NEXT_CHAPTER_BTN = 4311;
	public const MoleMole.RedPointId REDPOINT_HOMEWORLD_BUILD_HAVE_FURNITURE_FINISH = 4400;
	public const MoleMole.RedPointId REDPOINT_HOMEWORLD_NEW_WOOOD_EXCHANGE_UNLOCK = 4401;
	public const MoleMole.RedPointId REDPOINT_HOMEWORLD_MAP_QUEST_TIP = 4500;
	public const MoleMole.RedPointId REDPOINT_HOMEWORLD_MAP_ISLAND_FIRST_SHOWN = 4501;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BUOYANT_COMBAT_TAB = 4550;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BUOYANT_COMBAT_DETAIL = 4558;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BUOYANT_COMBAT_SUB_TAB = 4559;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL = 4600;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_REWARD = 4601;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_VOICE = 4602;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_H5 = 4700;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_H5_NOPAIMON = 4701;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_H5_FOR_SHOW = 4702;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_DAOQI_ADVERTISEMENT = 4800;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_MAINTAB = 4801;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGY_FIRE_TAB = 4802;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PERPETUAL_TAB = 4803;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_REWARD_BTN = 4804;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_DETAIL_BTN = 4805;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_GOTO_CHANLLENGE_BTN = 4806;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_CARD_BTN = 4807;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_CARD_SECTION0 = 4809;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_CARD_SECTION1 = 4809;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_CARD_SECTION2 = 4810;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_CARD_SECTION3 = 4811;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_GEAR_BTN = 4812;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHESS_OPEN_BTN = 4813;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TREASUREHUNT_BONUS_FRAGMENT = 4850;
	public const MoleMole.RedPointId REDPOINT_ORAIONOKAMI_REWARD = 4890;
	public const MoleMole.RedPointId REDPOINT_ORAIONOKAMI_NEW_LEVEL = 4891;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GENERAL_BANNER_START = 5000;
	public const MoleMole.RedPointId REDPOINT_ACTIVIYT_GENERAL_BANNER_END = 5100;
	public const MoleMole.RedPointId REDPOINT_ACTIVIYT_SUMO_TAB = 5101;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMO_REWARD = 5102;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMO_GOTO = 5103;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMO_STAGE_START = 5104;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMO_DUNGEON_ENTRY_REWARD = 5115;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMO_TAB_UNLOCKED = 5116;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMO_STAGE_ENTRY_START = 5117;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMO_GOTO_QUEST = 5128;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMO_NEW_SKILL_START = 5129;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_TAB = 5200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_SUBPAGE_QUEST = 5201;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_PLOT = 5210;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_PLOT_START = 5211;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_EXPLORE = 5220;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_EXPLORE_START = 5221;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_EXPLORE_REWARD_START = 5225;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_CHALLENGE = 5230;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_CHALLENGE_START = 5231;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_CHALLENGE_REWARD_START = 5235;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LUNARITE_CHALLENGE_SACRIFICE_START = 5261;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MOONFIN_TRIAL_TAB = 6000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MOONFIN_TRIAL_GOTO_BTN = 6001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MOONFIN_TRIAL_MISSION_TAB = 6010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MOONFIN_TRIAL_MISSION_GOTO_BTN = 6020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MOONFIN_BANNER = 6050;
	public const MoleMole.RedPointId REDPOINT_CHAT_NEW_EMOJI_SET = 6100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_TAB = 6200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_INVITE = 6201;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_DETAIL_BTN = 6202;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_DETAIL_STAGE_TAB = 6203;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_SHOWROOM_BTN = 6208;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_SHIKI_BTN = 6210;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_SHIKI_TAB = 6211;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_DUNGEON_TAB = 6231;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUELIKE_NEVER_OPEN_TAB = 6232;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_TAB = 7700;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_DETAIL = 7701;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_STAGE_1_PREQUEST = 7710;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_STAGE_1_TAB = 7730;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_STAGE_2_TAB = 7740;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_STAGE_2_QUEST = 7741;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_STAGE_3_TAB = 7750;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_STAGE_3_QUEST = 7751;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_STAGE_3_CHALLENGE = 7752;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_CHALLENGE_ACTIVE = 7760;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_STAGE_QUEST_FATHER = 7761;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_CHALLENGE_ANIMATION_PLAYED = 7762;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_END_QUEST = 7763;
	public const MoleMole.RedPointId REDPOINT_DIG_ACTIVITY_CHALLENGE_REWARD = 7764;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_TAB = 8000;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_GOTOQUEST = 8001;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_TAB_REWARD = 8002;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_TAB_MUSIC = 8003;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_MUSICREWARD_START = 8005;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_MUSICREWARD_END = 8025;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_MUSIC_NEW_START = 8026;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_MUSIC_NEW_END = 8055;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_MUSIC_LIST_START = 8056;
	public const MoleMole.RedPointId REDPOINT_MUSICGAME_ACTIVITY_MUSIC_LIST_END = 8076;
	public const MoleMole.RedPointId REDPOINT_GROWFLOWER_TAB = 8200;
	public const MoleMole.RedPointId REDPOINT_GROWFLOWER_GOTO_BTN = 8201;
	public const MoleMole.RedPointId REDPOINT_GROWFLOWER_REWARD_BTN = 8202;
	public const MoleMole.RedPointId REDPOINT_GROWFLOWER_DONATE_BTN = 8203;
	public const MoleMole.RedPointId REDPOINT_GROWFLOWER_RECV_BTN = 8204;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HACHI_TAB = 8400;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HACHI_SUBPAGE_GOTO_QUEST = 8401;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HACHI_SUBPAGE_ACTIVITY_DETAIL = 8402;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HACHI_STAGEPAGE_STAGE_TAB = 8403;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_TAB = 8500;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_CAMP_TAB = 8510;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_BOSS_TAB = 8511;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_QUEST01_PRE = 8512;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_QUEST01_SELF = 8513;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_QUEST01 = 8514;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_QUEST02 = 8515;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_QUEST = 8516;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_BOSS = 8517;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_BOSS_REWARD = 8518;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_RACE = 8520;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_EXPLORE = 8530;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_BATTLE = 8550;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_SNOWMAN_TAB = 8580;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_SNOWMAN_DONATE = 8581;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_SNOWMAN_DONATE_RECV = 8582;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_SNOWMAN_TABS = 8583;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINTERCAMP_SNOWMAN_TABS_REWARDS = 8588;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_STAGE_START_V2 = 8600;
	public const MoleMole.RedPointId REDPOINT_CHANNELLER_SLAB_LOOPDUNGEON_START_V2 = 8605;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION = 8700;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION_PREQUEST = 8701;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION_DETAIL = 8710;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION_STAGE1 = 8711;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION_STAGE1_REWARD = 8712;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION_STAGE2 = 8713;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION_STAGE2_REWARD = 8714;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION_STAGE3 = 8715;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_POTION_STAGE3_REWARD = 8716;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TANUKITRAVEL = 8800;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TANUKITRAVEL_GUIDE = 8801;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TANUKITRAVEL_ROUTE = 8802;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TANUKITRAVEL_PREORDER = 8803;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TANUKITRAVEL_ROUTE_TABS = 8810;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TANUKITRAVEL_ROUTE_TABS_PREUNLOCK = 8830;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TANUKITRAVEL_ROUTE_TABS_UNLOCK = 8840;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TANUKITRAVEL_ROUTE_TABS_REWARD = 8850;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_TAB = 8900;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_SUBPAGE_DETAIL = 8901;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_SUBPAGE_CLOTHES = 8902;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_SUBPAGE_AVATAR = 8903;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_UI3D_SALVAGE = 8910;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_SALVAGE_MAIN_TAB = 8911;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_SALVAGE_SUB_TAB = 8914;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_UI3D_MINI_ELDRITCH = 8922;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_UI3D_PROJECTION = 8931;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_PROJECTION_SUB_PAGE_QUEST = 8932;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_PROJECTION_SUB_PAGE_STAGE = 8933;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_PROJECTION_REWARD = 8934;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_PROJECTION_STAGE_TAB = 8935;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_UI3D_FIREWORK = 8960;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_FIREWORK_STAGE_TAB = 8961;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANTERN_RITE_V2_FIREWORK_STAGE_TAB_FOR_CHALLENGE = 8965;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_OFFERING_REWARD = 9000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_NEW_BATTLE_SKILL = 9001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_TAB = 9002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_PRE_QUEST_SET_BEGIN = 9003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_PRE_ACTIVITY_QUEST_BEGIN = 9004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_ACTIVITY_SUB_PAGE_UNLOCK = 9005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_BOSS_CHALLENGE = 9006;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_ACTIVITY_DETAILS = 9007;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_ACTIVITY_DETAILS_TAB = 9008;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_ACTIVITY_DETAILS_OFFERING_REWARD = 9011;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MICHIAE_ACTIVITY_OPEN = 9012;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC = 9050;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_REWARD_ENTRANCE = 9051;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_REWARD_OFFICIAL = 9052;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_REWARD_DIY = 9053;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_OFFICIAL_ENTRANCE = 9054;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_OFFICIAL_NEW_ITEM = 9055;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_DIY_ENTRANCE = 9056;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_DIY_EDIT_TAB = 9057;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_DIY_CREATE_BTN = 9058;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_UGC_SETTING_PAGE = 9059;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER = 9100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_RECIPE = 9101;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_STORY = 9102;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_CHALLENGE = 9103;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_RECIPE_FORMULA_UNLOCK = 9104;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_RECIPE_MATERIAL_UNLOCK = 9154;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_PREQUEST = 9184;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_OPENQUEST = 9185;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_RECIPE_REWARD = 9186;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_RECIPE_TAB_FORMULA = 9187;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_RECIPE_TAB_MATERIAL = 9188;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_PRESONALQUEST = 9189;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_STORY_START = 9190;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_STORY_REWARD = 9199;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_CHALLENGE_START = 9200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_CHALLENGE_REWARD_START = 9210;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_RECIPE_TAB_DRINK_TYPE = 9220;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BARTENDER_ENDINGQUEST = 9226;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_TAB = 9300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_SUBPAGE_DETAIL = 9301;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_SUBPAGE_AVATAR = 9302;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_SUBPAGE_STORY = 9303;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_STORY_TAB = 9304;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_STORY_BUTTON = 9314;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_MAIN_PHOTO = 9324;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_MAIN_CHESS = 9325;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_MAIN_MASTER = 9326;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_MAIN_FLOWER = 9327;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_FLOWER_STAGE_TAB = 9328;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_FLOWER_NEW_STAGE = 9332;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_FLOWER_NEW_REWARD = 9336;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_FLOWER_MAIN_CODEX = 9340;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_FLOWER_RIDDLE_CHECK_BUTTON = 9341;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_MASTER_STAGE_TAB = 9350;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_MASTER_STAGE_OPEN = 9355;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_PHOTO_STAGE_TAB = 9360;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_PHOTO_STAGE_OPEN = 9365;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_MASTER_GUIDE_OPEN = 9370;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_PHOTO_GUIDE_OPEN = 9371;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_FLOWER_GUIDE_OPEN = 9372;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_GUIDE_OPEN = 9373;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_STAGE_TAB = 9400;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_DETAIL_PAGE_MAP_TAB = 9404;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_DETAIL_PAGE_MONSTER_TAB = 9405;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_DETAIL_PAGE_MAP_LEVEL_TAB = 9406;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_DETAIL_PAGE_MAP_LEVEL_SUBTAB = 9410;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_DETAIL_PAGE_MONSTER_LEVEL_TAB = 9418;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_DETAIL_PAGE_MONSTER_LEVEL_SUBTAB = 9422;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_ENTRY_PAGE_LEVEL_TAB = 9430;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_IRODORI_CHESS_ENTRY_PAGE_LEVEL_SUBTAB = 9434;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_TAB = 9500;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_NEVER_OPEN = 9501;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_PREQUEST_FINISH = 9502;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_OPENQUEST_FINISH = 9503;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_LEVEL_WATCHER_PAR = 9504;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_LEVEL_WATCHER = 9505;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_NEW_DUNGEON_PAR = 9530;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_NEW_DUNGEON = 9531;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CRYSTAL_LINK_NEW_DUNGEON_ENTRY = 9545;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PHOTO_TAB = 9560;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PHOTO_SUBPAGE_ACTIVITY_DETAIL = 9561;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PHOTO_SUBPAGE_PHOTO_POS_BASE = 9570;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PHOTO_SUBPAGE_PHOTO_POS_END = 9590;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SPICE_OPEN = 9699;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SPICE_TAB = 9700;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SPICE_MAKE = 9701;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SPICE_REWARD = 9702;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SPICE_DETAIL = 9705;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUSIC_GAME_V3_TAB = 9600;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUSIC_GAME_V3_PREQUEST = 9601;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUSIC_GAME_V3_INVITATION = 9602;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUSIC_GAME_V3_OPENQUEST = 9603;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUSIC_GAME_V3_LEVEL_ENTRY = 9604;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUSIC_GAME_V3_ALBUM = 9605;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUSIC_GAME_V3_REWARD = 9616;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUSIC_GAME_V3_BAN = 9630;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY = 9720;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_QUEST_ENTRY = 9721;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_DUNGEON_ENTRY = 9722;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_QUEST_TAB_1 = 9723;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_QUEST_TAB_2 = 9724;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_QUEST_TAB_3 = 9725;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_QUEST_TAB_4 = 9726;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_STAGE_TAB_1 = 9727;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_STAGE_TAB_2 = 9728;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_STAGE_TAB_3 = 9729;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_STAGE_TAB_4 = 9730;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_QUEST_REWARD = 9731;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ROGUEDIARY_INDUNGEON_MONSTERREFRESH = 9740;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_SUBPAGE_TAB = 9800;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_OPENQUEST_BTN = 9801;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_BTN = 9802;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_FREEMODE_BTN = 9803;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_STAGE_1 = 9804;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_STAGE_2 = 9805;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_STAGE_3 = 9806;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_REWARD_1 = 9807;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_REWARD_2 = 9808;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_REWARD_3 = 9809;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_GOTO = 9810;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_FREEMODE_GOTO = 9811;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_GIFT_BTN = 9812;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_MY_GIFT_BTN = 9813;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_FETCH_GIFT_BTN = 9814;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_WATCHER_REWARD_BTN = 9815;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_STAGE_OPEN_1 = 9816;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_STAGE_OPEN_2 = 9817;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_STAGE_OPEN_3 = 9818;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_QUEST_OPEN_1 = 9819;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_QUEST_OPEN_2 = 9820;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_TEACHMODE_QUEST_OPEN_3 = 9821;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GACHA_EXCCHANGE_BAG_DAY = 9822;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY__CHASMCHALLENGE_SUBPAGE_TAB = 9900;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY__CHASMCHALLENGE_GO_TO_CHALLENGE = 9901;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY__CHASMCHALLENGE_TAB = 9902;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY__CHASMCHALLENGE_NEW_STAGE = 9907;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY__CHASMCHALLENGE_STAGE_REWARD = 9912;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY__CHASMCHALLENGE_FINAL_STAGE_GALLERY_UNLOCK = 9917;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_TAB = 281000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_NEVER_OPEN = 281001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_PREQUEST_FINISH = 281002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_OPENQUEST_FINISH = 281003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_LEVEL_WATCHER_ALL = 281005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_NEW_DUNGEON_PAR = 281030;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_NEW_DUNGEON = 281031;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_NEW_DUNGEON_ENTRY = 281041;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_LEVEL_WATCHER_ENTRY = 281051;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_CRAZY_MODE_ENTRY = 281061;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ARENACHALLENGE_NORMAL_MODE_ENTRY = 281071;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ISLANDPARTY_TAB = 282000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ISLANDPARTY_SUBPAGE_DETAIL = 282001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ISLANDPARTY_SUBPAGE_MIDDLEQUEST = 282002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ISLANDPARTY_MAINPAGE_NEWTAB = 282100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ISLANDPARTY_MAINPAGE_TAB = 282200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ISLANDPARTY_MPPAGE_TAB = 282300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_V2_TAB = 283000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_V2_PREQUEST = 283001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_V2_REWARD_ENTRY = 283002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_V2_KNIGHT_ENTRY = 283003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_V2_FATUI_ENTRY = 283004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_V2_FATUI_TAB = 283005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_V2_SPECIAL_ITEM = 283010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_ECHOSHELL_V2_ITEM = 283011;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_TAB = 284000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_DETAIL = 284001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_AVTAR = 284002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_PRE_QUEST = 284003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_MIDDLE_QUEST = 284004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_TUTORIAL = 284005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_SUBACTIVITY_BUTTON_START = 284010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_SUBACTIVITY_REWARD_START = 284015;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_BOAT_STAGE_START = 284020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_BOAT_REWARD_START = 284030;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SUMMERTIME_V2_DUNGEON_CIRCLE_START = 284040;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GEAR_TAB = 285000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GEAR_SUBPAGE_ACTIVITY_DETAIL = 285001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GEAR_SUBPAGE_JIGSAW_LEVEL = 285002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GEAR_SUBPAGE_REWARD = 285003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GEAR_SUBPAGE_GEAR_LEVEL = 285010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GEAR_LEVEL_SELECT_PAGE = 285020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GEAR_LEVEL_SELECT_REWARD = 285021;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GEAR_LEVEL_SELECT_GEAR_LEVEL = 285030;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TREASUREHUNT_TAB = 300000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TREASUREHUNT_NEW_REGION_START = 300001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TREASUREHUNT_NEW_REGION_END = 300006;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TREASUREHUNT_DETAIL = 300007;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_INSTABLEPSRAY_SUBPAGE_TAB = 300101;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_INSTABLEPSRAY_GO_TO_CHALLENGE = 300102;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_INSTABLESPRAY_TAB = 300103;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_INSTABLESPRAY_NEW_STAGE = 300111;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_INSTABLESPRAY_STAGE_REWARD = 300121;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_INSTABLESPRAY_POST_QUEST = 300140;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_TAB = 301000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_ENTRY_STORY = 301001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_ENTRY_INVESTIGATION = 301002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_ENTRY_CARVE = 301003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_STATE_OPTIONAL_PRE_QUEST = 301004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_STATE_GUIDE_QUEST = 301005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_CARVE_STAGE_UNLOCK = 301010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_TAB_PHOTOGRAPH = 301100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_TAB_BOSS = 301101;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_TAB_RACE = 301102;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_TAB_CAMP = 301103;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_PHOTOGRAPH_STAGES_START = 301200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_PHOTOGRAPH_PHOTOS = 301210;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_PHOTOGRAPH_QUEST = 301270;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_RACE_START = 301300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_CAMP_START = 301400;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_BOSS_REGION = 301500;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_BOSS_BOSS = 301510;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_BOSS_REWARD = 301520;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_PHOTOGRAPH_UNLOCK_START = 301600;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_RACE_UNLOCK_START = 301610;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GRAVEN_INNOCENCE_CAMP_UNLOCK_START = 301620;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUQADAS_POTION = 302000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUQADAS_POTION_INFO_BTN = 302001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUQADAS_POTION_LEVEL_TAB = 302002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_MUQADAS_POTION_ENTRY_TAB = 302011;
	public const MoleMole.RedPointId REDPOINT_VANASARA_REWARD = 303000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINDFIELD_TAB = 311000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINDFIELD_SUBPAGE_DETAIL = 311001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINDFIELD_DETAILPAGE_TAB = 311100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINDFIELD_DETAILPAGE_NEWTAB = 311200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_WINDFIELD_CHALLENGEPAGE_TAB = 311300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EXPLORE_TAB = 312000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EXPLORE_SUBPAGE_ACTIVITY_DETAIL = 312001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EXPLORE_STAGE_BASE = 312020;
	public const MoleMole.RedPointId REDPOINT_GCG_HANDBOOK_ICON = 10010000;
	public const MoleMole.RedPointId REDPOINT_GCG_HANDBOOK_TAB_LEVEL = 10010001;
	public const MoleMole.RedPointId REDPOINT_GCG_HANDBOOK_LEVEL_NEXT_PAGE = 10010002;
	public const MoleMole.RedPointId REDPOINT_GCG_HANDBOOK_LEVEL_PREV_PAGE = 10010003;
	public const MoleMole.RedPointId REDPOINT_GCG_HANDBOOK_TAB_CHALLENGE = 10010004;
	public const MoleMole.RedPointId REDPOINT_GCG_HANDBOOK_CHALLENGE_BASE = 10010005;
	public const MoleMole.RedPointId REDPOINT_GCG_LEVEL_REWARD_BTN = 10010011;
	public const MoleMole.RedPointId REDPOINT_GCG_MALL_TAB_BASE = 10010020;
	public const MoleMole.RedPointId REDPOINT_GCG_MALL_SUBTAB_BASE = 10010030;
	public const MoleMole.RedPointId REDPOINT_GCG_LEVEL_TAB_BASE = 10010070;
	public const MoleMole.RedPointId REDPOINT_GCG_PROFICIENCY_REWARD_BTN = 10010121;
	public const MoleMole.RedPointId REDPOINT_GCG_ROLE_TAP = 10010122;
	public const MoleMole.RedPointId REDPOINT_GCG_BAG_DECK_TAB = 10010131;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_TAB = 313000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_1 = 313001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_2 = 313002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_3 = 313003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_OPEN_1 = 313004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_OPEN_2 = 313005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_OPEN_3 = 313006;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_REWARD_1 = 313007;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_REWARD_2 = 313008;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_STAGE_REWARD_3 = 313009;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_CAMPCHALLENGE_GOTOQUEST = 313010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_TAB = 313100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_GOTOQUEST = 313101;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_STAGE_OPEN_1 = 313102;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_STAGE_OPEN_2 = 313103;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_STAGE_OPEN_3 = 313104;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_DECORATE_TAB = 313105;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_DECORATE_GOTOQUEST = 313106;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_DECORATE_REWARD = 313107;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_ENTRY_TAB = 313108;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_STAGE_FINISH_1 = 313109;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_STAGE_FINISH_2 = 313110;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_PRESENT_STAGE_FINISH_3 = 313111;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_HUNTING_TAB = 313200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_HUNTING_STAGE_BEGIN = 313201;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_HUNTING_STAGE_OPEN_BEGIN = 313211;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_HUNTING_STAGE_REWARD_BEGIN = 313221;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_HUNTING_QUEST = 313231;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_TAB = 313300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_EXCHANGE = 313301;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_QUEST_ENTRY = 313302;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_DETAIL_ENTRY = 313303;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_QUEST_BEGIN = 313304;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_TAB = 313400;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_OPENQUEST = 313401;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_RAISE_MONEY = 313402;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_MANAGE = 313403;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_MANAGE_STAGE1_TAB = 313404;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_MANAGE_STAGE2_TAB = 313405;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_MANAGE_STAGE2_QUEST = 313406;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_RAISE_MONEY_REWARD = 313407;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_MANAGE_STAGE1_REWARD = 313408;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_MANAGE_STAGE2_REWARD = 313409;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_DETAIL_REPORT = 313410;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_DETAIL = 313411;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_VINTAGE_MARKET_MANAGE_STAGE1_QUEST = 313412;
	public const MoleMole.RedPointId REDPOINT_DESHRET_ID_CARD_NEWLEVEL = 314000;
	public const MoleMole.RedPointId REDPOINT_DESHRET_ID_CARD_BAG = 314001;
	public const MoleMole.RedPointId REDPOINT_DESHRET_ID_CARD_NEW_POI = 314100;
	public const MoleMole.RedPointId REDPOINT_DESHRET_ID_CARD_QUEST = 314200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PHOTO_TAB_V2 = 321000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PHOTO_SUBPAGE_ACTIVITY_DETAIL_V2 = 321020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PHOTO_SUBPAGE_PHOTO_POS_BASE_V2 = 321030;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PHOTO_SUBPAGE_PHOTO_POS_END_V2 = 321099;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHAR_AMUSEMENT_TAB = 322000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHAR_AMUSEMENT_DETAIL = 322001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHAR_AMUSEMENT_REWARD = 322002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_CHAR_AMUSEMENT_STAGE_START = 322010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_TAB = 323000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL = 323001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_CAPTURE = 323002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_DUNGEON = 323003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_EDUCATION = 323004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_DUNGEON_ATTACK = 323005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_DUNGEON_DEFEND = 323006;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_CAPTURE_QUEST = 323007;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_CAPTURE_UNLOCK = 323008;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_DUNGEON_QUEST = 323009;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_DUNGEON_UNLOCK = 323010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_EDUCATION_QUEST = 323011;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_EDUCATION_UNLOCK = 323012;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_NEW_CAPTURE = 323013;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_CAPTURE_NEW_STAGE = 323020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DUNGEON_ATTACK_NEW_STAGE = 323040;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DUNGEON_DEFEND_NEW_STAGE = 323060;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_EDUCATION_NEW_STAGE = 323080;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_CAPTURE_STAGE_REWARD = 323100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DUNGEON_ATTACK_STAGE_REWARD = 323120;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DUNGEON_DEFEND_STAGE_REWARD = 323140;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_EDUCATION_STAGE_REWARD = 323160;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_CODEX_NEW_FUNGUS = 323180;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_NEW_CODEX = 323200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_GET_AVATAR = 323201;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_PLOT_ENTRY = 323202;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_TAB_FINISH_UNLOCK_QUEST = 323203;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_TAB_FINISH_PRE_QUEST = 323204;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_TAB_FINISH_GUIDE_QUEST = 323205;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_PLOT_NEW_STAGE = 323206;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DETAIL_EDUCATION_STAGE_TAB = 323215;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_EDUCATION_NEW_FUNGUS = 323220;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_NEW_EDUCATION = 323235;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DUNGEON_ENTRY_ATTACK_TAB = 323300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DUNGEON_ENTRY_ATTACK = 323301;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DUNGEON_ENTRY_DEFEND_TAB = 323400;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUSFIGHTER_DUNGEON_ENTRY_DEFEND = 323401;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_TAB = 324000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_INFO = 324001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_LEVEL_TAB = 324002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_INFO_TAB1 = 324006;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_INFO_TAB2 = 324010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_ENTRY_TAB = 324014;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_TOP_DIFFICULTY = 324018;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_ENTRY_REWARD = 324022;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_EFFIGYV2_CHALLENGE_INFO_BTN = 324026;
	public const MoleMole.RedPointId REDPOINT_HOMEWORLD_BLUEPRINT_NEW_TAB = 325000;
	public const MoleMole.RedPointId REDPOINT_HOMEWORLD_HANDBOOK_NEW_TAB = 325001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_TAB = 331000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_TAB_MIDDLE_QUEST = 331001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_TAB_QUEST = 331002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_TAB_WORLD = 331003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_TAB_DUNGEON = 331004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_TAB_STAGE = 331005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_TUTORIAL = 331100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_MECHANISM = 331101;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_WORLD_STAGE = 331110;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_WORLD_LEVEL = 331120;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_WORLD_LEVEL_NEW = 331130;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_DUNGEON_STAGE = 331140;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_DUNGEON_STAGE_NEW = 331150;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_WORLD_STAGE_NEW = 331160;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_BRICK_BREAKER_MECHANISM_BUFF = 331200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_COIN_COLLECT_TAB = 332000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_COIN_COLLECT_TAB_GUIDE_QUEST = 332001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_COIN_COLLECT_TAB_DETAIL = 332002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_COIN_COLLECT_DETAIL_TAB_NEW = 332100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_COIN_COLLECT_DETAIL_NEW_LEVEL = 332120;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_COIN_COLLECT_DETAIL_NEW_REWARD = 332140;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_COIN_COLLECT_ENTRY_SELECT_SKILL = 332200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_COIN_COLLECT_SELECT_SKILL_NEW = 332300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HERCULES_BATTLE_TAB = 341000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HERCULES_BATTLE_ACTIVITY_DETAIL = 341001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HERCULES_BATTLE_END_QUEST = 341002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_HERCULES_BATTLE_STAGE_BASE = 341020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_DUEL_HEART_TAB = 342000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_DUEL_HEART_TAB_MIDDLE_QUEST_NEW = 342001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_DUEL_HEART_LEVEL_TAB = 342002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_DUEL_HEART_TASK_TAB = 342003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_DUEL_HEART_PLOT_TASK_BASE = 342010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_DUEL_HEART_LEVEL_PAGE_BASE = 342030;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TEAM_CHAIN_TAB = 343000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TEAM_CHAIN_DETAIL = 343001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TEAM_CHAIN_EXCHANGE = 343002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TEAM_CHAIN_EXCHANGE_DIALOG_BUTTON = 343003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TEAM_CHAIN_DETAIL_TAB = 343010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_TEAM_CHAIN_LEVEL_PAGE_BASE = 343020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SHADOW_GAME_LEVEL_OPEN_START = 344000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SHADOW_GAME_NEW_REWARD = 344021;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_SUBPAGE_TAB = 344500;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_FESTVITAL = 344501;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_STORY = 344502;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_DETAIL = 344503;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_RACE = 344504;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_SHADOW = 344505;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_BOAT = 344506;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_CAMP = 344507;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_FESTIVAL_NEWREWARD = 344508;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_STORY_NEW_STAGE = 344510;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_RACE_PRECONDITION = 344515;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_SHADOW_PRECONDITION = 344516;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_BOAT_PRECONDITION = 344517;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_CAMP_PRECONDITION = 344518;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_RACE_TAB = 344520;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_RACE_NEW_STAGE = 344530;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_RACE_NEW_REWARD = 344540;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_SHADOW_TAB = 344550;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_SHADOW_NEW_STAGE = 344560;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_SHADOW_NEW_REWARD = 344570;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_BOAT_TAB = 344580;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_BOAT_NEW_REWARD = 344581;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_CAMP_TAB = 344590;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_CAMP_NEW_STAGE = 344600;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_CAMP_NEW_REWARD = 344610;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_MAIN_PAGE_FIRST_SEEN = 344620;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_SHADOW_POST_QUEST = 344630;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_BOAT_PREVIEW_BTN = 344640;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_BOAT_MAP_ALL_VIEWED = 344641;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_LANV3_BOAT_NEW_STAGE = 344650;
	public const MoleMole.RedPointId REDPOINT_WEATHER_WIZARD_BAG_NEW_MARK = 345000;
	public const MoleMole.RedPointId REDPOINT_RAVINE_SANDY_LAND_TAB = 346000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_SUBPAGE = 351000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_SUBPAGE_START = 351001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_SUBPAGE_MIDDLEQUEST = 351002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_SUBPAGE_GUIDE_QUEST = 351003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_STORY = 351100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_STORY_TAB = 351101;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_PHOTOGRAPH = 351200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_PHOTOGRAPH_PREQUEST = 351201;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_PHOTOGRAP_TAB = 351210;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_PHOTOGRAPH_ITEM = 351300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_PHOTOGRAPH_ITEM_VIEW = 351310;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_PHOTOGRAPH_ITEM_REWARD = 351320;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_MUSIC = 351400;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_PACMAN = 351600;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_MUSIC_FIRST = 351499;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FLEURFAIR_V2_PACMAN_FIRST = 351699;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PACMAN_DETAILPAGE_STAGE = 351610;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PACMAN_DETAILPAGE_STAGE_NEW = 351620;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PACMAN_CHALLENGEPAGE_STAGE = 351630;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PACMAN_CHALLENGEPAGE_STAGE_NEW = 351640;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_PACMAN_CHALLENGEPAGE_REWARD = 351650;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_TAB = 352000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_DETAIL_BUTTON = 352001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_ILLUSTRATION_BUTTON = 352002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_ILLUSTRATION_TAB_FUNGUS = 352003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_TAB_SEQUEL = 352004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_TAB_INPROGRESS = 352005;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_INLLUSTATION_FUNGUS_ENTRY = 352100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_LEVEL_ENTRY = 352200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_FUNGUS_FIGHTER_V2_ILLUSTRATION_WITH_CONSTRAIN = 352300;
	public const MoleMole.RedPointId REDPOINT_REUNION_BANNER_ITEMS = 353000;
	public const MoleMole.RedPointId REDPOINT_OFFERING_PARI = 360000;
	public const MoleMole.RedPointId REDPOINT_OFFERING_PARI_EXTRA_REWARD = 360001;
	public const MoleMole.RedPointId REDPOINT_OFFERING_PARI_RADAR = 360002;
	public const MoleMole.RedPointId REDPOINT_OFFERING_PARI_EXTRA_REWARD_BTN = 360003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_TAB = 361000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_FESTVITAL = 361001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_STORY = 361002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_DETAIL = 361003;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_FESTIVAL_NEW_REWARD = 361004;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_STORY_NEW_STAGE = 361010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_POTION = 361100;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_POTION_TAB = 361110;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_POTION_NEW_STAGE = 361120;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_POTION_NEW_REWARD = 361130;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_REASONING_LEVEL_NEW = 361200;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_REASONING_KEYWORD_NEW = 361210;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_REASONING = 361241;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_REASONING_TAB = 361242;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_REASONING_TAB_REWARD = 361250;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_REASONING_KEYWORD_NEW_EFFECT = 361260;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ARCHAEOLOGY_NEW_STAGE = 361300;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ARCHAEOLOGY_NEW_REWARD = 361310;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ARCHAEOLOGY = 361320;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_RHYTHM = 361400;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_RHYTHM_TAB = 361410;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_RHYTHM_STAGE_TAB = 361420;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ASTROLABE = 361500;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ASTROLABE_REWARD_BTN = 361501;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ASTROLABE_TAB = 361510;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ASTROLABE_NEW_REWARD = 361520;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ASTROLABE_NEW_LEVEL = 361530;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ASTROLABE_NEW_LEVEL_IN_GAME = 361540;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ARCHITECT = 361600;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ARCHITECT_SUB_PAGE_NEW_LEVEL = 361610;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ARCHITECT_SUB_PAGE_TAB = 361620;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ARCHITECT_NEW_REWARD = 361630;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_AKA_FES_ARCHITECT_DUNGEON_PAGE_NEW_LEVEL = 361640;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SAND_WORM_CANNON_TAB = 362000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SAND_WORM_CANNON_TAB_OPEN = 362001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SAND_WORM_CANNON_DETAIL_BUTTON = 362002;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SAND_WORM_CANNON_STAGE_TAB = 362010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SAND_WORM_CANNON_STAGE_UNLOCK = 362020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SAND_WORM_CANNON_STAGE_QUEST_FINISH = 362030;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SAND_WORM_CANNON_STAGE_REWARD = 362040;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SORUSH_TRIAL_TAB = 363000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SORUSH_TRIAL_ACTIVITY_DETAIL = 363001;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SORUSH_TRIAL_LEVEL = 363010;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_SORUSH_TRIAL_DETAIL_STAGE = 363020;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GCG_FESTIVAL_TAB = 364000;
	public const MoleMole.RedPointId REDPOINT_ACTIVITY_GCG_FESTIVAL_UNLOCK = 364001;
}
public enum DPNDOCIAPDO
{
	// Fields
	public const DPNDOCIAPDO DEFAULT = 0;
	public const DPNDOCIAPDO NUM = 1;
	public const DPNDOCIAPDO NEW = 2;
	public const DPNDOCIAPDO EXCL = 3;
}
public enum KJKBECJIMIH
{
	// Fields
	public const KJKBECJIMIH Water = 0;
	public const KJKBECJIMIH Occluder = 1;
}
public enum ALCGFGAGCCL
{
	// Fields
	public const ALCGFGAGCCL Static = 0;
	public const ALCGFGAGCCL Dynamic = 1;
}
public enum LNPPFHMLLAI
{
	// Fields
	public const LNPPFHMLLAI None = 0;
	public const LNPPFHMLLAI Position = 1;
	public const LNPPFHMLLAI Rotation = 2;
}
public enum LBLNBCJIEAG.JKBINJGIIKJ
{
	// Fields
	public const LBLNBCJIEAG.JKBINJGIIKJ Idle = 0;
	public const LBLNBCJIEAG.JKBINJGIIKJ Shaking = 1;
	public const LBLNBCJIEAG.JKBINJGIIKJ FadeOut = 2;
	public const LBLNBCJIEAG.JKBINJGIIKJ Finish = 3;
}
public enum LFILNDAOOIH
{
	// Fields
	public const LFILNDAOOIH World = 0;
	public const LFILNDAOOIH Dungeon = 1;
	public const LFILNDAOOIH Room = 2;
	public const LFILNDAOOIH HomeworldExternal = 3;
	public const LFILNDAOOIH HomeworldInternal = 4;
}
public enum ILMNNEPJFLA
{
	// Fields
	public const ILMNNEPJFLA INVALID = -1;
	public const ILMNNEPJFLA TOKEN_PASS = 0;
	public const ILMNNEPJFLA TOKEN_DISCARD = 1;
	public const ILMNNEPJFLA TOKEN_DELAY = 2;
	public const ILMNNEPJFLA COUNT = 3;
}
public enum DGOGJEJMONP
{
	// Fields
	public const DGOGJEJMONP None = 0;
	public const DGOGJEJMONP VehicleInteract = 1;
}
public enum MHKHODEFANJ
{
	// Fields
	public const MHKHODEFANJ None = 0;
	public const MHKHODEFANJ Normal = 1;
	public const MHKHODEFANJ TabMenu = 2;
	public const MHKHODEFANJ WheelMenu = 3;
	public const MHKHODEFANJ Disable = 4;
	public const MHKHODEFANJ Block = 5;
	public const MHKHODEFANJ SimpleMenu = 6;
	public const MHKHODEFANJ ScrollerMenu = 7;
}
public enum DEMPBBBHGED
{
	// Fields
	public const DEMPBBBHGED Invalid = 0;
	public const DEMPBBBHGED Xbox360Joypad = 1;
	public const DEMPBBBHGED DualShock4Joypad = 2;
	public const DEMPBBBHGED OtherController = 3;
	public const DEMPBBBHGED UnknownController = 4;
}
public enum GHACCPFPGDB
{
	// Fields
	public const GHACCPFPGDB Locked = -1;
	public const GHACCPFPGDB DontCare = 0;
	public const GHACCPFPGDB Normal = 1000;
}
public enum CAEJEAPKODH.MOIMEBJIDCG
{
	// Fields
	public const CAEJEAPKODH.MOIMEBJIDCG Normal = 0;
	public const CAEJEAPKODH.MOIMEBJIDCG Focus = 1;
}
public enum CAEJEAPKODH.DEBBFOBPGIA
{
	// Fields
	public const CAEJEAPKODH.DEBBFOBPGIA X = 0;
	public const CAEJEAPKODH.DEBBFOBPGIA Y = 1;
}
public enum ActorUtils.BanUIReasonType
{
	// Fields
	public const ActorUtils.BanUIReasonType Quest = 0;
	public const ActorUtils.BanUIReasonType Common = 1;
}
public enum NCODBENIGBH
{
	// Fields
	public const NCODBENIGBH Equal = 0;
	public const NCODBENIGBH Greater = 1;
	public const NCODBENIGBH Less = 2;
}
public enum JIJNNEGEABH
{
	// Fields
	public const JIJNNEGEABH NONE = 0;
	public const JIJNNEGEABH QUEST = 1;
}
public enum CHMFNKHJKGF
{
	// Fields
	public const CHMFNKHJKGF None = 0;
	public const CHMFNKHJKGF Nahida = 1;
	public const CHMFNKHJKGF Narrator = 2;
	public const CHMFNKHJKGF Reminder = 3;
}
public enum LPKJPBDMBNJ
{
	// Fields
	public const LPKJPBDMBNJ None = 0;
	public const LPKJPBDMBNJ AvatarFightPropWatcher = 1;
}
public enum ENpcMarkIconReason
{
	// Fields
	public const ENpcMarkIconReason Invalid = -1;
	public const ENpcMarkIconReason Self = 0;
	public const ENpcMarkIconReason Quest = 1;
	public const ENpcMarkIconReason Card = 2;
	public const ENpcMarkIconReason Usual = 3;
}
public enum ENpcTitleReason
{
	// Fields
	public const ENpcTitleReason Invalid = -1;
	public const ENpcTitleReason Quest = 0;
	public const ENpcTitleReason Self = 1;
	public const ENpcTitleReason Card = 2;
}
public enum ActorEvent.EventType
{
	// Fields
	public const ActorEvent.EventType INVALID = -1;
	public const ActorEvent.EventType NORMAL = 0;
	public const ActorEvent.EventType PAUSE = 1;
	public const ActorEvent.EventType RESUME = 2;
}
public enum PJEGOFDFFJE
{
	// Fields
	public const PJEGOFDFFJE None = 0;
	public const PJEGOFDFFJE Stand = 1;
	public const PJEGOFDFFJE Patrol = 2;
	public const PJEGOFDFFJE Sit = 3;
	public const PJEGOFDFFJE Hide = 4;
}
public enum ABCADIGDBDB
{
	// Fields
	public const ABCADIGDBDB Walk = 0;
	public const ABCADIGDBDB FloatingWalk = 1;
}
public enum OIIDGHNBFGK
{
	// Fields
	public const OIIDGHNBFGK None = 0;
	public const OIIDGHNBFGK BodyLang = 1;
	public const OIIDGHNBFGK OnCollide = 2;
}
public enum CPEOHKAMHJB
{
	// Fields
	public const CPEOHKAMHJB None = 0;
	public const CPEOHKAMHJB AlwaysHide = 1;
	public const CPEOHKAMHJB BanDaily = 2;
	public const CPEOHKAMHJB Interaction = 3;
	public const CPEOHKAMHJB Hold = 4;
}
public enum COIFNDIPLEB
{
	// Fields
	public const COIFNDIPLEB Always = 0;
	public const COIFNDIPLEB OnlyOnce = 1;
	public const COIFNDIPLEB Ignore = 2;
}
public enum MIOABMBNGLI
{
	// Fields
	public const MIOABMBNGLI NullTransition = 0;
	public const MIOABMBNGLI PerformPatrol = 1;
	public const MIOABMBNGLI PerformStandBy = 2;
	public const MIOABMBNGLI PerformSit = 3;
	public const MIOABMBNGLI PerformHide = 4;
	public const MIOABMBNGLI PerformReaction = 5;
	public const MIOABMBNGLI PerformScripted = 6;
	public const MIOABMBNGLI PerformFlee = 7;
}
public enum JNKICCIGBCE
{
	// Fields
	public const JNKICCIGBCE NullStateID = 0;
	public const JNKICCIGBCE FollowPath = 1;
	public const JNKICCIGBCE StandBy = 2;
	public const JNKICCIGBCE Sit = 3;
	public const JNKICCIGBCE Hide = 4;
	public const JNKICCIGBCE Reaction = 5;
	public const JNKICCIGBCE Scripted = 6;
	public const JNKICCIGBCE Flee = 7;
}
public enum FHMDIBGEDCN
{
	// Fields
	public const FHMDIBGEDCN None = 0;
	public const FHMDIBGEDCN INpcActionCond = 1;
	public const FHMDIBGEDCN NpcActionSceneCondition = 2;
	public const FHMDIBGEDCN NpcActionDayNightCondition = 3;
	public const FHMDIBGEDCN NpcActionAvatarFetterCondition = 4;
	public const FHMDIBGEDCN NpcActionHomeEventCondition = 5;
	public const FHMDIBGEDCN NpcActionMainQuestCondition = 6;
	public const FHMDIBGEDCN NpcActionSubQuestCondition = 7;
	public const FHMDIBGEDCN NpcActionScenePointUnlockCondition = 8;
	public const FHMDIBGEDCN NpcActionQuestGlobalVarCondition = 9;
	public const FHMDIBGEDCN NpcActionActivityCondCondition = 10;
	public const FHMDIBGEDCN NpcActionLevelTagCondition = 11;
	public const FHMDIBGEDCN NpcActionTaskVarCondition = 12;
	public const FHMDIBGEDCN NpcActionDistToPlayerCondition = 13;
	public const FHMDIBGEDCN NpcActionCardEventCondition = 14;
	public const FHMDIBGEDCN NpcActionCommonCondition = 15;
	public const FHMDIBGEDCN IPointType = 50;
	public const FHMDIBGEDCN StandardPoint = 51;
	public const FHMDIBGEDCN HomeBornPos = 52;
	public const FHMDIBGEDCN NpcCurBornPos = 53;
	public const FHMDIBGEDCN HomeEventPos = 54;
	public const FHMDIBGEDCN CardShowPos = 55;
}
public enum ADHJENPOEJH
{
	// Fields
	public const ADHJENPOEJH PROCESS_STARTED = 0;
	public const ADHJENPOEJH PROCESS_CANCELLED = 1;
	public const ADHJENPOEJH PROCESS_COMPLETED = 2;
	public const ADHJENPOEJH ENTITY_CREATED = 3;
	public const ADHJENPOEJH ENTITY_INITIALIZED = 4;
	public const ADHJENPOEJH ENTITY_UPDATED = 5;
	public const ADHJENPOEJH ENTITY_DELETED = 6;
	public const ADHJENPOEJH ENTITY_SUSPENDED = 7;
	public const ADHJENPOEJH ENTITY_ACTIVATED = 8;
	public const ADHJENPOEJH ACTIVITY_STARTED = 9;
	public const ADHJENPOEJH ACTIVITY_COMPLETED = 10;
	public const ADHJENPOEJH ACTIVITY_CANCELLED = 11;
	public const ADHJENPOEJH ACTIVITY_SIGNALED = 12;
	public const ADHJENPOEJH SEQUENCEFLOW_TAKEN = 13;
	public const ADHJENPOEJH TASK_CREATED = 14;
	public const ADHJENPOEJH TASK_ASSIGNED = 15;
	public const ADHJENPOEJH TASK_COMPLETED = 16;
}
public enum OKOJPMLJNOH
{
	// Fields
	public const OKOJPMLJNOH TM_Transfer = 0;
	public const OKOJPMLJNOH TM_Return = 1;
}
public enum BOHHAONCKPE.ILMADKHDGEH
{
	// Fields
	public const BOHHAONCKPE.ILMADKHDGEH NONE = 0;
	public const BOHHAONCKPE.ILMADKHDGEH DEPLOYING = 1;
	public const BOHHAONCKPE.ILMADKHDGEH DEPLOYED = 2;
}
public enum BOHHAONCKPE.BJKALFIJCGJ
{
	// Fields
	public const BOHHAONCKPE.BJKALFIJCGJ NONE = 0;
	public const BOHHAONCKPE.BJKALFIJCGJ CHECK = 1;
	public const BOHHAONCKPE.BJKALFIJCGJ SUBMITTED = 2;
	public const BOHHAONCKPE.BJKALFIJCGJ SHOOTING = 3;
	public const BOHHAONCKPE.BJKALFIJCGJ ENDED = 4;
}
public enum BOHHAONCKPE.IIJEILFADBK
{
	// Fields
	public const BOHHAONCKPE.IIJEILFADBK NORMAL = 0;
	public const BOHHAONCKPE.IIJEILFADBK CANCELED = 1;
}
public enum LuaNpcFollowPlayerTask.EFollowStrategy
{
	// Fields
	public const LuaNpcFollowPlayerTask.EFollowStrategy Legacy = 0;
	public const LuaNpcFollowPlayerTask.EFollowStrategy Steer = 1;
}
public enum LuaNpcFollowPlayerTask.ENpcLimitState
{
	// Fields
	public const LuaNpcFollowPlayerTask.ENpcLimitState Normal = 0;
	public const LuaNpcFollowPlayerTask.ENpcLimitState Limited = 1;
	public const LuaNpcFollowPlayerTask.ENpcLimitState Resume = 2;
}
public enum ENOPEBMHFJD.CEBFGAMNDGJ
{
	// Fields
	public uint value__; // 0x10
	public const ENOPEBMHFJD.CEBFGAMNDGJ INFO = 0;
	public const ENOPEBMHFJD.CEBFGAMNDGJ WARNING = 1;
	public const ENOPEBMHFJD.CEBFGAMNDGJ ERROR = 2;
	public const ENOPEBMHFJD.CEBFGAMNDGJ FATAL = 3;
}
public enum ENOPEBMHFJD.MEJDKENIMGA
{
	// Fields
	public uint value__; // 0x10
	public const ENOPEBMHFJD.MEJDKENIMGA NONE = 0;
	public const ENOPEBMHFJD.MEJDKENIMGA FILE = 1;
	public const ENOPEBMHFJD.MEJDKENIMGA CONSOLE = 2;
}
public enum ENOPEBMHFJD.MGPDENHCMAB
{
	// Fields
	public const ENOPEBMHFJD.MGPDENHCMAB HIGH = 0;
	public const ENOPEBMHFJD.MGPDENHCMAB NORMAL = 1;
}
public enum ENOPEBMHFJD.HECBEEHKDBL
{
	// Fields
	public const ENOPEBMHFJD.HECBEEHKDBL None = 0;
	public const ENOPEBMHFJD.HECBEEHKDBL SINA_WEIBO = 1;
	public const ENOPEBMHFJD.HECBEEHKDBL QQ_FRIENDS = 2;
	public const ENOPEBMHFJD.HECBEEHKDBL WECHAT_FRIENDS = 3;
	public const ENOPEBMHFJD.HECBEEHKDBL TWITTER = 4;
	public const ENOPEBMHFJD.HECBEEHKDBL KAKAO_STORY = 5;
	public const ENOPEBMHFJD.HECBEEHKDBL QQ_ZONE = 6;
	public const ENOPEBMHFJD.HECBEEHKDBL WECHAT_TIMELINE = 7;
	public const ENOPEBMHFJD.HECBEEHKDBL FACEBOOK = 8;
	public const ENOPEBMHFJD.HECBEEHKDBL INSTAGRAM = 9;
	public const ENOPEBMHFJD.HECBEEHKDBL WHATSAPP = 10;
	public const ENOPEBMHFJD.HECBEEHKDBL MESSENGER = 11;
	public const ENOPEBMHFJD.HECBEEHKDBL MIHOYO_BBS_POST = 12;
	public const ENOPEBMHFJD.HECBEEHKDBL MIHOYO_BBS_IMAGE = 13;
	public const ENOPEBMHFJD.HECBEEHKDBL MIHOYO_BBS_COMMENT = 14;
	public const ENOPEBMHFJD.HECBEEHKDBL HOYOLAB = 16;
	public const ENOPEBMHFJD.HECBEEHKDBL BILIBILI = 20;
	public const ENOPEBMHFJD.HECBEEHKDBL DOUYIN = 21;
}
public enum MIJFDJPKKMA
{
	// Fields
	public const MIJFDJPKKMA GateServerAutoSuccess = 0;
	public const MIJFDJPKKMA GlobalDispatchError = 1;
	public const MIJFDJPKKMA RegionDispatchError = 2;
	public const MIJFDJPKKMA GateServerError = 3;
	public const MIJFDJPKKMA AntiServerError = 4;
	public const MIJFDJPKKMA DownloadError = 5;
	public const MIJFDJPKKMA GlobalDispatchSuccess = 6;
	public const MIJFDJPKKMA RegionDispatchSuccess = 7;
	public const MIJFDJPKKMA AntiServerSuccess = 8;
	public const MIJFDJPKKMA DownloadEndSuccess = 9;
	public const MIJFDJPKKMA GateServerSuccess = 10;
	public const MIJFDJPKKMA AntiServerDispatchError = 11;
	public const MIJFDJPKKMA Count = 12;
	public const MIJFDJPKKMA Begin = -1;
}
public enum EDKMDDMFPKN.KOFINOHAGGL
{
	// Fields
	public const EDKMDDMFPKN.KOFINOHAGGL UDP = 0;
	public const EDKMDDMFPKN.KOFINOHAGGL TCP = 1;
}
public enum EDKMDDMFPKN.ODCDEEEGAJI
{
	// Fields
	public const EDKMDDMFPKN.ODCDEEEGAJI None = 0;
	public const EDKMDDMFPKN.ODCDEEEGAJI Init = 1;
	public const EDKMDDMFPKN.ODCDEEEGAJI Connecting = 2;
	public const EDKMDDMFPKN.ODCDEEEGAJI Connected = 3;
	public const EDKMDDMFPKN.ODCDEEEGAJI Disconnecting = 4;
	public const EDKMDDMFPKN.ODCDEEEGAJI Disconnected = 5;
}
public enum MDEFCEGACFD.JNBNNHCJOPB
{
	// Fields
	public const MDEFCEGACFD.JNBNNHCJOPB Global = 0;
	public const MDEFCEGACFD.JNBNNHCJOPB Region = 1;
	public const MDEFCEGACFD.JNBNNHCJOPB RegionClient = 2;
}
public enum FCFILEGGMFD.PNEELDPHEFF
{
	// Fields
	public const FCFILEGGMFD.PNEELDPHEFF Normal = 0;
	public const FCFILEGGMFD.PNEELDPHEFF NoMetaData = 1;
	public const FCFILEGGMFD.PNEELDPHEFF QuestNpc = 2;
	public const FCFILEGGMFD.PNEELDPHEFF Banned = 3;
	public const FCFILEGGMFD.PNEELDPHEFF DailyDisabled = 4;
	public const FCFILEGGMFD.PNEELDPHEFF AlwaysHide = 5;
	public const FCFILEGGMFD.PNEELDPHEFF ActorHide = 6;
	public const FCFILEGGMFD.PNEELDPHEFF RenderInVisible = 7;
	public const FCFILEGGMFD.PNEELDPHEFF GOInVisible = 8;
}
public enum ECMIGEAPCFK
{
	// Fields
	public const ECMIGEAPCFK None = 0;
	public const ECMIGEAPCFK Appear = 1;
	public const ECMIGEAPCFK Disappear = 2;
}
public enum BKIIFJENAKP
{
	// Fields
	public const BKIIFJENAKP QuestBanDaily = 0;
}
public enum FJNKMPIOAAM
{
	// Fields
	public const FJNKMPIOAAM None = 0;
	public const FJNKMPIOAAM Move = 1;
	public const FJNKMPIOAAM Rotate = 2;
	public const FJNKMPIOAAM SetSpotLight = 3;
	public const FJNKMPIOAAM SetPointLight = 4;
}
public enum CLJJJDCMIHH
{
	// Fields
	public const CLJJJDCMIHH None = 0;
	public const CLJJJDCMIHH Talk = 1;
	public const CLJJJDCMIHH Quest = 2;
}
public enum MEFEGICAAEM.EDNDMGLIFOG
{
	// Fields
	public const MEFEGICAAEM.EDNDMGLIFOG Npc = 0;
	public const MEFEGICAAEM.EDNDMGLIFOG Avatar = 1;
	public const MEFEGICAAEM.EDNDMGLIFOG HeroAvatar = 2;
}
public enum FCGCHOGJAAL
{
	// Fields
	public const FCGCHOGJAAL INVALID = -1;
	public const FCGCHOGJAAL ADD_GV_WATCHER = 0;
	public const FCGCHOGJAAL REMOVE_GV_WATCHER = 1;
	public const FCGCHOGJAAL REMOVE_ALL_GV_WATCHER = 2;
	public const FCGCHOGJAAL SET_MATERIAL = 3;
	public const FCGCHOGJAAL MOVE_ACTION = 4;
	public const FCGCHOGJAAL SET_STATE = 5;
	public const FCGCHOGJAAL ROTATE_ACTION = 6;
	public const FCGCHOGJAAL ACTIVE = 7;
	public const FCGCHOGJAAL SET_SPOT_LIGHT = 8;
	public const FCGCHOGJAAL SET_POINT_LIGHT = 9;
	public const FCGCHOGJAAL COUNT = 10;
}
public enum DNAPGOJPEEA
{
	// Fields
	public const DNAPGOJPEEA NONE = 0;
	public const DNAPGOJPEEA GV_WATCHER = 1;
	public const DNAPGOJPEEA SET_MATERIAL = 2;
	public const DNAPGOJPEEA MOVE_ACTION = 3;
	public const DNAPGOJPEEA GADGET_STATE = 4;
	public const DNAPGOJPEEA ROTATE_ACTION = 5;
	public const DNAPGOJPEEA ACTIVE = 6;
	public const DNAPGOJPEEA LIGHT = 7;
}
public enum NKBGIHIALMH
{
	// Fields
	public const NKBGIHIALMH NONE = 0;
	public const NKBGIHIALMH CMD = 1;
	public const NKBGIHIALMH GROUP = 2;
	public const NKBGIHIALMH ALL = 3;
}
public enum IDFDCFKAJPN
{
	// Fields
	public const IDFDCFKAJPN FrameBegin = 0;
	public const IDFDCFKAJPN FrameEnd = 1;
	public const IDFDCFKAJPN BeforeUpdate = 2;
	public const IDFDCFKAJPN PostUpdate = 3;
	public const IDFDCFKAJPN BeforeLateUpdate = 4;
	public const IDFDCFKAJPN PostLateUpdate = 5;
	public const IDFDCFKAJPN Count = 6;
}
public enum EJIPCMCHKKP
{
	// Fields
	public const EJIPCMCHKKP FRIEND_DISCONNECT = 0;
	public const EJIPCMCHKKP FRIEND_ONLINE = 1;
}
public enum NODPKCPEOEE
{
	// Fields
	public const NODPKCPEOEE None = 0;
	public const NODPKCPEOEE Interaction = 1;
	public const NODPKCPEOEE BattlePass = 2;
	public const NODPKCPEOEE Activity = 3;
	public const NODPKCPEOEE Gacha = 4;
}
public enum JFNCLBLFEOL
{
	// Fields
	public const JFNCLBLFEOL None = 0;
	public const JFNCLBLFEOL System = 1;
}
public enum DCJPOLMAMNB
{
	// Fields
	public const DCJPOLMAMNB ETTP_FREE = 0;
	public const DCJPOLMAMNB ETTP_LateUpdate = 1;
	public const DCJPOLMAMNB ETTP_Update = 2;
	public const DCJPOLMAMNB ETTP_Max = 3;
}
public enum GGKMIFHCHGN.PICACIOBPEA
{
	// Fields
	public const GGKMIFHCHGN.PICACIOBPEA Default = 0;
	public const GGKMIFHCHGN.PICACIOBPEA TimeLine = 1;
	public const GGKMIFHCHGN.PICACIOBPEA Hide = 2;
	public const GGKMIFHCHGN.PICACIOBPEA Count = 3;
}
public enum GGKMIFHCHGN.ODPKIHOBMEO
{
	// Fields
	public const GGKMIFHCHGN.ODPKIHOBMEO Default = 0;
	public const GGKMIFHCHGN.ODPKIHOBMEO UIPage = 1;
	public const GGKMIFHCHGN.ODPKIHOBMEO Load = 2;
	public const GGKMIFHCHGN.ODPKIHOBMEO BlackScreen = 3;
	public const GGKMIFHCHGN.ODPKIHOBMEO Count = 4;
}
public enum GGKMIFHCHGN.FJBBELEJHNK
{
	// Fields
	public const GGKMIFHCHGN.FJBBELEJHNK Cutscene = 0;
	public const GGKMIFHCHGN.FJBBELEJHNK TeamPage = 1;
	public const GGKMIFHCHGN.FJBBELEJHNK Dungeon = 2;
	public const GGKMIFHCHGN.FJBBELEJHNK Disconnect = 3;
	public const GGKMIFHCHGN.FJBBELEJHNK BuyGachaItem = 4;
	public const GGKMIFHCHGN.FJBBELEJHNK Pay = 5;
	public const GGKMIFHCHGN.FJBBELEJHNK Download = 6;
}
public enum GGKMIFHCHGN.BACLBCHGPEM
{
	// Fields
	public const GGKMIFHCHGN.BACLBCHGPEM Default = 0;
	public const GGKMIFHCHGN.BACLBCHGPEM Quest = 1;
	public const GGKMIFHCHGN.BACLBCHGPEM ChangeStage = 2;
	public const GGKMIFHCHGN.BACLBCHGPEM FirstEnter = 3;
	public const GGKMIFHCHGN.BACLBCHGPEM MPLoading = 4;
	public const GGKMIFHCHGN.BACLBCHGPEM Roguelike = 5;
	public const GGKMIFHCHGN.BACLBCHGPEM CrystalLink = 6;
	public const GGKMIFHCHGN.BACLBCHGPEM SummerTimeV2 = 7;
	public const GGKMIFHCHGN.BACLBCHGPEM InstableSpray = 8;
	public const GGKMIFHCHGN.BACLBCHGPEM EffigyV2 = 9;
	public const GGKMIFHCHGN.BACLBCHGPEM CustomLoading = 10;
	public const GGKMIFHCHGN.BACLBCHGPEM Gcg = 11;
}
public enum GGKMIFHCHGN.BLLMHPNPEJM
{
	// Fields
	public const GGKMIFHCHGN.BLLMHPNPEJM FixSight = 0;
	public const GGKMIFHCHGN.BLLMHPNPEJM FixDirection = 1;
}
public enum GGKMIFHCHGN.LMOOHJOINGD
{
	// Fields
	public const GGKMIFHCHGN.LMOOHJOINGD Normal = 0;
	public const GGKMIFHCHGN.LMOOHJOINGD InLevelMainPage = 1;
	public const GGKMIFHCHGN.LMOOHJOINGD InLevelMainPage_AfterLoading = 2;
}
public enum GGKMIFHCHGN.IAOCDLNMOHM
{
	// Fields
	public const GGKMIFHCHGN.IAOCDLNMOHM None = 0;
	public const GGKMIFHCHGN.IAOCDLNMOHM Team = 1;
	public const GGKMIFHCHGN.IAOCDLNMOHM QuickWidget = 2;
	public const GGKMIFHCHGN.IAOCDLNMOHM Time = 3;
	public const GGKMIFHCHGN.IAOCDLNMOHM Bag = 4;
	public const GGKMIFHCHGN.IAOCDLNMOHM Kick = 5;
	public const GGKMIFHCHGN.IAOCDLNMOHM Dungeon = 6;
	public const GGKMIFHCHGN.IAOCDLNMOHM Friends = 7;
	public const GGKMIFHCHGN.IAOCDLNMOHM Gacha = 8;
	public const GGKMIFHCHGN.IAOCDLNMOHM ChangeAvatar = 9;
	public const GGKMIFHCHGN.IAOCDLNMOHM Photograph = 10;
	public const GGKMIFHCHGN.IAOCDLNMOHM NewItemGotClick = 11;
	public const GGKMIFHCHGN.IAOCDLNMOHM QuestHintDialogCheck = 12;
	public const GGKMIFHCHGN.IAOCDLNMOHM TrackingCompanionMark = 13;
	public const GGKMIFHCHGN.IAOCDLNMOHM Quest = 14;
	public const GGKMIFHCHGN.IAOCDLNMOHM AdventureHandBook = 15;
	public const GGKMIFHCHGN.IAOCDLNMOHM Character = 16;
	public const GGKMIFHCHGN.IAOCDLNMOHM Activity = 17;
	public const GGKMIFHCHGN.IAOCDLNMOHM Paimon = 18;
	public const GGKMIFHCHGN.IAOCDLNMOHM CodexPushTips = 19;
	public const GGKMIFHCHGN.IAOCDLNMOHM BattlePass = 20;
	public const GGKMIFHCHGN.IAOCDLNMOHM AimFocus = 21;
	public const GGKMIFHCHGN.IAOCDLNMOHM AimNormal = 22;
	public const GGKMIFHCHGN.IAOCDLNMOHM MapTransport = 23;
}
public enum GGKMIFHCHGN.EBMBFEBDILF
{
	// Fields
	public const GGKMIFHCHGN.EBMBFEBDILF CutScene = 0;
}
public enum GGKMIFHCHGN.GJJJBMGALFB
{
	// Fields
	public const GGKMIFHCHGN.GJJJBMGALFB Interaction = 0;
	public const GGKMIFHCHGN.GJJJBMGALFB Loading = 1;
	public const GGKMIFHCHGN.GJJJBMGALFB Widget = 2;
	public const GGKMIFHCHGN.GJJJBMGALFB RegionalPlay = 3;
	public const GGKMIFHCHGN.GJJJBMGALFB GalleryPlay = 4;
}
public enum NBKILNJHGHD
{
	// Fields
	public const NBKILNJHGHD Page = 0;
	public const NBKILNJHGHD SpecialDialog = 1;
	public const NBKILNJHGHD SuspendBar = 2;
	public const NBKILNJHGHD Dialog = 3;
	public const NBKILNJHGHD Root = 4;
}
public enum MPGHOLKJECJ
{
	// Fields
	public const MPGHOLKJECJ Mobile = 0;
	public const MPGHOLKJECJ PC = 1;
	public const MPGHOLKJECJ PS = 2;
}
public enum BFFNFGBKHHM
{
	// Fields
	public const BFFNFGBKHHM None = 0;
	public const BFFNFGBKHHM Normal = 1;
	public const BFFNFGBKHHM Pop = 2;
	public const BFFNFGBKHHM Cutscene = 3;
	public const BFFNFGBKHHM Init = 4;
	public const BFFNFGBKHHM Loading = 5;
	public const BFFNFGBKHHM Error = 6;
}
public enum FCCDHIOMBFB
{
	// Fields
	public const FCCDHIOMBFB Normal = 0;
	public const FCCDHIOMBFB MapCursor = 1;
}
public enum PAHDJNCGMOL
{
	// Fields
	public const PAHDJNCGMOL AudioPlayEvent = 1;
	public const PAHDJNCGMOL CommonVideoEvent = 2;
}
public enum FLNDNINICPH.HNPHPADIMPL
{
	// Fields
	public const FLNDNINICPH.HNPHPADIMPL INVALID = -1;
	public const FLNDNINICPH.HNPHPADIMPL BTN_TRANS = 0;
	public const FLNDNINICPH.HNPHPADIMPL COUNT = 1;
}
public enum IBMCPHIIJJB.KPNPIOFFDOL
{
	// Fields
	public const IBMCPHIIJJB.KPNPIOFFDOL None = 0;
	public const IBMCPHIIJJB.KPNPIOFFDOL Normal = 1;
	public const IBMCPHIIJJB.KPNPIOFFDOL Mid = 2;
	public const IBMCPHIIJJB.KPNPIOFFDOL High = 3;
}
public enum NJBKPFFBPAG
{
	// Fields
	public const NJBKPFFBPAG LOCKED_BY_PREQUEST_UNACCEPTED = 0;
	public const NJBKPFFBPAG LOCKED_BY_PREQUEST_UNFINISHED = 1;
	public const NJBKPFFBPAG LOCKED_BY_OPENQUEST_UNFINISHED = 2;
	public const NJBKPFFBPAG UNLOCKED = 3;
	public const NJBKPFFBPAG LOCKED_FREEMODE = 4;
	public const NJBKPFFBPAG CLOSED = 5;
}
public enum MBCLIBNMCPH
{
	// Fields
	public const MBCLIBNMCPH Rhythm = 0;
	public const MBCLIBNMCPH Astrolabe = 1;
	public const MBCLIBNMCPH Potion = 2;
	public const MBCLIBNMCPH Reasoning = 3;
	public const MBCLIBNMCPH Archaeology = 4;
	public const MBCLIBNMCPH Architect = 5;
	public const MBCLIBNMCPH Count = 6;
}
public enum JANPCMOOFED
{
	// Fields
	public const JANPCMOOFED Lock = 1;
	public const JANPCMOOFED Unlock = 2;
	public const JANPCMOOFED Complete = 3;
	public const JANPCMOOFED Tips = 4;
	public const JANPCMOOFED Succeed = 5;
}
public enum NAFJJKNCJHM
{
	// Fields
	public const NAFJJKNCJHM OutGame = 1;
	public const NAFJJKNCJHM InGame = 2;
}
public enum CHJOCFNHBFC
{
	// Fields
	public const CHJOCFNHBFC InGame = 0;
	public const CHJOCFNHBFC EndGame = 1;
	public const CHJOCFNHBFC OutGame = 2;
}
public enum GMLGKLEJIAL.HMDFBBKPPDP
{
	// Fields
	public const GMLGKLEJIAL.HMDFBBKPPDP Error = 0;
	public const GMLGKLEJIAL.HMDFBBKPPDP preMainQuestUntake = 1;
	public const GMLGKLEJIAL.HMDFBBKPPDP preMainQuestTakeNotFinish = 2;
	public const GMLGKLEJIAL.HMDFBBKPPDP preMainQuestFinish = 3;
	public const GMLGKLEJIAL.HMDFBBKPPDP preMiddleQuestUnTake = 4;
	public const GMLGKLEJIAL.HMDFBBKPPDP preMiddleQuestTakeNotFinish = 5;
	public const GMLGKLEJIAL.HMDFBBKPPDP preMiddleQuestFinish = 6;
	public const GMLGKLEJIAL.HMDFBBKPPDP GuidOpenQuestNotFinish = 7;
	public const GMLGKLEJIAL.HMDFBBKPPDP GuidOpenQuestFinish = 8;
	public const GMLGKLEJIAL.HMDFBBKPPDP GuidEndQuestFinish = 9;
}
public enum AJPONDBHBEE
{
	// Fields
	public const AJPONDBHBEE BARTENDER_FORMULA_TYPE_NONE = 0;
	public const AJPONDBHBEE BARTENDER_FORMULA_TYPE_CAFFEE = 1;
	public const AJPONDBHBEE BARTENDER_FORMULA_TYPE_TEA = 2;
	public const AJPONDBHBEE BARTENDER_FORMULA_TYPE_JUICE = 3;
	public const AJPONDBHBEE BARTENDER_FORMULA_TYPE_MIX = 4;
}
public enum BPOOHPGEDJC
{
	// Fields
	public const BPOOHPGEDJC CRYPTIC = 0;
	public const BPOOHPGEDJC BLURRED = 1;
}
public enum AHNMFACOOCD
{
	// Fields
	public const AHNMFACOOCD BASE = 0;
	public const AHNMFACOOCD EXTRA = 1;
}
public enum BEJBDDFBEBJ
{
	// Fields
	public const BEJBDDFBEBJ LockByTime = 0;
	public const BEJBDDFBEBJ LockByPreCondition = 1;
	public const BEJBDDFBEBJ GotoQuest = 2;
	public const BEJBDDFBEBJ GotoChallenge = 3;
	public const BEJBDDFBEBJ PostQuest = 4;
	public const BEJBDDFBEBJ PostQuestComplete = 5;
	public const BEJBDDFBEBJ Complete = 6;
}
public enum EINIFAJKJAA.DABDEHBDONG
{
	// Fields
	public const EINIFAJKJAA.DABDEHBDONG Default = 0;
	public const EINIFAJKJAA.DABDEHBDONG AllComplete = 1;
	public const EINIFAJKJAA.DABDEHBDONG AllRewardTaken = 2;
}
public enum DBHMDENCFLD
{
	// Fields
	public const DBHMDENCFLD None = 0;
	public const DBHMDENCFLD NotStarted = 1;
	public const DBHMDENCFLD LockedByOpenDay = 2;
	public const DBHMDENCFLD LockedByPreQuest = 3;
	public const DBHMDENCFLD InProgress = 4;
	public const DBHMDENCFLD Finished = 5;
}
public enum MGEOADHIPIL
{
	// Fields
	public uint value__; // 0x10
	public const MGEOADHIPIL LOCK_BY_PREQUEST = 0;
	public const MGEOADHIPIL UNLOCKED = 1;
	public const MGEOADHIPIL CLOSED = 2;
}
public enum GGMLFNBMJAG.ABKHPCHMCHB
{
	// Fields
	public const GGMLFNBMJAG.ABKHPCHMCHB NecessaryPreQuest = 0;
	public const GGMLFNBMJAG.ABKHPCHMCHB OptionalPreQuest = 1;
	public const GGMLFNBMJAG.ABKHPCHMCHB GuideQuest = 2;
	public const GGMLFNBMJAG.ABKHPCHMCHB Gameplay = 3;
	public const GGMLFNBMJAG.ABKHPCHMCHB GameplayEnd = 4;
	public const GGMLFNBMJAG.ABKHPCHMCHB ActivityClosed = 5;
}
public enum GGMLFNBMJAG.DEBOKHFOEIN
{
	// Fields
	public const GGMLFNBMJAG.DEBOKHFOEIN Unknown = 0;
	public const GGMLFNBMJAG.DEBOKHFOEIN OnGoing = 1;
	public const GGMLFNBMJAG.DEBOKHFOEIN Finished = 2;
}
public enum IJPBKHILCPB.LBMHKMCFOLI
{
	// Fields
	public const IJPBKHILCPB.LBMHKMCFOLI Empty = -1;
	public const IJPBKHILCPB.LBMHKMCFOLI Custom = 0;
	public const IJPBKHILCPB.LBMHKMCFOLI Preset1 = 1;
	public const IJPBKHILCPB.LBMHKMCFOLI Preset2 = 2;
}
public enum DLDOGGGHBIM
{
	// Fields
	public const DLDOGGGHBIM None = 0;
	public const DLDOGGGHBIM Rotate = 1;
	public const DLDOGGGHBIM Exchange = 2;
	public const DLDOGGGHBIM Copy = 3;
	public const DLDOGGGHBIM Preset = 4;
	public const DLDOGGGHBIM Count = 5;
}
public enum HMCGEMKIDHH.POOLHDLIBCJ
{
	// Fields
	public const HMCGEMKIDHH.POOLHDLIBCJ None = 0;
	public const HMCGEMKIDHH.POOLHDLIBCJ Move = 1;
	public const HMCGEMKIDHH.POOLHDLIBCJ Attack = 2;
	public const HMCGEMKIDHH.POOLHDLIBCJ SkillOnEnemy = 3;
	public const HMCGEMKIDHH.POOLHDLIBCJ SkillOnPartner = 4;
}
public enum HMCGEMKIDHH.MHHFJEFBGKM
{
	// Fields
	public const HMCGEMKIDHH.MHHFJEFBGKM None = 0;
	public const HMCGEMKIDHH.MHHFJEFBGKM SkillOnEnemy = 1;
	public const HMCGEMKIDHH.MHHFJEFBGKM SkillOnPartner = 2;
}
public enum HMCGEMKIDHH.DIOOOIPBEHE.HCFNEHMINLC
{
	// Fields
	public const HMCGEMKIDHH.DIOOOIPBEHE.HCFNEHMINLC Move = 0;
	public const HMCGEMKIDHH.DIOOOIPBEHE.HCFNEHMINLC Attack = 1;
	public const HMCGEMKIDHH.DIOOOIPBEHE.HCFNEHMINLC Skill = 2;
}
public enum NBAEANIOCMK.NDFCNPBKIBF
{
	// Fields
	public const NBAEANIOCMK.NDFCNPBKIBF NecessaryPreQuest = 0;
	public const NBAEANIOCMK.NDFCNPBKIBF OptionalPreQuest = 1;
	public const NBAEANIOCMK.NDFCNPBKIBF GuideQuest = 2;
	public const NBAEANIOCMK.NDFCNPBKIBF Gameplay = 3;
	public const NBAEANIOCMK.NDFCNPBKIBF GameplayEnd = 4;
	public const NBAEANIOCMK.NDFCNPBKIBF ActivityClosed = 5;
}
public enum NBAEANIOCMK.AIDOKPFBHGJ
{
	// Fields
	public const NBAEANIOCMK.AIDOKPFBHGJ Unknown = 0;
	public const NBAEANIOCMK.AIDOKPFBHGJ OnGoing = 1;
	public const NBAEANIOCMK.AIDOKPFBHGJ Finished = 2;
}
public enum MIDFLOBJGII
{
	// Fields
	public const MIDFLOBJGII Invalid = 0;
	public const MIDFLOBJGII Stage1 = 1;
	public const MIDFLOBJGII Stage2 = 2;
	public const MIDFLOBJGII Stage3 = 3;
	public const MIDFLOBJGII Stage4 = 4;
}
public enum MBINFFNLFCL
{
	// Fields
	public const MBINFFNLFCL ActivityPage = 0;
	public const MBINFFNLFCL DungeonEntry = 1;
	public const MBINFFNLFCL TeamSelect = 2;
	public const MBINFFNLFCL Buff = 3;
}
public enum MCLNCCCCOJJ
{
	// Fields
	public const MCLNCCCCOJJ DungeonEntry = 0;
	public const MCLNCCCCOJJ LevelStart = 1;
	public const MCLNCCCCOJJ DungeonRestart = 2;
	public const MCLNCCCCOJJ LevelRestart = 3;
}
public enum NMBCHDCBEEP.KMKOHGCJHBD
{
	// Fields
	public const NMBCHDCBEEP.KMKOHGCJHBD LockedByOpenDay = 0;
	public const NMBCHDCBEEP.KMKOHGCJHBD LockedByPreQuest = 1;
	public const NMBCHDCBEEP.KMKOHGCJHBD Unlocked = 2;
	public const NMBCHDCBEEP.KMKOHGCJHBD Unstart = 3;
	public const NMBCHDCBEEP.KMKOHGCJHBD Unfinished = 4;
	public const NMBCHDCBEEP.KMKOHGCJHBD Finished = 5;
}
public enum MHHNBNGEMEH
{
	// Fields
	public const MHHNBNGEMEH Photo = 0;
	public const MHHNBNGEMEH Chess = 1;
	public const MHHNBNGEMEH Master = 2;
	public const MHHNBNGEMEH Flower = 3;
	public const MHHNBNGEMEH Count = 4;
}
public enum CIKJHEICMNN
{
	// Fields
	public const CIKJHEICMNN Fireworks = 0;
	public const CIKJHEICMNN Salvage = 1;
	public const CIKJHEICMNN Projection = 2;
	public const CIKJHEICMNN Boss = 3;
	public const CIKJHEICMNN Count = 4;
}
public enum NBJKMCBFPAC
{
	// Fields
	public const NBJKMCBFPAC locked = 0;
	public const NBJKMCBFPAC completed = 1;
	public const NBJKMCBFPAC Ongoing = 2;
}
public enum PIOMEJONHIC
{
	// Fields
	public const PIOMEJONHIC LockedByPrequest = 0;
	public const PIOMEJONHIC LockedByPersonalLines = 1;
	public const PIOMEJONHIC LockedByStory = 2;
	public const PIOMEJONHIC Unlocked = 3;
	public const PIOMEJONHIC UnlockedByQuickStart = 4;
	public const PIOMEJONHIC Finished = 5;
}
public enum HKNKDIACHCO
{
	// Fields
	public const HKNKDIACHCO Race = 0;
	public const HKNKDIACHCO ShadowGame = 1;
	public const HKNKDIACHCO Boatgame = 2;
	public const HKNKDIACHCO CampChallenge = 3;
	public const HKNKDIACHCO Count = 4;
}
public enum PPIEDBIFEGI.MOOLMNJMNPL
{
	// Fields
	public const PPIEDBIFEGI.MOOLMNJMNPL None = 0;
	public const PPIEDBIFEGI.MOOLMNJMNPL LockedByQuest = 1;
	public const PPIEDBIFEGI.MOOLMNJMNPL LockedPreLevel = 2;
	public const PPIEDBIFEGI.MOOLMNJMNPL LockedByTime = 3;
	public const PPIEDBIFEGI.MOOLMNJMNPL NotFinished = 4;
	public const PPIEDBIFEGI.MOOLMNJMNPL Finished = 5;
}
public enum KGGHJFNHMIO.EDFBHLKNGAO
{
	// Fields
	public const KGGHJFNHMIO.EDFBHLKNGAO LockedByPreQuest2 = 0;
	public const KGGHJFNHMIO.EDFBHLKNGAO LockedByPreQuest = 1;
	public const KGGHJFNHMIO.EDFBHLKNGAO LockedByPlayerLevel = 2;
	public const KGGHJFNHMIO.EDFBHLKNGAO LockedByActivityQuest = 3;
	public const KGGHJFNHMIO.EDFBHLKNGAO LockedByGuideQuest = 4;
	public const KGGHJFNHMIO.EDFBHLKNGAO Unlocked = 5;
}
public enum KGGHJFNHMIO.COAKMPLGACK
{
	// Fields
	public const KGGHJFNHMIO.COAKMPLGACK Locking = 0;
	public const KGGHJFNHMIO.COAKMPLGACK InProgress = 1;
	public const KGGHJFNHMIO.COAKMPLGACK Complete = 2;
}
public enum KGGHJFNHMIO.OGCOEOEPLDP
{
	// Fields
	public const KGGHJFNHMIO.OGCOEOEPLDP UnAvailable = 0;
	public const KGGHJFNHMIO.OGCOEOEPLDP Available = 1;
	public const KGGHJFNHMIO.OGCOEOEPLDP Complete = 2;
}
public enum KGGHJFNHMIO.GGNNGEDDHLC
{
	// Fields
	public const KGGHJFNHMIO.GGNNGEDDHLC LockedByOpenDay = 0;
	public const KGGHJFNHMIO.GGNNGEDDHLC LockedByPreQuest = 1;
	public const KGGHJFNHMIO.GGNNGEDDHLC LockedByAtmosphere = 2;
	public const KGGHJFNHMIO.GGNNGEDDHLC Unlocked = 3;
	public const KGGHJFNHMIO.GGNNGEDDHLC Unfinished = 4;
	public const KGGHJFNHMIO.GGNNGEDDHLC Finished = 5;
}
public enum FEGMMPBEFKO.ONANMCJFFEH
{
	// Fields
	public const FEGMMPBEFKO.ONANMCJFFEH LockedByPreSubQuest = 0;
	public const FEGMMPBEFKO.ONANMCJFFEH LockedByPreQuestSet = 1;
	public const FEGMMPBEFKO.ONANMCJFFEH LockedByPreActivityQuest = 2;
	public const FEGMMPBEFKO.ONANMCJFFEH UnlockedActivity = 3;
	public const FEGMMPBEFKO.ONANMCJFFEH UnlockedActivityAndBoss = 4;
}
public enum LEMDIOHJHHG.BEKMLDAJJNH
{
	// Fields
	public const LEMDIOHJHHG.BEKMLDAJJNH Invalid = 0;
	public const LEMDIOHJHHG.BEKMLDAJJNH Quest = 1;
	public const LEMDIOHJHHG.BEKMLDAJJNH Challenge = 2;
	public const LEMDIOHJHHG.BEKMLDAJJNH Moonfin = 3;
}
public enum LEMDIOHJHHG.FLMEKLLJILK.OJFFFPBFNLM
{
	// Fields
	public const LEMDIOHJHHG.FLMEKLLJILK.OJFFFPBFNLM Total = 0;
	public const LEMDIOHJHHG.FLMEKLLJILK.OJFFFPBFNLM Specific = 1;
	public const LEMDIOHJHHG.FLMEKLLJILK.OJFFFPBFNLM Continuous = 2;
}
public enum KOJLFANGKEE
{
	// Fields
	public const KOJLFANGKEE LOCKED_BY_PREQUEST_UNACCEPTED = 0;
	public const KOJLFANGKEE LOCKED_BY_PREQUEST_UNFINISHED = 1;
	public const KOJLFANGKEE LOCKED_BY_INVITATION_UNACCEPTED = 2;
	public const KOJLFANGKEE LOCKED_BY_OPENQUEST_UNFINISHED = 3;
	public const KOJLFANGKEE UNLOCKED = 4;
	public const KOJLFANGKEE CLOSED = 5;
}
public enum CBEDBEALCGI.CNIIFJLPKOJ
{
	// Fields
	public const CBEDBEALCGI.CNIIFJLPKOJ Lock = 0;
	public const CBEDBEALCGI.CNIIFJLPKOJ Normal = 1;
	public const CBEDBEALCGI.CNIIFJLPKOJ TakeReward = 2;
	public const CBEDBEALCGI.CNIIFJLPKOJ Finish = 3;
}
public enum JOIIBBAKOPO.KDJEPNPLGCI
{
	// Fields
	public const JOIIBBAKOPO.KDJEPNPLGCI None = 0;
	public const JOIIBBAKOPO.KDJEPNPLGCI Bronze = 1;
	public const JOIIBBAKOPO.KDJEPNPLGCI Silver = 2;
	public const JOIIBBAKOPO.KDJEPNPLGCI Gold = 3;
}
public enum DCIPIJKNPDP.IFPNGGLLCMD
{
	// Fields
	public const DCIPIJKNPDP.IFPNGGLLCMD None = 0;
	public const DCIPIJKNPDP.IFPNGGLLCMD requestAvatarState = 1;
	public const DCIPIJKNPDP.IFPNGGLLCMD banPickAvatar = 2;
	public const DCIPIJKNPDP.IFPNGGLLCMD finishBanPick = 3;
	public const DCIPIJKNPDP.IFPNGGLLCMD prepare = 4;
}
public enum NNPKOCMJEBC
{
	// Fields
	public const NNPKOCMJEBC Locked = 0;
	public const NNPKOCMJEBC PreQuest = 1;
	public const NNPKOCMJEBC Challenge = 2;
	public const NNPKOCMJEBC SequelQuest = 3;
	public const NNPKOCMJEBC Finish = 4;
}
public enum BPNOHILMEJC
{
	// Fields
	public const BPNOHILMEJC Dungeon = 0;
	public const BPNOHILMEJC Boat = 1;
	public const BPNOHILMEJC Count = 4;
}
public enum ECJLLKGDEEC.DDKLCBCICCP
{
	// Fields
	public const ECJLLKGDEEC.DDKLCBCICCP LockedByInazumaQuest = 0;
	public const ECJLLKGDEEC.DDKLCBCICCP LockedBySakuraQuest = 1;
	public const ECJLLKGDEEC.DDKLCBCICCP LockedByGuideQuest = 2;
	public const ECJLLKGDEEC.DDKLCBCICCP Unlocked = 3;
}
public enum ECJLLKGDEEC.IKCPNKEPEOO
{
	// Fields
	public const ECJLLKGDEEC.IKCPNKEPEOO LockedByTime = 0;
	public const ECJLLKGDEEC.IKCPNKEPEOO LockedByLastRoute = 1;
	public const ECJLLKGDEEC.IKCPNKEPEOO LockedByHomeworld = 2;
	public const ECJLLKGDEEC.IKCPNKEPEOO LockedByFishing = 3;
	public const ECJLLKGDEEC.IKCPNKEPEOO Unlocked = 4;
	public const ECJLLKGDEEC.IKCPNKEPEOO QuestTaken = 5;
	public const ECJLLKGDEEC.IKCPNKEPEOO Completed = 6;
	public const ECJLLKGDEEC.IKCPNKEPEOO RewardTaken = 7;
}
public enum GOBKAFMCIDE
{
	// Fields
	public uint value__; // 0x10
	public const GOBKAFMCIDE NOT_OPENED = 0;
	public const GOBKAFMCIDE LOCK_BY_PREQUEST = 1;
	public const GOBKAFMCIDE LOCK_BY_OPENDAY = 2;
	public const GOBKAFMCIDE LOCK_BY_OPENQUEST = 3;
	public const GOBKAFMCIDE INPROGRESS = 4;
	public const GOBKAFMCIDE CONTENT_FINISHED = 5;
}
public enum GMFLBODBNKN
{
	// Fields
	public uint value__; // 0x10
	public const GMFLBODBNKN NONE = 0;
	public const GMFLBODBNKN COPPER = 1;
	public const GMFLBODBNKN SILIVER = 2;
	public const GMFLBODBNKN GOLD = 3;
	public const GMFLBODBNKN PLATIUM = 4;
}
public enum FNNNCGPIBHB
{
	// Fields
	public const FNNNCGPIBHB LOCKED_BY_PREQUEST_UNACCEPTED = 0;
	public const FNNNCGPIBHB LOCKED_BY_PREQUEST_UNFINISHED = 1;
	public const FNNNCGPIBHB LOCKED_BY_OPENQUEST_UNFINISHED = 2;
	public const FNNNCGPIBHB UNLOCKED = 3;
	public const FNNNCGPIBHB CLOSED = 4;
}
public enum BOJHAGKJHOI.GINPFKGBNGH
{
	// Fields
	public const BOJHAGKJHOI.GINPFKGBNGH None = 0;
	public const BOJHAGKJHOI.GINPFKGBNGH ContentNotOpen = 1;
	public const BOJHAGKJHOI.GINPFKGBNGH LockedByPreStage = 2;
	public const BOJHAGKJHOI.GINPFKGBNGH LockedByOpenDay = 3;
	public const BOJHAGKJHOI.GINPFKGBNGH LockedByPreQuest = 4;
	public const BOJHAGKJHOI.GINPFKGBNGH LeadQuestInProgress = 5;
	public const BOJHAGKJHOI.GINPFKGBNGH InProgress = 6;
	public const BOJHAGKJHOI.GINPFKGBNGH Finished = 7;
}
public enum BOJHAGKJHOI.OPEJMDHOLGD.DHGPHCDDDJK
{
	// Fields
	public uint value__; // 0x10
	public const BOJHAGKJHOI.OPEJMDHOLGD.DHGPHCDDDJK RAISE_MONEY = 1;
	public const BOJHAGKJHOI.OPEJMDHOLGD.DHGPHCDDDJK MANAGEMENT_STAGE_1 = 2;
	public const BOJHAGKJHOI.OPEJMDHOLGD.DHGPHCDDDJK MANAGEMENT_STAGE_2 = 3;
}
public enum BOJHAGKJHOI.OPEJMDHOLGD.IHNGOACFBDO
{
	// Fields
	public const BOJHAGKJHOI.OPEJMDHOLGD.IHNGOACFBDO OPENQUEST = 0;
	public const BOJHAGKJHOI.OPEJMDHOLGD.IHNGOACFBDO RAISE_MONEY = 1;
	public const BOJHAGKJHOI.OPEJMDHOLGD.IHNGOACFBDO MANAGEMENT = 2;
	public const BOJHAGKJHOI.OPEJMDHOLGD.IHNGOACFBDO DETAIL = 3;
}
public enum JMHMHMDHGGD.IBPBJIPCCOG
{
	// Fields
	public const JMHMHMDHGGD.IBPBJIPCCOG Race = 0;
	public const JMHMHMDHGGD.IBPBJIPCCOG Explore = 1;
	public const JMHMHMDHGGD.IBPBJIPCCOG Battle = 2;
	public const JMHMHMDHGGD.IBPBJIPCCOG Count = 3;
}
public enum JMHMHMDHGGD.HONMIEBOMFD
{
	// Fields
	public const JMHMHMDHGGD.HONMIEBOMFD Locking = 0;
	public const JMHMHMDHGGD.HONMIEBOMFD Unlocked = 1;
	public const JMHMHMDHGGD.HONMIEBOMFD Complete = 2;
	public const JMHMHMDHGGD.HONMIEBOMFD RewardTaken = 3;
}
public enum PFNCEBFHDFI
{
	// Fields
	public uint value__; // 0x10
	public const PFNCEBFHDFI SummerTimeSprintBoat = 0;
	public const PFNCEBFHDFI LunaRite = 1;
	public const PFNCEBFHDFI MoonfinTrial = 2;
	public const PFNCEBFHDFI Roguelike = 3;
	public const PFNCEBFHDFI MusicGame = 4;
	public const PFNCEBFHDFI Dig = 5;
	public const PFNCEBFHDFI Hachi = 6;
	public const PFNCEBFHDFI WinterCamp = 7;
	public const PFNCEBFHDFI Potion = 8;
	public const PFNCEBFHDFI TanukiTravel = 9;
	public const PFNCEBFHDFI LanternRite = 10;
	public const PFNCEBFHDFI LanternRite_Salvage = 11;
	public const PFNCEBFHDFI LanternRite_Projection = 12;
	public const PFNCEBFHDFI LanternRite_Firework = 13;
	public const PFNCEBFHDFI MichiaeMatsuri = 14;
	public const PFNCEBFHDFI CustomDungeon = 15;
	public const PFNCEBFHDFI Bartender = 16;
	public const PFNCEBFHDFI Irodori = 17;
	public const PFNCEBFHDFI Irodori_Flower = 18;
	public const PFNCEBFHDFI CrystalLink = 19;
	public const PFNCEBFHDFI Photo = 20;
	public const PFNCEBFHDFI Spice = 21;
	public const PFNCEBFHDFI MusicGameV3 = 22;
	public const PFNCEBFHDFI ActivityGacha = 23;
	public const PFNCEBFHDFI RogueDiary = 24;
	public const PFNCEBFHDFI ChasmChallenge = 25;
	public const PFNCEBFHDFI IslandParty = 26;
	public const PFNCEBFHDFI EchoShellV2 = 27;
	public const PFNCEBFHDFI ArenaChallengeV3 = 28;
	public const PFNCEBFHDFI SummerTimeV2 = 29;
	public const PFNCEBFHDFI Gear = 30;
	public const PFNCEBFHDFI InstableSpray = 31;
	public const PFNCEBFHDFI GravenInnocence = 32;
	public const PFNCEBFHDFI GravenInnocence_Carve = 33;
	public const PFNCEBFHDFI TreasureHunt = 34;
	public const PFNCEBFHDFI MuqadasPotion = 35;
	public const PFNCEBFHDFI WindField = 36;
	public const PFNCEBFHDFI Vintage = 37;
	public const PFNCEBFHDFI Explore = 38;
	public const PFNCEBFHDFI FungusFighter = 39;
	public const PFNCEBFHDFI FungusFighter_Capture = 40;
	public const PFNCEBFHDFI FungusFighter_Battle = 41;
	public const PFNCEBFHDFI FungusFighter_Cultivate = 42;
	public const PFNCEBFHDFI CharAmusement = 43;
	public const PFNCEBFHDFI EffigyV2 = 44;
	public const PFNCEBFHDFI CoinCollect = 45;
	public const PFNCEBFHDFI BrickBreaker = 46;
	public const PFNCEBFHDFI LanV3 = 47;
	public const PFNCEBFHDFI LanV3BoatGame = 48;
	public const PFNCEBFHDFI LanV3Race = 49;
	public const PFNCEBFHDFI LanV3ShadowGame = 50;
	public const PFNCEBFHDFI LanV3CampChallenge = 51;
	public const PFNCEBFHDFI HerculesBattle = 52;
	public const PFNCEBFHDFI DuelHeart = 53;
	public const PFNCEBFHDFI TeamChain = 54;
	public const PFNCEBFHDFI FleurFairV2 = 55;
	public const PFNCEBFHDFI FungusV2 = 56;
	public const PFNCEBFHDFI Pacman = 57;
	public const PFNCEBFHDFI MusicGameV4 = 58;
	public const PFNCEBFHDFI SorushTrial = 59;
	public const PFNCEBFHDFI AkaFes = 60;
	public const PFNCEBFHDFI AkaFesReasoning = 61;
	public const PFNCEBFHDFI AkaFesArchitect = 62;
	public const PFNCEBFHDFI AkaFesArchaeology = 63;
	public const PFNCEBFHDFI AkaFesPotion = 64;
	public const PFNCEBFHDFI AkaFesAstrolabe = 65;
	public const PFNCEBFHDFI AkaFesRhythm = 66;
	public const PFNCEBFHDFI SandWormCannon = 67;
	public const PFNCEBFHDFI GcgFestival = 68;
}
public enum JCHAPDOIFJM
{
	// Fields
	public const JCHAPDOIFJM INVALID = -1;
	public const JCHAPDOIFJM REQ_INTERACTION = 0;
}
public enum EMOMFFGHJGH.MAAMPBKIOKK
{
	// Fields
	public const EMOMFFGHJGH.MAAMPBKIOKK InvalidParameter = 0;
	public const EMOMFFGHJGH.MAAMPBKIOKK NecessarySlotEmpty = 1;
	public const EMOMFFGHJGH.MAAMPBKIOKK FailedToCreateRequest = 2;
	public const EMOMFFGHJGH.MAAMPBKIOKK Submitted = 3;
}
public enum DBOGFDAKDPG
{
	// Fields
	public const DBOGFDAKDPG Reset = 0;
	public const DBOGFDAKDPG Change = 1;
}
public enum MLANCAPHKDO.FMOPMLKCMOE
{
	// Fields
	public const MLANCAPHKDO.FMOPMLKCMOE SmallTree = 1;
	public const MLANCAPHKDO.FMOPMLKCMOE MiddleTree = 2;
	public const MLANCAPHKDO.FMOPMLKCMOE GrownTree = 3;
}
public enum OJALELABOCM.HOFJHCHBMEC
{
	// Fields
	public const OJALELABOCM.HOFJHCHBMEC None = 0;
	public const OJALELABOCM.HOFJHCHBMEC ShowDisabled = 1;
	public const OJALELABOCM.HOFJHCHBMEC ShowNotTarget = 2;
	public const OJALELABOCM.HOFJHCHBMEC ShowCurrentTarget = 3;
}
public enum CJABLOJBLKJ.NMNBAIILBIB
{
	// Fields
	public const CJABLOJBLKJ.NMNBAIILBIB None = 0;
	public const CJABLOJBLKJ.NMNBAIILBIB Weak = 1;
	public const CJABLOJBLKJ.NMNBAIILBIB Strong = 2;
}
public enum LKJMAJKFFFG
{
	// Fields
	public const LKJMAJKFFFG Init = 0;
	public const LKJMAJKFFFG Prestart = 1;
	public const LKJMAJKFFFG Start = 2;
	public const LKJMAJKFFFG Onging = 3;
	public const LKJMAJKFFFG Stop = 4;
}
public enum IFJICCJPLKB.FEAKKKGBLGI
{
	// Fields
	public const IFJICCJPLKB.FEAKKKGBLGI Invalid = 0;
	public const IFJICCJPLKB.FEAKKKGBLGI StartNode = 1;
	public const IFJICCJPLKB.FEAKKKGBLGI BeforeEnterScene = 2;
	public const IFJICCJPLKB.FEAKKKGBLGI EntranceBlackScreen = 3;
	public const IFJICCJPLKB.FEAKKKGBLGI WaitForEntityReady = 4;
	public const IFJICCJPLKB.FEAKKKGBLGI WaitForCameraPrepare = 5;
	public const IFJICCJPLKB.FEAKKKGBLGI CameraPerform = 6;
	public const IFJICCJPLKB.FEAKKKGBLGI EntityPerform = 7;
	public const IFJICCJPLKB.FEAKKKGBLGI EnterBattleCameraMode = 8;
	public const IFJICCJPLKB.FEAKKKGBLGI UIShowTask = 9;
	public const IFJICCJPLKB.FEAKKKGBLGI PostEnterScene = 10;
	public const IFJICCJPLKB.FEAKKKGBLGI PostEnterScene_Guide = 11;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideForward_BeforeGuideMask = 12;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideForward_GuideMask = 13;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideForward_AfterGuideMask = 14;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideBackward_BeforeGuideMask = 15;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideBackward_GuideMask = 16;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideBackward_AfterGuideMask = 17;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideAccumulate_BeforeReachMask = 18;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideAccumulate_ReachMask = 19;
	public const IFJICCJPLKB.FEAKKKGBLGI GuideAccumulate_AfterReachMask = 20;
	public const IFJICCJPLKB.FEAKKKGBLGI PostNewBeeGuide = 21;
}
public enum IFJICCJPLKB.AMBPOODBMJP
{
	// Fields
	public const IFJICCJPLKB.AMBPOODBMJP Start = 0;
	public const IFJICCJPLKB.AMBPOODBMJP Finish = 1;
	public const IFJICCJPLKB.AMBPOODBMJP Count = 2;
}
public enum LJNEKCDKPOJ.CBCCCNOLGEO
{
	// Fields
	public const LJNEKCDKPOJ.CBCCCNOLGEO NoReasonForceRefresh = 0;
	public const LJNEKCDKPOJ.CBCCCNOLGEO StartBuild = 1;
	public const LJNEKCDKPOJ.CBCCCNOLGEO CancelBuild = 2;
	public const LJNEKCDKPOJ.CBCCCNOLGEO GetHelped = 3;
	public const LJNEKCDKPOJ.CBCCCNOLGEO GetFinishFurniture = 4;
	public const LJNEKCDKPOJ.CBCCCNOLGEO MakeCountUpdate = 5;
}
public enum KENCBOJHFHJ.IHALIIHBFKL
{
	// Fields
	public const KENCBOJHFHJ.IHALIIHBFKL PlayerToken = 1;
	public const KENCBOJHFHJ.IHALIIHBFKL PlayerLogin = 2;
}
public enum KENCBOJHFHJ.MOLGCNPBKFM
{
	// Fields
	public const KENCBOJHFHJ.MOLGCNPBKFM Skill = 0;
	public const KENCBOJHFHJ.MOLGCNPBKFM Reliquary = 1;
}
public enum IFMICLOKNII.DMMFBOAPOJA
{
	// Fields
	public const IFMICLOKNII.DMMFBOAPOJA None = 0;
	public const IFMICLOKNII.DMMFBOAPOJA Daily = 1;
	public const IFMICLOKNII.DMMFBOAPOJA Conv = 2;
	public const IFMICLOKNII.DMMFBOAPOJA Quest = 3;
	public const IFMICLOKNII.DMMFBOAPOJA Given = 4;
	public const IFMICLOKNII.DMMFBOAPOJA All = 5;
}
public enum NLCPIIOGNNF.FBJBHOBFICL
{
	// Fields
	public const NLCPIIOGNNF.FBJBHOBFICL Disabled = 0;
	public const NLCPIIOGNNF.FBJBHOBFICL AutoEnabled = 1;
	public const NLCPIIOGNNF.FBJBHOBFICL ManualEnabled = 2;
}
public enum GICNDEKNBIJ.MILDDFDIAEN
{
	// Fields
	public const GICNDEKNBIJ.MILDDFDIAEN No = 0;
	public const GICNDEKNBIJ.MILDDFDIAEN NoPass = 1;
	public const GICNDEKNBIJ.MILDDFDIAEN NoStar = 2;
	public const GICNDEKNBIJ.MILDDFDIAEN NotStarted = 3;
	public const GICNDEKNBIJ.MILDDFDIAEN TheEnd = 4;
}
public enum GICNDEKNBIJ.FCFBMLFCING
{
	// Fields
	public const GICNDEKNBIJ.FCFBMLFCING Default = 0;
	public const GICNDEKNBIJ.FCFBMLFCING Entry = 1;
	public const GICNDEKNBIJ.FCFBMLFCING Loop = 2;
	public const GICNDEKNBIJ.FCFBMLFCING All = 3;
}
public enum ICILOELKHEK.MMGECOKCGDI
{
	// Fields
	public const ICILOELKHEK.MMGECOKCGDI BOOL = 0;
	public const ICILOELKHEK.MMGECOKCGDI DOUBLE = 1;
	public const ICILOELKHEK.MMGECOKCGDI FLOAT = 2;
	public const ICILOELKHEK.MMGECOKCGDI INT32 = 3;
	public const ICILOELKHEK.MMGECOKCGDI INT64 = 4;
	public const ICILOELKHEK.MMGECOKCGDI UINT32 = 5;
	public const ICILOELKHEK.MMGECOKCGDI UINT64 = 6;
}
public enum HBCPEGKCBGE.GIBPDBPHEDK
{
	// Fields
	public const HBCPEGKCBGE.GIBPDBPHEDK All = 0;
	public const HBCPEGKCBGE.GIBPDBPHEDK LeftMonsterNum = 1;
	public const HBCPEGKCBGE.GIBPDBPHEDK ExcapedMonsterNum = 2;
	public const HBCPEGKCBGE.GIBPDBPHEDK BuildingNum = 3;
	public const HBCPEGKCBGE.GIBPDBPHEDK BuildingPoints = 4;
	public const HBCPEGKCBGE.GIBPDBPHEDK FreeRefreshCount = 5;
	public const HBCPEGKCBGE.GIBPDBPHEDK FreeRefreshCountLimit = 6;
	public const HBCPEGKCBGE.GIBPDBPHEDK RefreshCost = 7;
	public const HBCPEGKCBGE.GIBPDBPHEDK SelectedCardsNum = 8;
	public const HBCPEGKCBGE.GIBPDBPHEDK SettleScore = 9;
}
public enum OOCEKDOFMLP.JIKNMBACLMI
{
	// Fields
	public const OOCEKDOFMLP.JIKNMBACLMI None = 0;
	public const OOCEKDOFMLP.JIKNMBACLMI LevelSettle = 1;
	public const OOCEKDOFMLP.JIKNMBACLMI Settle = 2;
}
public enum OOCEKDOFMLP.KCLPMGMEPJJ
{
	// Fields
	public const OOCEKDOFMLP.KCLPMGMEPJJ INVALID = 0;
	public const OOCEKDOFMLP.KCLPMGMEPJJ UP = 1;
	public const OOCEKDOFMLP.KCLPMGMEPJJ DOWN = 2;
	public const OOCEKDOFMLP.KCLPMGMEPJJ LEFT = 3;
	public const OOCEKDOFMLP.KCLPMGMEPJJ RIGHT = 4;
}
public enum CAKPHCPJGOD
{
	// Fields
	public const CAKPHCPJGOD DungeonEntry = 0;
	public const CAKPHCPJGOD SelectPickup = 1;
}
public enum DANFCGNADJN
{
	// Fields
	public const DANFCGNADJN Multiplayer = 0;
	public const DANFCGNADJN Homeworld = 1;
	public const DANFCGNADJN BlueprintCopyConfirm = 2;
}
public enum LOOALIIHDBB
{
	// Fields
	public const LOOALIIHDBB NotRequested = 0;
	public const LOOALIIHDBB Requesting = 1;
	public const LOOALIIHDBB Cooldown = 2;
	public const LOOALIIHDBB Accepted = 3;
	public const LOOALIIHDBB SelfCannotJoin = 4;
	public const LOOALIIHDBB CannotJoin = 5;
	public const LOOALIIHDBB Disconnect = 6;
}
public enum EPACBDJAAJG
{
	// Fields
	public uint value__; // 0x10
	public const EPACBDJAAJG PENDING = 0;
	public const EPACBDJAAJG ACCEPTED = 1;
	public const EPACBDJAAJG REFUSED = 2;
	public const EPACBDJAAJG ERROR = 3;
}
public enum PONIJJLDINI
{
	// Fields
	public uint value__; // 0x10
	public const PONIJJLDINI ServerCancel = 0;
	public const PONIJJLDINI GameNotFound = 1;
}
public enum FOCIFMKOHPH
{
	// Fields
	public uint value__; // 0x10
	public const FOCIFMKOHPH PARI_LAKE = 0;
	public const FOCIFMKOHPH RADAR_HINT_DETECTOR = 1;
	public const FOCIFMKOHPH COUNT = 2;
}
public enum ODFILDJHNPO
{
	// Fields
	public const ODFILDJHNPO None = 0;
	public const ODFILDJHNPO Appear = 1;
	public const ODFILDJHNPO Disappear = 2;
}
public enum PBBBOIEMIIL
{
	// Fields
	public const PBBBOIEMIIL Default = 0;
	public const PBBBOIEMIIL DefaultNoError = 1;
	public const PBBBOIEMIIL ImmediateOnHandle = 2;
	public const PBBBOIEMIIL AllowEntityNonExistence = 3;
}
public enum QuestProxy.CallEventType
{
	// Fields
	public const QuestProxy.CallEventType START_MAIN = 0;
	public const QuestProxy.CallEventType FINISH_MAIN = 1;
	public const QuestProxy.CallEventType START_SUB = 2;
	public const QuestProxy.CallEventType FINISH_SUB = 3;
	public const QuestProxy.CallEventType FAIL_SUB = 4;
	public const QuestProxy.CallEventType REWIND = 5;
	public const QuestProxy.CallEventType FAIL_MAIN = 6;
	public const QuestProxy.CallEventType CANCEL_MAIN = 7;
}
public enum FLGPALLBFKP
{
	// Fields
	public const FLGPALLBFKP Invalid = 0;
	public const FLGPALLBFKP RewardTaken = 1;
	public const FLGPALLBFKP Unstarted = 2;
	public const FLGPALLBFKP Inprogress = 3;
	public const FLGPALLBFKP Complete = 4;
}
public enum OKFGENPBLLL
{
	// Fields
	public const OKFGENPBLLL Common = 0;
	public const OKFGENPBLLL Recharge = 1;
	public const OKFGENPBLLL Discount = 2;
}
public enum LJHJGECOACI
{
	// Fields
	public const LJHJGECOACI Goods = 0;
	public const LJHJGECOACI Mcoin = 1;
	public const LJHJGECOACI Package = 2;
	public const LJHJGECOACI Card = 3;
	public const LJHJGECOACI Concert = 4;
}
public enum BJJFJCJEDJG
{
	// Fields
	public const BJJFJCJEDJG None = 0;
	public const BJJFJCJEDJG TalentFull = 1;
	public const BJJFJCJEDJG FurnitureFormulaUnlocked = 2;
	public const BJJFJCJEDJG CostumeUnlocked = 3;
	public const BJJFJCJEDJG BGMUnlocked = 4;
	public const BJJFJCJEDJG AlreadyExchanged = 5;
	public const BJJFJCJEDJG GcgCardExceed = 6;
	public const BJJFJCJEDJG GcgCardFaceUnlocked = 7;
	public const BJJFJCJEDJG GcgCardBackUnlocked = 8;
	public const BJJFJCJEDJG GcgCardCaseUnlocked = 9;
}
public enum PFAOFEGKPFF
{
	// Fields
	public const PFAOFEGKPFF UNLOCK = 0;
	public const PFAOFEGKPFF LOCK_HOMEWORLD_LEVEL = 1;
	public const PFAOFEGKPFF LOCK_PRE_QUEST = 2;
}
public enum NGNGIMPADAH
{
	// Fields
	public const NGNGIMPADAH PacketAnchor = 0;
	public const NGNGIMPADAH GadgetCreate = 1;
	public const NGNGIMPADAH MiracleRing = 2;
	public const NGNGIMPADAH ClientCollector = 3;
	public const NGNGIMPADAH SeverDetector = 4;
	public const NGNGIMPADAH AdeptiAbode = 5;
	public const NGNGIMPADAH LunchBox = 6;
	public const NGNGIMPADAH WidgetDisable = 7;
	public const NGNGIMPADAH FollowAttach = 8;
	public const NGNGIMPADAH MusicGame = 9;
	public const NGNGIMPADAH Background = 10;
	public const NGNGIMPADAH WeatherWizard = 11;
	public const NGNGIMPADAH Sorush = 12;
	public const NGNGIMPADAH WidgetUseable = 13;
	public const NGNGIMPADAH Count = 14;
}
public enum NEPGKFIBAMB.DJKAFNLGIDO
{
	// Fields
	public const NEPGKFIBAMB.DJKAFNLGIDO None = 0;
	public const NEPGKFIBAMB.DJKAFNLGIDO Hp = 1;
	public const NEPGKFIBAMB.DJKAFNLGIDO Revive = 2;
}
public enum BNEMHHHPBFL
{
	// Fields
	public const BNEMHHHPBFL PACKET_CORRECT = 1;
	public const BNEMHHHPBFL PACKET_NOT_COMPLETE = 2;
	public const BNEMHHHPBFL PACKET_NOT_CORRECT = 3;
	public const BNEMHHHPBFL PACKET_BUFF_IS_NULL = 4;
	public const BNEMHHHPBFL PACKET_BUFF_LEN_SHORT = 5;
	public const BNEMHHHPBFL PACKET_HEAD_MAGIC_ERROR = 6;
	public const BNEMHHHPBFL PACKET_TAIL_MAGIC_ERROR = 7;
}
public enum ACCHJDCEMCA.NHCIIMPKMOA
{
	// Fields
	public const ACCHJDCEMCA.NHCIIMPKMOA None = 0;
	public const ACCHJDCEMCA.NHCIIMPKMOA Init = 1;
	public const ACCHJDCEMCA.NHCIIMPKMOA Connecting = 2;
	public const ACCHJDCEMCA.NHCIIMPKMOA Connected = 3;
	public const ACCHJDCEMCA.NHCIIMPKMOA Disconnecting = 4;
	public const ACCHJDCEMCA.NHCIIMPKMOA Disconnected = 5;
}
public enum MonoClientPacketConsumer.EBCIFJLIOID
{
	// Fields
	public const MonoClientPacketConsumer.EBCIFJLIOID Normal = 0;
	public const MonoClientPacketConsumer.EBCIFJLIOID WaitingConnect = 1;
	public const MonoClientPacketConsumer.EBCIFJLIOID RepeatLogin = 2;
}
public enum SimpleWayPointControlBehaviour.LAHFIJBELDA
{
	// Fields
	public const SimpleWayPointControlBehaviour.LAHFIJBELDA NoControl = 0;
	public const SimpleWayPointControlBehaviour.LAHFIJBELDA Tangent = 1;
	public const SimpleWayPointControlBehaviour.LAHFIJBELDA LookAtTarget = 2;
}
public enum AOPJMMKKAGM
{
	// Fields
	public const AOPJMMKKAGM UseMessageCache = 1;
	public const AOPJMMKKAGM UseMessageAllocator = 2;
	public const AOPJMMKKAGM DontUseCache = 3;
}
public enum BFFFINJNOEB.DEKJIAJFAHB
{
	// Fields
	public const BFFFINJNOEB.DEKJIAJFAHB Invalid = -1;
	public const BFFFINJNOEB.DEKJIAJFAHB DE_1D = 0;
	public const BFFFINJNOEB.DEKJIAJFAHB DE_2D = 1;
	public const BFFFINJNOEB.DEKJIAJFAHB MAX = 2;
}
public enum BFFFINJNOEB.LPADHJMCKHC
{
	// Fields
	public const BFFFINJNOEB.LPADHJMCKHC Invalid = -1;
	public const BFFFINJNOEB.LPADHJMCKHC ChromaLink = 0;
	public const BFFFINJNOEB.LPADHJMCKHC Headset = 1;
	public const BFFFINJNOEB.LPADHJMCKHC Keyboard = 2;
	public const BFFFINJNOEB.LPADHJMCKHC Keypad = 3;
	public const BFFFINJNOEB.LPADHJMCKHC Mouse = 4;
	public const BFFFINJNOEB.LPADHJMCKHC Mousepad = 5;
	public const BFFFINJNOEB.LPADHJMCKHC MAX = 6;
}
public enum BFFFINJNOEB.AGAJGLBDNKH
{
	// Fields
	public const BFFFINJNOEB.AGAJGLBDNKH Invalid = -1;
	public const BFFFINJNOEB.AGAJGLBDNKH ChromaLink = 0;
	public const BFFFINJNOEB.AGAJGLBDNKH Headset = 1;
	public const BFFFINJNOEB.AGAJGLBDNKH Mousepad = 2;
	public const BFFFINJNOEB.AGAJGLBDNKH MAX = 3;
}
public enum BFFFINJNOEB.EDMKMOHGLLO
{
	// Fields
	public const BFFFINJNOEB.EDMKMOHGLLO Invalid = -1;
	public const BFFFINJNOEB.EDMKMOHGLLO Keyboard = 0;
	public const BFFFINJNOEB.EDMKMOHGLLO Keypad = 1;
	public const BFFFINJNOEB.EDMKMOHGLLO Mouse = 2;
	public const BFFFINJNOEB.EDMKMOHGLLO MAX = 3;
}
public enum BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN
{
	// Fields
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_ESC = 1;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F1 = 3;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F2 = 4;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F3 = 5;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F4 = 6;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F5 = 7;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F6 = 8;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F7 = 9;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F8 = 10;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F9 = 11;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F10 = 12;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F11 = 13;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F12 = 14;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_1 = 258;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_2 = 259;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_3 = 260;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_4 = 261;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_5 = 262;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_6 = 263;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_7 = 264;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_8 = 265;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_9 = 266;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_0 = 267;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_A = 770;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_B = 1031;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_C = 1029;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_D = 772;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_E = 516;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_F = 773;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_G = 774;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_H = 775;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_I = 521;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_J = 776;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_K = 777;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_L = 778;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_M = 1033;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_N = 1032;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_O = 522;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_P = 523;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_Q = 514;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_R = 517;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_S = 771;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_T = 518;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_U = 520;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_V = 1030;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_W = 515;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_X = 1028;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_Y = 519;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_Z = 1027;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMLOCK = 274;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD0 = 1299;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD1 = 1042;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD2 = 1043;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD3 = 1044;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD4 = 786;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD5 = 787;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD6 = 788;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD7 = 530;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD8 = 531;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD9 = 532;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD_DIVIDE = 275;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD_MULTIPLY = 276;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD_SUBTRACT = 277;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD_ADD = 533;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD_ENTER = 1045;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_NUMPAD_DECIMAL = 1300;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_PRINTSCREEN = 15;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_SCROLL = 16;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_PAUSE = 17;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_INSERT = 271;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_HOME = 272;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_PAGEUP = 273;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_DELETE = 527;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_END = 528;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_PAGEDOWN = 529;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_UP = 1040;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_LEFT = 1295;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_DOWN = 1296;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_RIGHT = 1297;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_TAB = 513;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_CAPSLOCK = 769;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_BACKSPACE = 270;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_ENTER = 782;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_LCTRL = 1281;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_LWIN = 1282;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_LALT = 1283;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_SPACE = 1287;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_RALT = 1291;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_FN = 1292;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_RMENU = 1293;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_RCTRL = 1294;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_LSHIFT = 1025;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_RSHIFT = 1038;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_MACRO1 = 256;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_MACRO2 = 512;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_MACRO3 = 768;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_MACRO4 = 1024;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_MACRO5 = 1280;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_1 = 257;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_2 = 268;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_3 = 269;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_4 = 524;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_5 = 525;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_6 = 526;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_7 = 779;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_8 = 780;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_9 = 1034;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_10 = 1035;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_OEM_11 = 1036;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_EUR_1 = 781;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_EUR_2 = 1026;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_JPN_1 = 21;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_JPN_2 = 1037;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_JPN_3 = 1284;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_JPN_4 = 1289;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_JPN_5 = 1290;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_KOR_1 = 21;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_KOR_2 = 781;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_KOR_3 = 1026;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_KOR_4 = 1037;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_KOR_5 = 1284;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_KOR_6 = 1289;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_KOR_7 = 1290;
	public const BFFFINJNOEB.BEMBEMICDPM.FBGCDDHCPLN RZKEY_INVALID = 65535;
}
public enum BFFFINJNOEB.BEMBEMICDPM.IKBBGNIAGMP
{
	// Fields
	public const BFFFINJNOEB.BEMBEMICDPM.IKBBGNIAGMP RZLED_LOGO = 20;
}
public enum BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH
{
	// Fields
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_SCROLLWHEEL = 515;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_LOGO = 1795;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_BACKLIGHT = 1027;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_LEFT_SIDE1 = 256;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_LEFT_SIDE2 = 512;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_LEFT_SIDE3 = 768;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_LEFT_SIDE4 = 1024;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_LEFT_SIDE5 = 1280;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_LEFT_SIDE6 = 1536;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_LEFT_SIDE7 = 1792;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_BOTTOM1 = 2049;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_BOTTOM2 = 2050;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_BOTTOM3 = 2051;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_BOTTOM4 = 2052;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_BOTTOM5 = 2053;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_RIGHT_SIDE1 = 262;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_RIGHT_SIDE2 = 518;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_RIGHT_SIDE3 = 774;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_RIGHT_SIDE4 = 1030;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_RIGHT_SIDE5 = 1286;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_RIGHT_SIDE6 = 1542;
	public const BFFFINJNOEB.IOOMMPMOANA.OAGFOIGFLKH RZLED2_RIGHT_SIDE7 = 1798;
}
public enum PMCOMIPHGPH
{
	// Fields
	public const PMCOMIPHGPH None = 0;
	public const PMCOMIPHGPH OpenActivity = 1;
}
public enum MFKNBOIALDN.ADDJOCPKAOG
{
	// Fields
	public const MFKNBOIALDN.ADDJOCPKAOG SUCCESS = 0;
	public const MFKNBOIALDN.ADDJOCPKAOG PARENT_IS_ZERO = 1;
	public const MFKNBOIALDN.ADDJOCPKAOG PARENT_IS_SELF = 2;
	public const MFKNBOIALDN.ADDJOCPKAOG SELF_IS_ZERO = 3;
	public const MFKNBOIALDN.ADDJOCPKAOG ALREADY_SET_SAME_PARENT = 4;
	public const MFKNBOIALDN.ADDJOCPKAOG ALREADY_SET_DIFF_PARENT = 5;
	public const MFKNBOIALDN.ADDJOCPKAOG TRANSFORM_IS_NULL = 6;
	public const MFKNBOIALDN.ADDJOCPKAOG BIND_FAILED = 7;
}
public enum FHKHMPOHJKB
{
	// Fields
	public const FHKHMPOHJKB CanSqueeze = 0;
	public const FHKHMPOHJKB CannotSqueeze = 1;
}
public enum MonoCalFaceLightMap.DPFMNAMAIKO
{
	// Fields
	public const MonoCalFaceLightMap.DPFMNAMAIKO Vertical = 0;
	public const MonoCalFaceLightMap.DPFMNAMAIKO Horizon = 1;
}
public enum SkyBoxCapture.HFBMEBFGDAN
{
	// Fields
	public const SkyBoxCapture.HFBMEBFGDAN SMALL = 64;
	public const SkyBoxCapture.HFBMEBFGDAN Middle = 128;
	public const SkyBoxCapture.HFBMEBFGDAN Large = 256;
}
public enum SkyBoxCapture.FCJNJHALAKJ
{
	// Fields
	public const SkyBoxCapture.FCJNJHALAKJ kFaceNone = 0;
	public const SkyBoxCapture.FCJNJHALAKJ kFace0 = 1;
	public const SkyBoxCapture.FCJNJHALAKJ kFace1 = 2;
	public const SkyBoxCapture.FCJNJHALAKJ kFace2 = 3;
	public const SkyBoxCapture.FCJNJHALAKJ kFace3 = 4;
	public const SkyBoxCapture.FCJNJHALAKJ kFace4 = 5;
	public const SkyBoxCapture.FCJNJHALAKJ kFace5 = 6;
	public const SkyBoxCapture.FCJNJHALAKJ kFaceAll = 7;
}
public enum DirectionalLispShadowMap.EHOMKDKNPKK
{
	// Fields
	public const DirectionalLispShadowMap.EHOMKDKNPKK Ortho = 0;
	public const DirectionalLispShadowMap.EHOMKDKNPKK Original = 1;
	public const DirectionalLispShadowMap.EHOMKDKNPKK Optimized = 2;
}
public enum DirectionalLispShadowMap.NPFEHBPMGEE
{
	// Fields
	public const DirectionalLispShadowMap.NPFEHBPMGEE AlongCameraView = 0;
	public const DirectionalLispShadowMap.NPFEHBPMGEE AlongMidOfHintPoints = 1;
}
public enum DirectionLightShadowLayerShadowMap.PNLIHCLBFBB
{
	// Fields
	public const DirectionLightShadowLayerShadowMap.PNLIHCLBFBB Low = 0;
	public const DirectionLightShadowLayerShadowMap.PNLIHCLBFBB Medium = 1;
	public const DirectionLightShadowLayerShadowMap.PNLIHCLBFBB High = 2;
}
public enum HECGOFKFJPK.NCNPNJJIEEB
{
	// Fields
	public const HECGOFKFJPK.NCNPNJJIEEB None = 0;
	public const HECGOFKFJPK.NCNPNJJIEEB WaitingDuelRsp = 1;
	public const HECGOFKFJPK.NCNPNJJIEEB DuelLoading = 2;
	public const HECGOFKFJPK.NCNPNJJIEEB WaitingInitFinishRsp = 3;
	public const HECGOFKFJPK.NCNPNJJIEEB WaitingPhaseStart = 4;
	public const HECGOFKFJPK.NCNPNJJIEEB LoadingErrorInterrupt = 5;
}
public enum HECGOFKFJPK.ENHIGNEFKKA
{
	// Fields
	public uint value__; // 0x10
	public const HECGOFKFJPK.ENHIGNEFKKA LoadingServerSeqLosePacket = 3001;
	public const HECGOFKFJPK.ENHIGNEFKKA LoadingWaitingDuelRspTimeOut = 3002;
	public const HECGOFKFJPK.ENHIGNEFKKA DuelRspNotSuccess = 3003;
	public const HECGOFKFJPK.ENHIGNEFKKA LoadingWaitingFinishInitRspTimeOut = 3004;
	public const HECGOFKFJPK.ENHIGNEFKKA LoadingInitFinishRspNotSuccess = 3005;
	public const HECGOFKFJPK.ENHIGNEFKKA DuelRspThrowException = 3006;
	public const HECGOFKFJPK.ENHIGNEFKKA LoadingDuelRspNotSuccess = 3007;
	public const HECGOFKFJPK.ENHIGNEFKKA ErrorDuelRspTimeOut = 3008;
}
public enum HFLDCNGJPNB
{
	// Fields
	public const HFLDCNGJPNB Packet = 0;
	public const HFLDCNGJPNB GamePlay = 1;
	public const HFLDCNGJPNB Other = 2;
}
public enum EPICGNMAMDF.KEMCIBIKAOF
{
	// Fields
	public const EPICGNMAMDF.KEMCIBIKAOF None = 0;
	public const EPICGNMAMDF.KEMCIBIKAOF Unlock = 1;
	public const EPICGNMAMDF.KEMCIBIKAOF CharLock = 2;
	public const EPICGNMAMDF.KEMCIBIKAOF Complete = 3;
	public const EPICGNMAMDF.KEMCIBIKAOF Lock = 4;
	public const EPICGNMAMDF.KEMCIBIKAOF PreQuest = 5;
}
public enum EPICGNMAMDF.PGMHFMDADAE
{
	// Fields
	public const EPICGNMAMDF.PGMHFMDADAE None = 0;
	public const EPICGNMAMDF.PGMHFMDADAE Call = 1;
	public const EPICGNMAMDF.PGMHFMDADAE Week = 2;
	public const EPICGNMAMDF.PGMHFMDADAE Const = 3;
	public const EPICGNMAMDF.PGMHFMDADAE World = 4;
	public const EPICGNMAMDF.PGMHFMDADAE Break = 5;
	public const EPICGNMAMDF.PGMHFMDADAE Other = 6;
}
public enum KJCMANCKIHL.KOOFBKGKGPN
{
	// Fields
	public uint value__; // 0x10
	public const KJCMANCKIHL.KOOFBKGKGPN INPROCESS = 0;
	public const KJCMANCKIHL.KOOFBKGKGPN LOCKED = 1;
	public const KJCMANCKIHL.KOOFBKGKGPN FINISHED = 2;
}
public enum MonoGcgUICard.PEMOMPKPKNL
{
	// Fields
	public const MonoGcgUICard.PEMOMPKPKNL Large = 0;
	public const MonoGcgUICard.PEMOMPKPKNL Normal = 1;
	public const MonoGcgUICard.PEMOMPKPKNL Small = 2;
}
public enum MonoSmoothReusableList.OKFNBANBAOC
{
	// Fields
	public const MonoSmoothReusableList.OKFNBANBAOC DoNotOverlap = 0;
	public const MonoSmoothReusableList.OKFNBANBAOC VerticalOverlap = 1;
	public const MonoSmoothReusableList.OKFNBANBAOC HorizontalOverlap = 2;
}
public enum GOBIKCDHNJM<T>
{
	// Fields
	public const GOBIKCDHNJM<T> None = 0;
	public const GOBIKCDHNJM<T> Disappear = 1;
	public const GOBIKCDHNJM<T> Lerp = 2;
	public const GOBIKCDHNJM<T> Appear = 3;
}
public enum HMOEALLHOEN
{
	// Fields
	public const HMOEALLHOEN Undefined = 0;
	public const HMOEALLHOEN DefaultTrue = 1;
	public const HMOEALLHOEN DefaultFalse = 2;
	public const HMOEALLHOEN EnvCollision = 3;
	public const HMOEALLHOEN GroupCollision = 4;
	public const HMOEALLHOEN SteerDir = 5;
	public const HMOEALLHOEN SpacialWander = 6;
}
public enum PCHECPPJNKE.MMGLOGNAOHJ
{
	// Fields
	public const PCHECPPJNKE.MMGLOGNAOHJ MeshRenderer = 0;
	public const PCHECPPJNKE.MMGLOGNAOHJ Mesh = 1;
	public const PCHECPPJNKE.MMGLOGNAOHJ MeshFilter = 2;
	public const PCHECPPJNKE.MMGLOGNAOHJ SkinnedMeshRenderer = 3;
	public const PCHECPPJNKE.MMGLOGNAOHJ Material = 4;
	public const PCHECPPJNKE.MMGLOGNAOHJ Shader = 5;
	public const PCHECPPJNKE.MMGLOGNAOHJ Texture = 6;
	public const PCHECPPJNKE.MMGLOGNAOHJ Animator = 7;
	public const PCHECPPJNKE.MMGLOGNAOHJ Animation = 8;
	public const PCHECPPJNKE.MMGLOGNAOHJ Particle = 9;
	public const PCHECPPJNKE.MMGLOGNAOHJ Transform = 10;
	public const PCHECPPJNKE.MMGLOGNAOHJ GrassBlock = 11;
	public const PCHECPPJNKE.MMGLOGNAOHJ GrassData = 12;
	public const PCHECPPJNKE.MMGLOGNAOHJ Count = 13;
	public const PCHECPPJNKE.MMGLOGNAOHJ TotalSize = 13;
	public const PCHECPPJNKE.MMGLOGNAOHJ ChildCountDeep = 14;
}
public enum HEDCCBFMGJJ.ABIKIOEDFLM
{
	// Fields
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_INDEX = 0;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_NEWINDEX = 1;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_GC = 2;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_MODE = 3;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_LEN = 4;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_EQ = 5;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_ADD = 6;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_SUB = 7;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_MUL = 8;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_MOD = 9;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_POW = 10;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_DIV = 11;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_IDIV = 12;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_BAND = 13;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_BOR = 14;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_BXOR = 15;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_SHL = 16;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_SHR = 17;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_UNM = 18;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_BNOT = 19;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_LT = 20;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_LE = 21;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_CONCAT = 22;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_CALL = 23;
	public const HEDCCBFMGJJ.ABIKIOEDFLM TM_N = 24;
}
public enum MonoTestDvalinS01.FlyState
{
	// Fields
	public const MonoTestDvalinS01.FlyState Normal = 0;
	public const MonoTestDvalinS01.FlyState Fight = 1;
}
public enum HPEDHCIHOHI
{
	// Fields
	public const HPEDHCIHOHI RepeatAll = 0;
	public const HPEDHCIHOHI SingleReplay = 1;
	public const HPEDHCIHOHI SinglePlay = 2;
}
public enum PLEMOGFJFCL
{
	// Fields
	public const PLEMOGFJFCL Counting = 0;
	public const PLEMOGFJFCL Hold = 1;
	public const PLEMOGFJFCL Reset2Zero = 2;
}
public enum HFPIGCJAAEK
{
	// Fields
	public const HFPIGCJAAEK AvatarHitRetreat = 0;
	public const HFPIGCJAAEK AvatarHitAir = 1;
	public const HFPIGCJAAEK AvatarHit2Die = 2;
}
public enum CLKGPFPDBKD.CACFOHPDHEC
{
	// Fields
	public const CLKGPFPDBKD.CACFOHPDHEC Null = 0;
	public const CLKGPFPDBKD.CACFOHPDHEC Comments = 1;
	public const CLKGPFPDBKD.CACFOHPDHEC Teleport = 2;
	public const CLKGPFPDBKD.CACFOHPDHEC RunToPos = 3;
	public const CLKGPFPDBKD.CACFOHPDHEC WalkToPos = 4;
	public const CLKGPFPDBKD.CACFOHPDHEC Stop = 5;
	public const CLKGPFPDBKD.CACFOHPDHEC SetYaw = 6;
	public const CLKGPFPDBKD.CACFOHPDHEC WalkByTime = 7;
	public const CLKGPFPDBKD.CACFOHPDHEC RunByTime = 8;
	public const CLKGPFPDBKD.CACFOHPDHEC SprintByTime = 9;
	public const CLKGPFPDBKD.CACFOHPDHEC Jump = 10;
	public const CLKGPFPDBKD.CACFOHPDHEC ClimbByTime = 11;
	public const CLKGPFPDBKD.CACFOHPDHEC ClimbOutByTime = 12;
	public const CLKGPFPDBKD.CACFOHPDHEC Climb2ASL = 13;
	public const CLKGPFPDBKD.CACFOHPDHEC SwitchCamera4ward = 14;
	public const CLKGPFPDBKD.CACFOHPDHEC JoystickSteer = 15;
	public const CLKGPFPDBKD.CACFOHPDHEC JoystickSteerReachDim = 16;
	public const CLKGPFPDBKD.CACFOHPDHEC Delay = 17;
	public const CLKGPFPDBKD.CACFOHPDHEC DoSkill = 18;
	public const CLKGPFPDBKD.CACFOHPDHEC ReleaseSkill = 19;
	public const CLKGPFPDBKD.CACFOHPDHEC Flood = 20;
	public const CLKGPFPDBKD.CACFOHPDHEC Ebb = 21;
	public const CLKGPFPDBKD.CACFOHPDHEC Brick1 = 22;
	public const CLKGPFPDBKD.CACFOHPDHEC Demolish = 23;
	public const CLKGPFPDBKD.CACFOHPDHEC Reset = 24;
	public const CLKGPFPDBKD.CACFOHPDHEC Exhaused = 25;
	public const CLKGPFPDBKD.CACFOHPDHEC Recharge = 26;
	public const CLKGPFPDBKD.CACFOHPDHEC Stamina = 27;
	public const CLKGPFPDBKD.CACFOHPDHEC SpawnMonster = 28;
	public const CLKGPFPDBKD.CACFOHPDHEC Manual = 29;
}
public enum FFALBILLOCD
{
	// Fields
	public const FFALBILLOCD UnLoaded = 0;
	public const FFALBILLOCD Cached = 1;
	public const FFALBILLOCD Loading = 2;
	public const FFALBILLOCD Loaded = 3;
	public const FFALBILLOCD UnLoading = 4;
}
public enum JKAPDBHOGEF
{
	// Fields
	public const JKAPDBHOGEF Active = 0;
	public const JKAPDBHOGEF Inactive = 1;
	public const JKAPDBHOGEF Hiding = 2;
}
public enum LMCLADIGHAC
{
	// Fields
	public const LMCLADIGHAC Invalid = 0;
	public const LMCLADIGHAC InLevelCanvas = 1;
	public const LMCLADIGHAC RootCanvas = 2;
}
public enum PGGIPOJHJFD
{
	// Fields
	public const PGGIPOJHJFD Normal = 0;
	public const PGGIPOJHJFD Heavy = 1;
}
public enum ALHKNMHDECN.MJKNPOLGEGN
{
	// Fields
	public const ALHKNMHDECN.MJKNPOLGEGN InLevel = 0;
	public const ALHKNMHDECN.MJKNPOLGEGN Global = 1;
	public const ALHKNMHDECN.MJKNPOLGEGN Persistence = 2;
}
public enum OCHNEKLNDOH
{
	// Fields
	public const OCHNEKLNDOH timeStamp = 0;
	public const OCHNEKLNDOH systemMsg = 1;
	public const OCHNEKLNDOH otherMessage = 2;
	public const OCHNEKLNDOH myMessage = 3;
}
public enum GJAAKMAAKFJ
{
	// Fields
	public const GJAAKMAAKFJ text = 1000;
	public const GJAAKMAAKFJ emoji = 1001;
}
public enum ALLHPAEDPIJ
{
	// Fields
	public const ALLHPAEDPIJ first = 0;
	public const ALLHPAEDPIJ shown = 1;
	public const ALLHPAEDPIJ recycle = 3;
}
public enum LIFELNHBOJH
{
	// Fields
	public const LIFELNHBOJH MultistagePlay = 0;
}
public enum IBICGFBIPFG
{
	// Fields
	public const IBICGFBIPFG PanelContent = 0;
	public const IBICGFBIPFG PanelEmoji = 1;
	public const IBICGFBIPFG PanelQuickChat = 2;
	public const IBICGFBIPFG PanelHeadList = 3;
	public const IBICGFBIPFG PanelMore = 4;
}
public enum LPBNGKDMHED
{
	// Fields
	public const LPBNGKDMHED Pop = 0;
	public const LPBNGKDMHED FadeIn = 1;
}
public enum PFGIFLPAHHM.MJGDCLKNFIB
{
	// Fields
	public const PFGIFLPAHHM.MJGDCLKNFIB CodexHomePage = 0;
	public const PFGIFLPAHHM.MJGDCLKNFIB NewItemGotDialog = 1;
}
public enum OJIPAOGJLJL.BNJFBEKNPEM
{
	// Fields
	public const OJIPAOGJLJL.BNJFBEKNPEM Weapon = 0;
	public const OJIPAOGJLJL.BNJFBEKNPEM Reliquary = 1;
}
public enum DBENNDMJAMM
{
	// Fields
	public const DBENNDMJAMM Equip = 0;
	public const DBENNDMJAMM Creature = 1;
	public const DBENNDMJAMM PushTips = 2;
	public const DBENNDMJAMM View = 3;
	public const DBENNDMJAMM Quest = 4;
	public const DBENNDMJAMM Books = 5;
	public const DBENNDMJAMM Material = 6;
}
public enum IFKKLPBIMDF.PNPGJMMMONM
{
	// Fields
	public const IFKKLPBIMDF.PNPGJMMMONM CodexHomePage = 0;
	public const IFKKLPBIMDF.PNPGJMMMONM GPush = 1;
}
public enum NCPJBFPOGBI.BDHDEHIGIBG
{
	// Fields
	public const NCPJBFPOGBI.BDHDEHIGIBG CodexHomePage = 0;
	public const NCPJBFPOGBI.BDHDEHIGIBG QuestPage = 1;
}
public enum AHHOPDCGCEH
{
	// Fields
	public const AHHOPDCGCEH Scale = 0;
	public const AHHOPDCGCEH Move = 1;
	public const AHHOPDCGCEH Rotate = 2;
	public const AHHOPDCGCEH Mark = 3;
	public const AHHOPDCGCEH SemiAlpha = 4;
	public const AHHOPDCGCEH Pacman = 1001;
}
public enum KCKLAEBNLMH.PHJFHAIEAEC
{
	// Fields
	public const KCKLAEBNLMH.PHJFHAIEAEC Reminder = 0;
	public const KCKLAEBNLMH.PHJFHAIEAEC MobileAim = 1;
	public const KCKLAEBNLMH.PHJFHAIEAEC Count = 2;
	public const KCKLAEBNLMH.PHJFHAIEAEC GalleryBanner = 3;
}
public enum PCOLGHMIOLO
{
	// Fields
	public const PCOLGHMIOLO Left = 0;
	public const PCOLGHMIOLO LeftUp = 1;
	public const PCOLGHMIOLO Up = 2;
	public const PCOLGHMIOLO RightUp = 3;
	public const PCOLGHMIOLO Right = 4;
	public const PCOLGHMIOLO RightDown = 5;
	public const PCOLGHMIOLO Down = 6;
	public const PCOLGHMIOLO LeftDown = 7;
}
public enum MonoUIAnimatorEvent.IDANBLLPEDP
{
	// Fields
	public const MonoUIAnimatorEvent.IDANBLLPEDP AnimatorSetTrigger = 0;
	public const MonoUIAnimatorEvent.IDANBLLPEDP AnimatorSetBool = 1;
	public const MonoUIAnimatorEvent.IDANBLLPEDP AnimatorSetFloat = 2;
	public const MonoUIAnimatorEvent.IDANBLLPEDP AnimatorSetInt = 3;
	public const MonoUIAnimatorEvent.IDANBLLPEDP Custom = 4;
}
public enum NGCODPJHECH.GHCEEOAJGDA
{
	// Fields
	public const NGCODPJHECH.GHCEEOAJGDA Default = 0;
	public const NGCODPJHECH.GHCEEOAJGDA Preview = 1;
	public const NGCODPJHECH.GHCEEOAJGDA Costume = 2;
}
public enum EEMMLPLICEI.IFEPLNNOFCL
{
	// Fields
	public const EEMMLPLICEI.IFEPLNNOFCL None = 0;
	public const EEMMLPLICEI.IFEPLNNOFCL StackCamera = 1;
	public const EEMMLPLICEI.IFEPLNNOFCL Slider = 2;
	public const EEMMLPLICEI.IFEPLNNOFCL SceneUI = 3;
}
public enum EIGDGGEHJPF.PMFPDBNKEHH
{
	// Fields
	public const EIGDGGEHJPF.PMFPDBNKEHH Ground = 0;
	public const EIGDGGEHJPF.PMFPDBNKEHH Horizontal = 1;
	public const EIGDGGEHJPF.PMFPDBNKEHH Vertical = 2;
}
public enum OOBBKCAIHJE
{
	// Fields
	public const OOBBKCAIHJE None = 0;
	public const OOBBKCAIHJE Unknown = 1;
	public const OOBBKCAIHJE InvalidDeploySurface = 2;
	public const OOBBKCAIHJE OutOfDeployRange = 3;
}
public enum IENLFCILDMG
{
	// Fields
	public const IENLFCILDMG Other = 0;
	public const IENLFCILDMG Submit = 1;
	public const IENLFCILDMG Play = 2;
	public const IENLFCILDMG EditPlay = 3;
}
public enum CNHJAIALOIH
{
	// Fields
	public const CNHJAIALOIH Normal = 0;
	public const CNHJAIALOIH Hollow = 1;
}
public enum DebugCameraUI.BIJHEDOOGNG
{
	// Fields
	public const DebugCameraUI.BIJHEDOOGNG None = 0;
	public const DebugCameraUI.BIJHEDOOGNG PreModule = 1;
	public const DebugCameraUI.BIJHEDOOGNG PostModule = 2;
	public const DebugCameraUI.BIJHEDOOGNG LockingV2 = 3;
}
public enum DJGCEONODPH
{
	// Fields
	public const DJGCEONODPH Character = 0;
	public const DJGCEONODPH Stone = 1;
	public const DJGCEONODPH Plants = 2;
	public const DJGCEONODPH HLOD = 3;
	public const DJGCEONODPH Ignore = 4;
	public const DJGCEONODPH Gadget = 5;
	public const DJGCEONODPH Water = 6;
	public const DJGCEONODPH Terrain = 7;
	public const DJGCEONODPH Grass = 8;
	public const DJGCEONODPH Effect = 9;
	public const DJGCEONODPH ReflectionProbe = 10;
	public const DJGCEONODPH Atmosphere = 11;
	public const DJGCEONODPH Custom = 12;
	public const DJGCEONODPH Snow = 13;
	public const DJGCEONODPH Ice = 14;
	public const DJGCEONODPH MinorLights = 15;
	public const DJGCEONODPH Shadow = 16;
	public const DJGCEONODPH Rattan = 17;
	public const DJGCEONODPH DetailMesh = 18;
	public const DJGCEONODPH Close = 19;
	public const DJGCEONODPH Count = 20;
}
public enum MoleMole.NotifyTypes
{
	// Fields
	public const MoleMole.NotifyTypes None = 0;
	public const MoleMole.NotifyTypes NetworkPacket = 1;
	public const MoleMole.NotifyTypes LoginNotify = 2;
	public const MoleMole.NotifyTypes EnterSceneNotify = 3;
	public const MoleMole.NotifyTypes DisConnectNotify = 4;
	public const MoleMole.NotifyTypes PlayerListNotify = 5;
	public const MoleMole.NotifyTypes PlayerLeaveNotify = 6;
	public const MoleMole.NotifyTypes GetOnlinePlayerInfoNotify = 7;
	public const MoleMole.NotifyTypes WorldPlayerListUpdate = 8;
	public const MoleMole.NotifyTypes ScenePlayerListUpdate = 9;
	public const MoleMole.NotifyTypes PrompStandy2Climb = 10;
	public const MoleMole.NotifyTypes RegisterMonsterAIController = 11;
	public const MoleMole.NotifyTypes AttackDamegeNotify = 12;
	public const MoleMole.NotifyTypes AttackShieldNotify = 13;
	public const MoleMole.NotifyTypes ShowDamageTextNotify = 14;
	public const MoleMole.NotifyTypes AttackCureNotify = 15;
	public const MoleMole.NotifyTypes RefreshAvatarData = 16;
	public const MoleMole.NotifyTypes RefreshAvatarBuff = 17;
	public const MoleMole.NotifyTypes AvatarChangeNotify = 18;
	public const MoleMole.NotifyTypes AvatarActionPanelNotify = 19;
	public const MoleMole.NotifyTypes AvatarFocusModeChangeNotify = 20;
	public const MoleMole.NotifyTypes ElementReactionNotify = 21;
	public const MoleMole.NotifyTypes OnApplicationFocus = 22;
	public const MoleMole.NotifyTypes AvatarSkillInfoUpdate = 23;
	public const MoleMole.NotifyTypes FestivalUpdateNotify = 24;
	public const MoleMole.NotifyTypes AvatarRenameInfoReady = 25;
	public const MoleMole.NotifyTypes AvatarRenameInfoUpdated = 26;
	public const MoleMole.NotifyTypes AvatarRenameValidityCheckPassed = 27;
	public const MoleMole.NotifyTypes AvatarRenameValidityCheckFailed = 28;
	public const MoleMole.NotifyTypes AddMiniMapMark = 29;
	public const MoleMole.NotifyTypes MapNotify = 30;
	public const MoleMole.NotifyTypes MapToggle = 31;
	public const MoleMole.NotifyTypes EnterArea = 32;
	public const MoleMole.NotifyTypes EnterAreaLateUpdate = 33;
	public const MoleMole.NotifyTypes EnterSubArea = 34;
	public const MoleMole.NotifyTypes ExitSubArea = 35;
	public const MoleMole.NotifyTypes EnterErosionArea = 36;
	public const MoleMole.NotifyTypes MapMarkChanged = 37;
	public const MoleMole.NotifyTypes MapMarkMoved = 38;
	public const MoleMole.NotifyTypes MapMarkDailyTaskChanged = 39;
	public const MoleMole.NotifyTypes MapMarkDungeonEntryExploreChanged = 40;
	public const MoleMole.NotifyTypes AreaExploreUpdated = 41;
	public const MoleMole.NotifyTypes AreaUnlcoked = 42;
	public const MoleMole.NotifyTypes GuidePointAppear = 43;
	public const MoleMole.NotifyTypes GuidePointDisappear = 44;
	public const MoleMole.NotifyTypes NavigationPointAppear = 45;
	public const MoleMole.NotifyTypes NavigationPointDisappear = 46;
	public const MoleMole.NotifyTypes NavigationPointRefresh = 47;
	public const MoleMole.NotifyTypes NavigtaionPointRefreshWithId = 48;
	public const MoleMole.NotifyTypes NavigationShowGuideTips = 49;
	public const MoleMole.NotifyTypes POIIndicatorAppear = 50;
	public const MoleMole.NotifyTypes POIIndicatorDisappear = 51;
	public const MoleMole.NotifyTypes SorushIndicatorAppear = 52;
	public const MoleMole.NotifyTypes SorushIndicatorDisappear = 53;
	public const MoleMole.NotifyTypes PlayMarkUnlockEffect = 54;
	public const MoleMole.NotifyTypes UnlockTransPoint = 55;
	public const MoleMole.NotifyTypes UnlockScenePoint = 56;
	public const MoleMole.NotifyTypes ScenePointLockStateChanged = 57;
	public const MoleMole.NotifyTypes AddGadgetIndicator = 58;
	public const MoleMole.NotifyTypes RemoveGadgetIndicator = 59;
	public const MoleMole.NotifyTypes SetGadgetIndicatorCountDown = 60;
	public const MoleMole.NotifyTypes MapMarkClicked = 61;
	public const MoleMole.NotifyTypes MapMarkClickNeared = 62;
	public const MoleMole.NotifyTypes RefreshMapRewardTips = 63;
	public const MoleMole.NotifyTypes RefreshMapMarkTips = 64;
	public const MoleMole.NotifyTypes MapAreaUpdated = 65;
	public const MoleMole.NotifyTypes MapPlaceNameUpdated = 66;
	public const MoleMole.NotifyTypes MarkManagerReady = 67;
	public const MoleMole.NotifyTypes MarkRemovedOnCancelTracing = 68;
	public const MoleMole.NotifyTypes MarkCustomTrackChanged = 69;
	public const MoleMole.NotifyTypes ActivityMapMarkBatchUpdate = 70;
	public const MoleMole.NotifyTypes ActivityMapScaleUpdate = 71;
	public const MoleMole.NotifyTypes ActivityMapCoinUpdate = 72;
	public const MoleMole.NotifyTypes DungeonEntryInfo = 73;
	public const MoleMole.NotifyTypes DungeonEntryAppeared = 74;
	public const MoleMole.NotifyTypes DungeonEntryDisappeared = 75;
	public const MoleMole.NotifyTypes DungeonPlayerDie = 76;
	public const MoleMole.NotifyTypes DungeonSettled = 77;
	public const MoleMole.NotifyTypes DungeonGetReward = 78;
	public const MoleMole.NotifyTypes GetDailyDungeonEntryInfo = 79;
	public const MoleMole.NotifyTypes GetDungeonEntryExploreCondition = 80;
	public const MoleMole.NotifyTypes GeneralInteeCreate = 81;
	public const MoleMole.NotifyTypes GeneralInteeCommand = 82;
	public const MoleMole.NotifyTypes GeneralInteeDisable = 83;
	public const MoleMole.NotifyTypes RegisterUICombatBar = 84;
	public const MoleMole.NotifyTypes UnregisterUICombatBar = 85;
	public const MoleMole.NotifyTypes RefreshUICombatBars = 86;
	public const MoleMole.NotifyTypes ShowUICombatBarSpark = 87;
	public const MoleMole.NotifyTypes ShowUICombatBarCharge = 88;
	public const MoleMole.NotifyTypes ShowUICombatBarFireEffect = 89;
	public const MoleMole.NotifyTypes ShowShakeOff = 90;
	public const MoleMole.NotifyTypes VehicleSkillDepotChange = 91;
	public const MoleMole.NotifyTypes VehicleSkillEnergyChange = 92;
	public const MoleMole.NotifyTypes InteractionUITrigger = 93;
	public const MoleMole.NotifyTypes InteractionUIClose = 94;
	public const MoleMole.NotifyTypes InteractionRealStart = 95;
	public const MoleMole.NotifyTypes GroupLinkUpdated = 96;
	public const MoleMole.NotifyTypes GroupLinkRemoved = 97;
	public const MoleMole.NotifyTypes CheckGroupReplacedRsp = 98;
	public const MoleMole.NotifyTypes ChallengeBegin = 99;
	public const MoleMole.NotifyTypes ChallengeUpdated = 100;
	public const MoleMole.NotifyTypes ChallengeFailed = 101;
	public const MoleMole.NotifyTypes ChallengeCompleted = 102;
	public const MoleMole.NotifyTypes ChallengeAddSub = 103;
	public const MoleMole.NotifyTypes ChallengeSubFinish = 104;
	public const MoleMole.NotifyTypes ChallengeSubFail = 105;
	public const MoleMole.NotifyTypes DialogSelectNotify = 106;
	public const MoleMole.NotifyTypes DialogSelectFinishNotify = 107;
	public const MoleMole.NotifyTypes DialogSelectItemNotify = 108;
	public const MoleMole.NotifyTypes DialogSelectItemTimeOut = 109;
	public const MoleMole.NotifyTypes TalkSelectDialogNotify = 110;
	public const MoleMole.NotifyTypes AutoTalkDialogFinish = 111;
	public const MoleMole.NotifyTypes ChangeAutoTalk = 112;
	public const MoleMole.NotifyTypes CutScenePageShowTopText = 113;
	public const MoleMole.NotifyTypes CutScenePageCloseTopText = 114;
	public const MoleMole.NotifyTypes CoopSelectNotify = 115;
	public const MoleMole.NotifyTypes CurrCoopConfidenceValueChanged = 116;
	public const MoleMole.NotifyTypes CurrCoopTemperamentValueChanged = 117;
	public const MoleMole.NotifyTypes CoopTemperamentSelect = 118;
	public const MoleMole.NotifyTypes CoopTakeChapterReward = 119;
	public const MoleMole.NotifyTypes CoopUnlockChapter = 120;
	public const MoleMole.NotifyTypes CoopStartPointFromPage = 121;
	public const MoleMole.NotifyTypes CoopCancelQuest = 122;
	public const MoleMole.NotifyTypes CoopUIRefresh = 123;
	public const MoleMole.NotifyTypes CoopNewChapterAdd = 124;
	public const MoleMole.NotifyTypes CoopChapterViewed = 125;
	public const MoleMole.NotifyTypes CoopStartFirstPoint = 126;
	public const MoleMole.NotifyTypes CoopShowDefeatDialog = 127;
	public const MoleMole.NotifyTypes CoopTryStartPoint = 128;
	public const MoleMole.NotifyTypes CoopStartPointFailed = 129;
	public const MoleMole.NotifyTypes CoopDefeatNotify = 130;
	public const MoleMole.NotifyTypes CoopPressureMaxNotify = 131;
	public const MoleMole.NotifyTypes QuestDialogToggle = 132;
	public const MoleMole.NotifyTypes QuestBookUpdate = 133;
	public const MoleMole.NotifyTypes QuestBookSelectItem = 134;
	public const MoleMole.NotifyTypes AddQuestHint = 135;
	public const MoleMole.NotifyTypes QuestTalkHistory = 136;
	public const MoleMole.NotifyTypes PaimenNavigationEnabled = 137;
	public const MoleMole.NotifyTypes PaimenNavigationFailed = 138;
	public const MoleMole.NotifyTypes PaimenNavigationAlreadyInArea = 139;
	public const MoleMole.NotifyTypes PaimenNavigationGuideHint = 140;
	public const MoleMole.NotifyTypes RemindQuest = 141;
	public const MoleMole.NotifyTypes BindTransButton = 142;
	public const MoleMole.NotifyTypes QuestProgressHint = 143;
	public const MoleMole.NotifyTypes QuestLackHint = 144;
	public const MoleMole.NotifyTypes ActiveMainQuestDeleted = 145;
	public const MoleMole.NotifyTypes QuestStateUpdated = 146;
	public const MoleMole.NotifyTypes MainQuestStateUpdated = 147;
	public const MoleMole.NotifyTypes QuestTalkFinished = 148;
	public const MoleMole.NotifyTypes QuestGlobalVarUpdate = 149;
	public const MoleMole.NotifyTypes QuestTakePhotograph = 150;
	public const MoleMole.NotifyTypes ServerGameTimeLockedQuestListRsp = 151;
	public const MoleMole.NotifyTypes TalkWithPerformStart = 152;
	public const MoleMole.NotifyTypes NpcReady = 153;
	public const MoleMole.NotifyTypes NpcAppear = 154;
	public const MoleMole.NotifyTypes NpcDisappear = 155;
	public const MoleMole.NotifyTypes NpcDestroy = 156;
	public const MoleMole.NotifyTypes NpcTalkStateChange = 157;
	public const MoleMole.NotifyTypes BagWeightUIRefresh = 158;
	public const MoleMole.NotifyTypes BagDialogToggle = 159;
	public const MoleMole.NotifyTypes BagSlotUpdate = 160;
	public const MoleMole.NotifyTypes BagItemUsed = 161;
	public const MoleMole.NotifyTypes BagItemDrop = 162;
	public const MoleMole.NotifyTypes BagAddChest = 163;
	public const MoleMole.NotifyTypes BagAddWidget = 164;
	public const MoleMole.NotifyTypes BagAddQuest = 165;
	public const MoleMole.NotifyTypes BagCombinableMaterialRPChanged = 166;
	public const MoleMole.NotifyTypes ForceCloseBagPage = 167;
	public const MoleMole.NotifyTypes BagItemDeleteReturnNotify = 168;
	public const MoleMole.NotifyTypes NewItemEncountered = 169;
	public const MoleMole.NotifyTypes SpecialItemEncountered = 170;
	public const MoleMole.NotifyTypes ItemAdded = 171;
	public const MoleMole.NotifyTypes MaterialDeleteReturnItemAdded = 172;
	public const MoleMole.NotifyTypes ItemAddExceedLimitNotify = 173;
	public const MoleMole.NotifyTypes GatherItemAdded = 174;
	public const MoleMole.NotifyTypes GeneralItemAdded = 175;
	public const MoleMole.NotifyTypes GeneralItemMiddleShowAdded = 176;
	public const MoleMole.NotifyTypes QuestItemAdded = 177;
	public const MoleMole.NotifyTypes DailyTaskItemAdded = 178;
	public const MoleMole.NotifyTypes RandTaskItemAdded = 179;
	public const MoleMole.NotifyTypes ActivityItemAdded = 180;
	public const MoleMole.NotifyTypes HuntingItemAdded = 181;
	public const MoleMole.NotifyTypes BlossomItemAdded = 182;
	public const MoleMole.NotifyTypes VirtualShopItemAdded = 183;
	public const MoleMole.NotifyTypes BatchItemAdded = 184;
	public const MoleMole.NotifyTypes ItemGivingFinish = 185;
	public const MoleMole.NotifyTypes CloseItemGiving = 186;
	public const MoleMole.NotifyTypes GadgetGivingClose = 187;
	public const MoleMole.NotifyTypes DestroyItemFinish = 188;
	public const MoleMole.NotifyTypes GetCalcWeaponUpgradeReturnItemsResult = 189;
	public const MoleMole.NotifyTypes ChangeEquipLockState = 190;
	public const MoleMole.NotifyTypes UseItemFail = 191;
	public const MoleMole.NotifyTypes BagAddRenameItem = 192;
	public const MoleMole.NotifyTypes BagItemDestroyUIRefresh = 193;
	public const MoleMole.NotifyTypes AvatarVehicleStateChange = 194;
	public const MoleMole.NotifyTypes VehicleHPChange = 195;
	public const MoleMole.NotifyTypes VehicleLevelChange = 196;
	public const MoleMole.NotifyTypes AvatarInfoUIRefresh = 197;
	public const MoleMole.NotifyTypes AvatarFightPropRefresh = 198;
	public const MoleMole.NotifyTypes AvatarEquipUIRefresh = 199;
	public const MoleMole.NotifyTypes AvatarEquipChanged = 200;
	public const MoleMole.NotifyTypes AvatarSwitch = 201;
	public const MoleMole.NotifyTypes ManekinCtrl = 202;
	public const MoleMole.NotifyTypes TeamInfoRefresh = 203;
	public const MoleMole.NotifyTypes TeamNameRefresh = 204;
	public const MoleMole.NotifyTypes CurrentTeamChanged = 205;
	public const MoleMole.NotifyTypes AvatarDead = 206;
	public const MoleMole.NotifyTypes AvatarSkillDepotIdChanged = 207;
	public const MoleMole.NotifyTypes AvatarBreakLevelChanged = 208;
	public const MoleMole.NotifyTypes AvatarBreakRewardGet = 209;
	public const MoleMole.NotifyTypes RefreshBreachMaterialBtnRPShow = 210;
	public const MoleMole.NotifyTypes AvatarLifeStateChanged = 211;
	public const MoleMole.NotifyTypes AvatarFetterExpChanged = 212;
	public const MoleMole.NotifyTypes AvatarFetterRewardGet = 213;
	public const MoleMole.NotifyTypes AvatarHPChanged = 214;
	public const MoleMole.NotifyTypes AvatarHPChangedEnd = 215;
	public const MoleMole.NotifyTypes AvatarHungerChanged = 216;
	public const MoleMole.NotifyTypes BackgroundAvatarRefreshed = 217;
	public const MoleMole.NotifyTypes AvatarUpgradeNotify = 218;
	public const MoleMole.NotifyTypes AvatarLevelChanged = 219;
	public const MoleMole.NotifyTypes AvatarEnergyAdded = 220;
	public const MoleMole.NotifyTypes AvatarEnergyFull = 221;
	public const MoleMole.NotifyTypes CharacterSprintBS = 222;
	public const MoleMole.NotifyTypes AvatarSkillChanged = 223;
	public const MoleMole.NotifyTypes AvatarSkillDisable = 224;
	public const MoleMole.NotifyTypes AvatarSkillCDChanged = 225;
	public const MoleMole.NotifyTypes AvatarSkillEnable = 226;
	public const MoleMole.NotifyTypes AvatarHideSkill = 227;
	public const MoleMole.NotifyTypes AvatarAttackModeChanged = 228;
	public const MoleMole.NotifyTypes CurAvatarNum = 229;
	public const MoleMole.NotifyTypes FocusAvatar = 230;
	public const MoleMole.NotifyTypes AvatarFlycloakChanged = 231;
	public const MoleMole.NotifyTypes AvatarGainFlycloak = 232;
	public const MoleMole.NotifyTypes ActivitySkillState = 233;
	public const MoleMole.NotifyTypes ShowActivitySkill = 234;
	public const MoleMole.NotifyTypes AvatarCostumeChanged = 235;
	public const MoleMole.NotifyTypes AvatarGainCostume = 236;
	public const MoleMole.NotifyTypes TipShow = 237;
	public const MoleMole.NotifyTypes TipClose = 238;
	public const MoleMole.NotifyTypes ActivityCommonPlayerTipsStart = 239;
	public const MoleMole.NotifyTypes ActivityCommonPlayerTipsFinish = 240;
	public const MoleMole.NotifyTypes ActivityCommonPlayerTipsFail = 241;
	public const MoleMole.NotifyTypes ShopOpen = 242;
	public const MoleMole.NotifyTypes ShopClose = 243;
	public const MoleMole.NotifyTypes ShopItemSelect = 244;
	public const MoleMole.NotifyTypes ShopRefresh = 245;
	public const MoleMole.NotifyTypes ShopMaterialRefresh = 246;
	public const MoleMole.NotifyTypes ShopRequest = 247;
	public const MoleMole.NotifyTypes ShopRequestRecommend = 248;
	public const MoleMole.NotifyTypes ShopRequestPackage = 249;
	public const MoleMole.NotifyTypes ShopMallRequest = 250;
	public const MoleMole.NotifyTypes ShopDataUpdated = 251;
	public const MoleMole.NotifyTypes ActivityShopSheetUpdated = 252;
	public const MoleMole.NotifyTypes ShopOpenSubTab = 253;
	public const MoleMole.NotifyTypes MallJumpRecommend = 254;
	public const MoleMole.NotifyTypes ActivityRegionSearchProgressUpdate = 255;
	public const MoleMole.NotifyTypes ActivityRegionSearchProgressBegin = 256;
	public const MoleMole.NotifyTypes ActivityRegionSearchProgressComplete = 257;
	public const MoleMole.NotifyTypes ActivityRegionSearchIn = 258;
	public const MoleMole.NotifyTypes ActivityRegionSearchOut = 259;
	public const MoleMole.NotifyTypes ActivityRegionSearchRegionRewardGet = 260;
	public const MoleMole.NotifyTypes ActivityRegionSearchRegionDisappear = 261;
	public const MoleMole.NotifyTypes ActivityRegionSearchRegionAppear = 262;
	public const MoleMole.NotifyTypes ActivityRegionSearchRegionInfoUpdate = 263;
	public const MoleMole.NotifyTypes CountDownUIStart = 264;
	public const MoleMole.NotifyTypes CountDownUIEndLevelTime = 265;
	public const MoleMole.NotifyTypes CountDownUITerminate = 266;
	public const MoleMole.NotifyTypes DungeonCountDownUpdate = 267;
	public const MoleMole.NotifyTypes DungeonCountDownEnd = 268;
	public const MoleMole.NotifyTypes CountNumUIStart = 269;
	public const MoleMole.NotifyTypes CountNumUpdate = 270;
	public const MoleMole.NotifyTypes CountNumUITerminate = 271;
	public const MoleMole.NotifyTypes CountNumUIStartNew = 272;
	public const MoleMole.NotifyTypes CountNumUpdateNew = 273;
	public const MoleMole.NotifyTypes CountNumUITerminateNew = 274;
	public const MoleMole.NotifyTypes QuestQuitShow = 275;
	public const MoleMole.NotifyTypes QuestQuitHide = 276;
	public const MoleMole.NotifyTypes GachaWishUpdate = 277;
	public const MoleMole.NotifyTypes LoadingNewScenePre = 278;
	public const MoleMole.NotifyTypes LoadingScene = 279;
	public const MoleMole.NotifyTypes LevelPreLoaded = 280;
	public const MoleMole.NotifyTypes LevelLoaded = 281;
	public const MoleMole.NotifyTypes LevelPostLoad = 282;
	public const MoleMole.NotifyTypes LevelLoadBegin = 283;
	public const MoleMole.NotifyTypes LoadingBundle = 284;
	public const MoleMole.NotifyTypes LevelLoadFinish = 285;
	public const MoleMole.NotifyTypes NoStaminaStopSprint = 286;
	public const MoleMole.NotifyTypes JumpFly = 287;
	public const MoleMole.NotifyTypes PostAvatarEntityReady = 288;
	public const MoleMole.NotifyTypes AudioEventPost = 289;
	public const MoleMole.NotifyTypes LevelTagNotify = 290;
	public const MoleMole.NotifyTypes SceneAreaWeatherChangeNotify = 291;
	public const MoleMole.NotifyTypes TouchMsgBoard = 292;
	public const MoleMole.NotifyTypes EasyTouchWorking = 293;
	public const MoleMole.NotifyTypes RefreshUISetting = 294;
	public const MoleMole.NotifyTypes ScreenResolutionChanged = 295;
	public const MoleMole.NotifyTypes RefreshAvatarTalent = 296;
	public const MoleMole.NotifyTypes RefreshAvatarTalentPRShow = 297;
	public const MoleMole.NotifyTypes Resist = 298;
	public const MoleMole.NotifyTypes GuideUpdate = 299;
	public const MoleMole.NotifyTypes PageLoad = 300;
	public const MoleMole.NotifyTypes UIContextOpen = 301;
	public const MoleMole.NotifyTypes UIContextClose = 302;
	public const MoleMole.NotifyTypes PageDestroy = 303;
	public const MoleMole.NotifyTypes ElementViewChange = 304;
	public const MoleMole.NotifyTypes SealProgress = 305;
	public const MoleMole.NotifyTypes CommonChallengeStartTips = 306;
	public const MoleMole.NotifyTypes CommonChallengeEndTips = 307;
	public const MoleMole.NotifyTypes RefreshGuide = 308;
	public const MoleMole.NotifyTypes GeneralGuideFinish = 309;
	public const MoleMole.NotifyTypes GeneralGuideUpdate = 310;
	public const MoleMole.NotifyTypes ActionToUINotify = 311;
	public const MoleMole.NotifyTypes RefreshDebugUI = 312;
	public const MoleMole.NotifyTypes CheckDebugLoginServerList = 313;
	public const MoleMole.NotifyTypes ShowDebugLoginPanel = 314;
	public const MoleMole.NotifyTypes TimeChanged = 315;
	public const MoleMole.NotifyTypes PlayerGameTimeNotify = 316;
	public const MoleMole.NotifyTypes TeamSceneReady = 317;
	public const MoleMole.NotifyTypes TeamChanged = 318;
	public const MoleMole.NotifyTypes AvatarReviveRequested = 319;
	public const MoleMole.NotifyTypes TeamRttRefresh = 320;
	public const MoleMole.NotifyTypes ShowTeamBtn = 321;
	public const MoleMole.NotifyTypes LevelUpItemFinished = 322;
	public const MoleMole.NotifyTypes PostSetupMPTeamPanel = 323;
	public const MoleMole.NotifyTypes WeaponUpgrade = 324;
	public const MoleMole.NotifyTypes WeaponPromote = 325;
	public const MoleMole.NotifyTypes WeaponAwaken = 326;
	public const MoleMole.NotifyTypes ReliquaryUpgrade = 327;
	public const MoleMole.NotifyTypes ReliquaryPromote = 328;
	public const MoleMole.NotifyTypes TeammateSpeechBegin = 329;
	public const MoleMole.NotifyTypes TeammateSpeechEnd = 330;
	public const MoleMole.NotifyTypes AvatarCardChange = 331;
	public const MoleMole.NotifyTypes SpringVolumeChanged = 332;
	public const MoleMole.NotifyTypes WebviewClose = 333;
	public const MoleMole.NotifyTypes MihoyoAccountInfoChanged = 334;
	public const MoleMole.NotifyTypes MihoyoAccountRegisterSuccess = 335;
	public const MoleMole.NotifyTypes CutsceneStart = 336;
	public const MoleMole.NotifyTypes CutsceneFinish = 337;
	public const MoleMole.NotifyTypes FinalTalkFinished = 338;
	public const MoleMole.NotifyTypes CutsceneQTEJump = 339;
	public const MoleMole.NotifyTypes CurrentQTEFinishCS = 340;
	public const MoleMole.NotifyTypes CurrentQTEBlackScreenStart = 341;
	public const MoleMole.NotifyTypes CutsceneQTEEnableSavePoint = 342;
	public const MoleMole.NotifyTypes CutsceneQTEEnableSavePointId = 343;
	public const MoleMole.NotifyTypes CutsceneChangeTimeScale = 344;
	public const MoleMole.NotifyTypes CutsceneResumeTimeScale = 345;
	public const MoleMole.NotifyTypes SetMainPageMoveToggleActive = 346;
	public const MoleMole.NotifyTypes SetMainPageMoveToggleToWalk = 347;
	public const MoleMole.NotifyTypes OpenStateInit = 348;
	public const MoleMole.NotifyTypes OpenStateChange = 349;
	public const MoleMole.NotifyTypes StartFadeOutWormhole = 350;
	public const MoleMole.NotifyTypes EnterSneakMode = 351;
	public const MoleMole.NotifyTypes EnterCombatSneakMode = 352;
	public const MoleMole.NotifyTypes ExitSneakMode = 353;
	public const MoleMole.NotifyTypes PlayModeChange = 354;
	public const MoleMole.NotifyTypes ActionSlotChange = 355;
	public const MoleMole.NotifyTypes ActionPanelRefresh = 356;
	public const MoleMole.NotifyTypes ActionPanelClearInputState = 357;
	public const MoleMole.NotifyTypes RefreshCookPage = 358;
	public const MoleMole.NotifyTypes GetCookQTEArgs = 359;
	public const MoleMole.NotifyTypes OnCookRecipeDataNotify = 360;
	public const MoleMole.NotifyTypes RefreshCookCompoundPage = 361;
	public const MoleMole.NotifyTypes GetCompoundOutput = 362;
	public const MoleMole.NotifyTypes CompoundBoostRsp = 363;
	public const MoleMole.NotifyTypes GetCombineOutput = 364;
	public const MoleMole.NotifyTypes CombineFormulaUnlock = 365;
	public const MoleMole.NotifyTypes SmeltSuccess = 366;
	public const MoleMole.NotifyTypes SmeltGetDrop = 367;
	public const MoleMole.NotifyTypes GetForgeQueue = 368;
	public const MoleMole.NotifyTypes ForgeQueueUpdate = 369;
	public const MoleMole.NotifyTypes GetForgeOutput = 370;
	public const MoleMole.NotifyTypes ForgeStart = 371;
	public const MoleMole.NotifyTypes ForgeStop = 372;
	public const MoleMole.NotifyTypes ForgeFormulaUnlock = 373;
	public const MoleMole.NotifyTypes RefreshMailPage = 374;
	public const MoleMole.NotifyTypes RefreshMailPageAfterDel = 375;
	public const MoleMole.NotifyTypes MailDataReady = 376;
	public const MoleMole.NotifyTypes ShowMailItemGet = 377;
	public const MoleMole.NotifyTypes NewMailGot = 378;
	public const MoleMole.NotifyTypes AddToFavorites = 379;
	public const MoleMole.NotifyTypes RefreshMailFavoritesDialog = 380;
	public const MoleMole.NotifyTypes RefreshMailFavoritesDialogAfterDel = 381;
	public const MoleMole.NotifyTypes RefreshMailPageAfterFavMailChange = 382;
	public const MoleMole.NotifyTypes FavoriteMailDataReady = 383;
	public const MoleMole.NotifyTypes RefreshCoinNum = 384;
	public const MoleMole.NotifyTypes MutiPlayerAvailableChange = 385;
	public const MoleMole.NotifyTypes MutiPlayerModeChange = 386;
	public const MoleMole.NotifyTypes CompanionCurrAvatarChanged = 387;
	public const MoleMole.NotifyTypes CompanionAvatarHPChangedEnd = 388;
	public const MoleMole.NotifyTypes KickGuestFailed = 389;
	public const MoleMole.NotifyTypes MPTeamChangeFailed = 390;
	public const MoleMole.NotifyTypes MPDeathOpenChat = 391;
	public const MoleMole.NotifyTypes MPCloseMainPageBtn = 392;
	public const MoleMole.NotifyTypes MPOpenMainPageBtn = 393;
	public const MoleMole.NotifyTypes PlayerMatchInfoUpdate = 394;
	public const MoleMole.NotifyTypes WorldPlayerDie = 395;
	public const MoleMole.NotifyTypes MpSettingType = 396;
	public const MoleMole.NotifyTypes JoinOtherPlayerScene = 397;
	public const MoleMole.NotifyTypes BackMyWorld = 398;
	public const MoleMole.NotifyTypes UpdateDungeonExitBtn = 399;
	public const MoleMole.NotifyTypes DungeonTeamChanged = 400;
	public const MoleMole.NotifyTypes DungeonTeamChangeFailed = 401;
	public const MoleMole.NotifyTypes DungeonTeamDismissed = 402;
	public const MoleMole.NotifyTypes DungeonInviteRefused = 403;
	public const MoleMole.NotifyTypes DungeonTeamKicked = 404;
	public const MoleMole.NotifyTypes EnterTowerLevel = 405;
	public const MoleMole.NotifyTypes TowerStarRefresh = 406;
	public const MoleMole.NotifyTypes TowerRecordHandbookRefresh = 407;
	public const MoleMole.NotifyTypes RefreshPlayGuestState = 408;
	public const MoleMole.NotifyTypes CloseMPPlayDialog = 409;
	public const MoleMole.NotifyTypes CloseMPPlayPage = 410;
	public const MoleMole.NotifyTypes MpPlayGuestReplyInviteSucc = 411;
	public const MoleMole.NotifyTypes GCGMatchSucc = 412;
	public const MoleMole.NotifyTypes GCGMatchStateUpdated = 413;
	public const MoleMole.NotifyTypes GCGBattleInvitationStateUpdated = 414;
	public const MoleMole.NotifyTypes CloseGCGMatchDialog = 415;
	public const MoleMole.NotifyTypes GCGWorldPlayerStateGot = 416;
	public const MoleMole.NotifyTypes PlayerMatchAgreedResultNotify = 417;
	public const MoleMole.NotifyTypes MpPlayInviteResultNotify = 418;
	public const MoleMole.NotifyTypes ScenePlayInviteResultNotify = 419;
	public const MoleMole.NotifyTypes DraftInviteResultNotify = 420;
	public const MoleMole.NotifyTypes DraftTwiceConfirmResultNotify = 421;
	public const MoleMole.NotifyTypes PlayerLevelChange = 422;
	public const MoleMole.NotifyTypes PlayerExpChange = 423;
	public const MoleMole.NotifyTypes PlayerWorldLevelChange = 424;
	public const MoleMole.NotifyTypes ClosePlayerProfilePage = 425;
	public const MoleMole.NotifyTypes PlayerWorldLevelAdjust = 426;
	public const MoleMole.NotifyTypes ShowGuideRatingDialog = 427;
	public const MoleMole.NotifyTypes ChargeBarValueChange = 428;
	public const MoleMole.NotifyTypes ProgressBarRefresh = 429;
	public const MoleMole.NotifyTypes DailyTaskStarted = 430;
	public const MoleMole.NotifyTypes DailyTaskProgresUpdated = 431;
	public const MoleMole.NotifyTypes DailyTaskComplete = 432;
	public const MoleMole.NotifyTypes DailyTaskExitRegion = 433;
	public const MoleMole.NotifyTypes DailyTaskScoreReward = 434;
	public const MoleMole.NotifyTypes DailyTaskRefresh = 435;
	public const MoleMole.NotifyTypes TaskVarChange = 436;
	public const MoleMole.NotifyTypes RandTaskStarted = 437;
	public const MoleMole.NotifyTypes RandTaskComplete = 438;
	public const MoleMole.NotifyTypes RandTaskFail = 439;
	public const MoleMole.NotifyTypes RandTaskExitRegion = 440;
	public const MoleMole.NotifyTypes RoutineStarted = 441;
	public const MoleMole.NotifyTypes RoutineProgresUpdated = 442;
	public const MoleMole.NotifyTypes RoutineComplete = 443;
	public const MoleMole.NotifyTypes RoutineExitRegion = 444;
	public const MoleMole.NotifyTypes RoutineScoreReward = 445;
	public const MoleMole.NotifyTypes RoutineRefresh = 446;
	public const MoleMole.NotifyTypes ProudSkillChange = 447;
	public const MoleMole.NotifyTypes CombatSkillChange = 448;
	public const MoleMole.NotifyTypes PlayerLevelRewardChange = 449;
	public const MoleMole.NotifyTypes GetInvestigationMonsterList = 450;
	public const MoleMole.NotifyTypes GetInvestigationMonsterListForMark = 451;
	public const MoleMole.NotifyTypes InvestigationChange = 452;
	public const MoleMole.NotifyTypes InvestigationChapterComplete = 453;
	public const MoleMole.NotifyTypes InvestigationTargetChange = 454;
	public const MoleMole.NotifyTypes InvestigationQuestDailyNotify = 455;
	public const MoleMole.NotifyTypes ExplorationAllDataChange = 456;
	public const MoleMole.NotifyTypes ExplorationCharacterDataChange = 457;
	public const MoleMole.NotifyTypes MainPageTips = 458;
	public const MoleMole.NotifyTypes MiracleRingItemAdded = 459;
	public const MoleMole.NotifyTypes NewPlayerAppling = 460;
	public const MoleMole.NotifyTypes PushTipsChange = 461;
	public const MoleMole.NotifyTypes GetPushTipsReward = 462;
	public const MoleMole.NotifyTypes PushTipsNotifyFinish = 463;
	public const MoleMole.NotifyTypes NewPushTips = 464;
	public const MoleMole.NotifyTypes GetTowerAllData = 465;
	public const MoleMole.NotifyTypes GetTowerStarReward = 466;
	public const MoleMole.NotifyTypes VersusBattleBegin = 467;
	public const MoleMole.NotifyTypes VersusBattleUpdate = 468;
	public const MoleMole.NotifyTypes VersusBattleEnd = 469;
	public const MoleMole.NotifyTypes ActivityOpen = 470;
	public const MoleMole.NotifyTypes ActivityClose = 471;
	public const MoleMole.NotifyTypes ActivityContextClose = 472;
	public const MoleMole.NotifyTypes ActivityRefresh = 473;
	public const MoleMole.NotifyTypes ActivityUpdate = 474;
	public const MoleMole.NotifyTypes ActivityBannerShow = 475;
	public const MoleMole.NotifyTypes ActivityBannerEffectShow = 476;
	public const MoleMole.NotifyTypes ActivitySeaLampContriFinish = 477;
	public const MoleMole.NotifyTypes ActivityStart = 478;
	public const MoleMole.NotifyTypes ActivityCrucibleInfo = 479;
	public const MoleMole.NotifyTypes ActivityOperationBonusUpdate = 480;
	public const MoleMole.NotifyTypes ActivityWatcherUpdate = 481;
	public const MoleMole.NotifyTypes ActivityDeliveryRewardUpdate = 482;
	public const MoleMole.NotifyTypes ActivityDeliveryUpdate = 483;
	public const MoleMole.NotifyTypes ActivityWatcherFinish = 484;
	public const MoleMole.NotifyTypes ActivityAsterScoreUpdate = 485;
	public const MoleMole.NotifyTypes ActivitySaleUpdate = 486;
	public const MoleMole.NotifyTypes ActivityEchoShellUpdate = 487;
	public const MoleMole.NotifyTypes ActivityCoinInfoNotify = 488;
	public const MoleMole.NotifyTypes ActivityBlitzRushContentClose = 489;
	public const MoleMole.NotifyTypes ActivityCondUpdate = 490;
	public const MoleMole.NotifyTypes ActivityPotionStageReset = 491;
	public const MoleMole.NotifyTypes CloseActivityMainPage = 492;
	public const MoleMole.NotifyTypes EffigyChallengeResultNotify = 493;
	public const MoleMole.NotifyTypes MistTrialTimeOutNotify = 494;
	public const MoleMole.NotifyTypes BannerReminderAppeared = 495;
	public const MoleMole.NotifyTypes BannerReminderDisappeared = 496;
	public const MoleMole.NotifyTypes BannerReminderForceClosed = 497;
	public const MoleMole.NotifyTypes InLevelQuestHintReminderAppeared = 498;
	public const MoleMole.NotifyTypes InLevelQuestHintReminderDisappeared = 499;
	public const MoleMole.NotifyTypes OnGetGameplayRecommendationNotify = 500;
	public const MoleMole.NotifyTypes CloseRecommendationNotify = 501;
	public const MoleMole.NotifyTypes OnGetGameplayRecommendationFailedNotify = 502;
	public const MoleMole.NotifyTypes CameraLookBegin = 503;
	public const MoleMole.NotifyTypes CameraLookEnd = 504;
	public const MoleMole.NotifyTypes CameraLock = 505;
	public const MoleMole.NotifyTypes CameraFieldLook = 506;
	public const MoleMole.NotifyTypes DisableMainPageControl = 507;
	public const MoleMole.NotifyTypes DisableMainPageControlWithConfigName = 508;
	public const MoleMole.NotifyTypes ResinChanged = 509;
	public const MoleMole.NotifyTypes ResinPurchased = 510;
	public const MoleMole.NotifyTypes BlossomBriefInfoNotify = 511;
	public const MoleMole.NotifyTypes BlossomStart = 512;
	public const MoleMole.NotifyTypes BlossomUpdate = 513;
	public const MoleMole.NotifyTypes BlossomEnd = 514;
	public const MoleMole.NotifyTypes BlossomFinish = 515;
	public const MoleMole.NotifyTypes ShowDamageTextComponent = 516;
	public const MoleMole.NotifyTypes SinInRefresh = 517;
	public const MoleMole.NotifyTypes OnSignInInfoRsp = 518;
	public const MoleMole.NotifyTypes BonusActivityRewardRsp = 519;
	public const MoleMole.NotifyTypes ShowActivityMainBtn = 520;
	public const MoleMole.NotifyTypes OnBonusActivityInfoRsp = 521;
	public const MoleMole.NotifyTypes OnOpActivityStateRsp = 522;
	public const MoleMole.NotifyTypes OnOpActivityStateNotify = 523;
	public const MoleMole.NotifyTypes TrialActivityRewardUpdate = 524;
	public const MoleMole.NotifyTypes SalesManTakeRewardRsp = 525;
	public const MoleMole.NotifyTypes SalesmanDeliverItemRsp = 526;
	public const MoleMole.NotifyTypes GetAuthSalesmanInfoRsp = 527;
	public const MoleMole.NotifyTypes OnVirtualDialAction = 528;
	public const MoleMole.NotifyTypes OnVirtualDialEntryAction = 529;
	public const MoleMole.NotifyTypes OnTransmitStart = 530;
	public const MoleMole.NotifyTypes OnTransmitEnd = 531;
	public const MoleMole.NotifyTypes OnTransmitAfterAudioEvent = 532;
	public const MoleMole.NotifyTypes BundleDownloadStart = 533;
	public const MoleMole.NotifyTypes BundleDownloadRestart = 534;
	public const MoleMole.NotifyTypes BundleDownloadStartForLogin = 535;
	public const MoleMole.NotifyTypes BargainStart = 536;
	public const MoleMole.NotifyTypes BargainPriceRsp = 537;
	public const MoleMole.NotifyTypes BargainTerminate = 538;
	public const MoleMole.NotifyTypes BargainDataRsp = 539;
	public const MoleMole.NotifyTypes AllActivatedBargainData = 540;
	public const MoleMole.NotifyTypes HideRoom = 541;
	public const MoleMole.NotifyTypes ShowRoom = 542;
	public const MoleMole.NotifyTypes DeleteFriend = 543;
	public const MoleMole.NotifyTypes RefreshFriendList = 544;
	public const MoleMole.NotifyTypes RefreshFriendListWithAni = 545;
	public const MoleMole.NotifyTypes RefreshFriendRequestList = 546;
	public const MoleMole.NotifyTypes RefreshFriendRequestListWithAni = 547;
	public const MoleMole.NotifyTypes RefreshBlacklist = 548;
	public const MoleMole.NotifyTypes RefreshMultiplayRecentlyListWithAni = 549;
	public const MoleMole.NotifyTypes RefreshPSNFriendList = 550;
	public const MoleMole.NotifyTypes RefreshPSNFriendListWithAni = 551;
	public const MoleMole.NotifyTypes GetPlayerSocialDetail = 552;
	public const MoleMole.NotifyTypes GetFriendShowAvatarInfo = 553;
	public const MoleMole.NotifyTypes GetFriendShowAvatarInfoInCD = 554;
	public const MoleMole.NotifyTypes RefreshNickname = 555;
	public const MoleMole.NotifyTypes RefreshRemarkname = 556;
	public const MoleMole.NotifyTypes RefreshHeadPortrait = 557;
	public const MoleMole.NotifyTypes RefreshNameCard = 558;
	public const MoleMole.NotifyTypes RefreshAllNameCard = 559;
	public const MoleMole.NotifyTypes RefreshSignature = 560;
	public const MoleMole.NotifyTypes RefreshAvatarShowList = 561;
	public const MoleMole.NotifyTypes RefreshNameCardShowList = 562;
	public const MoleMole.NotifyTypes NicknameWordIllegal = 563;
	public const MoleMole.NotifyTypes TeamNameIllegal = 564;
	public const MoleMole.NotifyTypes SignatureIllegal = 565;
	public const MoleMole.NotifyTypes RefreshBirthday = 566;
	public const MoleMole.NotifyTypes AddInBlockChatList = 567;
	public const MoleMole.NotifyTypes RemoveFromBlockChatList = 568;
	public const MoleMole.NotifyTypes AddInBlacklist = 569;
	public const MoleMole.NotifyTypes RemoveFromBlacklist = 570;
	public const MoleMole.NotifyTypes ChatRoomInfoUpdate = 571;
	public const MoleMole.NotifyTypes RefreshMainPageChatContent = 572;
	public const MoleMole.NotifyTypes RefreshMainPageChatContentForce = 573;
	public const MoleMole.NotifyTypes RefreshChatEmojiCollectionList = 574;
	public const MoleMole.NotifyTypes ChatChannelBanStateUpdate = 575;
	public const MoleMole.NotifyTypes ChatChannelHideStateUpdate = 576;
	public const MoleMole.NotifyTypes BattlePassMissionChange = 577;
	public const MoleMole.NotifyTypes BattlePassScheduleChange = 578;
	public const MoleMole.NotifyTypes BattlePassProductPay = 579;
	public const MoleMole.NotifyTypes BattlePassLevelChange = 580;
	public const MoleMole.NotifyTypes BattlePassBuySuccess = 581;
	public const MoleMole.NotifyTypes RefreshLocalNotification = 582;
	public const MoleMole.NotifyTypes EnterSceneDone = 583;
	public const MoleMole.NotifyTypes PSNStateChange = 584;
	public const MoleMole.NotifyTypes PS5LaunchActivity = 585;
	public const MoleMole.NotifyTypes MpPlayPrepareNotify = 586;
	public const MoleMole.NotifyTypes GadgetPlayStartNotify = 587;
	public const MoleMole.NotifyTypes GadgetPlayDataNotify = 588;
	public const MoleMole.NotifyTypes GadgetPlayUidOpNotify = 589;
	public const MoleMole.NotifyTypes GadgetPlayStopNotify = 590;
	public const MoleMole.NotifyTypes GadgetChainChangeNotify = 591;
	public const MoleMole.NotifyTypes ScenePlayBattlePrepare = 592;
	public const MoleMole.NotifyTypes ScenePlayBattlePrestart = 593;
	public const MoleMole.NotifyTypes ScenePlayBattleStart = 594;
	public const MoleMole.NotifyTypes ScenePlayBattleStop = 595;
	public const MoleMole.NotifyTypes ScenePlayBattleInterrupt = 596;
	public const MoleMole.NotifyTypes ScenePlayUidOpNotify = 597;
	public const MoleMole.NotifyTypes StartChargeCountDown = 598;
	public const MoleMole.NotifyTypes InterruptChargeCountDown = 599;
	public const MoleMole.NotifyTypes ShowTemplateReminderNotify = 600;
	public const MoleMole.NotifyTypes CloseTemplateReminderDialog = 601;
	public const MoleMole.NotifyTypes ShowPromptDownReminderNotify = 602;
	public const MoleMole.NotifyTypes ForceDestroyPromptDownReminderNotify = 603;
	public const MoleMole.NotifyTypes NormalUidOpNotify = 604;
	public const MoleMole.NotifyTypes OnDispatchConfigSet = 605;
	public const MoleMole.NotifyTypes ShowDistanceTarget = 606;
	public const MoleMole.NotifyTypes ShowDistanceTargetV2 = 607;
	public const MoleMole.NotifyTypes CloseDistanceTarget = 608;
	public const MoleMole.NotifyTypes ClimateMeterType = 609;
	public const MoleMole.NotifyTypes ClimateMeterValue = 610;
	public const MoleMole.NotifyTypes ClimateAreaType = 611;
	public const MoleMole.NotifyTypes ClimateAreaID = 612;
	public const MoleMole.NotifyTypes ClimateMeterValueChanged = 613;
	public const MoleMole.NotifyTypes ClimateMeterTypeChanged = 614;
	public const MoleMole.NotifyTypes ClimateAreaTypeChanged = 615;
	public const MoleMole.NotifyTypes ClimateMeterWarning = 616;
	public const MoleMole.NotifyTypes ClimateMeterRefresh = 617;
	public const MoleMole.NotifyTypes ShowClimateInfoDialog = 618;
	public const MoleMole.NotifyTypes DungeonFactorDialogClose = 619;
	public const MoleMole.NotifyTypes ShowRestrictionEffect = 620;
	public const MoleMole.NotifyTypes ShowMonthlyCardReward = 621;
	public const MoleMole.NotifyTypes AchievementPageRefresh = 622;
	public const MoleMole.NotifyTypes AchievementItemAdded = 623;
	public const MoleMole.NotifyTypes AvatarFilterSetActiveCond = 624;
	public const MoleMole.NotifyTypes AvatarFilterSetExpanded = 625;
	public const MoleMole.NotifyTypes AvatarFilterVisionStateChanged = 626;
	public const MoleMole.NotifyTypes RefreshAvatarLinePage = 627;
	public const MoleMole.NotifyTypes OnPersonalLineAllDataRsp = 628;
	public const MoleMole.NotifyTypes AvatarLineGetKey = 629;
	public const MoleMole.NotifyTypes AvatarLineUnlock = 630;
	public const MoleMole.NotifyTypes ShareComplete = 631;
	public const MoleMole.NotifyTypes SDKPayStart = 632;
	public const MoleMole.NotifyTypes SDKPayEnd = 633;
	public const MoleMole.NotifyTypes SDKGetProductList = 634;
	public const MoleMole.NotifyTypes AvatarAddNotify = 635;
	public const MoleMole.NotifyTypes TrialAvatarDelete = 636;
	public const MoleMole.NotifyTypes OnTakeReputationLevelReward = 637;
	public const MoleMole.NotifyTypes RefreshReputation = 638;
	public const MoleMole.NotifyTypes OnCityReputationLevelup = 639;
	public const MoleMole.NotifyTypes RefreshHunting = 640;
	public const MoleMole.NotifyTypes HuntingStart = 641;
	public const MoleMole.NotifyTypes HuntingRevealClue = 642;
	public const MoleMole.NotifyTypes HuntingRevealFinal = 643;
	public const MoleMole.NotifyTypes HuntingSuccess = 644;
	public const MoleMole.NotifyTypes HuntingFail = 645;
	public const MoleMole.NotifyTypes CloseReputationHuntingDialog = 646;
	public const MoleMole.NotifyTypes CloseReputationRequestDialog = 647;
	public const MoleMole.NotifyTypes HuntingTaken = 648;
	public const MoleMole.NotifyTypes HuntingFinished = 649;
	public const MoleMole.NotifyTypes OfferingDataUpdated = 650;
	public const MoleMole.NotifyTypes TakeOfferingLevelReward = 651;
	public const MoleMole.NotifyTypes OfferingLevelChange = 652;
	public const MoleMole.NotifyTypes OfferingLevelChangeReward = 653;
	public const MoleMole.NotifyTypes ForbiddenToggleMoveStateChange = 654;
	public const MoleMole.NotifyTypes OnToggleMoveSettingChange = 655;
	public const MoleMole.NotifyTypes KeyboardLayoutUpdate = 656;
	public const MoleMole.NotifyTypes ControllerMapModified = 657;
	public const MoleMole.NotifyTypes OnControllerConnected = 658;
	public const MoleMole.NotifyTypes OnDeviceTypeSet = 659;
	public const MoleMole.NotifyTypes SetDeviceTypeInSettingPage = 660;
	public const MoleMole.NotifyTypes OnJoypadIconDisplayTypeChange = 661;
	public const MoleMole.NotifyTypes WidgetActionBtnRefresh = 662;
	public const MoleMole.NotifyTypes WidgetEquipChange = 663;
	public const MoleMole.NotifyTypes WidgetCollectorWindSeed = 664;
	public const MoleMole.NotifyTypes WidgetQuickUseButtonRelease = 665;
	public const MoleMole.NotifyTypes WidgetQuickUseRsp = 666;
	public const MoleMole.NotifyTypes ForcePlayBattleBtnCdEndEffect = 667;
	public const MoleMole.NotifyTypes WidgetWeatherWizardValueUpdate = 668;
	public const MoleMole.NotifyTypes FlightChallengeBegin = 669;
	public const MoleMole.NotifyTypes FlightChallengeFinish = 670;
	public const MoleMole.NotifyTypes ReportSuccNotify = 671;
	public const MoleMole.NotifyTypes PlayerQuitFromMpByHostBlock = 672;
	public const MoleMole.NotifyTypes PlayerQuitFromMpByGuestBlock = 673;
	public const MoleMole.NotifyTypes ActivityBlessingDataRefresh = 674;
	public const MoleMole.NotifyTypes ActivityBlessingScanSuccess = 675;
	public const MoleMole.NotifyTypes ActivityBlessingScanFail = 676;
	public const MoleMole.NotifyTypes ActivityBlessingRefresh = 677;
	public const MoleMole.NotifyTypes ActivityGiveFriendPicSuccess = 678;
	public const MoleMole.NotifyTypes TreasureHuntCurrencyNumChange = 679;
	public const MoleMole.NotifyTypes ReunionAddToOpActivityListNotify = 680;
	public const MoleMole.NotifyTypes ReunionRemoveFromOpActivityListNotify = 681;
	public const MoleMole.NotifyTypes ReunionGetFirstRewardSuccNotify = 682;
	public const MoleMole.NotifyTypes ReunionSignInGetRewardNotify = 683;
	public const MoleMole.NotifyTypes ReunionTaskClaimFinalRewardSuccNotify = 684;
	public const MoleMole.NotifyTypes ReunionTaskClaimWatcherRewardSuccNotify = 685;
	public const MoleMole.NotifyTypes AvatarExpeditionStartNtf = 686;
	public const MoleMole.NotifyTypes ShowLendHistoryNotify = 687;
	public const MoleMole.NotifyTypes ExpeditionActivityStartNotify = 688;
	public const MoleMole.NotifyTypes ExpeditionActivityRecallNotify = 689;
	public const MoleMole.NotifyTypes ExpeditionActivityRewardClaimedNotify = 690;
	public const MoleMole.NotifyTypes ExpeditionActivityInfoUpdateNotify = 691;
	public const MoleMole.NotifyTypes OpenExpeditionMap = 692;
	public const MoleMole.NotifyTypes OnExpeditionChallengeEnterRegion = 693;
	public const MoleMole.NotifyTypes OnExpeditionChallengeFinish = 694;
	public const MoleMole.NotifyTypes GetExpeditionRewardNotify = 695;
	public const MoleMole.NotifyTypes GadgetGroupButtonAddNotify = 696;
	public const MoleMole.NotifyTypes GadgetGroupButtonRemoveNotify = 697;
	public const MoleMole.NotifyTypes ActivityUpdateRegion = 698;
	public const MoleMole.NotifyTypes WalkModeChanged = 699;
	public const MoleMole.NotifyTypes FireUIEffectNotify = 700;
	public const MoleMole.NotifyTypes AttachUIEffectNotify = 701;
	public const MoleMole.NotifyTypes UntachUIEffectNotify = 702;
	public const MoleMole.NotifyTypes PlayerApplyEnterMpResult = 703;
	public const MoleMole.NotifyTypes PlayerQuitFromMp = 704;
	public const MoleMole.NotifyTypes PlayerVehilceUpdate = 705;
	public const MoleMole.NotifyTypes UpdateFriendsWishNotify = 706;
	public const MoleMole.NotifyTypes UpdateRecvGiftsNotify = 707;
	public const MoleMole.NotifyTypes UpdateGiftRecvInfoNotify = 708;
	public const MoleMole.NotifyTypes UpdateGiveGiftDialog = 709;
	public const MoleMole.NotifyTypes HaveRecvGiftNotify = 710;
	public const MoleMole.NotifyTypes OnActivitySetGiftWishRsp = 711;
	public const MoleMole.NotifyTypes GachaActivityPercentNotify = 712;
	public const MoleMole.NotifyTypes GachaActivityCreateRobotRsp = 713;
	public const MoleMole.NotifyTypes GachaActivityResetRsp = 714;
	public const MoleMole.NotifyTypes GachaActivityTakeRewardRsp = 715;
	public const MoleMole.NotifyTypes GachaActivityNextStageRsp = 716;
	public const MoleMole.NotifyTypes GetMechanicusInfoRsp = 717;
	public const MoleMole.NotifyTypes UpdateGearItem = 718;
	public const MoleMole.NotifyTypes UnLockGearItem = 719;
	public const MoleMole.NotifyTypes FoundationOpLockFailed = 720;
	public const MoleMole.NotifyTypes MechanicusCoinNotify = 721;
	public const MoleMole.NotifyTypes FoundationUpdateNotify = 722;
	public const MoleMole.NotifyTypes OnInBattleMechanicusStageKillStartNotify = 723;
	public const MoleMole.NotifyTypes OnInBattleMechanicusStageKillEndNotify = 724;
	public const MoleMole.NotifyTypes OnInBattleMechanicusStageCardFlipEndNotify = 725;
	public const MoleMole.NotifyTypes OnInBattleMechanicusStart = 726;
	public const MoleMole.NotifyTypes OnInBattleMechanicusUpdate = 727;
	public const MoleMole.NotifyTypes OnInBattleMechanicusFinish = 728;
	public const MoleMole.NotifyTypes OnInBattleMechanicusPickCardRsp = 729;
	public const MoleMole.NotifyTypes OnInBattleMechanicusPickCardNotify = 730;
	public const MoleMole.NotifyTypes OnInBattleMechanicusConfirmCardRsp = 731;
	public const MoleMole.NotifyTypes OnInBattleMechanicusConfirmCardNotify = 732;
	public const MoleMole.NotifyTypes OnInBattleMechanicusCardResultNotify = 733;
	public const MoleMole.NotifyTypes OnInBattleChessPickCardNotify = 734;
	public const MoleMole.NotifyTypes OnInBattleChessCandidateCardsNotify = 735;
	public const MoleMole.NotifyTypes FleurFairDungeonPreview = 736;
	public const MoleMole.NotifyTypes FleurFairDungeonPrepare = 737;
	public const MoleMole.NotifyTypes FleurFairDungeonGallery = 738;
	public const MoleMole.NotifyTypes FleurFairDungeonBoss = 739;
	public const MoleMole.NotifyTypes FleurFairDungeonGallerySettle = 740;
	public const MoleMole.NotifyTypes FleurFairDungeonBossSettle = 741;
	public const MoleMole.NotifyTypes FleurFairDungeonEnergy = 742;
	public const MoleMole.NotifyTypes FleurFairDungeonGalleryUpdate = 743;
	public const MoleMole.NotifyTypes SummerTimeStage4JoypadFocusChange = 744;
	public const MoleMole.NotifyTypes SummerTimeSprintBoatRedpointChange = 745;
	public const MoleMole.NotifyTypes GalleryDialogShow = 746;
	public const MoleMole.NotifyTypes GalleryPreStart = 747;
	public const MoleMole.NotifyTypes GalleryStart = 748;
	public const MoleMole.NotifyTypes GalleryStop = 749;
	public const MoleMole.NotifyTypes GalleryUpdateAll = 750;
	public const MoleMole.NotifyTypes GalleryBalloonShoot = 751;
	public const MoleMole.NotifyTypes GalleryBalloonScore = 752;
	public const MoleMole.NotifyTypes GalleryFallCatch = 753;
	public const MoleMole.NotifyTypes GalleryFallScore = 754;
	public const MoleMole.NotifyTypes GalleryMusicGameClose = 755;
	public const MoleMole.NotifyTypes GallerySettleRestart = 756;
	public const MoleMole.NotifyTypes GalleryPreInitCountDownStart = 757;
	public const MoleMole.NotifyTypes GalleryPreInitCountDownEnd = 758;
	public const MoleMole.NotifyTypes RefreshAvatarPanel = 759;
	public const MoleMole.NotifyTypes CheckUIOpenState = 760;
	public const MoleMole.NotifyTypes SlabCheckEnterLoopDungeon = 761;
	public const MoleMole.NotifyTypes SlabEquipBuffChange = 762;
	public const MoleMole.NotifyTypes GallerySumoStageStart = 763;
	public const MoleMole.NotifyTypes GallerySumoStageFinish = 764;
	public const MoleMole.NotifyTypes GallerySumoChangeTeam = 765;
	public const MoleMole.NotifyTypes GallerySumoChangeTeamCdUpdate = 766;
	public const MoleMole.NotifyTypes GallerySumoChangeTeamUpdateScore = 767;
	public const MoleMole.NotifyTypes StartCrystalLinkGalleryNotify = 768;
	public const MoleMole.NotifyTypes UpdateCrystalLinkGalleryNotify = 769;
	public const MoleMole.NotifyTypes StopCrystalLinkGalleryNotify = 770;
	public const MoleMole.NotifyTypes CrystalLinkBuffUpdate = 771;
	public const MoleMole.NotifyTypes CrystalLinkBuffEffect = 772;
	public const MoleMole.NotifyTypes CrystalLinkBuffActiveNotify = 773;
	public const MoleMole.NotifyTypes QuickSwitchTeamFetchNextTeamInfo = 774;
	public const MoleMole.NotifyTypes QuickSwitchTeamReqToChangeTeam = 775;
	public const MoleMole.NotifyTypes ArenaChallengeStart = 776;
	public const MoleMole.NotifyTypes ArenaChallengeTakeWatcherReward = 777;
	public const MoleMole.NotifyTypes ActivityMistTrialTakeReward = 778;
	public const MoleMole.NotifyTypes ActivityMistTrialExhibitionRefresh = 779;
	public const MoleMole.NotifyTypes ActivityMistTrialGalleryCountDown = 780;
	public const MoleMole.NotifyTypes ActivityMiniTomoClose = 781;
	public const MoleMole.NotifyTypes HomeWorldCompInfoUpdate = 782;
	public const MoleMole.NotifyTypes HomeWorldModuleChange = 783;
	public const MoleMole.NotifyTypes HomeWorldModuleChoose = 784;
	public const MoleMole.NotifyTypes HomeWorldModuleSeenUpdate = 785;
	public const MoleMole.NotifyTypes HomeWorldModulePrepareGoIn = 786;
	public const MoleMole.NotifyTypes HomeWorldFurnitureMakeInfoRefresh = 787;
	public const MoleMole.NotifyTypes HomeWorldFurnitureMakeGetResult = 788;
	public const MoleMole.NotifyTypes HomeWorldFurnitureMakeCancel = 789;
	public const MoleMole.NotifyTypes HomeWorldFurnitureFormulaUnlock = 790;
	public const MoleMole.NotifyTypes HomeWorldLevelUp = 791;
	public const MoleMole.NotifyTypes HomeWorldSuiteDetailShow = 792;
	public const MoleMole.NotifyTypes GetHomeworldVisitor = 793;
	public const MoleMole.NotifyTypes HomeKickPlayerRspSuccess = 794;
	public const MoleMole.NotifyTypes HomeWorldComfortInfoUpdate = 795;
	public const MoleMole.NotifyTypes ClearDeployGadgetData = 796;
	public const MoleMole.NotifyTypes HomeWorldChangeBGM = 797;
	public const MoleMole.NotifyTypes HomeWorldUnlockBGM = 798;
	public const MoleMole.NotifyTypes HomeWorldBlueprintSearchInfoUpdate = 799;
	public const MoleMole.NotifyTypes HideAndSeekStagePrepare = 800;
	public const MoleMole.NotifyTypes HideAndSeekStagePick = 801;
	public const MoleMole.NotifyTypes HideAndSeekStageHide = 802;
	public const MoleMole.NotifyTypes HideAndSeekStageSeek = 803;
	public const MoleMole.NotifyTypes HideAndSeekPlayerSetAvatarNotify = 804;
	public const MoleMole.NotifyTypes HideAndSeekSelectSkillRsp = 805;
	public const MoleMole.NotifyTypes HideAndSeekPlayerReadyNotify = 806;
	public const MoleMole.NotifyTypes HideAndSeekStageSettle = 807;
	public const MoleMole.NotifyTypes HideAndSeekCaught = 808;
	public const MoleMole.NotifyTypes HideAndSeekBecomeGhost = 809;
	public const MoleMole.NotifyTypes HideAndSeekPlayerChosenMapUpdate = 810;
	public const MoleMole.NotifyTypes AvatarChargeSkillNotify = 811;
	public const MoleMole.NotifyTypes LoginSceneNotify = 812;
	public const MoleMole.NotifyTypes CharacterPageNotify = 813;
	public const MoleMole.NotifyTypes CloseCharacterPageNotify = 814;
	public const MoleMole.NotifyTypes WeaponPageNotify = 815;
	public const MoleMole.NotifyTypes CloseWeaponPageNotify = 816;
	public const MoleMole.NotifyTypes LoadingBeginNotify = 817;
	public const MoleMole.NotifyTypes LoadingEndNotify = 818;
	public const MoleMole.NotifyTypes GachaItemNotify = 819;
	public const MoleMole.NotifyTypes CloseGachaNotify = 820;
	public const MoleMole.NotifyTypes GoToGachaPageNotify = 821;
	public const MoleMole.NotifyTypes GrowFlowersUpdateTodaySeedNotify = 822;
	public const MoleMole.NotifyTypes GrowFlowersUpdateExchangePage = 823;
	public const MoleMole.NotifyTypes GrowFlowersUpdateFriendsWishNotify = 824;
	public const MoleMole.NotifyTypes GrowFlowersUpdateRecvFlowersNotify = 825;
	public const MoleMole.NotifyTypes GrowFlowersUpdateRecvInfo = 826;
	public const MoleMole.NotifyTypes GrowFlowersUpdateGiveDialog = 827;
	public const MoleMole.NotifyTypes WinterCampSnowmanUpdateFriendsWishNotify = 828;
	public const MoleMole.NotifyTypes WinterCampSnowmanUpdateRecvItemNotify = 829;
	public const MoleMole.NotifyTypes WinterCampSnowmanUpdateRecvInfo = 830;
	public const MoleMole.NotifyTypes WinterCampSnowmanUpdateGiveDialog = 831;
	public const MoleMole.NotifyTypes StartBuoyantCombatGallerySuccess = 832;
	public const MoleMole.NotifyTypes StartBuoyantCombatGalleryNotify = 833;
	public const MoleMole.NotifyTypes UpdateBuoyantCombatGalleryNotify = 834;
	public const MoleMole.NotifyTypes StopBuoyantCombatGalleryNotify = 835;
	public const MoleMole.NotifyTypes StartGalleryProgressNotify = 836;
	public const MoleMole.NotifyTypes UpdateGalleryProgressNotify = 837;
	public const MoleMole.NotifyTypes StopGalleryProgressNotify = 838;
	public const MoleMole.NotifyTypes StartDigCombatGalleryNotify = 839;
	public const MoleMole.NotifyTypes UpdateDigCombatGalleryNotify = 840;
	public const MoleMole.NotifyTypes StopDigCombatGalleryNotify = 841;
	public const MoleMole.NotifyTypes SalvagePreventUpdateNotify = 842;
	public const MoleMole.NotifyTypes SalvageEscortUpdateNotify = 843;
	public const MoleMole.NotifyTypes UpdateSalvageBundleMark = 844;
	public const MoleMole.NotifyTypes UpdateBounceConjuringScore = 845;
	public const MoleMole.NotifyTypes AddBounceConjuringScore = 846;
	public const MoleMole.NotifyTypes LunaRiteSacrificeSuccess = 847;
	public const MoleMole.NotifyTypes LunaRiteRefresh = 848;
	public const MoleMole.NotifyTypes MoonfinTrialWatcherUpdated = 849;
	public const MoleMole.NotifyTypes TryShowQTEDialog = 850;
	public const MoleMole.NotifyTypes EnableSubtitleInputPenetrate = 851;
	public const MoleMole.NotifyTypes CodexKillNumRefresh = 852;
	public const MoleMole.NotifyTypes FishBaitUpdate = 853;
	public const MoleMole.NotifyTypes FishQteStart = 854;
	public const MoleMole.NotifyTypes FishBattleEnd = 855;
	public const MoleMole.NotifyTypes ExitFishing = 856;
	public const MoleMole.NotifyTypes FishRippleEffectStart = 857;
	public const MoleMole.NotifyTypes FishRippleEffectEnd = 858;
	public const MoleMole.NotifyTypes OnShikigamiSkillUpgrade = 859;
	public const MoleMole.NotifyTypes OnRefreshRoguelikeDungeonCardRsp = 860;
	public const MoleMole.NotifyTypes OnTakeRoguelikeStageFirstPassReward = 861;
	public const MoleMole.NotifyTypes OnEnterRoguelikeDungeonNotify = 862;
	public const MoleMole.NotifyTypes ActivityRogueContentClose = 863;
	public const MoleMole.NotifyTypes CustomGadgetSubmitRsp = 864;
	public const MoleMole.NotifyTypes IrodoriEditFlowerSubmitRsp = 865;
	public const MoleMole.NotifyTypes CustomGadgetPendingDataUnexpectedlyRemoved = 866;
	public const MoleMole.NotifyTypes ProjectionGameGuideFinishFreeRotationXY = 867;
	public const MoleMole.NotifyTypes ProjectionGameGuideFinishFreeRotationZ = 868;
	public const MoleMole.NotifyTypes ProjectionGameGuideFinishSwitch = 869;
	public const MoleMole.NotifyTypes ProjectionGameAnswerUnlocked = 870;
	public const MoleMole.NotifyTypes FireworkMakerRefreshPage = 871;
	public const MoleMole.NotifyTypes FireworkReformSettlement = 872;
	public const MoleMole.NotifyTypes LanternRiteStartFireworksReformRsp = 873;
	public const MoleMole.NotifyTypes LanternRiteDoFireworksReformRsp = 874;
	public const MoleMole.NotifyTypes LanternRiteEndFireworksReformRsp = 875;
	public const MoleMole.NotifyTypes LanternRiteEndFireworksReform = 876;
	public const MoleMole.NotifyTypes LanternRiteFireworksReformDoOnce = 877;
	public const MoleMole.NotifyTypes LocalAvatarStateIDChanged = 878;
	public const MoleMole.NotifyTypes LocalAvatarAttackTag = 879;
	public const MoleMole.NotifyTypes LocalAvatarDoSkillSucc = 880;
	public const MoleMole.NotifyTypes LocalAvatarAnimatorStateChangedBeforeClear = 881;
	public const MoleMole.NotifyTypes BattleFervorAuthorityOnBeingHit = 882;
	public const MoleMole.NotifyTypes BattleFervorAttackDamageResult = 883;
	public const MoleMole.NotifyTypes BattleFervorKilledNotify = 884;
	public const MoleMole.NotifyTypes CustomLevelDungeonUpdate = 885;
	public const MoleMole.NotifyTypes CustomDungeonTryTypeChanged = 886;
	public const MoleMole.NotifyTypes CustomLevelSearchResult = 887;
	public const MoleMole.NotifyTypes CustomLevelSubscribeResult = 888;
	public const MoleMole.NotifyTypes CustomLevelLikeResult = 889;
	public const MoleMole.NotifyTypes CustomLevelSaveResult = 890;
	public const MoleMole.NotifyTypes RegionalPlayEnable = 891;
	public const MoleMole.NotifyTypes RegionalPlayDisable = 892;
	public const MoleMole.NotifyTypes AbnormalClimateMixinEnable = 893;
	public const MoleMole.NotifyTypes AbnormalClimateMixinDisable = 894;
	public const MoleMole.NotifyTypes MichiaeBattleSkillUnlock = 895;
	public const MoleMole.NotifyTypes ShowSignalMichiae = 896;
	public const MoleMole.NotifyTypes LifeCountShow = 897;
	public const MoleMole.NotifyTypes LifeCountHide = 898;
	public const MoleMole.NotifyTypes LifeCountChange = 899;
	public const MoleMole.NotifyTypes AttachBartenderEffectNotify = 900;
	public const MoleMole.NotifyTypes DetachBartenderEffectNotify = 901;
	public const MoleMole.NotifyTypes BartenderRecipeUnlockNotify = 902;
	public const MoleMole.NotifyTypes HomeBalloonShootStartNotify = 903;
	public const MoleMole.NotifyTypes HomeBalloonShootScoreUpdateNotify = 904;
	public const MoleMole.NotifyTypes HomeBalloonShootEndNotify = 905;
	public const MoleMole.NotifyTypes SpiceActivityProcessFoodRsp = 906;
	public const MoleMole.NotifyTypes SpiceActivityFinishMakeSpiceRsp = 907;
	public const MoleMole.NotifyTypes IrodoriAcitvityInfoUpdate = 908;
	public const MoleMole.NotifyTypes IrodoriAcitvityWatcherInfoUpdate = 909;
	public const MoleMole.NotifyTypes FillPoetry = 910;
	public const MoleMole.NotifyTypes ScanPoetryEntity = 911;
	public const MoleMole.NotifyTypes MasterGalleryStart = 912;
	public const MoleMole.NotifyTypes MasterGallerySettle = 913;
	public const MoleMole.NotifyTypes IrodoriChessEquipCardUpdate = 914;
	public const MoleMole.NotifyTypes WidgetToyOnPhotographRelease = 915;
	public const MoleMole.NotifyTypes WidgetToyStartTakingPhoto = 916;
	public const MoleMole.NotifyTypes OnPhotoSettleNotify = 917;
	public const MoleMole.NotifyTypes OnGalleryPhotoStart = 918;
	public const MoleMole.NotifyTypes OnGalleryPhotoEnd = 919;
	public const MoleMole.NotifyTypes ActivityPhotoConfirmCameraSetting = 920;
	public const MoleMole.NotifyTypes PostActivityPhotoConfirmCameraSetting = 921;
	public const MoleMole.NotifyTypes OnPhotoActivityFinishRsp = 922;
	public const MoleMole.NotifyTypes BeforeShowActivityPhotoAdjustCameraPage = 923;
	public const MoleMole.NotifyTypes GetQuestLackingResourceRsp = 924;
	public const MoleMole.NotifyTypes ArrangeSaveFoundNotify = 925;
	public const MoleMole.NotifyTypes ArrangeSaveNotFoundNotify = 926;
	public const MoleMole.NotifyTypes UGCLimitedNotify = 927;
	public const MoleMole.NotifyTypes UGCLockedNotify = 928;
	public const MoleMole.NotifyTypes UGCStateUpdateNotify = 929;
	public const MoleMole.NotifyTypes CheckHistorySavesUpdateNotify = 930;
	public const MoleMole.NotifyTypes MusicGameRewardUnlockNotify = 931;
	public const MoleMole.NotifyTypes MusicGameRefreshUgcArchivesNotify = 932;
	public const MoleMole.NotifyTypes MusicGameImportOfficialLevelNotify = 933;
	public const MoleMole.NotifyTypes MusicGameImportUgcLevelNotify = 934;
	public const MoleMole.NotifyTypes MusicGameCompareUgcLevelNotify = 935;
	public const MoleMole.NotifyTypes MusicGameTrialUgcLevelNotify = 936;
	public const MoleMole.NotifyTypes MusicGamePlayUgcLevelNotify = 937;
	public const MoleMole.NotifyTypes MusicGameSettleNotify = 938;
	public const MoleMole.NotifyTypes MusicGameEndNotify = 939;
	public const MoleMole.NotifyTypes MusicGameRestartNotify = 940;
	public const MoleMole.NotifyTypes MusicGameSaveUgcNotify = 941;
	public const MoleMole.NotifyTypes RogueDiaryCardReroll = 942;
	public const MoleMole.NotifyTypes RogueDiaryStartDungeon = 943;
	public const MoleMole.NotifyTypes RogueDiaryResetDungeon = 944;
	public const MoleMole.NotifyTypes RogueDiaryCardSelected = 945;
	public const MoleMole.NotifyTypes RogueDiaryAvatarRevive = 946;
	public const MoleMole.NotifyTypes RogueDiaryFinishBanPick = 947;
	public const MoleMole.NotifyTypes ActivityQuickOpen = 948;
	public const MoleMole.NotifyTypes ActivitySpecialItem = 949;
	public const MoleMole.NotifyTypes ChasmChallengeGalleryInfoUpdateNotify = 950;
	public const MoleMole.NotifyTypes HomeSeekGalleryInfoUpdateNotify = 951;
	public const MoleMole.NotifyTypes IslandMoutainSelectRsp = 952;
	public const MoleMole.NotifyTypes IslandPartyAcitvityWatcherInfoUpdate = 953;
	public const MoleMole.NotifyTypes IslandPartyRaftReminderRefresh = 954;
	public const MoleMole.NotifyTypes IslandPartyRaftGalleryInfoUpdate = 955;
	public const MoleMole.NotifyTypes IslandPartySailGalleryInfoUpdate = 956;
	public const MoleMole.NotifyTypes IslandPartyDownHillGalleryInfoUpdate = 957;
	public const MoleMole.NotifyTypes ActivityJigsawGameSuccess = 958;
	public const MoleMole.NotifyTypes ActivityGearGameSuccess = 959;
	public const MoleMole.NotifyTypes ActivityGearAutoPlaceUpperLayer = 960;
	public const MoleMole.NotifyTypes ActivityGearAutoFlip = 961;
	public const MoleMole.NotifyTypes PlotInferenceFinishTalk = 962;
	public const MoleMole.NotifyTypes PlotInferenceUpdate = 963;
	public const MoleMole.NotifyTypes TeamManaged = 964;
	public const MoleMole.NotifyTypes BackupTeamDeleted = 965;
	public const MoleMole.NotifyTypes UpdateShownTeamId = 966;
	public const MoleMole.NotifyTypes DeathZoneActiveChange = 967;
	public const MoleMole.NotifyTypes MuqadasPotionGalleryInfoUpdate = 968;
	public const MoleMole.NotifyTypes InstableSprayTeamRefresh = 969;
	public const MoleMole.NotifyTypes InstableSprayGalleryInfoUpdate = 970;
	public const MoleMole.NotifyTypes InstableSpraySwitchTeamRspFail = 971;
	public const MoleMole.NotifyTypes HomeWoodExchangeInfoRefresh = 972;
	public const MoleMole.NotifyTypes HomeWoodExchangeUpdate = 973;
	public const MoleMole.NotifyTypes HomeWoodSelectedMaterialExchange = 974;
	public const MoleMole.NotifyTypes HomeWoodSelectedMaterialDialogClsoe = 975;
	public const MoleMole.NotifyTypes WindFieldActivityWatcherInfoUpdate = 976;
	public const MoleMole.NotifyTypes WindFieldGalleryInfoUpdate = 977;
	public const MoleMole.NotifyTypes WindFieldChallengeInfoUpdate = 978;
	public const MoleMole.NotifyTypes VintageHuntingGalleryStart = 979;
	public const MoleMole.NotifyTypes VintageHuntingGalleryStop = 980;
	public const MoleMole.NotifyTypes VintageHuntingGalleryUpdate = 981;
	public const MoleMole.NotifyTypes OnVintageMarketStrategySlotUnlockRsp = 982;
	public const MoleMole.NotifyTypes OnVintageMarketStoreChooseStrategyRsp = 983;
	public const MoleMole.NotifyTypes OnVintageMarketStoreViewStrategyRsp = 984;
	public const MoleMole.NotifyTypes OnVintageMarketDividendFinishNotify = 985;
	public const MoleMole.NotifyTypes OnVintageMarketNpcEventFinishNotify = 986;
	public const MoleMole.NotifyTypes OnVintageStoreAttrTooSmall = 987;
	public const MoleMole.NotifyTypes OnVintageMarketFinishStorePlayRsp = 988;
	public const MoleMole.NotifyTypes SwitchSkillIcon = 989;
	public const MoleMole.NotifyTypes CalalogWatcherUpdated = 990;
	public const MoleMole.NotifyTypes GCGClientSettle = 991;
	public const MoleMole.NotifyTypes GcgGuideTaskStateCancel = 992;
	public const MoleMole.NotifyTypes GcgHistoryMsgUpdated = 993;
	public const MoleMole.NotifyTypes RefreshGcgDeckName = 994;
	public const MoleMole.NotifyTypes GcgRefreshDeck = 995;
	public const MoleMole.NotifyTypes GcgDeckSaved = 996;
	public const MoleMole.NotifyTypes GcgCurrentDeckChanged = 997;
	public const MoleMole.NotifyTypes GcgRefreshCardDetail = 998;
	public const MoleMole.NotifyTypes GcgCardNumChanged = 999;
	public const MoleMole.NotifyTypes GcgFilterDataConfirm = 1000;
	public const MoleMole.NotifyTypes GcgFilterDialogVisionStateChanged = 1001;
	public const MoleMole.NotifyTypes GcgFilterDialogShow = 1002;
	public const MoleMole.NotifyTypes GcgFilterDialogUpdate = 1003;
	public const MoleMole.NotifyTypes RefreshGcgDeckAppearance = 1004;
	public const MoleMole.NotifyTypes GcgPlayerDataReady = 1005;
	public const MoleMole.NotifyTypes GcgPlayerDataUpdate = 1006;
	public const MoleMole.NotifyTypes GcgPlayerLevelInfoUpdate = 1007;
	public const MoleMole.NotifyTypes GcgHandbookWeeklyChallengeInfoUpdate = 1008;
	public const MoleMole.NotifyTypes GCGWeekChallengeNotifyNpcChange = 1009;
	public const MoleMole.NotifyTypes GcgCardProficiencyUpdate = 1010;
	public const MoleMole.NotifyTypes GcgCardProficiencyRewardTaken = 1011;
	public const MoleMole.NotifyTypes GcgCardProficiencyRewardItemAdded = 1012;
	public const MoleMole.NotifyTypes GcgBannedCardListUpdate = 1013;
	public const MoleMole.NotifyTypes GcgBannedCardListUpdateRefresh = 1014;
	public const MoleMole.NotifyTypes GcgCardFaceUnlock = 1015;
	public const MoleMole.NotifyTypes GcgGetReplayList = 1016;
	public const MoleMole.NotifyTypes GcgReplaySetFavorite = 1017;
	public const MoleMole.NotifyTypes GcgReplayBecameInvalid = 1018;
	public const MoleMole.NotifyTypes GcgReplayStart = 1019;
	public const MoleMole.NotifyTypes FungusFighterCaptureGalleryStart = 1020;
	public const MoleMole.NotifyTypes FungusFighterCaptureGalleryInfoUpdate = 1021;
	public const MoleMole.NotifyTypes FungusFighterCaptureGallerySettle = 1022;
	public const MoleMole.NotifyTypes FungusFighterCaptureGalleryStop = 1023;
	public const MoleMole.NotifyTypes FungusFighterTrainingGalleryStart = 1024;
	public const MoleMole.NotifyTypes FungusFighterTrainingGalleryInfoUpdate = 1025;
	public const MoleMole.NotifyTypes FungusFighterTrainingGallerySettle = 1026;
	public const MoleMole.NotifyTypes FungusFighterTrainingGalleryStop = 1027;
	public const MoleMole.NotifyTypes FungusFighterTrainingOrganizeSuccess = 1028;
	public const MoleMole.NotifyTypes FungusFighterTrainingBackupSuccess = 1029;
	public const MoleMole.NotifyTypes FungusFighterTrainingClearSuccess = 1030;
	public const MoleMole.NotifyTypes FungusFighterPartnerUseSkillSuccess = 1031;
	public const MoleMole.NotifyTypes CharAmusementStagePreview = 1032;
	public const MoleMole.NotifyTypes CharAmusementStagePrepare = 1033;
	public const MoleMole.NotifyTypes CharAmusementStageGallery = 1034;
	public const MoleMole.NotifyTypes CharAmusementGalleryInfoUpdate = 1035;
	public const MoleMole.NotifyTypes FungusFighterLevelUp = 1036;
	public const MoleMole.NotifyTypes FungusFighterLevelError = 1037;
	public const MoleMole.NotifyTypes FungusRenameSuccess = 1038;
	public const MoleMole.NotifyTypes FungusRenameFailed = 1039;
	public const MoleMole.NotifyTypes EffigyV2GalleryInfoUpdate = 1040;
	public const MoleMole.NotifyTypes HomeworldBlueprintSlotInfoUpdate = 1041;
	public const MoleMole.NotifyTypes HomeworldBlueprintFriendCopyOption = 1042;
	public const MoleMole.NotifyTypes HomeworldBlueprintSlotOptionUpdate = 1043;
	public const MoleMole.NotifyTypes HomeworldBlueprintCreateInfo = 1044;
	public const MoleMole.NotifyTypes HomeworldBlueprintDeleInfo = 1045;
	public const MoleMole.NotifyTypes HomeworldBlueprintSaveFromShare = 1046;
	public const MoleMole.NotifyTypes HomeworldBlueprintSetCreatButtonTimer = 1047;
	public const MoleMole.NotifyTypes HomeworldPreviewBlockChange = 1048;
	public const MoleMole.NotifyTypes HomeworldCrossModulePreview = 1049;
	public const MoleMole.NotifyTypes HomeworldEnterPreviewModeSuccess = 1050;
	public const MoleMole.NotifyTypes HomeworldResumeBlueprintHandBook = 1051;
	public const MoleMole.NotifyTypes HomeworldSceneFishpondFarmSuccess = 1052;
	public const MoleMole.NotifyTypes BrickBreakerStagePrepare = 1053;
	public const MoleMole.NotifyTypes BrickBreakerStagePick = 1054;
	public const MoleMole.NotifyTypes BrickBreakerStageGame = 1055;
	public const MoleMole.NotifyTypes BrickBreakerPlayerSetAvatarNotify = 1056;
	public const MoleMole.NotifyTypes BrickBreakerSelectSkillRsp = 1057;
	public const MoleMole.NotifyTypes BrickBreakerPlayerSetSkillNotify = 1058;
	public const MoleMole.NotifyTypes BrickBreakerPlayerReadyNotify = 1059;
	public const MoleMole.NotifyTypes BrickBreakerStageSettle = 1060;
	public const MoleMole.NotifyTypes BrickBreakerPlayerChangingNotify = 1061;
	public const MoleMole.NotifyTypes OnSingleStartBrickBreakerRsp = 1062;
	public const MoleMole.NotifyTypes OnInBattleBrickBreakerStart = 1063;
	public const MoleMole.NotifyTypes OnInBattleBrickBreakerUpdate = 1064;
	public const MoleMole.NotifyTypes OnInBattleBrickBreakerFinish = 1065;
	public const MoleMole.NotifyTypes OnInBattleBrickBreakerShowBanner = 1066;
	public const MoleMole.NotifyTypes BrickBreakerLevelChecked = 1067;
	public const MoleMole.NotifyTypes BrickBreakerWatcherInfoUpdate = 1068;
	public const MoleMole.NotifyTypes OnGalleryElectroHercluesBattleStart = 1069;
	public const MoleMole.NotifyTypes OnGalleryElectroHercluesBattleStop = 1070;
	public const MoleMole.NotifyTypes HerculesBattleStopGuideTask = 1071;
	public const MoleMole.NotifyTypes HerculesBattlePreAccumulateNodeFinish = 1072;
	public const MoleMole.NotifyTypes ElectroherculesBattleSelectDifficultyRsp = 1073;
	public const MoleMole.NotifyTypes CoinCollectSkillSelectFailed = 1074;
	public const MoleMole.NotifyTypes CoinCollectSkillSelectSucceed = 1075;
	public const MoleMole.NotifyTypes CoinCollectInviteCheckFailed = 1076;
	public const MoleMole.NotifyTypes CoinCollectInviteCheckSucceed = 1077;
	public const MoleMole.NotifyTypes CoinCollectGalleryInfoUpdate = 1078;
	public const MoleMole.NotifyTypes CoinCollectGalleryReady = 1079;
	public const MoleMole.NotifyTypes CoinCollectMultistagePrepare = 1080;
	public const MoleMole.NotifyTypes CoinCollectMultistageCutScene = 1081;
	public const MoleMole.NotifyTypes CoinCollectMultistageGallery = 1082;
	public const MoleMole.NotifyTypes CoinCollectMultistageEnd = 1083;
	public const MoleMole.NotifyTypes CoinCollectMultistagePlayerInfoUpdate = 1084;
	public const MoleMole.NotifyTypes LanV3ConditionUpdate = 1085;
	public const MoleMole.NotifyTypes LanV3BoatGameStagePrepare = 1086;
	public const MoleMole.NotifyTypes LanV3BoatGameStagePlay = 1087;
	public const MoleMole.NotifyTypes LanV3BoatGameStageSettle = 1088;
	public const MoleMole.NotifyTypes LanV3BoatGameMultistagePlayEnd = 1089;
	public const MoleMole.NotifyTypes LanV3BoatGameTransferFinish = 1090;
	public const MoleMole.NotifyTypes LanV3BoatGameGalleryMultiInfoUpdate = 1091;
	public const MoleMole.NotifyTypes LanV3BoatGameSingleStart = 1092;
	public const MoleMole.NotifyTypes ShadowGameBlockSwap = 1093;
	public const MoleMole.NotifyTypes ShadowGameSettle = 1094;
	public const MoleMole.NotifyTypes ShadowGameSuccess = 1095;
	public const MoleMole.NotifyTypes ShadowGameFail = 1096;
	public const MoleMole.NotifyTypes ShadowGameQuit = 1097;
	public const MoleMole.NotifyTypes ShadowGameRestart = 1098;
	public const MoleMole.NotifyTypes ShadowGameNextLevel = 1099;
	public const MoleMole.NotifyTypes ShadowGameFinishLevel = 1100;
	public const MoleMole.NotifyTypes StartTeamChainGalleryNotify = 1101;
	public const MoleMole.NotifyTypes UpdateTeamChainGalleryNotify = 1102;
	public const MoleMole.NotifyTypes StopTeamChainGalleryNotify = 1103;
	public const MoleMole.NotifyTypes DuelHeartSelectDifficultySucc = 1104;
	public const MoleMole.NotifyTypes UpdateDuelHeartDifficulty = 1105;
	public const MoleMole.NotifyTypes DuelHeartCreateCountDown = 1106;
	public const MoleMole.NotifyTypes DuelHeartClearCountDown = 1107;
	public const MoleMole.NotifyTypes SorushGoOutLimit = 1108;
	public const MoleMole.NotifyTypes SorushBackLimit = 1109;
	public const MoleMole.NotifyTypes PacmanActivityWatcherInfoUpdate = 1110;
	public const MoleMole.NotifyTypes PacmanGalleryInfoUpdate = 1111;
	public const MoleMole.NotifyTypes PacmanDungeonSettle = 1112;
	public const MoleMole.NotifyTypes PacmanGameStagePrepare = 1113;
	public const MoleMole.NotifyTypes PacmanGameStageGallery = 1114;
	public const MoleMole.NotifyTypes PacmanGameStageSettle = 1115;
	public const MoleMole.NotifyTypes FungusV2PartnerSpawn = 1116;
	public const MoleMole.NotifyTypes FungusV2PartnerDie = 1117;
	public const MoleMole.NotifyTypes FungusV2EnemySpawn = 1118;
	public const MoleMole.NotifyTypes FungusV2EnemyDie = 1119;
	public const MoleMole.NotifyTypes OnServerRedpointUpdated = 1120;
	public const MoleMole.NotifyTypes AkaFesRhythmClick = 1121;
	public const MoleMole.NotifyTypes AkaFesRhythmLongPress = 1122;
	public const MoleMole.NotifyTypes AkaFesRhythmRoundEnd = 1123;
	public const MoleMole.NotifyTypes AkaFesRhythmLevelEnd = 1124;
	public const MoleMole.NotifyTypes AkaFesRhythmSuccess = 1125;
	public const MoleMole.NotifyTypes AkaFesRhythmFail = 1126;
	public const MoleMole.NotifyTypes AkaFesRhythmMiss = 1127;
	public const MoleMole.NotifyTypes AkaFesRhythmFinishPlay = 1128;
	public const MoleMole.NotifyTypes AkaFesRhythmStartPlay = 1129;
	public const MoleMole.NotifyTypes AkaFesRhythmPause = 1130;
	public const MoleMole.NotifyTypes AkaFesRhythmShakeCamera = 1131;
	public const MoleMole.NotifyTypes AkaFesAstrolabeReturnToSelectLevel = 1132;
	public const MoleMole.NotifyTypes AkaFesAstrolabeEnterNextLevel = 1133;
	public const MoleMole.NotifyTypes AkaFesAstrolabeSelectLevelStart = 1134;
	public const MoleMole.NotifyTypes AkaFesAstrolabeSelectLevelFinish = 1135;
	public const MoleMole.NotifyTypes AkaFesAstrolabeChangeGearBtnState = 1136;
	public const MoleMole.NotifyTypes AkaFesArchitectSaveComplete = 1137;
	public const MoleMole.NotifyTypes AkaFesArchaeologyReminderRefresh = 1138;
	public const MoleMole.NotifyTypes SandWormCannonGalleryStart = 1139;
	public const MoleMole.NotifyTypes SandWormCannonGalleryFinish = 1140;
	public const MoleMole.NotifyTypes SandWormCannonChargeProgressUpdate = 1141;
	public const MoleMole.NotifyTypes SandWormCannonExitChallenge = 1142;
	public const MoleMole.NotifyTypes CustomGalleryUpdateAll = 1143;
	public const MoleMole.NotifyTypes CustomGalleryUpdateSingleProgress = 1144;
	public const MoleMole.NotifyTypes LanguageChange = 1145;
	public const MoleMole.NotifyTypes GalleryCountDownEndTimeChange = 1146;
	public const MoleMole.NotifyTypes SorushTrialGalleryStart = 1147;
	public const MoleMole.NotifyTypes SorushTrialGalleryStop = 1148;
	public const MoleMole.NotifyTypes SorushTrialOnPhotomatchSettle = 1149;
}
public enum IIFLCPMLOKF
{
	// Fields
	public const IIFLCPMLOKF None = 0;
	public const IIFLCPMLOKF OpenMap = 1;
	public const IIFLCPMLOKF OpenQuestBook = 2;
	public const IIFLCPMLOKF OpenCharacter = 3;
	public const IIFLCPMLOKF OpenBag = 4;
	public const IIFLCPMLOKF SwitchElementView = 5;
	public const IIFLCPMLOKF OpenTutorial = 6;
	public const IIFLCPMLOKF OpenGach = 7;
	public const IIFLCPMLOKF OpenAdventureBook = 8;
	public const IIFLCPMLOKF ToAvatar1 = 9;
	public const IIFLCPMLOKF ToAvatar2 = 10;
	public const IIFLCPMLOKF ToAvatar3 = 11;
	public const IIFLCPMLOKF ToAvatar4 = 12;
	public const IIFLCPMLOKF ToAvatar5 = 13;
	public const IIFLCPMLOKF OpenBattlePass = 14;
	public const IIFLCPMLOKF OpenMultiplayer = 15;
	public const IIFLCPMLOKF OpenDungeonFactor = 16;
	public const IIFLCPMLOKF OpenActivityNormal = 17;
	public const IIFLCPMLOKF PressQuickUseButton = 18;
	public const IIFLCPMLOKF PressActivitySkillButton = 19;
	public const IIFLCPMLOKF HomeworldEditor = 20;
	public const IIFLCPMLOKF PressActivitySimpleButton = 21;
	public const IIFLCPMLOKF OpenGcgHandbook = 22;
}
public enum EFCINKAHAJK.NDEFHIGMHCF
{
	// Fields
	public const EFCINKAHAJK.NDEFHIGMHCF None = 0;
	public const EFCINKAHAJK.NDEFHIGMHCF AlwaysInactive = 1;
}
public enum EFCINKAHAJK.HEFGBIHOBLB
{
	// Fields
	public const EFCINKAHAJK.HEFGBIHOBLB Auto = 0;
	public const EFCINKAHAJK.HEFGBIHOBLB KB = 1;
	public const EFCINKAHAJK.HEFGBIHOBLB MB = 2;
	public const EFCINKAHAJK.HEFGBIHOBLB GB = 3;
	public const EFCINKAHAJK.HEFGBIHOBLB B = 4;
}
public enum EFCINKAHAJK.MHLGLJFJCEH
{
	// Fields
	public const EFCINKAHAJK.MHLGLJFJCEH Front = 0;
	public const EFCINKAHAJK.MHLGLJFJCEH Side = 1;
}
public enum EFCINKAHAJK.JDKNEIPANCF
{
	// Fields
	public const EFCINKAHAJK.JDKNEIPANCF None = 0;
	public const EFCINKAHAJK.JDKNEIPANCF Place = 1;
	public const EFCINKAHAJK.JDKNEIPANCF Npc = 2;
	public const EFCINKAHAJK.JDKNEIPANCF Both = 3;
}
public enum CNENAGKCOHK
{
	// Fields
	public const CNENAGKCOHK Noe = 0;
	public const CNENAGKCOHK Monster = 1;
	public const CNENAGKCOHK Quest = 2;
}
public enum BELJBJMCODP.PJHCFMPNPGE
{
	// Fields
	public const BELJBJMCODP.PJHCFMPNPGE DOUBLE_BUTTON = 0;
	public const BELJBJMCODP.PJHCFMPNPGE SINGLE_BUTTON = 1;
}
public enum LBAACKIODAJ.IDACPILDEGH
{
	// Fields
	public const LBAACKIODAJ.IDACPILDEGH DOUBLE_BUTTON = 0;
	public const LBAACKIODAJ.IDACPILDEGH SINGLE_BUTTON = 1;
}
public enum LBAACKIODAJ.JOBMIEJMCJN
{
	// Fields
	public const LBAACKIODAJ.JOBMIEJMCJN REQUEST = 0;
	public const LBAACKIODAJ.JOBMIEJMCJN SECOND_REQUEST = 1;
	public const LBAACKIODAJ.JOBMIEJMCJN DONT_ASK_AGAIN = 2;
}
public enum HNIEMLKKMNH
{
	// Fields
	public const HNIEMLKKMNH Reward_Preview_normal = 0;
	public const HNIEMLKKMNH Reward_Preview_onlyItem = 1;
	public const HNIEMLKKMNH Reward_Preview_Invalid = 2;
}
public enum DJNJMMCAFDH
{
	// Fields
	public const DJNJMMCAFDH InProgress = 0;
	public const DJNJMMCAFDH MarkPoint = 1;
	public const DJNJMMCAFDH FetchHint = 2;
	public const DJNJMMCAFDH Complete = 3;
}
public enum NIBDLEDPBDB.GBKACEJKMBI
{
	// Fields
	public const NIBDLEDPBDB.GBKACEJKMBI OVERVIEW_PAGE = 0;
	public const NIBDLEDPBDB.GBKACEJKMBI INSIDE_PAGE = 1;
}
public enum NIBDLEDPBDB.OHEJLFCAJDF
{
	// Fields
	public const NIBDLEDPBDB.OHEJLFCAJDF NORMAL = 0;
	public const NIBDLEDPBDB.OHEJLFCAJDF SEARCH = 1;
}
public enum HOGADHJNLKC.EIBIPEGMOFM
{
	// Fields
	public const HOGADHJNLKC.EIBIPEGMOFM ResinCard = 1204;
	public const HOGADHJNLKC.EIBIPEGMOFM TimingResin = 107012;
	public const HOGADHJNLKC.EIBIPEGMOFM FragileResin = 107009;
	public const HOGADHJNLKC.EIBIPEGMOFM HCoin = 201;
}
public enum MCBDALGNCFN
{
	// Fields
	public const MCBDALGNCFN NONE = 0;
	public const MCBDALGNCFN SMALL_TALENT_POINT = 1;
	public const MCBDALGNCFN BIG_TALENT_POINT = 2;
}
public enum GNBALPGMJJD
{
	// Fields
	public const GNBALPGMJJD DAILY_DUNGEON = 0;
	public const GNBALPGMJJD TOWER_DUNGEON = 1;
	public const GNBALPGMJJD TRIAL_DUNGEON = 2;
}
public enum BOJPCBAKCME
{
	// Fields
	public const BOJPCBAKCME INVESTIGATION = 0;
	public const BOJPCBAKCME TASK = 1;
	public const BOJPCBAKCME DUNGEON = 2;
	public const BOJPCBAKCME MONSTER = 3;
	public const BOJPCBAKCME QUEST_GUIDE = 4;
	public const BOJPCBAKCME EDUCATION = 5;
}
public enum ACAHBOOCOHK.NBADKJIDNEE
{
	// Fields
	public const ACAHBOOCOHK.NBADKJIDNEE Normal = 0;
	public const ACAHBOOCOHK.NBADKJIDNEE CharacterSelect = 1;
	public const ACAHBOOCOHK.NBADKJIDNEE RoguelikeTeamPage = 2;
	public const ACAHBOOCOHK.NBADKJIDNEE TeamChainTeamPage = 3;
}
public enum PCPCPOOGBBO.KJHBHGEMIEN
{
	// Fields
	public const PCPCPOOGBBO.KJHBHGEMIEN WeaponSelect = 0;
	public const PCPCPOOGBBO.KJHBHGEMIEN Exploration = 1;
}
public enum GNFJBIEPEFB.PJIMNAFCFFA
{
	// Fields
	public const GNFJBIEPEFB.PJIMNAFCFFA None = 0;
	public const GNFJBIEPEFB.PJIMNAFCFFA Cook = 1;
	public const GNFJBIEPEFB.PJIMNAFCFFA Forge = 2;
	public const GNFJBIEPEFB.PJIMNAFCFFA Alchemist = 3;
	public const GNFJBIEPEFB.PJIMNAFCFFA Exploration = 4;
	public const GNFJBIEPEFB.PJIMNAFCFFA HomeWorldConstruct = 5;
}
public enum GOMENCFLIMA.APOFOPNIILC
{
	// Fields
	public const GOMENCFLIMA.APOFOPNIILC REWARD = 1;
	public const GOMENCFLIMA.APOFOPNIILC MISSION = 2;
	public const GOMENCFLIMA.APOFOPNIILC STORY = 3;
}
public enum OBCGAAMOFME.OIENDFHOFEB
{
	// Fields
	public const OBCGAAMOFME.OIENDFHOFEB InGame = 0;
	public const OBCGAAMOFME.OIENDFHOFEB PSN = 1;
}
public enum NGIGANEFOBD.GLKLCAKHPJN
{
	// Fields
	public const NGIGANEFOBD.GLKLCAKHPJN Team = 0;
	public const NGIGANEFOBD.GLKLCAKHPJN Nickname = 1;
	public const NGIGANEFOBD.GLKLCAKHPJN Remarkname = 2;
	public const NGIGANEFOBD.GLKLCAKHPJN GcgDeckName = 3;
	public const NGIGANEFOBD.GLKLCAKHPJN GcgDeckNameOnlyCheck = 4;
}
public enum OKKIHGGJAFF.MGIMLDIFJJK
{
	// Fields
	public const OKKIHGGJAFF.MGIMLDIFJJK Hide = 0;
	public const OKKIHGGJAFF.MGIMLDIFJJK Equiped = 1;
	public const OKKIHGGJAFF.MGIMLDIFJJK Contrast = 2;
	public const OKKIHGGJAFF.MGIMLDIFJJK Fold = 3;
}
public enum IMJGEEKJPIF
{
	// Fields
	public const IMJGEEKJPIF MainToCharacter = 0;
	public const IMJGEEKJPIF TeamToCharacter = 1;
	public const IMJGEEKJPIF PreviewToCharacter = 2;
	public const IMJGEEKJPIF GachaToCharacter = 3;
	public const IMJGEEKJPIF PreviewClientFakeSingleCharacter = 4;
	public const IMJGEEKJPIF FriendToCharacter = 5;
	public const IMJGEEKJPIF PreviewClientFakeCharacterTeam = 6;
	public const IMJGEEKJPIF MirrorAvatarDungeonToCharacter = 7;
}
public enum CFHOLNMBPIP
{
	// Fields
	public const CFHOLNMBPIP COOK = 0;
	public const CFHOLNMBPIP COMPOUND = 1;
	public const CFHOLNMBPIP RANDOM_COOK = 2;
}
public enum GLPIJBIJOEL.GNLKLKJDFBP
{
	// Fields
	public const GLPIJBIJOEL.GNLKLKJDFBP Avatar = 0;
	public const GLPIJBIJOEL.GNLKLKJDFBP Weapon = 1;
}
public enum IECPMBMFIAM
{
	// Fields
	public const IECPMBMFIAM Resin = 0;
}
public enum PJLHAJNDEDJ.FGHPEJALNAN
{
	// Fields
	public const PJLHAJNDEDJ.FGHPEJALNAN DUNGEON_FACTOR = 0;
	public const PJLHAJNDEDJ.FGHPEJALNAN TRIAL = 1;
	public const PJLHAJNDEDJ.FGHPEJALNAN CUSTOM = 2;
}
public enum GMBIGKOFEKD.JKCMJKNNIJM
{
	// Fields
	public const GMBIGKOFEKD.JKCMJKNNIJM HOST = 0;
	public const GMBIGKOFEKD.JKCMJKNNIJM GUEST = 1;
}
public enum GMBIGKOFEKD.BFEDGLHKIAD
{
	// Fields
	public const GMBIGKOFEKD.BFEDGLHKIAD MPPlay = 0;
	public const GMBIGKOFEKD.BFEDGLHKIAD Dungeon = 1;
	public const GMBIGKOFEKD.BFEDGLHKIAD Draft = 2;
	public const GMBIGKOFEKD.BFEDGLHKIAD DraftTwiceConfirm = 3;
	public const GMBIGKOFEKD.BFEDGLHKIAD Match = 4;
}
public enum CGGMFHGNHFB
{
	// Fields
	public const CGGMFHGNHFB SingleLevel = 0;
	public const CGGMFHGNHFB MultiLevel = 1;
}
public enum PJLAKPJFHPK.IACFHFAJHLB
{
	// Fields
	public const PJLAKPJFHPK.IACFHFAJHLB GetSize = 0;
	public const PJLAKPJFHPK.IACFHFAJHLB Confirm = 1;
	public const PJLAKPJFHPK.IACFHFAJHLB WaitStartDownload = 2;
	public const PJLAKPJFHPK.IACFHFAJHLB Downloading = 3;
	public const PJLAKPJFHPK.IACFHFAJHLB Verifying = 4;
	public const PJLAKPJFHPK.IACFHFAJHLB AfterDownload = 5;
}
public enum BHODDANGKKL.LDAKAHPNBNK
{
	// Fields
	public const BHODDANGKKL.LDAKAHPNBNK Regular = 0;
	public const BHODDANGKKL.LDAKAHPNBNK ArenaChallengeSpecialFail = 1;
}
public enum GGEJIOJKAFH.MACHGCPNGIB
{
	// Fields
	public const GGEJIOJKAFH.MACHGCPNGIB Default = 0;
	public const GGEJIOJKAFH.MACHGCPNGIB CharacterToWeapon = 1;
	public const GGEJIOJKAFH.MACHGCPNGIB CharacterToRelic = 2;
	public const GGEJIOJKAFH.MACHGCPNGIB FromGacha = 3;
	public const GGEJIOJKAFH.MACHGCPNGIB FromActivity = 4;
}
public enum ELEBJEFNPKH
{
	// Fields
	public const ELEBJEFNPKH BY_LEVEL = 0;
	public const ELEBJEFNPKH BY_QUALITY = 1;
	public const ELEBJEFNPKH BY_COST = 2;
	public const ELEBJEFNPKH BY_ELEMENT = 3;
	public const ELEBJEFNPKH BY_EXP = 4;
	public const ELEBJEFNPKH BY_TYPE = 5;
	public const ELEBJEFNPKH BY_TALENT = 6;
	public const ELEBJEFNPKH BY_CONSTELLATION = 7;
	public const ELEBJEFNPKH BY_FETTER = 8;
	public const ELEBJEFNPKH BY_ATTACK = 9;
	public const ELEBJEFNPKH BY_DEFENSE = 10;
	public const ELEBJEFNPKH BY_MAXHP = 11;
	public const ELEBJEFNPKH BY_ELEMENT_MASTERY = 12;
	public const ELEBJEFNPKH BY_BRICKBREAKER = 13;
}
public enum KGKGHFGAICF.AJFKDBGGFLD
{
	// Fields
	public const KGKGHFGAICF.AJFKDBGGFLD Default = 0;
	public const KGKGHFGAICF.AJFKDBGGFLD Explain = 1;
}
public enum FEDNBNPCBEK
{
	// Fields
	public const FEDNBNPCBEK BalloonGame = 1;
	public const FEDNBNPCBEK FallGame = 2;
	public const FEDNBNPCBEK MusicGame = 3;
}
public enum ENMONCKCBJJ
{
	// Fields
	public const ENMONCKCBJJ NONE = 0;
	public const ENMONCKCBJJ STRANGER = 1;
	public const ENMONCKCBJJ FRIEND = 2;
	public const ENMONCKCBJJ REQUEST = 3;
	public const ENMONCKCBJJ SELF = 4;
	public const ENMONCKCBJJ NORMAL = 5;
	public const ENMONCKCBJJ BLACKLIST = 6;
}
public enum NDJAKLDAHIO
{
	// Fields
	public const NDJAKLDAHIO LIST = 0;
	public const NDJAKLDAHIO ADD = 1;
	public const NDJAKLDAHIO MULTIPLAY_RECENTLY = 2;
}
public enum PCONFAALPAO
{
	// Fields
	public const PCONFAALPAO InGame = 0;
	public const PCONFAALPAO PSN = 1;
}
public enum EBPOPEGCJBM
{
	// Fields
	public const EBPOPEGCJBM BY_LEVEL = 0;
	public const EBPOPEGCJBM BY_ONLINESTATE = 1;
}
public enum IKADKIBKOLO
{
	// Fields
	public const IKADKIBKOLO PROMPT_DIALOG_MAIL = 0;
}
public enum OIICONLEMAM.GGJIMFMMLOI
{
	// Fields
	public const OIICONLEMAM.GGJIMFMMLOI Browse = 0;
	public const OIICONLEMAM.GGJIMFMMLOI Deploy = 1;
	public const OIICONLEMAM.GGJIMFMMLOI Edit = 2;
	public const OIICONLEMAM.GGJIMFMMLOI EditCustomSuite = 3;
	public const OIICONLEMAM.GGJIMFMMLOI Rotate = 4;
	public const OIICONLEMAM.GGJIMFMMLOI Closing = 5;
	public const OIICONLEMAM.GGJIMFMMLOI Blueprint = 6;
}
public enum OIICONLEMAM.IDLNNIFJHKO
{
	// Fields
	public const OIICONLEMAM.IDLNNIFJHKO Ground = 0;
	public const OIICONLEMAM.IDLNNIFJHKO Horizontal = 1;
	public const OIICONLEMAM.IDLNNIFJHKO Vertical = 2;
}
public enum HAGGOANFMKJ
{
	// Fields
	public const HAGGOANFMKJ None = 0;
	public const HAGGOANFMKJ Unknown = 1;
	public const HAGGOANFMKJ InvalidDeploySurface = 2;
	public const HAGGOANFMKJ OutOfDeployRange = 3;
}
public enum BDFIDKKFJMI
{
	// Fields
	public const BDFIDKKFJMI Browse = 0;
	public const BDFIDKKFJMI Deploy = 1;
	public const BDFIDKKFJMI Edit = 2;
}
public enum BDMLMADMDAC
{
	// Fields
	public const BDMLMADMDAC Menu = 0;
	public const BDMLMADMDAC Rotate = 1;
	public const BDMLMADMDAC Move = 2;
}
public enum OIMONMAGMIA
{
	// Fields
	public const OIMONMAGMIA Standard = 0;
	public const OIMONMAGMIA LastRotate = 1;
	public const OIMONMAGMIA RandomRotate = 2;
}
public enum OBMAIMNFMKL
{
	// Fields
	public const OBMAIMNFMKL Normal = 0;
	public const OBMAIMNFMKL CollideWithObj = 1;
	public const OBMAIMNFMKL NoDeploySurface = 2;
	public const OBMAIMNFMKL WallOnly = 3;
	public const OBMAIMNFMKL GroundOnly = 4;
}
public enum LIIJCJLPKEG.GHENFMNEJIK
{
	// Fields
	public const LIIJCJLPKEG.GHENFMNEJIK None = 0;
	public const LIIJCJLPKEG.GHENFMNEJIK UnselectNum0 = 1;
	public const LIIJCJLPKEG.GHENFMNEJIK Unselect = 2;
	public const LIIJCJLPKEG.GHENFMNEJIK Select = 3;
	public const LIIJCJLPKEG.GHENFMNEJIK CheckSelect = 4;
	public const LIIJCJLPKEG.GHENFMNEJIK CheckUnselect = 5;
	public const LIIJCJLPKEG.GHENFMNEJIK Detail = 6;
}
public enum OKFBKHKOGNN.GJGJGBHOPIF
{
	// Fields
	public const OKFBKHKOGNN.GJGJGBHOPIF Default = 0;
	public const OKFBKHKOGNN.GJGJGBHOPIF BlessingPhoto = 1;
	public const OKFBKHKOGNN.GJGJGBHOPIF ExploreSuccess = 2;
}
public enum MBNCALHOBDA.HBDPHAEGECI
{
	// Fields
	public const MBNCALHOBDA.HBDPHAEGECI Scan = 0;
	public const MBNCALHOBDA.HBDPHAEGECI Friend = 1;
}
public enum MDKMEBLGHKE
{
	// Fields
	public const MDKMEBLGHKE Normal = 0;
	public const MDKMEBLGHKE Compare = 1;
}
public enum BDOPLFKGOKN.NCGPKOLMOOA
{
	// Fields
	public const BDOPLFKGOKN.NCGPKOLMOOA Default = 0;
	public const BDOPLFKGOKN.NCGPKOLMOOA ItemTips = 1;
	public const BDOPLFKGOKN.NCGPKOLMOOA LackMcoin = 2;
}
public enum ABCCFIHGPNM.IKFNOCBCCEH
{
	// Fields
	public const ABCCFIHGPNM.IKFNOCBCCEH None = 0;
	public const ABCCFIHGPNM.IKFNOCBCCEH UnselectNum0 = 1;
	public const ABCCFIHGPNM.IKFNOCBCCEH Unselect = 2;
	public const ABCCFIHGPNM.IKFNOCBCCEH Select = 3;
	public const ABCCFIHGPNM.IKFNOCBCCEH CheckSelect = 4;
	public const ABCCFIHGPNM.IKFNOCBCCEH CheckUnselect = 5;
	public const ABCCFIHGPNM.IKFNOCBCCEH Detail = 6;
}
public enum DHLJEBKDGMK
{
	// Fields
	public const DHLJEBKDGMK ITEM = 0;
	public const DHLJEBKDGMK AVATAR = 1;
	public const DHLJEBKDGMK UNLOCK = 2;
	public const DHLJEBKDGMK CODEX_BOOKS = 3;
}
public enum ACIDBGFOKNG.PBNAFJEIPMA
{
	// Fields
	public const ACIDBGFOKNG.PBNAFJEIPMA Exp = 0;
	public const ACIDBGFOKNG.PBNAFJEIPMA Level = 1;
}
public enum FLFMJLNNLJL.JODHADOKDPF
{
	// Fields
	public const FLFMJLNNLJL.JODHADOKDPF None = 0;
	public const FLFMJLNNLJL.JODHADOKDPF AdjustUp = 1;
	public const FLFMJLNNLJL.JODHADOKDPF AdjustDown = 2;
}
public enum DPIFADIIFJM
{
	// Fields
	public const DPIFADIIFJM General = 0;
	public const DPIFADIIFJM Quest = 1;
	public const DPIFADIIFJM DailyTask = 2;
	public const DPIFADIIFJM RandTask = 3;
	public const DPIFADIIFJM Gather = 4;
	public const DPIFADIIFJM ActivitySpecial = 5;
}
public enum EPHOPDMJIHN
{
	// Fields
	public const EPHOPDMJIHN Default = 0;
	public const EPHOPDMJIHN Purple = 1;
	public const EPHOPDMJIHN Orange = 2;
}
public enum FBEIMDHEBNF
{
	// Fields
	public const FBEIMDHEBNF LeftStickX = 0;
	public const FBEIMDHEBNF LeftStickY = 1;
	public const FBEIMDHEBNF RightStickX = 2;
	public const FBEIMDHEBNF RightStickY = 3;
	public const FBEIMDHEBNF Cross = 6;
	public const FBEIMDHEBNF Circle = 7;
	public const FBEIMDHEBNF Square = 8;
	public const FBEIMDHEBNF Triangle = 9;
	public const FBEIMDHEBNF L1 = 10;
	public const FBEIMDHEBNF L2 = 4;
	public const FBEIMDHEBNF R1 = 11;
	public const FBEIMDHEBNF R2 = 5;
	public const FBEIMDHEBNF Share = 12;
	public const FBEIMDHEBNF Options = 13;
	public const FBEIMDHEBNF PSButton = 14;
	public const FBEIMDHEBNF TouchpadButton = 15;
	public const FBEIMDHEBNF LeftStickButton = 16;
	public const FBEIMDHEBNF RightStickButton = 17;
	public const FBEIMDHEBNF D_PadUp = 18;
	public const FBEIMDHEBNF D_PadRight = 19;
	public const FBEIMDHEBNF D_PadDown = 20;
	public const FBEIMDHEBNF D_PadLeft = 21;
	public const FBEIMDHEBNF LeftStick = 22;
	public const FBEIMDHEBNF RightStick = 23;
}
public enum ICCFBCENOEJ
{
	// Fields
	public const ICCFBCENOEJ LeftStickX = 0;
	public const ICCFBCENOEJ LeftStickY = 1;
	public const ICCFBCENOEJ RightStickX = 2;
	public const ICCFBCENOEJ RightStickY = 3;
	public const ICCFBCENOEJ LeftTrigger = 4;
	public const ICCFBCENOEJ RightTrigger = 5;
	public const ICCFBCENOEJ A = 6;
	public const ICCFBCENOEJ B = 7;
	public const ICCFBCENOEJ X = 8;
	public const ICCFBCENOEJ Y = 9;
	public const ICCFBCENOEJ LeftShoulder = 10;
	public const ICCFBCENOEJ RightShoulder = 11;
	public const ICCFBCENOEJ Back = 12;
	public const ICCFBCENOEJ Start = 13;
	public const ICCFBCENOEJ Guide = 22;
	public const ICCFBCENOEJ LeftStickButton = 14;
	public const ICCFBCENOEJ RightStickButton = 15;
	public const ICCFBCENOEJ D_PadUp = 16;
	public const ICCFBCENOEJ D_PadRight = 17;
	public const ICCFBCENOEJ D_PadDown = 18;
	public const ICCFBCENOEJ D_PadLeft = 19;
	public const ICCFBCENOEJ LeftStick = 20;
	public const ICCFBCENOEJ RightStick = 21;
}
public enum MHNFNLGAKPG.KKOEGCLLPCP
{
	// Fields
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis0 = 0;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis1 = 1;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis2 = 2;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis3 = 3;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis4 = 4;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis5 = 5;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis6 = 6;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis7 = 7;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis8 = 8;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis9 = 9;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis10 = 10;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis11 = 11;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis12 = 12;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis13 = 13;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis14 = 14;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis15 = 15;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis16 = 16;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis17 = 17;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis18 = 18;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis19 = 19;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis20 = 20;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis21 = 21;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis22 = 22;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis23 = 23;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis24 = 24;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis25 = 25;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis26 = 26;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis27 = 27;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis28 = 28;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis29 = 29;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis30 = 30;
	public const MHNFNLGAKPG.KKOEGCLLPCP Axis31 = 31;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button0 = 32;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button1 = 33;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button2 = 34;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button3 = 35;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button4 = 36;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button5 = 37;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button6 = 38;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button7 = 39;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button8 = 40;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button9 = 41;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button10 = 42;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button11 = 43;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button12 = 44;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button13 = 45;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button14 = 46;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button15 = 47;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button16 = 48;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button17 = 49;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button18 = 50;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button19 = 51;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button20 = 52;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button21 = 53;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button22 = 54;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button23 = 55;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button24 = 56;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button25 = 57;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button26 = 58;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button27 = 59;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button28 = 60;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button29 = 61;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button30 = 62;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button31 = 63;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button32 = 64;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button33 = 65;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button34 = 66;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button35 = 67;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button36 = 68;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button37 = 69;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button38 = 70;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button39 = 71;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button40 = 72;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button41 = 73;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button42 = 74;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button43 = 75;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button44 = 76;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button45 = 77;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button46 = 78;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button47 = 79;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button48 = 80;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button49 = 81;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button50 = 82;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button51 = 83;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button52 = 84;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button53 = 85;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button54 = 86;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button55 = 87;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button56 = 88;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button57 = 89;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button58 = 90;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button59 = 91;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button60 = 92;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button61 = 93;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button62 = 94;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button63 = 95;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button64 = 96;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button65 = 97;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button66 = 98;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button67 = 99;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button68 = 100;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button69 = 101;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button70 = 102;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button71 = 103;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button72 = 104;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button73 = 105;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button74 = 106;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button75 = 107;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button76 = 108;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button77 = 109;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button78 = 110;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button79 = 111;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button80 = 112;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button81 = 113;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button82 = 114;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button83 = 115;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button84 = 116;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button85 = 117;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button86 = 118;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button87 = 119;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button88 = 120;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button89 = 121;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button90 = 122;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button91 = 123;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button92 = 124;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button93 = 125;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button94 = 126;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button95 = 127;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button96 = 128;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button97 = 129;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button98 = 130;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button99 = 131;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button100 = 132;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button101 = 133;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button102 = 134;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button103 = 135;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button104 = 136;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button105 = 137;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button106 = 138;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button107 = 139;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button108 = 140;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button109 = 141;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button110 = 142;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button111 = 143;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button112 = 144;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button113 = 145;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button114 = 146;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button115 = 147;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button116 = 148;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button117 = 149;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button118 = 150;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button119 = 151;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button120 = 152;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button121 = 153;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button122 = 154;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button123 = 155;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button124 = 156;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button125 = 157;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button126 = 158;
	public const MHNFNLGAKPG.KKOEGCLLPCP Button127 = 159;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat0Up = 160;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat0UpRight = 224;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat0Right = 161;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat0DownRight = 225;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat0Down = 162;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat0DownLeft = 226;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat0Left = 163;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat0UpLeft = 227;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat1Up = 164;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat1UpRight = 228;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat1Right = 165;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat1DownRight = 229;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat1Down = 166;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat1DownLeft = 230;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat1Left = 167;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat1UpLeft = 231;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat2Up = 168;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat2UpRight = 232;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat2Right = 169;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat2DownRight = 233;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat2Down = 170;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat2DownLeft = 234;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat2Left = 171;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat2UpLeft = 235;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat3Up = 172;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat3UpRight = 236;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat3Right = 173;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat3DownRight = 237;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat3Down = 174;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat3DownLeft = 238;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat3Left = 175;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat3UpLeft = 239;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat4Up = 176;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat4UpRight = 240;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat4Right = 177;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat4DownRight = 241;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat4Down = 178;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat4DownLeft = 242;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat4Left = 179;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat4UpLeft = 243;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat5Up = 180;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat5UpRight = 244;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat5Right = 181;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat5DownRight = 245;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat5Down = 182;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat5DownLeft = 246;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat5Left = 183;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat5UpLeft = 247;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat6Up = 184;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat6UpRight = 248;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat6Right = 185;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat6DownRight = 249;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat6Down = 186;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat6DownLeft = 250;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat6Left = 187;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat6UpLeft = 251;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat7Up = 188;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat7UpRight = 252;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat7Right = 189;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat7DownRight = 253;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat7Down = 190;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat7DownLeft = 254;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat7Left = 191;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat7UpLeft = 255;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat8Up = 192;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat8UpRight = 256;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat8Right = 193;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat8DownRight = 257;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat8Down = 194;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat8DownLeft = 258;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat8Left = 195;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat8UpLeft = 259;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat9Up = 196;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat9UpRight = 260;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat9Right = 197;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat9DownRight = 261;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat9Down = 198;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat9DownLeft = 262;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat9Left = 199;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat9UpLeft = 263;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat10Up = 200;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat10UpRight = 264;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat10Right = 201;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat10DownRight = 265;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat10Down = 202;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat10DownLeft = 266;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat10Left = 203;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat10UpLeft = 267;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat11Up = 204;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat11UpRight = 268;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat11Right = 205;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat11DownRight = 269;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat11Down = 206;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat11DownLeft = 270;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat11Left = 207;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat11UpLeft = 271;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat12Up = 208;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat12UpRight = 272;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat12Right = 209;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat12DownRight = 273;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat12Down = 210;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat12DownLeft = 274;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat12Left = 211;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat12UpLeft = 275;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat13Up = 212;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat13UpRight = 276;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat13Right = 213;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat13DownRight = 277;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat13Down = 214;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat13DownLeft = 278;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat13Left = 215;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat13UpLeft = 279;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat14Up = 216;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat14UpRight = 280;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat14Right = 217;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat14DownRight = 281;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat14Down = 218;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat14DownLeft = 282;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat14Left = 219;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat14UpLeft = 283;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat15Up = 220;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat15UpRight = 284;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat15Right = 221;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat15DownRight = 285;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat15Down = 222;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat15DownLeft = 286;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat15Left = 223;
	public const MHNFNLGAKPG.KKOEGCLLPCP Hat15UpLeft = 287;
}
public enum KINICLMCGON
{
	// Fields
	public const KINICLMCGON GuestApplying = 0;
	public const KINICLMCGON HostInviting = 1;
	public const KINICLMCGON Match = 2;
	public const KINICLMCGON GcgBattleInvitation = 3;
	public const KINICLMCGON GcgFestivalInvitation = 4;
}
public enum ENGPAKPOIKM.MCEKKDGDAAF
{
	// Fields
	public const ENGPAKPOIKM.MCEKKDGDAAF All = 0;
	public const ENGPAKPOIKM.MCEKKDGDAAF MpGameplay = 1;
	public const ENGPAKPOIKM.MCEKKDGDAAF HomeWorldBlueprint = 2;
}
public enum PMGNJHIIBFM
{
	// Fields
	public const PMGNJHIIBFM ControlSetting = 0;
	public const PMGNJHIIBFM PressKeySetting = 1;
	public const PMGNJHIIBFM GraphicSetting = 2;
	public const PMGNJHIIBFM SoundSetting = 3;
	public const PMGNJHIIBFM MessageSetting = 4;
	public const PMGNJHIIBFM LanguageSetting = 5;
	public const PMGNJHIIBFM AccountSetting = 6;
	public const PMGNJHIIBFM ResourceSetting = 7;
	public const PMGNJHIIBFM OtherSetting = 8;
	public const PMGNJHIIBFM COUNT = 9;
}
public enum CLPIINEHHOD.DOOOMOLLOKA
{
	// Fields
	public const CLPIINEHHOD.DOOOMOLLOKA FadeIn = 0;
	public const CLPIINEHHOD.DOOOMOLLOKA HoldPage = 1;
	public const CLPIINEHHOD.DOOOMOLLOKA ClosePage = 2;
}
public enum DJNPMMMMFBG.KKMGGOCKJHP
{
	// Fields
	public const DJNPMMMMFBG.KKMGGOCKJHP ENTER = 0;
	public const DJNPMMMMFBG.KKMGGOCKJHP FLOOR = 1;
	public const DJNPMMMMFBG.KKMGGOCKJHP LEVEL = 2;
	public const DJNPMMMMFBG.KKMGGOCKJHP TEAM = 3;
	public const DJNPMMMMFBG.KKMGGOCKJHP FLOOR_EX = 4;
}
public enum JMNNKIDOLDI.ENANJPNNPMC
{
	// Fields
	public const JMNNKIDOLDI.ENANJPNNPMC Default = 0;
	public const JMNNKIDOLDI.ENANJPNNPMC Rectangle = 1;
	public const JMNNKIDOLDI.ENANJPNNPMC Ellipse = 2;
}
public enum FAMCGDDIKHC.DDPGLEHNCJG
{
	// Fields
	public const FAMCGDDIKHC.DDPGLEHNCJG DOUBLE_BUTTON = 0;
	public const FAMCGDDIKHC.DDPGLEHNCJG SINGLE_BUTTON = 1;
}
public enum DCAJGDLMOIA
{
	// Fields
	public const DCAJGDLMOIA LOCKED = 0;
	public const DCAJGDLMOIA COMPLETE = 1;
	public const DCAJGDLMOIA NOT_COMPLETE = 2;
}
public enum PLLFKNCHKEC
{
	// Fields
	public const PLLFKNCHKEC CAN_NOT_TAKE = 0;
	public const PLLFKNCHKEC CAN_TAKE = 1;
	public const PLLFKNCHKEC TAKEN = 2;
}
public enum JLKOFMOCGMB.DOJANHHOFNL
{
	// Fields
	public const JLKOFMOCGMB.DOJANHHOFNL SignIn = 0;
	public const JLKOFMOCGMB.DOJANHHOFNL Task = 1;
	public const JLKOFMOCGMB.DOJANHHOFNL Privilege = 2;
	public const JLKOFMOCGMB.DOJANHHOFNL Guide = 3;
	public const JLKOFMOCGMB.DOJANHHOFNL Count = 4;
}
public enum GJDDAJJBCJH
{
	// Fields
	public const GJDDAJJBCJH CANNOT_REWAD = 0;
	public const GJDDAJJBCJH CAN_GET_REWARD = 1;
	public const GJDDAJJBCJH REWARDED = 2;
}
public enum INNBKNCBFFN.OOCNCGJDHHH
{
	// Fields
	public const INNBKNCBFFN.OOCNCGJDHHH MP = 1;
	public const INNBKNCBFFN.OOCNCGJDHHH ALL = 2;
	public const INNBKNCBFFN.OOCNCGJDHHH BONUS = 3;
}
public enum PIEFNDJCBLI.BCNHHJMNNEE
{
	// Fields
	public const PIEFNDJCBLI.BCNHHJMNNEE ReusableList = 0;
	public const PIEFNDJCBLI.BCNHHJMNNEE SimpleReusableList = 1;
	public const PIEFNDJCBLI.BCNHHJMNNEE UIContainerList = 2;
	public const PIEFNDJCBLI.BCNHHJMNNEE CentreScroller = 3;
}
public enum PIEFNDJCBLI.HMNOKGJLOGI
{
	// Fields
	public const PIEFNDJCBLI.HMNOKGJLOGI Loop = 0;
	public const PIEFNDJCBLI.HMNOKGJLOGI HideButton = 1;
	public const PIEFNDJCBLI.HMNOKGJLOGI SetButtonNotInteractive = 2;
}
public enum AOFBIDPDHBE.HIOPBLGIOBL
{
	// Fields
	public const AOFBIDPDHBE.HIOPBLGIOBL RemoveSuccess = 0;
	public const AOFBIDPDHBE.HIOPBLGIOBL AddSuccess = 1;
	public const AOFBIDPDHBE.HIOPBLGIOBL StrategyInValidFail = 2;
	public const AOFBIDPDHBE.HIOPBLGIOBL InOtherTroopFail = 3;
	public const AOFBIDPDHBE.HIOPBLGIOBL MirrorAvatarInTroopFail = 4;
	public const AOFBIDPDHBE.HIOPBLGIOBL TroopFullFail = 5;
	public const AOFBIDPDHBE.HIOPBLGIOBL SelectAvatarNullFail = 6;
}
public enum AOFBIDPDHBE.PGLKBLIDHKG
{
	// Fields
	public const AOFBIDPDHBE.PGLKBLIDHKG In = 0;
	public const AOFBIDPDHBE.PGLKBLIDHKG NotIn = 1;
	public const AOFBIDPDHBE.PGLKBLIDHKG MirrorIn = 2;
}
public enum IHFEOKOIMDE.NKJEBOGHOCI
{
	// Fields
	public const IHFEOKOIMDE.NKJEBOGHOCI AvatarSideIconNone = 0;
	public const IHFEOKOIMDE.NKJEBOGHOCI DefaultSprite = 1;
}
public enum GCKAADEBFPP
{
	// Fields
	public const GCKAADEBFPP Empty = 0;
	public const GCKAADEBFPP InList = 1;
}
public enum APJBHJFGMFG.DDKMJJHPOJO
{
	// Fields
	public const APJBHJFGMFG.DDKMJJHPOJO BlackList = 0;
	public const APJBHJFGMFG.DDKMJJHPOJO WhiteList = 1;
}
public enum APJBHJFGMFG.APKGIFHLPDH
{
	// Fields
	public const APJBHJFGMFG.APKGIFHLPDH InList = 0;
	public const APJBHJFGMFG.APKGIFHLPDH NotInList = 1;
}
public enum HJJMIPJHLFI
{
	// Fields
	public const HJJMIPJHLFI MonoUIBtnTabTeamNoLineV2 = 0;
	public const HJJMIPJHLFI MonoCharacterSideIconBtn = 1;
	public const HJJMIPJHLFI MonoAvatarIcon = 2;
}
public enum MBABLAKGBFD.FKEMPGOLFHI
{
	// Fields
	public const MBABLAKGBFD.FKEMPGOLFHI UseActivityId = 0;
	public const MBABLAKGBFD.FKEMPGOLFHI UseType = 1;
	public const MBABLAKGBFD.FKEMPGOLFHI UseEmptyAdditionalInfo = 2;
	public const MBABLAKGBFD.FKEMPGOLFHI None = 3;
}
public enum PAJCEAKDCIJ.KMBAGBILDMO
{
	// Fields
	public const PAJCEAKDCIJ.KMBAGBILDMO MonoMonsterListRow = 0;
	public const PAJCEAKDCIJ.KMBAGBILDMO BossIcon = 1;
}
public enum FNMOPGJOMEK.FHANLAMNHKM
{
	// Fields
	public const FNMOPGJOMEK.FHANLAMNHKM Story = 0;
	public const FNMOPGJOMEK.FHANLAMNHKM Voice = 1;
}
public enum ODLMCKKMALB
{
	// Fields
	public const ODLMCKKMALB PERSONAL_LINE = 0;
	public const ODLMCKKMALB COOP = 1;
	public const ODLMCKKMALB COUNT = 2;
}
public enum KAJCEAAGAOB
{
	// Fields
	public const KAJCEAAGAOB QUEST = 0;
	public const KAJCEAAGAOB TASK = 1;
}
public enum DIPKONNFCNE
{
	// Fields
	public const DIPKONNFCNE Dig = 0;
	public const DIPKONNFCNE Challenge = 1;
	public const DIPKONNFCNE Blossom = 2;
	public const DIPKONNFCNE Mechanicus = 3;
	public const DIPKONNFCNE ActivityRegionSearch = 4;
	public const DIPKONNFCNE ActivityBuoyantCombat = 5;
	public const DIPKONNFCNE DailyTask = 6;
	public const DIPKONNFCNE RandTask = 7;
	public const DIPKONNFCNE Routine = 8;
	public const DIPKONNFCNE TaskTrace = 9;
	public const DIPKONNFCNE FleurFairDungeon = 10;
	public const DIPKONNFCNE Count = 11;
}
public enum DEOBIEPJNPD.OECBOKEOLFA
{
	// Fields
	public const DEOBIEPJNPD.OECBOKEOLFA InActive = 0;
	public const DEOBIEPJNPD.OECBOKEOLFA Showing = 1;
	public const DEOBIEPJNPD.OECBOKEOLFA FadeOut = 2;
	public const DEOBIEPJNPD.OECBOKEOLFA Suspend = 3;
}
public enum DAGBIFNLBEE.PLPIAJGPCBK
{
	// Fields
	public const DAGBIFNLBEE.PLPIAJGPCBK Photograph = 0;
	public const DAGBIFNLBEE.PLPIAJGPCBK Gacha = 1;
}
public enum MCAGOLDLLIE.KCFOOBNMJEF
{
	// Fields
	public const MCAGOLDLLIE.KCFOOBNMJEF Start = 0;
	public const MCAGOLDLLIE.KCFOOBNMJEF Complete = 1;
	public const MCAGOLDLLIE.KCFOOBNMJEF Fail = 2;
	public const MCAGOLDLLIE.KCFOOBNMJEF Description = 3;
}
public enum KDPBBDDICOA.FABALOKPOBE
{
	// Fields
	public const KDPBBDDICOA.FABALOKPOBE None = -1;
	public const KDPBBDDICOA.FABALOKPOBE Albedo = 0;
	public const KDPBBDDICOA.FABALOKPOBE AllChapter = 1;
	public const KDPBBDDICOA.FABALOKPOBE Chapter_1 = 2;
	public const KDPBBDDICOA.FABALOKPOBE Chapter_2 = 3;
	public const KDPBBDDICOA.FABALOKPOBE Chapter_3 = 4;
	public const KDPBBDDICOA.FABALOKPOBE Chapter_4 = 5;
}
public enum FIAICLJDEFN.HEKJIJBOMBF
{
	// Fields
	public const FIAICLJDEFN.HEKJIJBOMBF INVALID = -1;
	public const FIAICLJDEFN.HEKJIJBOMBF COUNT_DOWN = 0;
	public const FIAICLJDEFN.HEKJIJBOMBF COUNT_NUM = 1;
	public const FIAICLJDEFN.HEKJIJBOMBF QUEST_QUIT = 2;
	public const FIAICLJDEFN.HEKJIJBOMBF COUNT_NUM_NEW = 3;
}
public enum PHIELDMMNMG.BIFFIPKKGOA
{
	// Fields
	public const PHIELDMMNMG.BIFFIPKKGOA Init = 0;
	public const PHIELDMMNMG.BIFFIPKKGOA UpdateValue = 1;
	public const PHIELDMMNMG.BIFFIPKKGOA Destroy = 2;
}
public enum FIJEANJKBEP
{
	// Fields
	public const FIJEANJKBEP Invalid = 0;
	public const FIJEANJKBEP Pickup = 1;
	public const FIJEANJKBEP OneIntee = 2;
	public const FIJEANJKBEP MultiIntee = 3;
}
public enum GLIBDHCEKJG
{
	// Fields
	public const GLIBDHCEKJG InteeIcon = 0;
	public const GLIBDHCEKJG ItemSpriteIcon = 1;
}
public enum HGLEIKJNJDO
{
	// Fields
	public const HGLEIKJNJDO Invalid = 0;
	public const HGLEIKJNJDO Disappear = 1;
	public const HGLEIKJNJDO Retarget = 2;
	public const HGLEIKJNJDO RefreshHint = 3;
	public const HGLEIKJNJDO RefreshPickupHintByMaterial = 4;
}
public enum EDACAMJLJOM.GINNONLEGHA
{
	// Fields
	public const EDACAMJLJOM.GINNONLEGHA LOCAL_VEHICLE = 0;
	public const EDACAMJLJOM.GINNONLEGHA LOCAL_TEAM = 1;
}
public enum ECJLDPIEJJM
{
	// Fields
	public byte value__; // 0x10
	public const ECJLDPIEJJM EntityRuntimeId = 0;
	public const ECJLDPIEJJM MarkId = 1;
	public const ECJLDPIEJJM NavigationId = 2;
	public const ECJLDPIEJJM PoiIndicator = 3;
	public const ECJLDPIEJJM Sorush = 4;
}
public enum HNNAKBIIALF
{
	// Fields
	public const HNNAKBIIALF MECHANICUS = 0;
	public const HNNAKBIIALF HIDEANDSEEK = 1;
}
public enum MonoDamageText.NBFDINAABJG
{
	// Fields
	public const MonoDamageText.NBFDINAABJG Normal = 0;
	public const MonoDamageText.NBFDINAABJG Resist = 1;
	public const MonoDamageText.NBFDINAABJG MuteElemHurt = 2;
	public const MonoDamageText.NBFDINAABJG Self = 3;
}
public enum MonoDamageText.HHHFCEPPNHC
{
	// Fields
	public const MonoDamageText.HHHFCEPPNHC Normal = 0;
	public const MonoDamageText.HHHFCEPPNHC Amplify = 1;
	public const MonoDamageText.HHHFCEPPNHC Critical = 2;
}
public enum GJLGMJIIDAA
{
	// Fields
	public const GJLGMJIIDAA ExpAndLevel = 1;
	public const GJLGMJIIDAA HP = 2;
	public const GJLGMJIIDAA Stamina = 4;
	public const GJLGMJIIDAA Rage = 8;
	public const GJLGMJIIDAA Energy = 16;
	public const GJLGMJIIDAA Skill = 32;
	public const GJLGMJIIDAA Buff = 64;
	public const GJLGMJIIDAA MonitoredSkill = 128;
	public const GJLGMJIIDAA PlayerExpAndLevel = 256;
	public const GJLGMJIIDAA All = 65535;
}
public enum MonoInLevelPhotographPage.JBFBNNBPHGJ
{
	// Fields
	public const MonoInLevelPhotographPage.JBFBNNBPHGJ main = 0;
	public const MonoInLevelPhotographPage.JBFBNNBPHGJ setting = 1;
	public const MonoInLevelPhotographPage.JBFBNNBPHGJ pose = 2;
	public const MonoInLevelPhotographPage.JBFBNNBPHGJ emotion = 3;
	public const MonoInLevelPhotographPage.JBFBNNBPHGJ noUI = 4;
}
public enum MonoParticleDamageTextContainer.FBMNJEHIBDD
{
	// Fields
	public const MonoParticleDamageTextContainer.FBMNJEHIBDD Normal = 0;
	public const MonoParticleDamageTextContainer.FBMNJEHIBDD Resist = 1;
	public const MonoParticleDamageTextContainer.FBMNJEHIBDD Self = 2;
}
public enum JABHNHOGKOJ
{
	// Fields
	public const JABHNHOGKOJ Invalid = 0;
	public const JABHNHOGKOJ One = 1;
	public const JABHNHOGKOJ Ten = 2;
}
public enum DICMPAFKCLB.JALCHAOAKLO
{
	// Fields
	public const DICMPAFKCLB.JALCHAOAKLO None = 0;
	public const DICMPAFKCLB.JALCHAOAKLO Init = 1;
	public const DICMPAFKCLB.JALCHAOAKLO GetGachaPool = 2;
	public const DICMPAFKCLB.JALCHAOAKLO ShowGachaPool = 3;
	public const DICMPAFKCLB.JALCHAOAKLO ShowGazing = 4;
	public const DICMPAFKCLB.JALCHAOAKLO DoGacha = 5;
	public const DICMPAFKCLB.JALCHAOAKLO StarGazing = 6;
	public const DICMPAFKCLB.JALCHAOAKLO OneTimeCutscene = 7;
	public const DICMPAFKCLB.JALCHAOAKLO OneTimeItemCutscene = 8;
	public const DICMPAFKCLB.JALCHAOAKLO OneTimeShow = 9;
	public const DICMPAFKCLB.JALCHAOAKLO OneTimeSettlement = 10;
	public const DICMPAFKCLB.JALCHAOAKLO TenTimeCutscene = 11;
	public const DICMPAFKCLB.JALCHAOAKLO TenTimeShow = 12;
	public const DICMPAFKCLB.JALCHAOAKLO TenTimeItemCutscene = 13;
	public const DICMPAFKCLB.JALCHAOAKLO TenTimeSettlement = 14;
}
public enum KAIFEBAPAHF.BJBJBAALADP
{
	// Fields
	public const KAIFEBAPAHF.BJBJBAALADP Mode3D = 0;
	public const KAIFEBAPAHF.BJBJBAALADP Mode2D_Once_Settle = 1;
	public const KAIFEBAPAHF.BJBJBAALADP Mode2D_Ten_One = 2;
	public const KAIFEBAPAHF.BJBJBAALADP Mode2D_Ten_Settle = 3;
}
public enum OFGGMGCDBFJ.DBDIGHBMOOF
{
	// Fields
	public const OFGGMGCDBFJ.DBDIGHBMOOF Fail = 0;
	public const OFGGMGCDBFJ.DBDIGHBMOOF Win = 1;
	public const OFGGMGCDBFJ.DBDIGHBMOOF WinGreen = 2;
}
public enum OFGGMGCDBFJ.NILDBMBEOGJ
{
	// Fields
	public uint value__; // 0x10
	public const OFGGMGCDBFJ.NILDBMBEOGJ CONTROL_BY_LOGIC = 0;
	public const OFGGMGCDBFJ.NILDBMBEOGJ ALWAYS_SHOW = 1;
	public const OFGGMGCDBFJ.NILDBMBEOGJ ALWAYS_HIDE = 2;
}
public enum OFGGMGCDBFJ.BMFJKAAJMJO
{
	// Fields
	public const OFGGMGCDBFJ.BMFJKAAJMJO OpenLevelMap = 0;
	public const OFGGMGCDBFJ.BMFJKAAJMJO CloseLevelMap = 1;
	public const OFGGMGCDBFJ.BMFJKAAJMJO UnLockArea = 2;
}
public enum GIJJNMHDOKH
{
	// Fields
	public const GIJJNMHDOKH TeamPanelSkillButton = 0;
}
public enum OHFKAKODHOE
{
	// Fields
	public const OHFKAKODHOE MixinForGallery = 0;
	public const OHFKAKODHOE ActiviyGamePlay = 1;
}
public enum DEJBNDFGGFI
{
	// Fields
	public const DEJBNDFGGFI GM = 0;
	public const DEJBNDFGGFI HideMainPageMixer = 1;
	public const DEJBNDFGGFI CameraLook = 2;
	public const DEJBNDFGGFI ClientLuaActor = 3;
	public const DEJBNDFGGFI SeverLua = 4;
	public const DEJBNDFGGFI UGCDungeon = 5;
	public const DEJBNDFGGFI NahidaDungeonMask = 6;
	public const DEJBNDFGGFI CommonDungeonMask = 7;
	public const DEJBNDFGGFI FungusFighterDungeon = 8;
	public const DEJBNDFGGFI HideAndSeekAttackMode = 9;
	public const DEJBNDFGGFI MultistagePlay = 10;
	public const DEJBNDFGGFI Pacman = 11;
	public const DEJBNDFGGFI InteePanel = 12;
	public const DEJBNDFGGFI SandWormCannon = 13;
}
public enum EFNIPIIJFFG
{
	// Fields
	public const EFNIPIIJFFG NONE = 0;
	public const EFNIPIIJFFG MAIN_PAGE_LEFT = 1;
	public const EFNIPIIJFFG MAIN_PAGE_TOP = 2;
	public const EFNIPIIJFFG MAIN_PAGE_LEFT_QUEST = 3;
	public const EFNIPIIJFFG MAIN_PAGE_MIDDLE_QUEST = 4;
	public const EFNIPIIJFFG MAIN_TOP_HIGH_PRIORITY = 5;
}
public enum DLKLLKJPKGE.HFPPCKFHDIN
{
	// Fields
	public const DLKLLKJPKGE.HFPPCKFHDIN Teyvat = 1;
	public const DLKLLKJPKGE.HFPPCKFHDIN HomeWorld = 2;
	public const DLKLLKJPKGE.HFPPCKFHDIN Islands = 3;
	public const DLKLLKJPKGE.HFPPCKFHDIN Mondstadt = 4;
	public const DLKLLKJPKGE.HFPPCKFHDIN Liyue = 5;
	public const DLKLLKJPKGE.HFPPCKFHDIN Inazuma = 6;
	public const DLKLLKJPKGE.HFPPCKFHDIN Abyssal = 7;
	public const DLKLLKJPKGE.HFPPCKFHDIN MichiaeMatsuri = 8;
	public const DLKLLKJPKGE.HFPPCKFHDIN TheChasm = 9;
	public const DLKLLKJPKGE.HFPPCKFHDIN DreamIsland = 10;
	public const DLKLLKJPKGE.HFPPCKFHDIN CattailTavern = 12;
}
public enum DLKLLKJPKGE.FLCLIMMHLPG
{
	// Fields
	public const DLKLLKJPKGE.FLCLIMMHLPG HomeworldLevel = 0;
	public const DLKLLKJPKGE.FLCLIMMHLPG HomeworldCoin = 1;
	public const DLKLLKJPKGE.FLCLIMMHLPG HomeworldCompanionshipExp = 2;
	public const DLKLLKJPKGE.FLCLIMMHLPG HomeworldBuild = 3;
	public const DLKLLKJPKGE.FLCLIMMHLPG HomeworldDjinnWeekendRefresh = 4;
	public const DLKLLKJPKGE.FLCLIMMHLPG HomeworldNpcReward = 5;
	public const DLKLLKJPKGE.FLCLIMMHLPG HomeworldFarmField = 6;
	public const DLKLLKJPKGE.FLCLIMMHLPG AdTask = 7;
	public const DLKLLKJPKGE.FLCLIMMHLPG AdPlayer = 8;
	public const DLKLLKJPKGE.FLCLIMMHLPG AdExped = 9;
	public const DLKLLKJPKGE.FLCLIMMHLPG ForgeFinish = 10;
	public const DLKLLKJPKGE.FLCLIMMHLPG Food = 11;
	public const DLKLLKJPKGE.FLCLIMMHLPG SaleMan = 12;
	public const DLKLLKJPKGE.FLCLIMMHLPG MechanicisNPCMark = 13;
	public const DLKLLKJPKGE.FLCLIMMHLPG ReputationReward = 14;
	public const DLKLLKJPKGE.FLCLIMMHLPG ReputationQuest = 15;
	public const DLKLLKJPKGE.FLCLIMMHLPG HuntingInfo = 16;
	public const DLKLLKJPKGE.FLCLIMMHLPG ActivityWaterSprite = 17;
	public const DLKLLKJPKGE.FLCLIMMHLPG ExpeditionChallenge = 18;
	public const DLKLLKJPKGE.FLCLIMMHLPG ArenaChallenge = 19;
	public const DLKLLKJPKGE.FLCLIMMHLPG ActivityMiniTomoHiliWei = 20;
	public const DLKLLKJPKGE.FLCLIMMHLPG ElderTree = 21;
	public const DLKLLKJPKGE.FLCLIMMHLPG OraionokamiTree = 22;
	public const DLKLLKJPKGE.FLCLIMMHLPG OraionokamiNewLevel = 23;
	public const DLKLLKJPKGE.FLCLIMMHLPG GrowFlowersTodayReward = 24;
	public const DLKLLKJPKGE.FLCLIMMHLPG ActivityBlessing = 25;
	public const DLKLLKJPKGE.FLCLIMMHLPG ChannellerSlabLoopDungeonNew = 26;
	public const DLKLLKJPKGE.FLCLIMMHLPG ChannellerSlabLoopDungeonFirstPass = 27;
	public const DLKLLKJPKGE.FLCLIMMHLPG InazumaSouvenirShop = 28;
	public const DLKLLKJPKGE.FLCLIMMHLPG SumoNewLevel = 29;
	public const DLKLLKJPKGE.FLCLIMMHLPG MichiaeNewBattleSkill = 30;
	public const DLKLLKJPKGE.FLCLIMMHLPG UGCNewDungeon = 31;
	public const DLKLLKJPKGE.FLCLIMMHLPG CrystalLinkNewLevel = 32;
	public const DLKLLKJPKGE.FLCLIMMHLPG ActivityGacha = 33;
	public const DLKLLKJPKGE.FLCLIMMHLPG VanasaraReward = 34;
	public const DLKLLKJPKGE.FLCLIMMHLPG VanasaraNewLevel = 35;
	public const DLKLLKJPKGE.FLCLIMMHLPG SumeruSouvenirShop = 36;
	public const DLKLLKJPKGE.FLCLIMMHLPG GcgLevelUpReward = 37;
	public const DLKLLKJPKGE.FLCLIMMHLPG GcgMallNewProduct = 38;
	public const DLKLLKJPKGE.FLCLIMMHLPG GcgWeeklyChallengeRefresh = 39;
	public const DLKLLKJPKGE.FLCLIMMHLPG GcgCharacterChallengeRefresh = 40;
	public const DLKLLKJPKGE.FLCLIMMHLPG GcgBossChallengeRefresh = 41;
	public const DLKLLKJPKGE.FLCLIMMHLPG GcgWorldChallengeRefresh = 42;
	public const DLKLLKJPKGE.FLCLIMMHLPG GcgFestivalOpenRefresh = 43;
	public const DLKLLKJPKGE.FLCLIMMHLPG GcgFestivalRewardRefresh = 44;
	public const DLKLLKJPKGE.FLCLIMMHLPG PariLakeExtraReward = 45;
}
public enum HGHOFIGAKEN.CEBDAKCCFPJ
{
	// Fields
	public const HGHOFIGAKEN.CEBDAKCCFPJ Simple = 0;
	public const HGHOFIGAKEN.CEBDAKCCFPJ Normal = 1;
}
public enum HGHOFIGAKEN.NMHGNJGCHDI
{
	// Fields
	public const HGHOFIGAKEN.NMHGNJGCHDI Photograph = 0;
	public const HGHOFIGAKEN.NMHGNJGCHDI Bulletin = 1;
	public const HGHOFIGAKEN.NMHGNJGCHDI Mail = 2;
	public const HGHOFIGAKEN.NMHGNJGCHDI TimeAcceleration = 3;
	public const HGHOFIGAKEN.NMHGNJGCHDI Setting = 4;
}
public enum HGHOFIGAKEN.GEMBLMBKECM
{
	// Fields
	public const HGHOFIGAKEN.GEMBLMBKECM EditProfile = 0;
	public const HGHOFIGAKEN.GEMBLMBKECM HeadPortrait = 1;
	public const HGHOFIGAKEN.GEMBLMBKECM NameCard = 2;
	public const HGHOFIGAKEN.GEMBLMBKECM Name = 3;
	public const HGHOFIGAKEN.GEMBLMBKECM Birthday = 4;
	public const HGHOFIGAKEN.GEMBLMBKECM Signature = 5;
	public const HGHOFIGAKEN.GEMBLMBKECM CopyUid = 6;
}
public enum CGOBINHJLEO.MBDNFPHMFFJ
{
	// Fields
	public const CGOBINHJLEO.MBDNFPHMFFJ SignIn = 0;
	public const CGOBINHJLEO.MBDNFPHMFFJ Task = 1;
	public const CGOBINHJLEO.MBDNFPHMFFJ Privilege = 2;
	public const CGOBINHJLEO.MBDNFPHMFFJ Guide = 3;
	public const CGOBINHJLEO.MBDNFPHMFFJ Count = 4;
	public const CGOBINHJLEO.MBDNFPHMFFJ None = 5;
}
public enum MHOKOFDNLMD.CJLGGLKMMHJ
{
	// Fields
	public const MHOKOFDNLMD.CJLGGLKMMHJ Default = 0;
	public const MHOKOFDNLMD.CJLGGLKMMHJ Develop = 1;
	public const MHOKOFDNLMD.CJLGGLKMMHJ FR = 2;
	public const MHOKOFDNLMD.CJLGGLKMMHJ DE = 3;
}
public enum HKJBPBHLPGI.NFNBALKBBCP
{
	// Fields
	public const HKJBPBHLPGI.NFNBALKBBCP None = 0;
	public const HKJBPBHLPGI.NFNBALKBBCP Login = 1;
	public const HKJBPBHLPGI.NFNBALKBBCP DebugServer = 2;
	public const HKJBPBHLPGI.NFNBALKBBCP SwitchServer = 3;
	public const HKJBPBHLPGI.NFNBALKBBCP SelectGlobalDPServer = 4;
	public const HKJBPBHLPGI.NFNBALKBBCP SelectServer = 5;
	public const HKJBPBHLPGI.NFNBALKBBCP ConfirmServer = 6;
	public const HKJBPBHLPGI.NFNBALKBBCP WaitEnter = 7;
}
public enum HKJBPBHLPGI.IDHEOMCHOMB
{
	// Fields
	public const HKJBPBHLPGI.IDHEOMCHOMB Agreement = 0;
	public const HKJBPBHLPGI.IDHEOMCHOMB PreInit = 1;
	public const HKJBPBHLPGI.IDHEOMCHOMB WaitInit = 2;
	public const HKJBPBHLPGI.IDHEOMCHOMB GlobalDP = 3;
	public const HKJBPBHLPGI.IDHEOMCHOMB Prelogin = 4;
	public const HKJBPBHLPGI.IDHEOMCHOMB Login = 5;
	public const HKJBPBHLPGI.IDHEOMCHOMB WaitToken = 6;
	public const HKJBPBHLPGI.IDHEOMCHOMB ShowServerList = 7;
	public const HKJBPBHLPGI.IDHEOMCHOMB ChooseServer = 8;
	public const HKJBPBHLPGI.IDHEOMCHOMB ConnectRegionDispatch = 9;
	public const HKJBPBHLPGI.IDHEOMCHOMB DownloadBunddle = 10;
	public const HKJBPBHLPGI.IDHEOMCHOMB LoadBundle = 11;
	public const HKJBPBHLPGI.IDHEOMCHOMB WaitingPress = 12;
	public const HKJBPBHLPGI.IDHEOMCHOMB OpenDoor = 13;
	public const HKJBPBHLPGI.IDHEOMCHOMB Finish = 14;
}
public enum MIBHFOPKFOF
{
	// Fields
	public const MIBHFOPKFOF None = 0;
	public const MIBHFOPKFOF Running = 1;
}
public enum JFJJCDIPACK.CMJJLLILDJH
{
	// Fields
	public const JFJJCDIPACK.CMJJLLILDJH None = 0;
	public const JFJJCDIPACK.CMJJLLILDJH WaitingForMusicEnd = 1;
	public const JFJJCDIPACK.CMJJLLILDJH Ready2Trans = 2;
}
public enum EKJFIBPCKHA
{
	// Fields
	public const EKJFIBPCKHA Fall = 0;
	public const EKJFIBPCKHA Stand = 1;
	public const EKJFIBPCKHA FallPerfect = 2;
}
public enum GNHPKBJHDEB
{
	// Fields
	public const GNHPKBJHDEB Stand = 0;
	public const GNHPKBJHDEB Run = 1;
}
public enum ADHDBDEMILE
{
	// Fields
	public const ADHDBDEMILE Normal = 0;
	public const ADHDBDEMILE Get = 1;
	public const ADHDBDEMILE Disappear = 2;
}
public enum GIBPPPBPKMO
{
	// Fields
	public const GIBPPPBPKMO Appear = 0;
	public const GIBPPPBPKMO DisAppear = 1;
}
public enum AFFHBLIBPLJ
{
	// Fields
	public const AFFHBLIBPLJ EXP = 0;
	public const AFFHBLIBPLJ HOME_HP = 1;
	public const AFFHBLIBPLJ INITIALBUILD = 2;
	public const AFFHBLIBPLJ CARDCOUNT = 3;
	public const AFFHBLIBPLJ CARDCOST = 4;
	public const AFFHBLIBPLJ CARDFORTUNE = 5;
	public const AFFHBLIBPLJ FREECARDCOUNT = 6;
	public const AFFHBLIBPLJ DESC = 7;
}
public enum JMNKEJGLLID
{
	// Fields
	public const JMNKEJGLLID Activity = 1;
	public const JMNKEJGLLID SceneMark = 2;
}
public enum HPMBIHHJJCN
{
	// Fields
	public const HPMBIHHJJCN Locked = 0;
	public const HPMBIHHJJCN InProgress = 1;
	public const HPMBIHHJJCN Complete = 2;
}
public enum AEFHKFKJNGM
{
	// Fields
	public const AEFHKFKJNGM Gear = 0;
	public const AEFHKFKJNGM Shaft = 1;
	public const AEFHKFKJNGM Jigsaw = 2;
}
public enum EHNALBJMBII.CKGBCGBJDPM
{
	// Fields
	public const EHNALBJMBII.CKGBCGBJDPM Clench = 0;
	public const EHNALBJMBII.CKGBCGBJDPM Coaxial = 1;
}
public enum ICDDBFABCJO
{
	// Fields
	public const ICDDBFABCJO Invalid = 0;
	public const ICDDBFABCJO ForwardGuide = 1;
	public const ICDDBFABCJO BackwardGuide = 2;
	public const ICDDBFABCJO PreAccumulate = 3;
	public const ICDDBFABCJO InAccumulate = 4;
	public const ICDDBFABCJO PostAccumulate = 5;
	public const ICDDBFABCJO FreeCombat = 6;
}
public enum FMLJDPPHGEE
{
	// Fields
	public const FMLJDPPHGEE ForwardMoveFinish = 1;
	public const FMLJDPPHGEE BackwardMoveFinish = 2;
	public const FMLJDPPHGEE AccumulateMoveFinish = 3;
}
public enum PGCLOJGJHMM
{
	// Fields
	public const PGCLOJGJHMM PreAttackFinish = 1;
	public const PGCLOJGJHMM AttackFinish = 2;
}
public enum JBNFEKDMGAK
{
	// Fields
	public const JBNFEKDMGAK Default = 0;
	public const JBNFEKDMGAK MiddleHard = 1;
	public const JBNFEKDMGAK ExtremelyHard = 2;
}
public enum NLEOELCCOGC
{
	// Fields
	public const NLEOELCCOGC EASY = 0;
	public const NLEOELCCOGC NORMAL = 1;
	public const NLEOELCCOGC HARD = 2;
}
public enum MonoActivitySubPage_MusicV3.GMGAHOBDJJM
{
	// Fields
	public const MonoActivitySubPage_MusicV3.GMGAHOBDJJM NONE = 0;
	public const MonoActivitySubPage_MusicV3.GMGAHOBDJJM RED = 1;
	public const MonoActivitySubPage_MusicV3.GMGAHOBDJJM YELLOW = 2;
	public const MonoActivitySubPage_MusicV3.GMGAHOBDJJM BLACK = 3;
	public const MonoActivitySubPage_MusicV3.GMGAHOBDJJM GREEN = 4;
}
public enum MonoActivitySubPage_MusicV3.JANFGHMOBMB
{
	// Fields
	public const MonoActivitySubPage_MusicV3.JANFGHMOBMB NONE = 0;
	public const MonoActivitySubPage_MusicV3.JANFGHMOBMB PREQUEST = 1;
	public const MonoActivitySubPage_MusicV3.JANFGHMOBMB STARTQUEST = 2;
	public const MonoActivitySubPage_MusicV3.JANFGHMOBMB OPENQUEST = 3;
}
public enum MonoMusicFolder.IEEBPJJJKIN
{
	// Fields
	public uint value__; // 0x10
	public const MonoMusicFolder.IEEBPJJJKIN NONE = 0;
	public const MonoMusicFolder.IEEBPJJJKIN LOCK = 1;
	public const MonoMusicFolder.IEEBPJJJKIN FOLD = 2;
	public const MonoMusicFolder.IEEBPJJJKIN UNFOLD = 3;
}
public enum MonoMusicV3ShareDialog.PKCKOOAPJDI
{
	// Fields
	public const MonoMusicV3ShareDialog.PKCKOOAPJDI NORMAL = 0;
	public const MonoMusicV3ShareDialog.PKCKOOAPJDI SHARE_CODE_UNATTAINED = 1;
	public const MonoMusicV3ShareDialog.PKCKOOAPJDI CONTENT_CHANGED = 2;
}
public enum KDHFLPNABME
{
	// Fields
	public const KDHFLPNABME None = 0;
	public const KDHFLPNABME Dead = 1;
	public const KDHFLPNABME Tired = 2;
	public const KDHFLPNABME Disabled = 3;
	public const KDHFLPNABME Duplicated = 4;
}
public enum IGACGKEBDMN.HIMLAHECPKI
{
	// Fields
	public const IGACGKEBDMN.HIMLAHECPKI Lock = 0;
	public const IGACGKEBDMN.HIMLAHECPKI Unlock = 1;
	public const IGACGKEBDMN.HIMLAHECPKI Complete = 2;
}
public enum FIOBMIGMKON
{
	// Fields
	public const FIOBMIGMKON None = 0;
	public const FIOBMIGMKON PresentEntry = 1;
	public const FIOBMIGMKON PresentDetail = 2;
	public const FIOBMIGMKON CampChallengeEntry = 3;
	public const FIOBMIGMKON CampChallengeDetail = 4;
	public const FIOBMIGMKON HuntingEntry = 5;
	public const FIOBMIGMKON HuntingDetail = 6;
	public const FIOBMIGMKON MarketEntry = 7;
	public const FIOBMIGMKON MarketDetail = 8;
}
public enum ALINHFGDPGH
{
	// Fields
	public const ALINHFGDPGH PERSENT = 0;
	public const ALINHFGDPGH DECORATE = 1;
	public const ALINHFGDPGH FROMNPC = 2;
}
public enum NHMHPPLBKEA
{
	// Fields
	public const NHMHPPLBKEA MainPage = 0;
	public const NHMHPPLBKEA Rhythm = 1;
	public const NHMHPPLBKEA Astrolabe = 2;
	public const NHMHPPLBKEA Architect = 3;
	public const NHMHPPLBKEA Archaeology = 4;
	public const NHMHPPLBKEA Reasoning = 5;
	public const NHMHPPLBKEA Potion = 6;
	public const NHMHPPLBKEA Count = 7;
}
public enum OLFAEDKAHNG
{
	// Fields
	public const OLFAEDKAHNG Debuff = 1;
	public const OLFAEDKAHNG Buff = 2;
}
public enum CPKILAPKNBP
{
	// Fields
	public const CPKILAPKNBP NoSelected = 0;
	public const CPKILAPKNBP DebuffSelected = 1;
	public const CPKILAPKNBP BuffSelected = 2;
}
public enum MonoAkaFesPotionBuffCardDragger.JJONPHJLHMO
{
	// Fields
	public const MonoAkaFesPotionBuffCardDragger.JJONPHJLHMO Vertical = 0;
	public const MonoAkaFesPotionBuffCardDragger.JJONPHJLHMO Horizontal = 1;
}
public enum MonoAkaFesPotionBuffCardDragger.FBLPMICFOFK
{
	// Fields
	public const MonoAkaFesPotionBuffCardDragger.FBLPMICFOFK None = 0;
	public const MonoAkaFesPotionBuffCardDragger.FBLPMICFOFK PreCheck = 1;
	public const MonoAkaFesPotionBuffCardDragger.FBLPMICFOFK Checking = 2;
	public const MonoAkaFesPotionBuffCardDragger.FBLPMICFOFK Inside = 3;
	public const MonoAkaFesPotionBuffCardDragger.FBLPMICFOFK Outside = 4;
}
public enum KAMHBDAIANE.NJACPHNANCI
{
	// Fields
	public const KAMHBDAIANE.NJACPHNANCI PreQuest = 0;
	public const KAMHBDAIANE.NJACPHNANCI Lock = 1;
	public const KAMHBDAIANE.NJACPHNANCI Unlock = 2;
}
public enum DFDJLEIHOLG.JBAPBBBPPGO
{
	// Fields
	public const DFDJLEIHOLG.JBAPBBBPPGO Keyword = 0;
	public const DFDJLEIHOLG.JBAPBBBPPGO Question = 1;
}
public enum PBANLPCEIKP.OPPJAOCHBGF
{
	// Fields
	public const PBANLPCEIKP.OPPJAOCHBGF PreQuest = 0;
	public const PBANLPCEIKP.OPPJAOCHBGF Lock = 1;
	public const PBANLPCEIKP.OPPJAOCHBGF Unlock = 2;
}
public enum MonoActivityArenaChallengeV3.GJOHPAICJHG
{
	// Fields
	public const MonoActivityArenaChallengeV3.GJOHPAICJHG NotShow = 0;
	public const MonoActivityArenaChallengeV3.GJOHPAICJHG ShowPreMainQuest = 1;
	public const MonoActivityArenaChallengeV3.GJOHPAICJHG ShowMiddleQuest = 2;
}
public enum MonoActivitySubPage_Bartender.BPLPOFNOOCH
{
	// Fields
	public const MonoActivitySubPage_Bartender.BPLPOFNOOCH NONE = 0;
	public const MonoActivitySubPage_Bartender.BPLPOFNOOCH RED = 1;
	public const MonoActivitySubPage_Bartender.BPLPOFNOOCH YELLOW = 2;
	public const MonoActivitySubPage_Bartender.BPLPOFNOOCH BLACK = 3;
	public const MonoActivitySubPage_Bartender.BPLPOFNOOCH GREEN = 4;
}
public enum LIMOCJNDHNL.KNEGFGBDOCN
{
	// Fields
	public const LIMOCJNDHNL.KNEGFGBDOCN NotOpen = 0;
	public const LIMOCJNDHNL.KNEGFGBDOCN Open = 1;
}
public enum IFEKMEBNKHG
{
	// Fields
	public const IFEKMEBNKHG None = 0;
	public const IFEKMEBNKHG Stage1 = 1;
	public const IFEKMEBNKHG Stage2 = 2;
	public const IFEKMEBNKHG Stage3 = 3;
	public const IFEKMEBNKHG Stage4 = 4;
	public const IFEKMEBNKHG Count = 5;
}
public enum ELLLEJLOGFH.FHJCNHFENOE
{
	// Fields
	public const ELLLEJLOGFH.FHJCNHFENOE CannotInvite = 0;
	public const ELLLEJLOGFH.FHJCNHFENOE CanInvite = 1;
	public const ELLLEJLOGFH.FHJCNHFENOE Invited = 2;
}
public enum FCHBGGDKKHI.JBBJPHOCNEN
{
	// Fields
	public const FCHBGGDKKHI.JBBJPHOCNEN FromDungeon = 0;
	public const FCHBGGDKKHI.JBBJPHOCNEN FromInter = 1;
	public const FCHBGGDKKHI.JBBJPHOCNEN FromPage = 2;
}
public enum MonoChannellerSlabMissionListRow.FNLGKJHNBEP
{
	// Fields
	public const MonoChannellerSlabMissionListRow.FNLGKJHNBEP CanTake = 0;
	public const MonoChannellerSlabMissionListRow.FNLGKJHNBEP CanNotTaken = 1;
	public const MonoChannellerSlabMissionListRow.FNLGKJHNBEP Taken = 2;
}
public enum MonoCrystalLinkPageBtnLeft.PMFNHJPKGBD
{
	// Fields
	public const MonoCrystalLinkPageBtnLeft.PMFNHJPKGBD UnSelect = 0;
	public const MonoCrystalLinkPageBtnLeft.PMFNHJPKGBD Select = 1;
	public const MonoCrystalLinkPageBtnLeft.PMFNHJPKGBD Matched = 2;
}
public enum MonoCrystalLinkPageBtnRight.ABMFMFDKEPE
{
	// Fields
	public const MonoCrystalLinkPageBtnRight.ABMFMFDKEPE Candidate = 0;
	public const MonoCrystalLinkPageBtnRight.ABMFMFDKEPE Matched = 1;
}
public enum FDKNOKLPIFP
{
	// Fields
	public uint value__; // 0x10
	public const FDKNOKLPIFP KNIGHT = 0;
	public const FDKNOKLPIFP FATUI = 1;
}
public enum MLMLOBELFID
{
	// Fields
	public uint value__; // 0x10
	public const MLMLOBELFID NONE = 0;
	public const MLMLOBELFID VOICE = 1;
	public const MLMLOBELFID IMAGE = 2;
}
public enum FFKAGBCOLNM.BIFALPFHDLO
{
	// Fields
	public const FFKAGBCOLNM.BIFALPFHDLO Invalid = -1;
	public const FFKAGBCOLNM.BIFALPFHDLO BtnStopGallery = 0;
	public const FFKAGBCOLNM.BIFALPFHDLO BtnCancelForward = 1;
	public const FFKAGBCOLNM.BIFALPFHDLO BtnForward = 2;
	public const FFKAGBCOLNM.BIFALPFHDLO BtnBackward = 3;
	public const FFKAGBCOLNM.BIFALPFHDLO Count = 4;
}
public enum ENMELECCJAK
{
	// Fields
	public const ENMELECCJAK Invite = 0;
	public const ENMELECCJAK Shop = 1;
	public const ENMELECCJAK Plot = 2;
	public const ENMELECCJAK Train = 3;
}
public enum IHJINBLEAPL.KDJFDMGHFNI
{
	// Fields
	public const IHJINBLEAPL.KDJFDMGHFNI Unknown = 0;
	public const IHJINBLEAPL.KDJFDMGHFNI Init = 1;
	public const IHJINBLEAPL.KDJFDMGHFNI Ready = 2;
}
public enum EMIGKMKNLJN
{
	// Fields
	public const EMIGKMKNLJN CAPTURE = 0;
	public const EMIGKMKNLJN EDUCATION = 1;
	public const EMIGKMKNLJN DUNGEON = 2;
}
public enum EHGPGCCIDHC.GMKJFOBOBGH
{
	// Fields
	public const EHGPGCCIDHC.GMKJFOBOBGH ToPuzzle = 1;
	public const EHGPGCCIDHC.GMKJFOBOBGH ToEducation = 2;
	public const EHGPGCCIDHC.GMKJFOBOBGH ToLevelUp = 3;
	public const EHGPGCCIDHC.GMKJFOBOBGH LevelUpToEdu = 4;
}
public enum MonoFungusFighterPuzzleUI3DMatItem.FNMHCPDMEDA
{
	// Fields
	public const MonoFungusFighterPuzzleUI3DMatItem.FNMHCPDMEDA Up = 0;
	public const MonoFungusFighterPuzzleUI3DMatItem.FNMHCPDMEDA Down = 1;
	public const MonoFungusFighterPuzzleUI3DMatItem.FNMHCPDMEDA Left = 2;
	public const MonoFungusFighterPuzzleUI3DMatItem.FNMHCPDMEDA Right = 3;
	public const MonoFungusFighterPuzzleUI3DMatItem.FNMHCPDMEDA Count = 4;
}
public enum MonoFungusFighterPuzzleUI3DMatItem.FILMEHDFANH
{
	// Fields
	public const MonoFungusFighterPuzzleUI3DMatItem.FILMEHDFANH None = 1;
	public const MonoFungusFighterPuzzleUI3DMatItem.FILMEHDFANH WaitSelect = 2;
	public const MonoFungusFighterPuzzleUI3DMatItem.FILMEHDFANH Select = 3;
	public const MonoFungusFighterPuzzleUI3DMatItem.FILMEHDFANH ConfirmBase = 4;
}
public enum BPHADJFHJCC.CMMOJLAILEB
{
	// Fields
	public const BPHADJFHJCC.CMMOJLAILEB Unknown = 0;
	public const BPHADJFHJCC.CMMOJLAILEB WaitingLoadingDialogClose = 1;
	public const BPHADJFHJCC.CMMOJLAILEB WaitingGalleryStart = 2;
	public const BPHADJFHJCC.CMMOJLAILEB WaitingFungusReady = 3;
	public const BPHADJFHJCC.CMMOJLAILEB Normal = 4;
	public const BPHADJFHJCC.CMMOJLAILEB SkillOnEnemy = 5;
	public const BPHADJFHJCC.CMMOJLAILEB SkillOnPartner = 6;
}
public enum BPHADJFHJCC.IIBMOJEMKHC.DOHPFAMHEBE
{
	// Fields
	public const BPHADJFHJCC.IIBMOJEMKHC.DOHPFAMHEBE None = 0;
	public const BPHADJFHJCC.IIBMOJEMKHC.DOHPFAMHEBE Partner = 1;
	public const BPHADJFHJCC.IIBMOJEMKHC.DOHPFAMHEBE Enemy = 2;
}
public enum BPHADJFHJCC.CIMIIDKKEFG.IHMHNOLFPGL
{
	// Fields
	public const BPHADJFHJCC.CIMIIDKKEFG.IHMHNOLFPGL SelectFungus = 0;
	public const BPHADJFHJCC.CIMIIDKKEFG.IHMHNOLFPGL Attack = 1;
	public const BPHADJFHJCC.CIMIIDKKEFG.IHMHNOLFPGL SkillButton = 2;
	public const BPHADJFHJCC.CIMIIDKKEFG.IHMHNOLFPGL SelectSkillTarget = 3;
}
public enum BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE
{
	// Fields
	public const BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE SelectFungus = 1;
	public const BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE Attack = 2;
	public const BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE SkillButton = 3;
	public const BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE SelectSkillTarget = 4;
	public const BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE SelectFungusJoypad = 11;
	public const BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE AttackJoypad = 12;
	public const BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE SkillButtonJoypad = 13;
	public const BPHADJFHJCC.CIMIIDKKEFG.JFLKCEKGFOE SelectSkillTargetJoypad = 14;
}
public enum BPHADJFHJCC.CIMIIDKKEFG.FBJEDAIFJJL
{
	// Fields
	public const BPHADJFHJCC.CIMIIDKKEFG.FBJEDAIFJJL Prepare = 0;
	public const BPHADJFHJCC.CIMIIDKKEFG.FBJEDAIFJJL Start = 1;
	public const BPHADJFHJCC.CIMIIDKKEFG.FBJEDAIFJJL Complete = 2;
}
public enum BPHADJFHJCC.LKHLONJMPLE.IEEIBNNENEA
{
	// Fields
	public const BPHADJFHJCC.LKHLONJMPLE.IEEIBNNENEA Unknown = 0;
	public const BPHADJFHJCC.LKHLONJMPLE.IEEIBNNENEA Show = 1;
	public const BPHADJFHJCC.LKHLONJMPLE.IEEIBNNENEA Hide = 2;
}
public enum GIIAAIBMFLF.IBEMHGBLDAP
{
	// Fields
	public const GIIAAIBMFLF.IBEMHGBLDAP Binding = 0;
	public const GIIAAIBMFLF.IBEMHGBLDAP Ready = 1;
	public const GIIAAIBMFLF.IBEMHGBLDAP Dead = 2;
}
public enum GIIAAIBMFLF.HGGDHAABLBC
{
	// Fields
	public const GIIAAIBMFLF.HGGDHAABLBC Success = 0;
	public const GIIAAIBMFLF.HGGDHAABLBC FailureProxyNotReady = 1;
	public const GIIAAIBMFLF.HGGDHAABLBC FailureFungusDead = 2;
	public const GIIAAIBMFLF.HGGDHAABLBC FailureSkillBannedByAbilityState = 3;
	public const GIIAAIBMFLF.HGGDHAABLBC FailureSkillBannedByAnimatorParam = 4;
	public const GIIAAIBMFLF.HGGDHAABLBC FailureSkillBannedBySkillPoint = 5;
	public const GIIAAIBMFLF.HGGDHAABLBC FailureSkillInCD = 6;
}
public enum FJANJFBJLGK.MPDDDMGMPPP
{
	// Fields
	public const FJANJFBJLGK.MPDDDMGMPPP Gear = 0;
	public const FJANJFBJLGK.MPDDDMGMPPP Jigsaw = 1;
}
public enum GravenLongGraphController.KDBKKLJBJKF
{
	// Fields
	public const GravenLongGraphController.KDBKKLJBJKF Normal = 0;
	public const GravenLongGraphController.KDBKKLJBJKF Drag = 1;
	public const GravenLongGraphController.KDBKKLJBJKF Shift = 2;
}
public enum MKGFCMNOOBN
{
	// Fields
	public const MKGFCMNOOBN LockedByOpenDay = 0;
	public const MKGFCMNOOBN LockedByPreQuest = 1;
	public const MKGFCMNOOBN UnlockWithNoTheme = 2;
	public const MKGFCMNOOBN UnlockNotFinish = 3;
	public const MKGFCMNOOBN UnlockFinish = 4;
	public const MKGFCMNOOBN UnlockComplete = 5;
}
public enum MonoIrodoriSubStage.NDEBLCDMHNL
{
	// Fields
	public const MonoIrodoriSubStage.NDEBLCDMHNL Lock = 0;
	public const MonoIrodoriSubStage.NDEBLCDMHNL UnlockItem = 1;
	public const MonoIrodoriSubStage.NDEBLCDMHNL UnlockCharacter = 2;
}
public enum CHDKDINAIMB
{
	// Fields
	public const CHDKDINAIMB Yellow = 0;
	public const CHDKDINAIMB Green = 1;
	public const CHDKDINAIMB Red = 2;
	public const CHDKDINAIMB Grey = 3;
}
public enum MonoActivityCommonTabButton.NJHOONOCHBO
{
	// Fields
	public const MonoActivityCommonTabButton.NJHOONOCHBO Unlock = 1;
	public const MonoActivityCommonTabButton.NJHOONOCHBO Lock = 2;
	public const MonoActivityCommonTabButton.NJHOONOCHBO Complete = 3;
}
public enum BLEPEKJJCMH
{
	// Fields
	public const BLEPEKJJCMH InvalidId = 0;
	public const BLEPEKJJCMH StageLockedByTime = 1;
	public const BLEPEKJJCMH StageLockedByPrequest = 2;
	public const BLEPEKJJCMH StageLockedByPreStage = 3;
	public const BLEPEKJJCMH StageLockebByCombatInOther = 4;
	public const BLEPEKJJCMH ShouldGotoStoryQuest = 5;
	public const BLEPEKJJCMH NoRestriction = 6;
}
public enum MonoActivityRoguelikeSubPage.LICJHIKIFCG
{
	// Fields
	public const MonoActivityRoguelikeSubPage.LICJHIKIFCG LOCKED = 0;
	public const MonoActivityRoguelikeSubPage.LICJHIKIFCG ACTIVE = 1;
	public const MonoActivityRoguelikeSubPage.LICJHIKIFCG FINISH = 2;
}
public enum PDIKKGJGIFG.NGPAAGGCDOC
{
	// Fields
	public const PDIKKGJGIFG.NGPAAGGCDOC Shiki = 0;
	public const PDIKKGJGIFG.NGPAAGGCDOC Rune = 1;
	public const PDIKKGJGIFG.NGPAAGGCDOC Story = 2;
	public const PDIKKGJGIFG.NGPAAGGCDOC Count = 3;
}
public enum GLDCEKIGNPL.LNBMFLEGBMB
{
	// Fields
	public const GLDCEKIGNPL.LNBMFLEGBMB StageBoat = 0;
	public const GLDCEKIGNPL.LNBMFLEGBMB StageDungeon1 = 1;
	public const GLDCEKIGNPL.LNBMFLEGBMB StageDungeon2 = 2;
	public const GLDCEKIGNPL.LNBMFLEGBMB StageDungeon3 = 3;
	public const GLDCEKIGNPL.LNBMFLEGBMB StageDungeon4 = 4;
	public const GLDCEKIGNPL.LNBMFLEGBMB StageAll = 5;
}
public enum GLDCEKIGNPL.ENKEEPPEILN
{
	// Fields
	public const GLDCEKIGNPL.ENKEEPPEILN Locked = 0;
	public const GLDCEKIGNPL.ENKEEPPEILN Quest = 1;
	public const GLDCEKIGNPL.ENKEEPPEILN Dungeon = 2;
}
public enum GOHKDEDEFEP
{
	// Fields
	public const GOHKDEDEFEP NotOpen = 0;
	public const GOHKDEDEFEP Normal = 1;
	public const GOHKDEDEFEP NeedTake = 2;
	public const GOHKDEDEFEP AllTaken = 3;
}
public enum PCNBMLLCPDG.IGICIDEMMNO
{
	// Fields
	public const PCNBMLLCPDG.IGICIDEMMNO Unknown = 0;
	public const PCNBMLLCPDG.IGICIDEMMNO ManuallyCancel = 1;
	public const PCNBMLLCPDG.IGICIDEMMNO FailedToGetSize = 2;
	public const PCNBMLLCPDG.IGICIDEMMNO DownloadComplete = 3;
	public const PCNBMLLCPDG.IGICIDEMMNO DownloadFailed = 4;
	public const PCNBMLLCPDG.IGICIDEMMNO EnterCustomDownloadInterface = 5;
}
public enum FNOJFAKINOK.EPIAALBNKOK
{
	// Fields
	public const FNOJFAKINOK.EPIAALBNKOK Unknown = 0;
	public const FNOJFAKINOK.EPIAALBNKOK Setting = 1;
	public const FNOJFAKINOK.EPIAALBNKOK Codex = 2;
}
public enum MACCLIKLNGO
{
	// Fields
	public const MACCLIKLNGO Begin = 0;
	public const MACCLIKLNGO Defeat = 1;
	public const MACCLIKLNGO CG = 2;
}
public enum COEDJJMDJHB
{
	// Fields
	public const COEDJJMDJHB None = 0;
	public const COEDJJMDJHB Click = 1;
	public const COEDJJMDJHB SingleClick = 2;
	public const COEDJJMDJHB Slide = 3;
}
public enum JIEOLMBJHCM
{
	// Fields
	public const JIEOLMBJHCM Normal = 1;
	public const JIEOLMBJHCM Interpret = 2;
	public const JIEOLMBJHCM Association = 3;
}
public enum DAJDDPDIGHM
{
	// Fields
	public const DAJDDPDIGHM Normal = 0;
	public const DAJDDPDIGHM Interpret = 1;
	public const DAJDDPDIGHM Associate = 2;
}
public enum CIKIHAPKGGC.KLOJDFDNGGD
{
	// Fields
	public const CIKIHAPKGGC.KLOJDFDNGGD None = 0;
	public const CIKIHAPKGGC.KLOJDFDNGGD BagProficiencyReward = 1;
	public const CIKIHAPKGGC.KLOJDFDNGGD DeckOverview = 2;
	public const CIKIHAPKGGC.KLOJDFDNGGD DeckDetail = 3;
	public const CIKIHAPKGGC.KLOJDFDNGGD Comma = 4;
	public const CIKIHAPKGGC.KLOJDFDNGGD Purchase = 5;
	public const CIKIHAPKGGC.KLOJDFDNGGD Mall = 6;
	public const CIKIHAPKGGC.KLOJDFDNGGD BuyAll = 7;
	public const CIKIHAPKGGC.KLOJDFDNGGD ItemTips = 8;
	public const CIKIHAPKGGC.KLOJDFDNGGD Invite = 9;
}
public enum MJHNLPPCMBH.IAONECNMHJE
{
	// Fields
	public uint value__; // 0x10
	public const MJHNLPPCMBH.IAONECNMHJE DECK_SYS = 0;
	public const MJHNLPPCMBH.IAONECNMHJE MALL = 1;
}
public enum JIJFMGICEKF.BCEGEOACKGF
{
	// Fields
	public uint value__; // 0x10
	public const JIJFMGICEKF.BCEGEOACKGF LEVEL = 0;
	public const JIJFMGICEKF.BCEGEOACKGF WEEKLY = 1;
	public const JIJFMGICEKF.BCEGEOACKGF COUNT = 2;
}
public enum IPLENHJNOCA.BLBGINEEDPK
{
	// Fields
	public const IPLENHJNOCA.BLBGINEEDPK TriggerEffect = 0;
	public const IPLENHJNOCA.BLBGINEEDPK Attack = 1;
	public const IPLENHJNOCA.BLBGINEEDPK Heal = 2;
	public const IPLENHJNOCA.BLBGINEEDPK Create = 3;
	public const IPLENHJNOCA.BLBGINEEDPK Multi = 4;
	public const IPLENHJNOCA.BLBGINEEDPK None = 5;
}
public enum MonoGcgPlayerLevelPage.KGDLCBCJJGL
{
	// Fields
	public uint value__; // 0x10
	public const MonoGcgPlayerLevelPage.KGDLCBCJJGL MAIN = 0;
	public const MonoGcgPlayerLevelPage.KGDLCBCJJGL REWARD = 1;
}
public enum PEMIEIEACJO
{
	// Fields
	public const PEMIEIEACJO MATCH = 0;
	public const PEMIEIEACJO INVITE_SELECT = 1;
	public const PEMIEIEACJO INVITE_MATCH = 2;
}
public enum GPKLPNCEBIE.PNOEOAOGNBG
{
	// Fields
	public uint value__; // 0x10
	public const GPKLPNCEBIE.PNOEOAOGNBG NONE = 0;
	public const GPKLPNCEBIE.PNOEOAOGNBG CARD_BACK = 1;
	public const GPKLPNCEBIE.PNOEOAOGNBG CARD_FIELD = 2;
	public const GPKLPNCEBIE.PNOEOAOGNBG MISC = 3;
}
public enum MonoGcgMallCardItem.PNHOOJNIEEH
{
	// Fields
	public uint value__; // 0x10
	public const MonoGcgMallCardItem.PNHOOJNIEEH NORMAL = 0;
	public const MonoGcgMallCardItem.PNHOOJNIEEH GOLDEN = 1;
}
public enum MonoGcgMallItem.MMOMNBHNDEN
{
	// Fields
	public const MonoGcgMallItem.MMOMNBHNDEN Icon = 0;
	public const MonoGcgMallItem.MMOMNBHNDEN Image = 1;
}
public enum MonoMallGcgAppearanceItem.GGHELNNLHLP
{
	// Fields
	public uint value__; // 0x10
	public const MonoMallGcgAppearanceItem.GGHELNNLHLP NONE = 0;
	public const MonoMallGcgAppearanceItem.GGHELNNLHLP CARD_FACE = 1;
	public const MonoMallGcgAppearanceItem.GGHELNNLHLP CARD_BACK = 2;
	public const MonoMallGcgAppearanceItem.GGHELNNLHLP CARD_CASE = 3;
}
public enum EINMCBINJCE.OANOIDGDALB.EFNKDFJCBPH
{
	// Fields
	public const EINMCBINJCE.OANOIDGDALB.EFNKDFJCBPH Info = 0;
	public const EINMCBINJCE.OANOIDGDALB.EFNKDFJCBPH Restriction = 1;
	public const EINMCBINJCE.OANOIDGDALB.EFNKDFJCBPH Buff = 2;
}
public enum EEIMLJDJFDC.PPNEELHBGBP.AOIOEBDNHJC
{
	// Fields
	public const EEIMLJDJFDC.PPNEELHBGBP.AOIOEBDNHJC Locked = 0;
	public const EEIMLJDJFDC.PPNEELHBGBP.AOIOEBDNHJC Normal = 1;
	public const EEIMLJDJFDC.PPNEELHBGBP.AOIOEBDNHJC CanGetReward = 2;
	public const EEIMLJDJFDC.PPNEELHBGBP.AOIOEBDNHJC RewardGot = 3;
}
public enum BHMJGMAJFHK.DKGBKJOCDDE
{
	// Fields
	public const BHMJGMAJFHK.DKGBKJOCDDE None = 0;
	public const BHMJGMAJFHK.DKGBKJOCDDE Stage1 = 1;
	public const BHMJGMAJFHK.DKGBKJOCDDE Stage2 = 2;
	public const BHMJGMAJFHK.DKGBKJOCDDE Stage3 = 3;
	public const BHMJGMAJFHK.DKGBKJOCDDE Stage4 = 4;
	public const BHMJGMAJFHK.DKGBKJOCDDE Count = 5;
}
public enum BHMJGMAJFHK.ACKAIHGDHAJ
{
	// Fields
	public const BHMJGMAJFHK.ACKAIHGDHAJ None = 0;
	public const BHMJGMAJFHK.ACKAIHGDHAJ Plot = 1;
	public const BHMJGMAJFHK.ACKAIHGDHAJ Challenge = 2;
}
public enum BHMJGMAJFHK.PAAANGLDFAD
{
	// Fields
	public const BHMJGMAJFHK.PAAANGLDFAD LockByPreQuest = 0;
	public const BHMJGMAJFHK.PAAANGLDFAD LockByOpenTime = 1;
	public const BHMJGMAJFHK.PAAANGLDFAD Unlock = 2;
}
public enum BALFOLNKBDO.AEGBMINCLCB
{
	// Fields
	public const BALFOLNKBDO.AEGBMINCLCB None = 0;
	public const BALFOLNKBDO.AEGBMINCLCB FreeRotation = 1;
	public const BALFOLNKBDO.AEGBMINCLCB SingleAxisRotation = 2;
}
public enum BALFOLNKBDO.MPEKPPHOHIA
{
	// Fields
	public const BALFOLNKBDO.MPEKPPHOHIA FreeRotation = 0;
	public const BALFOLNKBDO.MPEKPPHOHIA SingleAxisRotation = 1;
	public const BALFOLNKBDO.MPEKPPHOHIA SingleAxisTranslation = 2;
}
public enum BEKENOCIKFO
{
	// Fields
	public const BEKENOCIKFO NotOpen = 0;
	public const BEKENOCIKFO Locked = 1;
	public const BEKENOCIKFO NotCompleted = 2;
	public const BEKENOCIKFO Completed = 3;
}
public enum JBGIANGDGHI
{
	// Fields
	public const JBGIANGDGHI Touch = 0;
	public const JBGIANGDGHI Mouse = 1;
	public const JBGIANGDGHI Joypad = 2;
}
public enum HMPCDIGMIJD
{
	// Fields
	public const HMPCDIGMIJD Input = 0;
	public const HMPCDIGMIJD Switch = 1;
}
public enum DPJJJCCMAAC.NHLNGJJLJAK
{
	// Fields
	public const DPJJJCCMAAC.NHLNGJJLJAK RootPoint = 0;
	public const DPJJJCCMAAC.NHLNGJJLJAK ChildOfRootPoint = 1;
	public const DPJJJCCMAAC.NHLNGJJLJAK Default = 2;
}
public enum HCMIGKGLBGO.NBHKBPPOPJI
{
	// Fields
	public const HCMIGKGLBGO.NBHKBPPOPJI Attack = 0;
	public const HCMIGKGLBGO.NBHKBPPOPJI Laser = 1;
	public const HCMIGKGLBGO.NBHKBPPOPJI Move = 2;
}
public enum KHHBDMJALNO.KBKALDAJABK
{
	// Fields
	public const KHHBDMJALNO.KBKALDAJABK Card = 0;
	public const KHHBDMJALNO.KBKALDAJABK Quest = 1;
	public const KHHBDMJALNO.KBKALDAJABK POI = 2;
}
public enum ANJDIANKPOL
{
	// Fields
	public const ANJDIANKPOL DIY = 0;
	public const ANJDIANKPOL Order = 1;
}
public enum KMPOMAFJBJG
{
	// Fields
	public const KMPOMAFJBJG Invalid = -1;
	public const KMPOMAFJBJG Stage1 = 0;
	public const KMPOMAFJBJG Stage2 = 1;
	public const KMPOMAFJBJG Stage3 = 2;
	public const KMPOMAFJBJG Count = 3;
}
public enum FGLLNMFDNOD.JDFIMBPCKED
{
	// Fields
	public const FGLLNMFDNOD.JDFIMBPCKED UpperSection = 0;
	public const FGLLNMFDNOD.JDFIMBPCKED LowerSection = 1;
}
public enum MonoVanasaraRewardRow.EMEKLEJOPPJ
{
	// Fields
	public const MonoVanasaraRewardRow.EMEKLEJOPPJ None = 0;
	public const MonoVanasaraRewardRow.EMEKLEJOPPJ Taken = 1;
	public const MonoVanasaraRewardRow.EMEKLEJOPPJ CanGet = 2;
	public const MonoVanasaraRewardRow.EMEKLEJOPPJ CantGet = 3;
}
public enum MonoBounceConjuringListRow.MOPDCDHPCOJ
{
	// Fields
	public const MonoBounceConjuringListRow.MOPDCDHPCOJ CanTake = 0;
	public const MonoBounceConjuringListRow.MOPDCDHPCOJ CanNotTaken = 1;
	public const MonoBounceConjuringListRow.MOPDCDHPCOJ Taken = 2;
}
public enum CEAHFNHHKCG
{
	// Fields
	public const CEAHFNHHKCG DefaultFont = 0;
	public const CEAHFNHHKCG DamageFont = 1;
	public const CEAHFNHHKCG TevyatFont = 2;
	public const CEAHFNHHKCG GsenochianFont = 3;
	public const CEAHFNHHKCG NumberFont = 4;
}
public enum MonoMultiSectionText.FIGFFNOOBPO
{
	// Fields
	public const MonoMultiSectionText.FIGFFNOOBPO USE_ROOT = 0;
	public const MonoMultiSectionText.FIGFFNOOBPO USE_PARENT = 1;
	public const MonoMultiSectionText.FIGFFNOOBPO SPECIFIC_RECT = 2;
	public const MonoMultiSectionText.FIGFFNOOBPO FIXED_RECT = 3;
}
public enum ALLEDDBLDOE.CGFDAIECAPP
{
	// Fields
	public const ALLEDDBLDOE.CGFDAIECAPP None = 0;
	public const ALLEDDBLDOE.CGFDAIECAPP PreDragBegin = 1;
	public const ALLEDDBLDOE.CGFDAIECAPP PreDragEnd = 2;
	public const ALLEDDBLDOE.CGFDAIECAPP DragBegin = 3;
	public const ALLEDDBLDOE.CGFDAIECAPP Dragging = 4;
	public const ALLEDDBLDOE.CGFDAIECAPP DragEnd = 5;
}
public enum FOCHOIBBAME
{
	// Fields
	public const FOCHOIBBAME None = 0;
	public const FOCHOIBBAME Success = 1;
	public const FOCHOIBBAME Trapped = 2;
	public const FOCHOIBBAME Dropped = 3;
	public const FOCHOIBBAME Interrupted = 4;
}
public enum FKPMGNHKBOF
{
	// Fields
	public const FKPMGNHKBOF BlockSelected = 0;
	public const FKPMGNHKBOF PageLogic = 1;
	public const FKPMGNHKBOF PageDisable = 2;
}
public enum HPCGBIGJKHK
{
	// Fields
	public const HPCGBIGJKHK Default = 0;
	public const HPCGBIGJKHK Avatar = 1;
	public const HPCGBIGJKHK Gameplay = 2;
	public const HPCGBIGJKHK WindZone = 4;
}
public enum JOIJGIACOJI.KDAMGMEHAAN
{
	// Fields
	public const JOIJGIACOJI.KDAMGMEHAAN FadeIn = 0;
	public const JOIJGIACOJI.KDAMGMEHAAN Active = 1;
	public const JOIJGIACOJI.KDAMGMEHAAN FadeOut = 2;
	public const JOIJGIACOJI.KDAMGMEHAAN InActive = 3;
	public const JOIJGIACOJI.KDAMGMEHAAN Damp = 4;
}
public enum LHPGNEGACOJ.JALKCECNIAD
{
	// Fields
	public const LHPGNEGACOJ.JALKCECNIAD None = 0;
	public const LHPGNEGACOJ.JALKCECNIAD Drop = 1;
	public const LHPGNEGACOJ.JALKCECNIAD Walk = 2;
	public const LHPGNEGACOJ.JALKCECNIAD Turn = 3;
	public const LHPGNEGACOJ.JALKCECNIAD Fly = 4;
	public const LHPGNEGACOJ.JALKCECNIAD HorizontalFly = 5;
}
public enum LHPGNEGACOJ.FMHAKMMLLAK
{
	// Fields
	public const LHPGNEGACOJ.FMHAKMMLLAK BlockHorizontal = 0;
	public const LHPGNEGACOJ.FMHAKMMLLAK BlockVertical = 1;
	public const LHPGNEGACOJ.FMHAKMMLLAK BlockVerticalUp = 2;
	public const LHPGNEGACOJ.FMHAKMMLLAK BlockAll = 3;
}
public enum OBIPHKFGKGP
{
	// Fields
	public const OBIPHKFGKGP Block = 0;
	public const OBIPHKFGKGP Avatar = 1;
	public const OBIPHKFGKGP Goal = 2;
	public const OBIPHKFGKGP Ground = 3;
	public const OBIPHKFGKGP Wall = 4;
	public const OBIPHKFGKGP WindZone = 5;
	public const OBIPHKFGKGP Trap = 6;
	public const OBIPHKFGKGP Switch = 7;
	public const OBIPHKFGKGP Key = 8;
	public const OBIPHKFGKGP ViewOnly = 9;
}
public enum JNFLPNEOHGI
{
	// Fields
	public const JNFLPNEOHGI None = 0;
	public const JNFLPNEOHGI UnlockBlock = 1;
	public const JNFLPNEOHGI LockBlock = 2;
	public const JNFLPNEOHGI HideGround = 3;
	public const JNFLPNEOHGI ShowGround = 4;
	public const JNFLPNEOHGI HideWindZone = 5;
	public const JNFLPNEOHGI ShowWindZone = 6;
	public const JNFLPNEOHGI UnlockGoal = 7;
	public const JNFLPNEOHGI LockGoal = 8;
}
public enum BHNCEELEBJP
{
	// Fields
	public const BHNCEELEBJP FitHorizontal = 0;
	public const BHNCEELEBJP FitVertical = 1;
	public const BHNCEELEBJP FitBoth = 2;
}
public enum TextWithSpriteMeshEffect.ABALMMFOGAL
{
	// Fields
	public const TextWithSpriteMeshEffect.ABALMMFOGAL TextComponentNull = 0;
	public const TextWithSpriteMeshEffect.ABALMMFOGAL TextComponentNotSupportRichText = 1;
	public const TextWithSpriteMeshEffect.ABALMMFOGAL TextComponentNotVerticalOverflow = 2;
	public const TextWithSpriteMeshEffect.ABALMMFOGAL VertexOptimizeComponentNull = 3;
	public const TextWithSpriteMeshEffect.ABALMMFOGAL VertexOptimizeComponentNotEnabled = 4;
	public const TextWithSpriteMeshEffect.ABALMMFOGAL BeforeVertexOptimizeComponent = 5;
	public const TextWithSpriteMeshEffect.ABALMMFOGAL AfterShadowOrOutlineComponent = 6;
}
public enum MonoActivityDragonSpineListRow.EHOPNONPMGG
{
	// Fields
	public const MonoActivityDragonSpineListRow.EHOPNONPMGG CanTake = 0;
	public const MonoActivityDragonSpineListRow.EHOPNONPMGG CanNotTaken = 1;
	public const MonoActivityDragonSpineListRow.EHOPNONPMGG Taken = 2;
}
public enum MonoActivityFlightChallengeListRow.JOPLNOIKNMK
{
	// Fields
	public const MonoActivityFlightChallengeListRow.JOPLNOIKNMK CanNotTaken = 0;
	public const MonoActivityFlightChallengeListRow.JOPLNOIKNMK CanTake = 1;
	public const MonoActivityFlightChallengeListRow.JOPLNOIKNMK Taken = 2;
}
public enum MonoActivityMistTrialDungeonEntry.BHKENFNBJBN
{
	// Fields
	public const MonoActivityMistTrialDungeonEntry.BHKENFNBJBN Invalid = 0;
	public const MonoActivityMistTrialDungeonEntry.BHKENFNBJBN Closed = 1;
	public const MonoActivityMistTrialDungeonEntry.BHKENFNBJBN Opened = 2;
}
public enum MonoActivityMistTrialQuestRow.LBDGNPFMPHE
{
	// Fields
	public const MonoActivityMistTrialQuestRow.LBDGNPFMPHE InProgress = 0;
	public const MonoActivityMistTrialQuestRow.LBDGNPFMPHE ReadyToClaim = 1;
	public const MonoActivityMistTrialQuestRow.LBDGNPFMPHE Complete = 2;
	public const MonoActivityMistTrialQuestRow.LBDGNPFMPHE InDungeon = 3;
}
public enum HFBKJDKNGOA
{
	// Fields
	public const HFBKJDKNGOA LOCK = 0;
	public const HFBKJDKNGOA NORMAL = 1;
	public const HFBKJDKNGOA OPEN = 2;
	public const HFBKJDKNGOA BATTLE = 3;
}
public enum MonoArenaChallengeRewardListRow.LOJLAJJFIFI
{
	// Fields
	public const MonoArenaChallengeRewardListRow.LOJLAJJFIFI Inprogress = 0;
	public const MonoArenaChallengeRewardListRow.LOJLAJJFIFI ReadyToClaim = 1;
	public const MonoArenaChallengeRewardListRow.LOJLAJJFIFI Finished = 2;
}
public enum MonoFleurFairMiniGameRewardBtn.OFDPEJPLKMK
{
	// Fields
	public const MonoFleurFairMiniGameRewardBtn.OFDPEJPLKMK Normal = 0;
	public const MonoFleurFairMiniGameRewardBtn.OFDPEJPLKMK CanReceive = 1;
	public const MonoFleurFairMiniGameRewardBtn.OFDPEJPLKMK Complete = 2;
}
public enum ENECHGEGIHK
{
	// Fields
	public const ENECHGEGIHK ATTACK = 0;
	public const ENECHGEGIHK ATTACKSPEED = 1;
	public const ENECHGEGIHK ATTACKRANGE = 2;
	public const ENECHGEGIHK MASTERY = 3;
}
public enum HJOFGOAFMGA
{
	// Fields
	public const HJOFGOAFMGA INIT_ABSOLUTE = 0;
	public const HJOFGOAFMGA EXIT = 1;
	public const HJOFGOAFMGA ABSOLUTE = 2;
}
public enum IABOEABALIN
{
	// Fields
	public const IABOEABALIN Reminder = 0;
	public const IABOEABALIN MobileAim = 1;
	public const IABOEABALIN HerculesBattle = 2;
	public const IABOEABALIN Count = 3;
}
public enum PPBMPLFKNOO
{
	// Fields
	public const PPBMPLFKNOO Normal = 0;
	public const PPBMPLFKNOO Extra = 1;
}
public enum MonoExplorationMark.JFGEMGIHJEL
{
	// Fields
	public const MonoExplorationMark.JFGEMGIHJEL None = 0;
	public const MonoExplorationMark.JFGEMGIHJEL WaitingToSend = 1;
	public const MonoExplorationMark.JFGEMGIHJEL Receive = 2;
	public const MonoExplorationMark.JFGEMGIHJEL Callback = 3;
}
public enum MonoExplorationMark.ONLBFEGNLIC
{
	// Fields
	public const MonoExplorationMark.ONLBFEGNLIC None = 0;
	public const MonoExplorationMark.ONLBFEGNLIC Level_S = 1;
	public const MonoExplorationMark.ONLBFEGNLIC Level_A = 2;
	public const MonoExplorationMark.ONLBFEGNLIC Level_B = 3;
	public const MonoExplorationMark.ONLBFEGNLIC Level_C = 4;
}
public enum MonoAdsorbEffectController.HNDALFEFCCI
{
	// Fields
	public const MonoAdsorbEffectController.HNDALFEFCCI Keep = 0;
	public const MonoAdsorbEffectController.HNDALFEFCCI AutoCreate = 1;
}
public enum MonoAdsorbEffectController.LIIBHLFMENJ
{
	// Fields
	public const MonoAdsorbEffectController.LIIBHLFMENJ KeepSequence = 0;
	public const MonoAdsorbEffectController.LIIBHLFMENJ Recycle = 1;
}
public enum MonoAdsorbEffectController.FJAMDNAGAOI
{
	// Fields
	public const MonoAdsorbEffectController.FJAMDNAGAOI PointToPoint = 0;
	public const MonoAdsorbEffectController.FJAMDNAGAOI RectToRectIn2D = 1;
}
public enum MonoAdsorbEffectController.EBGOMFFHLEM
{
	// Fields
	public const MonoAdsorbEffectController.EBGOMFFHLEM SetGameObjectActive = 0;
	public const MonoAdsorbEffectController.EBGOMFFHLEM SetCanvasGroupAlpha = 1;
	public const MonoAdsorbEffectController.EBGOMFFHLEM Custom = 2;
}
public enum CDOOBOJHKGE.NJOCAJGMBEL
{
	// Fields
	public const CDOOBOJHKGE.NJOCAJGMBEL None = 0;
	public const CDOOBOJHKGE.NJOCAJGMBEL Damping = 1;
	public const CDOOBOJHKGE.NJOCAJGMBEL Focus = 2;
	public const CDOOBOJHKGE.NJOCAJGMBEL Idle = 3;
	public const CDOOBOJHKGE.NJOCAJGMBEL Recover = 4;
	public const CDOOBOJHKGE.NJOCAJGMBEL Swipe = 5;
	public const CDOOBOJHKGE.NJOCAJGMBEL ZoomDamping = 6;
	public const CDOOBOJHKGE.NJOCAJGMBEL ZoomRecover = 7;
}
public enum CPDEMIPPLLE.MHCDHEEJOED
{
	// Fields
	public const CPDEMIPPLLE.MHCDHEEJOED ToFocus = 0;
	public const CPDEMIPPLLE.MHCDHEEJOED ExitFocus = 1;
	public const CPDEMIPPLLE.MHCDHEEJOED Idle = 2;
}
public enum DIDNKILMLBH.IGOGFPOKMIE
{
	// Fields
	public const DIDNKILMLBH.IGOGFPOKMIE Hard = 0;
	public const DIDNKILMLBH.IGOGFPOKMIE Soft = 1;
}
public enum ICNNMFDMGHK
{
	// Fields
	public const ICNNMFDMGHK Invalid = 0;
	public const ICNNMFDMGHK Ready = 1;
	public const ICNNMFDMGHK Destroy = 2;
	public const ICNNMFDMGHK EnableAction = 3;
	public const ICNNMFDMGHK DisableAction = 4;
	public const ICNNMFDMGHK RegionMoveLeft = 5;
	public const ICNNMFDMGHK RegionMoveRight = 6;
	public const ICNNMFDMGHK RegionMoveUp = 7;
	public const ICNNMFDMGHK RegionMoveDown = 8;
	public const ICNNMFDMGHK ClickItem = 9;
	public const ICNNMFDMGHK RegionEnter = 10;
}
public enum MonoJoypadGeneralListHandler.PEIMMPDHPOF
{
	// Fields
	public const MonoJoypadGeneralListHandler.PEIMMPDHPOF None = 0;
	public const MonoJoypadGeneralListHandler.PEIMMPDHPOF UpdateSelectedIndex = 1;
	public const MonoJoypadGeneralListHandler.PEIMMPDHPOF UpdateFocusTarget = 2;
	public const MonoJoypadGeneralListHandler.PEIMMPDHPOF UpdateItemSelect = 3;
	public const MonoJoypadGeneralListHandler.PEIMMPDHPOF ClickItem = 4;
	public const MonoJoypadGeneralListHandler.PEIMMPDHPOF ClickItemWhileMuteAudio = 5;
	public const MonoJoypadGeneralListHandler.PEIMMPDHPOF UpdateItemHighlight = 6;
	public const MonoJoypadGeneralListHandler.PEIMMPDHPOF ContextCallback = 7;
}
public enum MonoJoypadGridScrollerHandler.ODHHCJEGCDM
{
	// Fields
	public const MonoJoypadGridScrollerHandler.ODHHCJEGCDM FourWay = 0;
	public const MonoJoypadGridScrollerHandler.ODHHCJEGCDM Vertical = 1;
	public const MonoJoypadGridScrollerHandler.ODHHCJEGCDM Horizontal = 2;
}
public enum OOBDEJCLNKL
{
	// Fields
	public const OOBDEJCLNKL None = 0;
	public const OOBDEJCLNKL Highlighted = 1;
	public const OOBDEJCLNKL Interactable = 2;
	public const OOBDEJCLNKL PointerEnter = 3;
	public const OOBDEJCLNKL PickupItem = 4;
	public const OOBDEJCLNKL Disabled = 5;
	public const OOBDEJCLNKL NavSelectable = 6;
}
public enum MonoJoypadItemNavigator.JBJLBMHDEHN
{
	// Fields
	public const MonoJoypadItemNavigator.JBJLBMHDEHN Custom = 0;
	public const MonoJoypadItemNavigator.JBJLBMHDEHN Vertical = 1;
	public const MonoJoypadItemNavigator.JBJLBMHDEHN Horizontal = 2;
	public const MonoJoypadItemNavigator.JBJLBMHDEHN Freestyle = 3;
}
public enum BAJFAFANOGH
{
	// Fields
	public const BAJFAFANOGH None = 0;
	public const BAJFAFANOGH Horizontal = 1;
	public const BAJFAFANOGH Vertical = 2;
}
public enum MonoJoypadScrollRect.IJLGOKJNPCN
{
	// Fields
	public const MonoJoypadScrollRect.IJLGOKJNPCN Vertical = 0;
	public const MonoJoypadScrollRect.IJLGOKJNPCN Horizontal = 1;
}
public enum MonoJoypadScrollRect.NIFLLKBGBEM
{
	// Fields
	public const MonoJoypadScrollRect.NIFLLKBGBEM Normal = 0;
	public const MonoJoypadScrollRect.NIFLLKBGBEM MultiDirectional = 1;
}
public enum IEIBOFPLJLA
{
	// Fields
	public const IEIBOFPLJLA Up = 0;
	public const IEIBOFPLJLA Down = 1;
	public const IEIBOFPLJLA Left = 2;
	public const IEIBOFPLJLA Right = 3;
	public const IEIBOFPLJLA None = 4;
}
public enum BCPIEKFLADN
{
	// Fields
	public const BCPIEKFLADN Normal = 0;
	public const BCPIEKFLADN Top = 1;
	public const BCPIEKFLADN Bottom = 2;
	public const BCPIEKFLADN LeftMost = 3;
	public const BCPIEKFLADN RightMost = 4;
}
public enum FOBPCEEOBOO
{
	// Fields
	public const FOBPCEEOBOO ActionPanel_A = 0;
	public const FOBPCEEOBOO ActionPanel_B = 1;
	public const FOBPCEEOBOO ActionPanel_C = 2;
	public const FOBPCEEOBOO ActionPanel_D = 3;
	public const FOBPCEEOBOO ActionPanel_PC = 4;
	public const FOBPCEEOBOO ActionPanel_J = 5;
	public const FOBPCEEOBOO ActionPanel_MJ = 6;
}
public enum MonoActivityBlessingFriendListRow.LJAACLBLBFP
{
	// Fields
	public const MonoActivityBlessingFriendListRow.LJAACLBLBFP None = 0;
	public const MonoActivityBlessingFriendListRow.LJAACLBLBFP RequestButton = 1;
	public const MonoActivityBlessingFriendListRow.LJAACLBLBFP RequestingHint = 2;
	public const MonoActivityBlessingFriendListRow.LJAACLBLBFP UnreachableHint = 3;
}
public enum MonoAsyncPrefabPlugin.MCDDIBKADKI
{
	// Fields
	public const MonoAsyncPrefabPlugin.MCDDIBKADKI NotInited = 0;
	public const MonoAsyncPrefabPlugin.MCDDIBKADKI FullActive = 1;
	public const MonoAsyncPrefabPlugin.MCDDIBKADKI LightDeactive = 2;
	public const MonoAsyncPrefabPlugin.MCDDIBKADKI Recycled = 3;
}
public enum MonoAttachToPoint.EPBNJAHDPBB
{
	// Fields
	public const MonoAttachToPoint.EPBNJAHDPBB Avatar = 0;
	public const MonoAttachToPoint.EPBNJAHDPBB Entity = 1;
}
public enum MonoBlacklistRow.IMMNIKAKLNG
{
	// Fields
	public const MonoBlacklistRow.IMMNIKAKLNG None = 0;
	public const MonoBlacklistRow.IMMNIKAKLNG Select = 1;
	public const MonoBlacklistRow.IMMNIKAKLNG UnSelect = 2;
}
public enum DHCFKAIDAFJ
{
	// Fields
	public const DHCFKAIDAFJ Relic = 0;
	public const DHCFKAIDAFJ Furniture = 1;
}
public enum MonoExUICamera.GGPKMANMGFF
{
	// Fields
	public const MonoExUICamera.GGPKMANMGFF Idle = 0;
	public const MonoExUICamera.GGPKMANMGFF Swipe = 1;
	public const MonoExUICamera.GGPKMANMGFF Damping = 2;
	public const MonoExUICamera.GGPKMANMGFF Recover = 3;
	public const MonoExUICamera.GGPKMANMGFF ZoomRecover = 4;
	public const MonoExUICamera.GGPKMANMGFF ZoomDamping = 5;
	public const MonoExUICamera.GGPKMANMGFF Focus = 6;
}
public enum MonoExUICamera.IKOPLHAMJAJ
{
	// Fields
	public const MonoExUICamera.IKOPLHAMJAJ None = 0;
	public const MonoExUICamera.IKOPLHAMJAJ Left = 1;
	public const MonoExUICamera.IKOPLHAMJAJ Top = 2;
	public const MonoExUICamera.IKOPLHAMJAJ Right = 4;
	public const MonoExUICamera.IKOPLHAMJAJ Bottom = 8;
}
public enum MonoExUICamera.HNAMMKIONME
{
	// Fields
	public const MonoExUICamera.HNAMMKIONME None = 0;
	public const MonoExUICamera.HNAMMKIONME Max = 1;
	public const MonoExUICamera.HNAMMKIONME Min = 2;
}
public enum MonoForgingListRow.JCCPBMMFMIJ
{
	// Fields
	public const MonoForgingListRow.JCCPBMMFMIJ Forge = 0;
	public const MonoForgingListRow.JCCPBMMFMIJ FurnitureBuild = 1;
}
public enum MonoFriendListRow.HJNGCAFKEAM
{
	// Fields
	public const MonoFriendListRow.HJNGCAFKEAM None = 0;
	public const MonoFriendListRow.HJNGCAFKEAM RequestButton = 1;
	public const MonoFriendListRow.HJNGCAFKEAM RequestingHint = 2;
	public const MonoFriendListRow.HJNGCAFKEAM UnreachableHint = 3;
}
public enum MonoGachaPanel.KKGPMLKDOLG
{
	// Fields
	public const MonoGachaPanel.KKGPMLKDOLG Text = 0;
	public const MonoGachaPanel.KKGPMLKDOLG Image = 1;
	public const MonoGachaPanel.KKGPMLKDOLG Layout = 2;
}
public enum MonoGridScroller.MBOOGBJMBPK
{
	// Fields
	public const MonoGridScroller.MBOOGBJMBPK Horizontal = 0;
	public const MonoGridScroller.MBOOGBJMBPK Vertical = 1;
	public const MonoGridScroller.MBOOGBJMBPK None = 2;
}
public enum MonoGyro.DHNIKGGCOFL
{
	// Fields
	public const MonoGyro.DHNIKGGCOFL Forward = 0;
	public const MonoGyro.DHNIKGGCOFL Reverse = 1;
}
public enum MonoHybridScrollerJoypadHelper.HLKCIHMHGAN
{
	// Fields
	public const MonoHybridScrollerJoypadHelper.HLKCIHMHGAN None = 0;
	public const MonoHybridScrollerJoypadHelper.HLKCIHMHGAN Toggle = 1;
	public const MonoHybridScrollerJoypadHelper.HLKCIHMHGAN Scroller = 2;
}
public enum MonoLayoutAdaptor.GMCOOPFHBNK
{
	// Fields
	public const MonoLayoutAdaptor.GMCOOPFHBNK Active = 0;
	public const MonoLayoutAdaptor.GMCOOPFHBNK PosX = 1;
	public const MonoLayoutAdaptor.GMCOOPFHBNK Width = 2;
	public const MonoLayoutAdaptor.GMCOOPFHBNK PosY = 3;
	public const MonoLayoutAdaptor.GMCOOPFHBNK Height = 4;
	public const MonoLayoutAdaptor.GMCOOPFHBNK Left = 5;
	public const MonoLayoutAdaptor.GMCOOPFHBNK Right = 6;
	public const MonoLayoutAdaptor.GMCOOPFHBNK Top = 7;
	public const MonoLayoutAdaptor.GMCOOPFHBNK Bottom = 8;
	public const MonoLayoutAdaptor.GMCOOPFHBNK Scale = 9;
}
public enum PDMEDMEANHI
{
	// Fields
	public const PDMEDMEANHI None = 0;
	public const PDMEDMEANHI Half = 1;
	public const PDMEDMEANHI Full = 2;
}
public enum MonoLoginScene.CGGEHOIBHKC
{
	// Fields
	public const MonoLoginScene.CGGEHOIBHKC Move = 0;
	public const MonoLoginScene.CGGEHOIBHKC TryToStop = 1;
	public const MonoLoginScene.CGGEHOIBHKC BeforeOpen = 2;
	public const MonoLoginScene.CGGEHOIBHKC AfterOpen = 3;
	public const MonoLoginScene.CGGEHOIBHKC Finish = 4;
}
public enum HCAOIPJHNLC
{
	// Fields
	public const HCAOIPJHNLC Horizontal = 0;
	public const HCAOIPJHNLC Vertical = 1;
	public const HCAOIPJHNLC None = 2;
}
public enum MonoMaskSlider.AMHIJMENNCA
{
	// Fields
	public const MonoMaskSlider.AMHIJMENNCA FullSpreadThenLoop = 0;
	public const MonoMaskSlider.AMHIJMENNCA CustomControl = 1;
}
public enum MonoMaskSlider.FEJFIAOMEDH
{
	// Fields
	public const MonoMaskSlider.FEJFIAOMEDH EnergyPluginFlashLoop = 0;
	public const MonoMaskSlider.FEJFIAOMEDH ShieldRecoverFlashLoop = 1;
}
public enum MonoModelRenderImage.EBLEFIIMGEM
{
	// Fields
	public const MonoModelRenderImage.EBLEFIIMGEM Avatar = 0;
	public const MonoModelRenderImage.EBLEFIIMGEM Weapon = 1;
	public const MonoModelRenderImage.EBLEFIIMGEM Team = 2;
}
public enum MonoMultiClickButton.ICLGCDIIDCA
{
	// Fields
	public const MonoMultiClickButton.ICLGCDIIDCA Normal = 0;
	public const MonoMultiClickButton.ICLGCDIIDCA Accelerate = 1;
}
public enum MonoMultiClickButton.MIFGJPMHLNO
{
	// Fields
	public const MonoMultiClickButton.MIFGJPMHLNO NotPressed = 0;
	public const MonoMultiClickButton.MIFGJPMHLNO ShortPressing = 1;
	public const MonoMultiClickButton.MIFGJPMHLNO LongPressing = 2;
}
public enum MonoNestedReusableList.MFOKCKEGBND
{
	// Fields
	public const MonoNestedReusableList.MFOKCKEGBND ViewportLoad = 0;
	public const MonoNestedReusableList.MFOKCKEGBND FullLoad = 1;
}
public enum MonoOraionokamiRewardRow.DLMBOOCEBGK
{
	// Fields
	public const MonoOraionokamiRewardRow.DLMBOOCEBGK None = 0;
	public const MonoOraionokamiRewardRow.DLMBOOCEBGK Taken = 1;
	public const MonoOraionokamiRewardRow.DLMBOOCEBGK CanGet = 2;
	public const MonoOraionokamiRewardRow.DLMBOOCEBGK CantGet = 3;
}
public enum MonoRectTransformAdaptor.DMBCBKFPCGK
{
	// Fields
	public const MonoRectTransformAdaptor.DMBCBKFPCGK Mobile = 0;
	public const MonoRectTransformAdaptor.DMBCBKFPCGK PC = 1;
	public const MonoRectTransformAdaptor.DMBCBKFPCGK PS = 2;
	public const MonoRectTransformAdaptor.DMBCBKFPCGK MobileJoystick = 3;
}
public enum MonoRegionJoypadController.NOGCHFKNHEM
{
	// Fields
	public const MonoRegionJoypadController.NOGCHFKNHEM RowScroller = 0;
	public const MonoRegionJoypadController.NOGCHFKNHEM NavigationNode = 1;
	public const MonoRegionJoypadController.NOGCHFKNHEM Invalid = 2;
}
public enum MonoRegionJoypadController.BDKJKNAHONE
{
	// Fields
	public const MonoRegionJoypadController.BDKJKNAHONE OnlyActiveBtnInList = 0;
	public const MonoRegionJoypadController.BDKJKNAHONE OnlyAcitveBtnInList_HideAllOthers = 1;
	public const MonoRegionJoypadController.BDKJKNAHONE Invalid = 2;
}
public enum MonoRouletteList.FGNEIDNDDAA
{
	// Fields
	public const MonoRouletteList.FGNEIDNDDAA FREE = 0;
	public const MonoRouletteList.FGNEIDNDDAA CENTER = 1;
	public const MonoRouletteList.FGNEIDNDDAA BEGIN = 2;
	public const MonoRouletteList.FGNEIDNDDAA END = 3;
}
public enum MonoRouletteList.EKPJNNJFDMN
{
	// Fields
	public const MonoRouletteList.EKPJNNJFDMN BY_FRAME = 0;
	public const MonoRouletteList.EKPJNNJFDMN PHYSICAL = 1;
}
public enum MonoSceneUISetup.LPCDJFMHMMH
{
	// Fields
	public const MonoSceneUISetup.LPCDJFMHMMH CutIn = 0;
	public const MonoSceneUISetup.LPCDJFMHMMH HomePage = 1;
	public const MonoSceneUISetup.LPCDJFMHMMH SubPage = 2;
	public const MonoSceneUISetup.LPCDJFMHMMH Home2Sub = 3;
	public const MonoSceneUISetup.LPCDJFMHMMH SelectNextSlot = 4;
}
public enum MonoSceneUISetup.ENDDDBMCHHM
{
	// Fields
	public const MonoSceneUISetup.ENDDDBMCHHM None = 0;
	public const MonoSceneUISetup.ENDDDBMCHHM Avatar = 1;
	public const MonoSceneUISetup.ENDDDBMCHHM Weapon = 2;
	public const MonoSceneUISetup.ENDDDBMCHHM Team = 3;
	public const MonoSceneUISetup.ENDDDBMCHHM WeaponDetail = 4;
	public const MonoSceneUISetup.ENDDDBMCHHM Relic = 5;
	public const MonoSceneUISetup.ENDDDBMCHHM AvatarPreview = 6;
	public const MonoSceneUISetup.ENDDDBMCHHM BattlePass = 7;
	public const MonoSceneUISetup.ENDDDBMCHHM Appearance = 8;
	public const MonoSceneUISetup.ENDDDBMCHHM Codex = 9;
	public const MonoSceneUISetup.ENDDDBMCHHM Coop = 10;
	public const MonoSceneUISetup.ENDDDBMCHHM CostumePreview = 11;
}
public enum MonoSceneUISetup.OJBCDBBHBJO
{
	// Fields
	public const MonoSceneUISetup.OJBCDBBHBJO Avatar = 0;
	public const MonoSceneUISetup.OJBCDBBHBJO Weapon = 1;
	public const MonoSceneUISetup.OJBCDBBHBJO Relic = 2;
	public const MonoSceneUISetup.OJBCDBBHBJO Skill = 3;
	public const MonoSceneUISetup.OJBCDBBHBJO Talent = 5;
	public const MonoSceneUISetup.OJBCDBBHBJO Fetters = 6;
	public const MonoSceneUISetup.OJBCDBBHBJO StarUp = 7;
	public const MonoSceneUISetup.OJBCDBBHBJO FlyCloak = 8;
}
public enum MonoSceneUISetup.OMILDJJBFII
{
	// Fields
	public const MonoSceneUISetup.OMILDJJBFII Init = 0;
	public const MonoSceneUISetup.OMILDJJBFII CutTo = 1;
	public const MonoSceneUISetup.OMILDJJBFII Ready = 2;
}
public enum KJEIDBFHPCG
{
	// Fields
	public const KJEIDBFHPCG Legacy = 0;
	public const KJEIDBFHPCG Camera = 1;
	public const KJEIDBFHPCG Skybox = 2;
	public const KJEIDBFHPCG Manekin = 3;
	public const KJEIDBFHPCG Enviro = 4;
	public const KJEIDBFHPCG Background = 5;
}
public enum ILBEAIFKHGB
{
	// Fields
	public const ILBEAIFKHGB Default = 0;
	public const ILBEAIFKHGB Intee = 1;
}
public enum MonoScrollRectAttachSlotPlugin.BKMGJMICMIE
{
	// Fields
	public const MonoScrollRectAttachSlotPlugin.BKMGJMICMIE SingleDamp = 0;
	public const MonoScrollRectAttachSlotPlugin.BKMGJMICMIE DoubleDamp = 1;
}
public enum MonoUISafeArea.FLKKODOOFJF
{
	// Fields
	public const MonoUISafeArea.FLKKODOOFJF NONE = 0;
	public const MonoUISafeArea.FLKKODOOFJF LEFT = 1;
	public const MonoUISafeArea.FLKKODOOFJF RIGHT = 2;
	public const MonoUISafeArea.FLKKODOOFJF TOP = 3;
	public const MonoUISafeArea.FLKKODOOFJF BOTTOM = 4;
}
public enum MonoMPTeamRow.KGLNCCEJAPC
{
	// Fields
	public const MonoMPTeamRow.KGLNCCEJAPC None = 0;
	public const MonoMPTeamRow.KGLNCCEJAPC Select = 1;
	public const MonoMPTeamRow.KGLNCCEJAPC UnSelect = 2;
}
public enum MonoMultiplayerRow.JIOEOHAHKMM
{
	// Fields
	public const MonoMultiplayerRow.JIOEOHAHKMM None = 0;
	public const MonoMultiplayerRow.JIOEOHAHKMM RequestButton = 1;
	public const MonoMultiplayerRow.JIOEOHAHKMM RequestingHint = 2;
	public const MonoMultiplayerRow.JIOEOHAHKMM UnreachableHint = 3;
}
public enum MonoMultiplayerRow.BGBJOKGFPON
{
	// Fields
	public const MonoMultiplayerRow.BGBJOKGFPON None = 0;
	public const MonoMultiplayerRow.BGBJOKGFPON Select = 1;
	public const MonoMultiplayerRow.BGBJOKGFPON UnSelect = 2;
}
public enum NIEDBDIOMKA
{
	// Fields
	public const NIEDBDIOMKA Normal = 0;
	public const NIEDBDIOMKA Hollow = 1;
	public const NIEDBDIOMKA Npc = 2;
}
public enum MonoHomeworldEditorPage.CKJAIMPEBDB
{
	// Fields
	public const MonoHomeworldEditorPage.CKJAIMPEBDB Default = 0;
	public const MonoHomeworldEditorPage.CKJAIMPEBDB UseBlueprint = 1;
	public const MonoHomeworldEditorPage.CKJAIMPEBDB SaveBlueprint = 2;
}
public enum OJHFMDPJFAI
{
	// Fields
	public const OJHFMDPJFAI Investigation = 0;
	public const OJHFMDPJFAI Blueprint = 1;
}
public enum RadialLayout.IJKBGFOBDCC
{
	// Fields
	public const RadialLayout.IJKBGFOBDCC FixedAngle = 0;
	public const RadialLayout.IJKBGFOBDCC FixedInterval = 1;
}
public enum CBHDLIBACCP
{
	// Fields
	public const CBHDLIBACCP PARTIAL_OUTSIDE_VIEW = 0;
	public const CBHDLIBACCP TOTALLY_OUTSIDE_VIEW = 1;
}
public enum MonoMallNormalItem.PIGEDHEJPFD
{
	// Fields
	public const MonoMallNormalItem.PIGEDHEJPFD Icon = 0;
	public const MonoMallNormalItem.PIGEDHEJPFD Image = 1;
}
public enum PHFIHGNBCFI
{
	// Fields
	public uint value__; // 0x10
	public const PHFIHGNBCFI MultistagePlay = 0;
	public const PHFIHGNBCFI Gallery = 1;
	public const PHFIHGNBCFI EnergySkillAvailable = 2;
	public const PHFIHGNBCFI MainPageFeatureDisable = 3;
}
public enum IEIDFMPJDMJ.GFIGCPHFOHP
{
	// Fields
	public const IEIDFMPJDMJ.GFIGCPHFOHP NotFinish = 0;
	public const IEIDFMPJDMJ.GFIGCPHFOHP CanTakeReward = 1;
	public const IEIDFMPJDMJ.GFIGCPHFOHP RewardTaken = 2;
	public const IEIDFMPJDMJ.GFIGCPHFOHP Lock = 3;
}
public enum MonoAttackModeBtn.AAJHBFOAAMI
{
	// Fields
	public const MonoAttackModeBtn.AAJHBFOAAMI Normal = 0;
	public const MonoAttackModeBtn.AAJHBFOAAMI Focus = 1;
	public const MonoAttackModeBtn.AAJHBFOAAMI NormalOnly = 2;
}
public enum GBNOPBNPOPE
{
	// Fields
	public const GBNOPBNPOPE Normal = 0;
	public const GBNOPBNPOPE HD = 1;
}
public enum ILCBJDGCLEJ
{
	// Fields
	public const ILCBJDGCLEJ NONE = 0;
	public const ILCBJDGCLEJ SUCCESS = 1;
	public const ILCBJDGCLEJ MISS = 2;
}
public enum PJJMELEPCBL
{
	// Fields
	public const PJJMELEPCBL DisableIcon = 0;
	public const PJJMELEPCBL UsingIcon = 1;
	public const PJJMELEPCBL CDGrp = 2;
	public const PJJMELEPCBL ItemIconAlpha = 3;
	public const PJJMELEPCBL NumAlpha = 4;
	public const PJJMELEPCBL NumEnough = 5;
	public const PJJMELEPCBL Progress = 6;
	public const PJJMELEPCBL ProgressFillMask = 7;
	public const PJJMELEPCBL MaxHaloGrp = 8;
	public const PJJMELEPCBL EnergyBar = 9;
	public const PJJMELEPCBL EnergyBarFillMask = 10;
	public const PJJMELEPCBL EnergyBarAnim = 11;
	public const PJJMELEPCBL BuffIcon = 12;
	public const PJJMELEPCBL FoodBestImg = 13;
	public const PJJMELEPCBL BadMaterial = 14;
	public const PJJMELEPCBL ActivityEffect = 15;
	public const PJJMELEPCBL MaxSkillPoint = 16;
	public const PJJMELEPCBL CurSkillPoint = 17;
	public const PJJMELEPCBL Count = 18;
}
public enum MonoQuickUseButton.HJGMNJOFPLE
{
	// Fields
	public const MonoQuickUseButton.HJGMNJOFPLE Normal = 0;
	public const MonoQuickUseButton.HJGMNJOFPLE Up = 1;
	public const MonoQuickUseButton.HJGMNJOFPLE Down = 2;
}
public enum MJPPCNGHHPN
{
	// Fields
	public const MJPPCNGHHPN V1 = 0;
	public const MJPPCNGHHPN V2 = 1;
	public const MJPPCNGHHPN V4 = 2;
}
public enum MonoDungeonCountDown.AGNKJCKADBE
{
	// Fields
	public const MonoDungeonCountDown.AGNKJCKADBE Decrease = 0;
	public const MonoDungeonCountDown.AGNKJCKADBE Increase = 1;
}
public enum MonoDungeonTabTip.EANBFGBOHKK
{
	// Fields
	public const MonoDungeonTabTip.EANBFGBOHKK On = 0;
	public const MonoDungeonTabTip.EANBFGBOHKK Off = 1;
	public const MonoDungeonTabTip.EANBFGBOHKK Finish = 2;
}
public enum MonoElementChargeBarSumo.KOGGDNNKOMP
{
	// Fields
	public const MonoElementChargeBarSumo.KOGGDNNKOMP DontKnow = 0;
	public const MonoElementChargeBarSumo.KOGGDNNKOMP Up = 1;
	public const MonoElementChargeBarSumo.KOGGDNNKOMP Down = 2;
}
public enum PKIBMMEOENJ
{
	// Fields
	public const PKIBMMEOENJ OnGoing = 0;
	public const PKIBMMEOENJ Finished = 1;
	public const PKIBMMEOENJ Failed = 2;
	public const PKIBMMEOENJ Pause = 3;
}
public enum MonoSlideSelect.MAKKCMBFNKH
{
	// Fields
	public const MonoSlideSelect.MAKKCMBFNKH Checking = 0;
	public const MonoSlideSelect.MAKKCMBFNKH PreSelect = 1;
	public const MonoSlideSelect.MAKKCMBFNKH Select = 2;
	public const MonoSlideSelect.MAKKCMBFNKH BreakOff = 3;
	public const MonoSlideSelect.MAKKCMBFNKH Scroll = 4;
	public const MonoSlideSelect.MAKKCMBFNKH ExitSelect = 5;
}
public enum MonoInLevelVirtualDialDialog.DJHFEDKNBDP
{
	// Fields
	public uint value__; // 0x10
	public const MonoInLevelVirtualDialDialog.DJHFEDKNBDP NONE = 0;
	public const MonoInLevelVirtualDialDialog.DJHFEDKNBDP HOMEWORLD_EDITOR = 1;
	public const MonoInLevelVirtualDialDialog.DJHFEDKNBDP GCG_HANDBOOK = 2;
}
public enum FMMAMDGDFPH
{
	// Fields
	public const FMMAMDGDFPH New = 0;
	public const FMMAMDGDFPH Replace = 1;
	public const FMMAMDGDFPH Complete = 2;
	public const FMMAMDGDFPH Fail = 3;
	public const FMMAMDGDFPH Remind = 4;
}
public enum MonoQuestSelectItem.BLKHLPIBIBA
{
	// Fields
	public const MonoQuestSelectItem.BLKHLPIBIBA Unfinished = 0;
	public const MonoQuestSelectItem.BLKHLPIBIBA Disable = 1;
	public const MonoQuestSelectItem.BLKHLPIBIBA Complete = 2;
}
public enum DGINHKAHADJ
{
	// Fields
	public const DGINHKAHADJ UnLoaded = 0;
	public const DGINHKAHADJ Loading = 1;
	public const DGINHKAHADJ Loaded = 2;
}
public enum DAFMPHIGOHP.JJONBFPEOGE
{
	// Fields
	public const DAFMPHIGOHP.JJONBFPEOGE All = 0;
	public const DAFMPHIGOHP.JJONBFPEOGE RGB = 1;
	public const DAFMPHIGOHP.JJONBFPEOGE Alpha = 2;
}
public enum JOLKKFOBMDA
{
	// Fields
	public const JOLKKFOBMDA LocationInfo = 0;
	public const JOLKKFOBMDA GadgetCreateInfo = 1;
}
public enum KHMBBFFJPDE
{
	// Fields
	public const KHMBBFFJPDE LocationInfo = 0;
	public const KHMBBFFJPDE CameraInfo = 1;
	public const KHMBBFFJPDE GadgetCreateInfo = 2;
	public const KHMBBFFJPDE FeatherInfo = 3;
	public const KHMBBFFJPDE SorushInfo = 4;
}
public enum EJPKFFJPBIA.EJKDDFOLMJC
{
	// Fields
	public const EJPKFFJPBIA.EJKDDFOLMJC ReleaseServerError = 0;
	public const EJPKFFJPBIA.EJKDDFOLMJC DebugServerError = 1;
	public const EJPKFFJPBIA.EJKDDFOLMJC DebugLocalError = 2;
	public const EJPKFFJPBIA.EJKDDFOLMJC DebugLocalWarning = 3;
	public const EJPKFFJPBIA.EJKDDFOLMJC None = 4;
	public const EJPKFFJPBIA.EJKDDFOLMJC Count = 5;
}
public enum EJPKFFJPBIA.LPJJAADPNBH
{
	// Fields
	public const EJPKFFJPBIA.LPJJAADPNBH No6_AttachDisappear = 0;
	public const EJPKFFJPBIA.LPJJAADPNBH No6_AttachDisappearInvalid = 1;
	public const EJPKFFJPBIA.LPJJAADPNBH No8_ModifierIndexError = 2;
	public const EJPKFFJPBIA.LPJJAADPNBH No10_AbilityCasterError = 3;
	public const EJPKFFJPBIA.LPJJAADPNBH No12_ModifierSetParentAbility = 4;
	public const EJPKFFJPBIA.LPJJAADPNBH No28_ModifierMixinInvalidError = 5;
	public const EJPKFFJPBIA.LPJJAADPNBH No28_ModifierMixinInvalidWarning = 6;
	public const EJPKFFJPBIA.LPJJAADPNBH No33_LocalGadgetAppearFromServer = 7;
	public const EJPKFFJPBIA.LPJJAADPNBH No34_DoOffStateOnAvatarReconnect = 8;
	public const EJPKFFJPBIA.LPJJAADPNBH Count = 9;
}
public enum EJPKFFJPBIA.BBEOOELLBOI
{
	// Fields
	public const EJPKFFJPBIA.BBEOOELLBOI PreAppear = 0;
	public const EJPKFFJPBIA.BBEOOELLBOI Appear = 1;
	public const EJPKFFJPBIA.BBEOOELLBOI WaitAppear = 2;
	public const EJPKFFJPBIA.BBEOOELLBOI AppearDelay = 3;
	public const EJPKFFJPBIA.BBEOOELLBOI PreDisappear = 4;
	public const EJPKFFJPBIA.BBEOOELLBOI Disappear = 5;
	public const EJPKFFJPBIA.BBEOOELLBOI Ready = 6;
	public const EJPKFFJPBIA.BBEOOELLBOI SetToBeRemove = 7;
}
public enum NHAECBLKEHG
{
	// Fields
	public const NHAECBLKEHG NotStarted = 0;
	public const NHAECBLKEHG Searching = 1;
	public const NHAECBLKEHG Empty = 2;
	public const NHAECBLKEHG Partial = 3;
	public const NHAECBLKEHG Complete = 4;
}
public enum FHDAGCOPEGE
{
	// Fields
	public const FHDAGCOPEGE Low = 0;
	public const FHDAGCOPEGE DynamicByNpc = 1;
	public const FHDAGCOPEGE KeepOrigin = 2;
}
public enum GHCIOMLOEGP
{
	// Fields
	public const GHCIOMLOEGP Add = 0;
	public const GHCIOMLOEGP Modify = 1;
}
public enum MCILMDGMFNK.MGPHIBNONAG
{
	// Fields
	public const MCILMDGMFNK.MGPHIBNONAG OnceTrue = 0;
	public const MCILMDGMFNK.MGPHIBNONAG OnceFalse = 1;
}
public enum LGCHOMIJFKO
{
	// Fields
	public const LGCHOMIJFKO NoTag = 0;
	public const LGCHOMIJFKO Limited = 1;
}
public enum EOFNHNEPDNK.AAIAJKIANEH
{
	// Fields
	public const EOFNHNEPDNK.AAIAJKIANEH Top = 0;
	public const EOFNHNEPDNK.AAIAJKIANEH Sum = 1;
}
public enum SimpleFixedBitStack.KCGINKEPKPH
{
	// Fields
	public const SimpleFixedBitStack.KCGINKEPKPH OnceTrue = 0;
	public const SimpleFixedBitStack.KCGINKEPKPH OnceFalse = 1;
}
public enum GNKGILPPCHP
{
	// Fields
	public const GNKGILPPCHP Avatar = 0;
	public const GNKGILPPCHP Monster = 1;
	public const GNKGILPPCHP NPC = 2;
	public const GNKGILPPCHP Gadget = 3;
}
public enum HLHABGKOCFO
{
	// Fields
	public const HLHABGKOCFO Base = 0;
	public const HLHABGKOCFO PC = 1;
	public const HLHABGKOCFO Mobile = 2;
	public const HLHABGKOCFO PS4Base = 3;
}
public enum MonoEnviroDynamicGOMove.BKEGJLOFKFJ
{
	// Fields
	public const MonoEnviroDynamicGOMove.BKEGJLOFKFJ Fixed = 0;
	public const MonoEnviroDynamicGOMove.BKEGJLOFKFJ Following = 1;
}
public enum MonoEnviroDynamicGOMove.PPODPBNICCO
{
	// Fields
	public const MonoEnviroDynamicGOMove.PPODPBNICCO Avatar = 0;
	public const MonoEnviroDynamicGOMove.PPODPBNICCO Camera = 1;
}
public enum MonoEnviroDynamicGOTransition.BEHACFBACCC
{
	// Fields
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC None = 0;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC MainLightColor = 1;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC AmbientSkyColor = 2;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC AmbientEquatorColor = 3;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC AmbientGroundColor = 4;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC TopFrontColor = 5;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC TopBackColor = 6;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC BottomFrontColor = 7;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC BottomBackColor = 8;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC CloudLightFrontColor = 9;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC CloudLightBackColor = 10;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC CloudDarkFrontColor = 11;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC CloudDarkBackColor = 12;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC CloudCoverage = 13;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC FogDensity = 14;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC FogTopColor = 15;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC FogBottomColor = 16;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC FogColor = 17;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC FarFogColor = 18;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC LinearFogEnd = 19;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC DensityClamp = 20;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC LinearHeightRange = 21;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC FogSwitchDistance = 22;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC EffCloudLightFrontColor = 23;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC EffCloudLightBackColor = 24;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC EffCloudDarkFrontColor = 25;
	public const MonoEnviroDynamicGOTransition.BEHACFBACCC EffCloudDarkBackColor = 26;
}
public enum MonoEnviroDynamicGOTransition.PEDBABEKEJH
{
	// Fields
	public const MonoEnviroDynamicGOTransition.PEDBABEKEJH Weather = 0;
	public const MonoEnviroDynamicGOTransition.PEDBABEKEJH Volume = 1;
	public const MonoEnviroDynamicGOTransition.PEDBABEKEJH Skill = 2;
}
public enum OOEIGKDBGJE
{
	// Fields
	public const OOEIGKDBGJE profile = 1;
	public const OOEIGKDBGJE weather = 2;
	public const OOEIGKDBGJE volume = 4;
	public const OOEIGKDBGJE skill = 8;
}
public enum EnviroSky.UpdateType
{
	// Fields
	public const EnviroSky.UpdateType Normal = 0;
	public const EnviroSky.UpdateType Never = 1;
	public const EnviroSky.UpdateType Always = 2;
}
public enum EnviroSky.FLNHINHKFDF
{
	// Fields
	public const EnviroSky.FLNHINHKFDF Normal = 0;
	public const EnviroSky.FLNHINHKFDF SceneDataFix = 1;
	public const EnviroSky.FLNHINHKFDF LevelTagFix = 2;
	public const EnviroSky.FLNHINHKFDF BakeForceTime = 3;
	public const EnviroSky.FLNHINHKFDF Count = 4;
}
public enum EnviroSky.CJKNGPHHKMI
{
	// Fields
	public const EnviroSky.CJKNGPHHKMI Area = 0;
	public const EnviroSky.CJKNGPHHKMI Profile = 1;
	public const EnviroSky.CJKNGPHHKMI Weather = 2;
	public const EnviroSky.CJKNGPHHKMI Volume = 3;
}
public enum EnviroSky.OBCAIAFMHCP
{
	// Fields
	public const EnviroSky.OBCAIAFMHCP None = 0;
	public const EnviroSky.OBCAIAFMHCP FadeIn = 1;
	public const EnviroSky.OBCAIAFMHCP FadeOut = 2;
	public const EnviroSky.OBCAIAFMHCP Lerp = 3;
}
public enum EnviroSky.ABDFMMDFPEP
{
	// Fields
	public const EnviroSky.ABDFMMDFPEP Default = 0;
	public const EnviroSky.ABDFMMDFPEP ESPTrack = 1;
	public const EnviroSky.ABDFMMDFPEP UI = 2;
	public const EnviroSky.ABDFMMDFPEP Count = 3;
}
public enum PEFBNLABPGJ.EMOIDCFKHEF
{
	// Fields
	public const PEFBNLABPGJ.EMOIDCFKHEF Diretion = 0;
	public const PEFBNLABPGJ.EMOIDCFKHEF Sphere = 1;
	public const PEFBNLABPGJ.EMOIDCFKHEF Cone = 2;
}
public enum LevelTimeManager.State
{
	// Fields
	public const LevelTimeManager.State Normal = 0;
	public const LevelTimeManager.State Clock = 1;
	public const LevelTimeManager.State Static = 2;
}
public enum LevelTimeManager.DayType
{
	// Fields
	public const LevelTimeManager.DayType Invalid = 0;
	public const LevelTimeManager.DayType Day = 1;
	public const LevelTimeManager.DayType Night = 2;
}
public enum LevelTimeManager.TimeProgressMode
{
	// Fields
	public const LevelTimeManager.TimeProgressMode None = 0;
	public const LevelTimeManager.TimeProgressMode Simulated = 1;
	public const LevelTimeManager.TimeProgressMode SystemTime = 2;
}
public enum LOCLHJMJNGP.BPBMPAPDMNG
{
	// Fields
	public const LOCLHJMJNGP.BPBMPAPDMNG PlayerStamina = 0;
	public const LOCLHJMJNGP.BPBMPAPDMNG ChangeAvatarCd = 1;
}
public enum MGEPHLOLLHF
{
	// Fields
	public const MGEPHLOLLHF GameManagerAwake = 0;
	public const MGEPHLOLLHF GameManageStart = 1;
	public const MGEPHLOLLHF LoginMainPageContextSetupView = 2;
	public const MGEPHLOLLHF ConnectGlobalDispatchServer = 3;
	public const MGEPHLOLLHF InitChroma = 4;
	public const MGEPHLOLLHF ChooseServer = 5;
	public const MGEPHLOLLHF BundleLoadFinish = 6;
	public const MGEPHLOLLHF OpenDoor = 7;
	public const MGEPHLOLLHF SceneInitFinish = 8;
	public const MGEPHLOLLHF AllEntityReady = 9;
	public const MGEPHLOLLHF ShaderWarmUpReady = 10;
	public const MGEPHLOLLHF AllFinish = 11;
	public const MGEPHLOLLHF BundleDownloadStartVerify = 12;
	public const MGEPHLOLLHF BundleDownloadFinishVerify = 13;
	public const MGEPHLOLLHF SDKLoginStart = 14;
	public const MGEPHLOLLHF SDKLoginEnd = 15;
}
public enum ENNBNMCNMMB.JPEBPIAJCIK
{
	// Fields
	public const ENNBNMCNMMB.JPEBPIAJCIK Default = 0;
	public const ENNBNMCNMMB.JPEBPIAJCIK Cutscene = 1;
	public const ENNBNMCNMMB.JPEBPIAJCIK Ability = 2;
	public const ENNBNMCNMMB.JPEBPIAJCIK Count = 3;
}
public enum ENNBNMCNMMB.MMFAFBAJDEB
{
	// Fields
	public const ENNBNMCNMMB.MMFAFBAJDEB General = 0;
	public const ENNBNMCNMMB.MMFAFBAJDEB Interaction = 1;
	public const ENNBNMCNMMB.MMFAFBAJDEB Cutscene = 2;
	public const ENNBNMCNMMB.MMFAFBAJDEB Count = 3;
}
public enum ENNBNMCNMMB.DPPLCEBKJEP
{
	// Fields
	public const ENNBNMCNMMB.DPPLCEBKJEP General = 0;
	public const ENNBNMCNMMB.DPPLCEBKJEP CityManeuver = 1;
	public const ENNBNMCNMMB.DPPLCEBKJEP Interaction = 2;
	public const ENNBNMCNMMB.DPPLCEBKJEP Homeworld = 3;
	public const ENNBNMCNMMB.DPPLCEBKJEP CustomLevel = 4;
	public const ENNBNMCNMMB.DPPLCEBKJEP CutScene = 5;
	public const ENNBNMCNMMB.DPPLCEBKJEP Count = 6;
}
public enum HEHGDPHFFEB.AEOCGIJBALA
{
	// Fields
	public const HEHGDPHFFEB.AEOCGIJBALA None = 0;
	public const HEHGDPHFFEB.AEOCGIJBALA VeryLow = 1;
	public const HEHGDPHFFEB.AEOCGIJBALA Low = 2;
	public const HEHGDPHFFEB.AEOCGIJBALA Mid = 3;
	public const HEHGDPHFFEB.AEOCGIJBALA High = 4;
}
public enum ABNOMNLLDPI.NKPJKINHBDI
{
	// Fields
	public const ABNOMNLLDPI.NKPJKINHBDI All = 0;
	public const ABNOMNLLDPI.NKPJKINHBDI Global = 1;
	public const ABNOMNLLDPI.NKPJKINHBDI Region = 2;
}
public enum DACGIAHMKKO.CBGHOCJAIKA
{
	// Fields
	public const DACGIAHMKKO.CBGHOCJAIKA Effect = 0;
	public const DACGIAHMKKO.CBGHOCJAIKA UI = 1;
	public const DACGIAHMKKO.CBGHOCJAIKA UISprite = 2;
	public const DACGIAHMKKO.CBGHOCJAIKA CommonMiscObj = 3;
}
public enum PGNDMCLDPME
{
	// Fields
	public const PGNDMCLDPME Normal = 0;
	public const PGNDMCLDPME DevLevel = 1;
	public const PGNDMCLDPME FrameHalt = 2;
	public const PGNDMCLDPME UIPage = 3;
	public const PGNDMCLDPME Tutorial = 4;
	public const PGNDMCLDPME Addict = 5;
	public const PGNDMCLDPME Ability = 6;
	public const PGNDMCLDPME Count = 7;
}
public enum KIDGEDJCPIP
{
	// Fields
	public const KIDGEDJCPIP Ladder = 0;
	public const KIDGEDJCPIP AirWall = 1;
	public const KIDGEDJCPIP NCGU_Low = 2;
	public const KIDGEDJCPIP NCGU_High = 3;
	public const KIDGEDJCPIP AirWall_PTNS = 4;
	public const KIDGEDJCPIP AirWall_NS = 5;
	public const KIDGEDJCPIP Climbable = 6;
	public const KIDGEDJCPIP Stair = 7;
	public const KIDGEDJCPIP SpecialWater = 8;
	public const KIDGEDJCPIP RainOccluder = 9;
	public const KIDGEDJCPIP DestoryRockGadget = 10;
	public const KIDGEDJCPIP NPCSkin = 11;
	public const KIDGEDJCPIP AirWall_Stay = 12;
	public const KIDGEDJCPIP ClimbableNarrow = 20;
}
public enum Miscs.VersionStringType
{
	// Fields
	public const Miscs.VersionStringType Full = 0;
	public const Miscs.VersionStringType Project = 1;
	public const Miscs.VersionStringType Resource = 2;
}
public enum Miscs.ChangeAvatarFailType
{
	// Fields
	public const Miscs.ChangeAvatarFailType NONE = 0;
	public const Miscs.ChangeAvatarFailType FAIL_AIM = 1;
	public const Miscs.ChangeAvatarFailType FAIL_CLIMB = 2;
	public const Miscs.ChangeAvatarFailType FAIL_FLY = 3;
	public const Miscs.ChangeAvatarFailType FAIL_JUMP = 4;
	public const Miscs.ChangeAvatarFailType FAIL_LADDER = 5;
	public const Miscs.ChangeAvatarFailType FAIL_SWIM = 6;
	public const Miscs.ChangeAvatarFailType FAIL_IN_PROCESS = 7;
	public const Miscs.ChangeAvatarFailType FAIL_LEVEL_FORBIDDEN = 8;
	public const Miscs.ChangeAvatarFailType FAIL_TARGETAVATAR = 9;
	public const Miscs.ChangeAvatarFailType FAIL_PERFORM = 10;
	public const Miscs.ChangeAvatarFailType FAIL_DEAD = 11;
	public const Miscs.ChangeAvatarFailType FAIL_COOLDOWN = 12;
}
public enum Miscs.PlatformCategory
{
	// Fields
	public const Miscs.PlatformCategory PLATFORM_CATEGORY_NONE = 0;
	public const Miscs.PlatformCategory PLATFORM_CATEFORY_PCM = 1;
	public const Miscs.PlatformCategory PLATFORM_CATEFORY_PSN = 2;
}
public enum Miscs.ServerType
{
	// Fields
	public const Miscs.ServerType None = 0;
	public const Miscs.ServerType USA = 1;
	public const Miscs.ServerType EUR = 2;
}
public enum Miscs.MediumDownloadDialogType
{
	// Fields
	public const Miscs.MediumDownloadDialogType NewComerLogin = 1;
	public const Miscs.MediumDownloadDialogType ProficientLogin = 2;
	public const Miscs.MediumDownloadDialogType NewComerFinishQuest = 3;
	public const Miscs.MediumDownloadDialogType CarrierNetwork = 4;
}
public enum Miscs.ReportEventType
{
	// Fields
	public const Miscs.ReportEventType DownloadReport = 100001;
	public const Miscs.ReportEventType GameQAReport = 100002;
	public const Miscs.ReportEventType WarningAlarm = 100003;
}
public enum Miscs.DownloadReportActionType
{
	// Fields
	public const Miscs.DownloadReportActionType DownloadChoice = 1011;
	public const Miscs.DownloadReportActionType DownloadResult = 1012;
}
public enum Miscs.GenshinCommonLogType
{
	// Fields
	public const Miscs.GenshinCommonLogType Default = 0;
	public const Miscs.GenshinCommonLogType Start = 1;
	public const Miscs.GenshinCommonLogType Loading = 2;
	public const Miscs.GenshinCommonLogType TCP = 3;
	public const Miscs.GenshinCommonLogType BundleDownload = 4;
}
public enum NJBPGKPGOFL
{
	// Fields
	public const NJBPGKPGOFL CULLING = 0;
	public const NJBPGKPGOFL RESERVE = 1;
}
public enum OLPGLDBOJAH
{
	// Fields
	public const OLPGLDBOJAH Awake = 0;
	public const OLPGLDBOJAH Start = 1;
	public const OLPGLDBOJAH OnEnable = 2;
	public const OLPGLDBOJAH OnDisable = 3;
	public const OLPGLDBOJAH Update = 4;
	public const OLPGLDBOJAH OnDestroy = 5;
	public const OLPGLDBOJAH BeginDrag = 6;
	public const OLPGLDBOJAH Drag = 7;
	public const OLPGLDBOJAH EndDrag = 8;
	public const OLPGLDBOJAH PointerDown = 9;
	public const OLPGLDBOJAH PointerUp = 10;
	public const OLPGLDBOJAH PointerClick = 11;
}
public enum MonoAttachItemFollow.MHLKLFLLCKH
{
	// Fields
	public const MonoAttachItemFollow.MHLKLFLLCKH Lerp = 0;
	public const MonoAttachItemFollow.MHLKLFLLCKH SmoothDamp = 1;
	public const MonoAttachItemFollow.MHLKLFLLCKH SuperSmoothLerp = 2;
}
public enum MonoEntityLayerCollisionHelper.INJHKCEMMFL
{
	// Fields
	public const MonoEntityLayerCollisionHelper.INJHKCEMMFL CharacterPushingExtra = 0;
}
public enum MonoLadderConfigHelper.OBKLKIPAEPO
{
	// Fields
	public const MonoLadderConfigHelper.OBKLKIPAEPO Ground = 0;
	public const MonoLadderConfigHelper.OBKLKIPAEPO Water = 1;
	public const MonoLadderConfigHelper.OBKLKIPAEPO Drop = 2;
}
public enum MonoRenderAnimHelper.HGHCPLICNCL
{
	// Fields
	public const MonoRenderAnimHelper.HGHCPLICNCL ResetDefault = 0;
	public const MonoRenderAnimHelper.HGHCPLICNCL None = 1;
}
public enum MonoRenderAnimBaseData.NBKGBCABJEP
{
	// Fields
	public const MonoRenderAnimBaseData.NBKGBCABJEP None = 0;
	public const MonoRenderAnimBaseData.NBKGBCABJEP Float = 1;
	public const MonoRenderAnimBaseData.NBKGBCABJEP Color = 2;
}
public enum DBMJKEAHAOK
{
	// Fields
	public const DBMJKEAHAOK None = 0;
	public const DBMJKEAHAOK Intensity = 1;
	public const DBMJKEAHAOK Range = 2;
	public const DBMJKEAHAOK Color = 3;
	public const DBMJKEAHAOK Rotation = 4;
	public const DBMJKEAHAOK Active = 5;
}
public enum AHOHIIHGEIB
{
	// Fields
	public const AHOHIIHGEIB None = 0;
	public const AHOHIIHGEIB PreTick = 1;
	public const AHOHIIHGEIB Tick = 2;
	public const AHOHIIHGEIB PostTick = 3;
}
public enum MonoEnviroLightColorComponent.PKAHAKOEKMG
{
	// Fields
	public const MonoEnviroLightColorComponent.PKAHAKOEKMG FollowMainLight = 0;
	public const MonoEnviroLightColorComponent.PKAHAKOEKMG Custom = 1;
}
public enum MonoEnviroLightIntensityComponent.LJNLFBACNJA
{
	// Fields
	public const MonoEnviroLightIntensityComponent.LJNLFBACNJA LocalGlimmer = 0;
	public const MonoEnviroLightIntensityComponent.LJNLFBACNJA GlobalGlimmer = 1;
}
public enum MonoEnviroLightRotationComponent.LBOEEEJMBGP
{
	// Fields
	public const MonoEnviroLightRotationComponent.LBOEEEJMBGP FollowMainLight = 0;
}
public enum GLKBOHGCIGI
{
	// Fields
	public const GLKBOHGCIGI Intensity = 0;
	public const GLKBOHGCIGI Range = 1;
}
public enum MonoEnviroGlimmer.PBCFDLCOCON
{
	// Fields
	public const MonoEnviroGlimmer.PBCFDLCOCON LocalGlimmer = 0;
	public const MonoEnviroGlimmer.PBCFDLCOCON GlobalGlimmer = 1;
}
public enum KDNLPDDDMLK
{
	// Fields
	public const KDNLPDDDMLK Natural = 0;
	public const KDNLPDDDMLK Artificial = 1;
}
public enum MonoSceneNavMeshObstacle.OFDMPMBDFCE
{
	// Fields
	public const MonoSceneNavMeshObstacle.OFDMPMBDFCE Stationary = 0;
	public const MonoSceneNavMeshObstacle.OFDMPMBDFCE StartMove = 1;
	public const MonoSceneNavMeshObstacle.OFDMPMBDFCE Move = 2;
	public const MonoSceneNavMeshObstacle.OFDMPMBDFCE EndMove = 3;
}
public enum MonoSceneNavMeshObstacle.GOMBHGHKMLK
{
	// Fields
	public const MonoSceneNavMeshObstacle.GOMBHGHKMLK PathFinding = 0;
	public const MonoSceneNavMeshObstacle.GOMBHGHKMLK ToTheMoon = 1;
	public const MonoSceneNavMeshObstacle.GOMBHGHKMLK Both = 2;
}
public enum HDCABNDDCCD
{
	// Fields
	public const HDCABNDDCCD NormalWater = 0;
	public const HDCABNDDCCD ElectricWater = 1;
	public const HDCABNDDCCD Count = 2;
}
public enum GANBOFDINCD.LANCOMEKBJF
{
	// Fields
	public const GANBOFDINCD.LANCOMEKBJF None = 0;
	public const GANBOFDINCD.LANCOMEKBJF Value = 1;
	public const GANBOFDINCD.LANCOMEKBJF Group = 2;
	public const GANBOFDINCD.LANCOMEKBJF Not = 3;
}
public enum GANBOFDINCD.BMNJNJDOIHG
{
	// Fields
	public const GANBOFDINCD.BMNJNJDOIHG None = 0;
	public const GANBOFDINCD.BMNJNJDOIHG Equal = 1;
	public const GANBOFDINCD.BMNJNJDOIHG NotEqual = 2;
	public const GANBOFDINCD.BMNJNJDOIHG Less = 3;
	public const GANBOFDINCD.BMNJNJDOIHG LessEqual = 4;
	public const GANBOFDINCD.BMNJNJDOIHG Greater = 5;
	public const GANBOFDINCD.BMNJNJDOIHG GreaterEqual = 6;
	public const GANBOFDINCD.BMNJNJDOIHG Contains = 7;
}
public enum PDGNAAOHALK
{
	// Fields
	public const PDGNAAOHALK Priority = 0;
	public const PDGNAAOHALK TypeOrder = 1;
	public const PDGNAAOHALK MinValue = 2;
	public const PDGNAAOHALK MaxValue = 3;
}
public enum BIBGPGNEKFF
{
	// Fields
	public const BIBGPGNEKFF VeryLow = 0;
	public const BIBGPGNEKFF Low = 1;
	public const BIBGPGNEKFF Middle = 2;
	public const BIBGPGNEKFF High = 3;
	public const BIBGPGNEKFF VeryHigh = 4;
}
public enum CGEONJENLCK
{
	// Fields
	public const CGEONJENLCK None = 0;
	public const CGEONJENLCK MengDe = 1;
	public const CGEONJENLCK LiYue = 2;
	public const CGEONJENLCK Inazuma = 3;
	public const CGEONJENLCK Chasm = 4;
	public const CGEONJENLCK Sumeru = 5;
}
public enum FODKMLDHGFG.KPBNNKGAGEE
{
	// Fields
	public const FODKMLDHGFG.KPBNNKGAGEE Default = 0;
	public const FODKMLDHGFG.KPBNNKGAGEE PC = 1;
	public const FODKMLDHGFG.KPBNNKGAGEE IOS = 2;
	public const FODKMLDHGFG.KPBNNKGAGEE Android = 3;
	public const FODKMLDHGFG.KPBNNKGAGEE PS4Base = 4;
	public const FODKMLDHGFG.KPBNNKGAGEE PS4Pro = 5;
	public const FODKMLDHGFG.KPBNNKGAGEE PS5 = 6;
}
public enum KBJFIGAHGKG.BDBBKCBANCB
{
	// Fields
	public const KBJFIGAHGKG.BDBBKCBANCB Sumeru = 0;
}
public enum DOPJPPEMLKK
{
	// Fields
	public const DOPJPPEMLKK None = 0;
	public const DOPJPPEMLKK Tree = 1;
	public const DOPJPPEMLKK Bush = 2;
	public const DOPJPPEMLKK Stone = 3;
	public const DOPJPPEMLKK TreeLeaf = 4;
	public const DOPJPPEMLKK EnviroLight = 5;
	public const DOPJPPEMLKK RoomLight = 6;
	public const DOPJPPEMLKK Chair = 7;
	public const DOPJPPEMLKK EnviroCityLight = 8;
	public const DOPJPPEMLKK CurveLight = 9;
	public const DOPJPPEMLKK Butterfly = 10;
	public const DOPJPPEMLKK EnvVolumeFog = 11;
	public const DOPJPPEMLKK TimedDither = 12;
	public const DOPJPPEMLKK EnviroLightController = 13;
	public const DOPJPPEMLKK Count = 14;
}
public enum SECTR_VolumeShape.KHDOOKOMKMC
{
	// Fields
	public const SECTR_VolumeShape.KHDOOKOMKMC Cluster = 0;
	public const SECTR_VolumeShape.KHDOOKOMKMC Shape = 1;
}
public enum ONIKAALPJHK
{
	// Fields
	public const ONIKAALPJHK Invalid = 0;
	public const ONIKAALPJHK Cave = 1;
	public const ONIKAALPJHK BattleArea = 2;
	public const ONIKAALPJHK Field = 3;
	public const ONIKAALPJHK StreamConfig = 4;
	public const ONIKAALPJHK StreamPortal = 5;
	public const ONIKAALPJHK NPCField = 6;
	public const ONIKAALPJHK Environment = 7;
	public const ONIKAALPJHK StreamHotspot = 8;
	public const ONIKAALPJHK EnvironmentDeathZone = 9;
	public const ONIKAALPJHK ShaderParam = 10;
	public const ONIKAALPJHK GlobalMisc = 11;
}
public enum HAMDPNNJCIJ
{
	// Fields
	public const HAMDPNNJCIJ Environment = 0;
	public const HAMDPNNJCIJ StreamConfig = 1;
}
public enum SECTR_BaseVolume.OACEMPECIAN
{
	// Fields
	public const SECTR_BaseVolume.OACEMPECIAN LOD = 0;
	public const SECTR_BaseVolume.OACEMPECIAN HLOD = 1;
	public const SECTR_BaseVolume.OACEMPECIAN HLODObject = 2;
	public const SECTR_BaseVolume.OACEMPECIAN Sector = 3;
}
public enum SECTR_LayerSizeType
{
	// Fields
	public const SECTR_LayerSizeType Size_1 = 0;
	public const SECTR_LayerSizeType Size_2 = 1;
	public const SECTR_LayerSizeType Size_4 = 2;
	public const SECTR_LayerSizeType Size_8 = 3;
	public const SECTR_LayerSizeType Size_16 = 4;
	public const SECTR_LayerSizeType Size_32 = 5;
	public const SECTR_LayerSizeType Size_64 = 6;
	public const SECTR_LayerSizeType Size_128 = 7;
	public const SECTR_LayerSizeType Size_256 = 8;
	public const SECTR_LayerSizeType Size_512 = 9;
	public const SECTR_LayerSizeType Size_1024 = 10;
}
public enum HKPJEIDOFPC
{
	// Fields
	public const HKPJEIDOFPC AsyncLoad = 0;
	public const HKPJEIDOFPC AsyncLoadReady = 1;
	public const HKPJEIDOFPC Release = 2;
}
public enum SECTR_VirtualPatternObj.NLEDHLELBPH
{
	// Fields
	public const SECTR_VirtualPatternObj.NLEDHLELBPH Normal = 0;
	public const SECTR_VirtualPatternObj.NLEDHLELBPH MoveRotOrScale = 1;
}
public enum BKFMGLBHOGM
{
	// Fields
	public const BKFMGLBHOGM StopStream = 0;
	public const BKFMGLBHOGM Unload = 1;
	public const BKFMGLBHOGM DoNothing = 2;
}
public enum FKIFAAPFKHG
{
	// Fields
	public const FKIFAAPFKHG None = 0;
	public const FKIFAAPFKHG Left = 1;
	public const FKIFAAPFKHG In = 2;
	public const FKIFAAPFKHG Right = 3;
}
public enum BIMIDLDLNGG
{
	// Fields
	public const BIMIDLDLNGG Normal = 0;
	public const BIMIDLDLNGG Tree = 1;
	public const BIMIDLDLNGG Grass = 2;
	public const BIMIDLDLNGG Stone = 3;
}
public enum LGKACIHOIJP
{
	// Fields
	public const LGKACIHOIJP Normal = 0;
	public const LGKACIHOIJP Entity = 1;
}
public enum SECTR_VolumeGlobalMiscData.GlobalMiscType
{
	// Fields
	public const SECTR_VolumeGlobalMiscData.GlobalMiscType HizScaleBound = 1;
	public const SECTR_VolumeGlobalMiscData.GlobalMiscType Count = 2;
}
public enum SECTR_VolumeGlobalMiscData.GlobalMiscDataType
{
	// Fields
	public const SECTR_VolumeGlobalMiscData.GlobalMiscDataType Float = 0;
	public const SECTR_VolumeGlobalMiscData.GlobalMiscDataType Int = 1;
	public const SECTR_VolumeGlobalMiscData.GlobalMiscDataType Vector2 = 2;
	public const SECTR_VolumeGlobalMiscData.GlobalMiscDataType Vector3 = 3;
	public const SECTR_VolumeGlobalMiscData.GlobalMiscDataType Vector4 = 4;
}
public enum SECTR_VolumeEnvironmentDebug.FGGMOAJAHAC
{
	// Fields
	public const SECTR_VolumeEnvironmentDebug.FGGMOAJAHAC In = 0;
	public const SECTR_VolumeEnvironmentDebug.FGGMOAJAHAC Out = 1;
}
public enum MCBKAIAILLM.GOKMOGMDFBP
{
	// Fields
	public uint value__; // 0x10
	public const MCBKAIAILLM.GOKMOGMDFBP SCENE_TIME_PAUSE = 0;
	public const MCBKAIAILLM.GOKMOGMDFBP LOCKED = 1;
}
public enum WindFlag.KJLNCLICCFB
{
	// Fields
	public const WindFlag.KJLNCLICCFB None = 0;
	public const WindFlag.KJLNCLICCFB Low = 1;
	public const WindFlag.KJLNCLICCFB Medium = 2;
	public const WindFlag.KJLNCLICCFB High = 3;
	public const WindFlag.KJLNCLICCFB ExtraHigh = 4;
}
public enum AJMLHOIGKOM
{
	// Fields
	public const AJMLHOIGKOM Off = 0;
	public const AJMLHOIGKOM Chinese = 1;
	public const AJMLHOIGKOM Japanese = 2;
	public const AJMLHOIGKOM English = 3;
	public const AJMLHOIGKOM Korean = 4;
	public const AJMLHOIGKOM Auto = 100;
	public const AJMLHOIGKOM AudioSetting = 101;
}
public enum MKEEHMPLCBJ
{
	// Fields
	public const MKEEHMPLCBJ Auto = 0;
	public const MKEEHMPLCBJ Integrity = 1;
}
public enum DFBHLJNBDFA
{
	// Fields
	public const DFBHLJNBDFA None = 0;
	public const DFBHLJNBDFA Debug = 1;
	public const DFBHLJNBDFA Quest = 2;
	public const DFBHLJNBDFA QuestCustom = 3;
	public const DFBHLJNBDFA Talk = 4;
	public const DFBHLJNBDFA Home = 5;
	public const DFBHLJNBDFA Card = 6;
	public const DFBHLJNBDFA TalkPreperform = 7;
	public const DFBHLJNBDFA Daily = 8;
	public const DFBHLJNBDFA ForceCache = 9;
	public const DFBHLJNBDFA AnimeGroup = 10;
}
public enum NCPNIFGIBDB
{
	// Fields
	public const NCPNIFGIBDB Default = 0;
	public const NCPNIFGIBDB Avatar = 1;
	public const NCPNIFGIBDB HeroAvatar = 2;
	public const NCPNIFGIBDB Manekin = 3;
	public const NCPNIFGIBDB Monster = 4;
	public const NCPNIFGIBDB ItemGadget = 5;
	public const NCPNIFGIBDB Gadget = 6;
	public const NCPNIFGIBDB TransPoint = 7;
	public const NCPNIFGIBDB Level = 8;
}
public enum ECNNIIBBNCB.KILGCCHKFOJ
{
	// Fields
	public const ECNNIIBBNCB.KILGCCHKFOJ Released = 0;
	public const ECNNIIBBNCB.KILGCCHKFOJ Preloading = 1;
	public const ECNNIIBBNCB.KILGCCHKFOJ Preloaded = 2;
}
public enum JBHAFGKCEAM
{
	// Fields
	public const JBHAFGKCEAM INVALID = -1;
	public const JBHAFGKCEAM FIRE_EFFECT_GOD = 0;
	public const JBHAFGKCEAM FIRE_EFFECT_NORMAL = 1;
	public const JBHAFGKCEAM FIRE_EFFECT_LOW = 2;
	public const JBHAFGKCEAM ATTACH_EFFECT_GOD = 3;
	public const JBHAFGKCEAM ATTACH_EFFECT_NORMAL = 4;
	public const JBHAFGKCEAM ATTACH_EFFECT_LOW = 5;
	public const JBHAFGKCEAM SYNC_CREATE = 6;
	public const JBHAFGKCEAM ASYNC_CREATE = 7;
	public const JBHAFGKCEAM UI_SPAWN = 8;
	public const JBHAFGKCEAM COUNT = 9;
}
public enum JCGHGAADOKG.JCMMELKGBIM
{
	// Fields
	public const JCGHGAADOKG.JCMMELKGBIM INVALID = -1;
	public const JCGHGAADOKG.JCMMELKGBIM ATTACH = 0;
	public const JCGHGAADOKG.JCMMELKGBIM DEATTACH = 1;
	public const JCGHGAADOKG.JCMMELKGBIM FIRE = 2;
}
public enum MJBCLANGLCG.EKDDPKNNMCD
{
	// Fields
	public const MJBCLANGLCG.EKDDPKNNMCD Running = 0;
	public const MJBCLANGLCG.EKDDPKNNMCD Finished = 1;
	public const MJBCLANGLCG.EKDDPKNNMCD OutTime = 2;
}
public enum PMPEHMDCCAK
{
	// Fields
	public const PMPEHMDCCAK ROTATE = 0;
	public const PMPEHMDCCAK ZOOM = 1;
	public const PMPEHMDCCAK MOVE = 2;
	public const PMPEHMDCCAK RESET_BACKWARD = 3;
	public const PMPEHMDCCAK LERP_BACKWARD = 4;
	public const PMPEHMDCCAK INIT_BACKWARD = 5;
	public const PMPEHMDCCAK SET_KEEP_ROTATION = 6;
	public const PMPEHMDCCAK CLEAR_FILTER = 7;
	public const PMPEHMDCCAK SET_FOV = 8;
	public const PMPEHMDCCAK SET_SHIFT = 9;
	public const PMPEHMDCCAK SET_REF_ANCHOR_POS = 10;
	public const PMPEHMDCCAK SET_CAM_POS = 11;
	public const PMPEHMDCCAK SET_CLAMP_ROTATE_PITCH = 12;
	public const PMPEHMDCCAK SET_CLAMP_ZOOM = 13;
	public const PMPEHMDCCAK SET_CAN_FREE_MOVE = 14;
	public const PMPEHMDCCAK MOVE_ROTATE_VERTICALLY = 15;
	public const PMPEHMDCCAK INIT_LERPTOVIEWBIASTARGET = 16;
	public const PMPEHMDCCAK LERP_VIEWBIASTARGET = 17;
	public const PMPEHMDCCAK LERP_FORWARD_DELTA = 18;
	public const PMPEHMDCCAK MOVE_VERTICAL = 19;
	public const PMPEHMDCCAK REFRESH_KEEP_SPHERICAL = 20;
	public const PMPEHMDCCAK RESET_SPHERICAL = 21;
}
public enum CEDCDICACBL.BJOOFGMEPPM
{
	// Fields
	public const CEDCDICACBL.BJOOFGMEPPM Off = 0;
	public const CEDCDICACBL.BJOOFGMEPPM On = 1;
}
public enum AOCFDEONBOD
{
	// Fields
	public const AOCFDEONBOD INVALID = -1;
	public const AOCFDEONBOD NORMAL = 0;
	public const AOCFDEONBOD LOCKING = 1;
	public const AOCFDEONBOD BOSS_ADJUST = 2;
	public const AOCFDEONBOD CINEMACHINE = 3;
	public const AOCFDEONBOD STORY = 4;
	public const AOCFDEONBOD FOCUS = 5;
	public const AOCFDEONBOD PHOTOGRAPH = 6;
	public const AOCFDEONBOD HOMEWORLD = 7;
	public const AOCFDEONBOD FIRSTPERSON = 8;
	public const AOCFDEONBOD BOAT_ADJUST = 9;
	public const AOCFDEONBOD GADGET_ADJUST = 10;
	public const AOCFDEONBOD CUSTOMLEVEL = 11;
	public const AOCFDEONBOD GCG_CARD = 12;
	public const AOCFDEONBOD SPLINE = 13;
	public const AOCFDEONBOD FOLLOWTRANS = 14;
	public const AOCFDEONBOD FIXEDPOINT = 15;
	public const AOCFDEONBOD BoxRange = 16;
	public const AOCFDEONBOD LOCKINGV2 = 17;
	public const AOCFDEONBOD ORBITENTITY = 18;
	public const AOCFDEONBOD LOCKINGV3 = 19;
	public const AOCFDEONBOD SIDE_SCROLLER = 20;
	public const AOCFDEONBOD AIRCRAFT = 21;
}
public enum LJAGEOBCOOA
{
	// Fields
	public const LJAGEOBCOOA Level = 0;
	public const LJAGEOBCOOA Avatar = 1;
}
public enum NLIAPPONNAN
{
	// Fields
	public const NLIAPPONNAN DEFAULT = 0;
	public const NLIAPPONNAN SWITCH_LOCKINGV3 = 1;
}
public enum BFACPNLLJEM.CCGJBAKIHGC
{
	// Fields
	public const BFACPNLLJEM.CCGJBAKIHGC Idle = 0;
	public const BFACPNLLJEM.CCGJBAKIHGC Up = 1;
	public const BFACPNLLJEM.CCGJBAKIHGC Down = 2;
}
public enum NHAEIFFCLGN.CEJLKFGKAPI
{
	// Fields
	public const NHAEIFFCLGN.CEJLKFGKAPI None = 0;
	public const NHAEIFFCLGN.CEJLKFGKAPI Spring = 1;
	public const NHAEIFFCLGN.CEJLKFGKAPI Linear = 2;
}
public enum IKDGHJKGHIF.HFHANDIGJJK
{
	// Fields
	public const IKDGHJKGHIF.HFHANDIGJJK Common = 0;
	public const IKDGHJKGHIF.HFHANDIGJJK ActivityV32 = 1;
}
public enum DFBHLAHDPLN.NIHCNGDKKBJ
{
	// Fields
	public const DFBHLAHDPLN.NIHCNGDKKBJ normal = 0;
	public const DFBHLAHDPLN.NIHCNGDKKBJ reduce0 = 1;
	public const DFBHLAHDPLN.NIHCNGDKKBJ reduce1 = 2;
	public const DFBHLAHDPLN.NIHCNGDKKBJ reduce2 = 3;
	public const DFBHLAHDPLN.NIHCNGDKKBJ StopSafe = 4;
	public const DFBHLAHDPLN.NIHCNGDKKBJ StopCheck = 5;
	public const DFBHLAHDPLN.NIHCNGDKKBJ StopWTF = 6;
}
public enum BBIFHJJGHGG.NNBAMGHFNMG
{
	// Fields
	public const BBIFHJJGHGG.NNBAMGHFNMG ToLeft = 0;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToRight = 1;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToDown = 2;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToUp = 3;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToLeftUp = 4;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToLeftDown = 5;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToRightUp = 6;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToRightDown = 7;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToStraightForward = 8;
	public const BBIFHJJGHGG.NNBAMGHFNMG ToStraightBackward = 9;
	public const BBIFHJJGHGG.NNBAMGHFNMG NoMove = 10;
}
public enum BBIFHJJGHGG.IBCMDJALPAP
{
	// Fields
	public const BBIFHJJGHGG.IBCMDJALPAP NoHit = 0;
	public const BBIFHJJGHGG.IBCMDJALPAP Avoid = 1;
}
public enum BBIFHJJGHGG.PCOHJIGILON
{
	// Fields
	public const BBIFHJJGHGG.PCOHJIGILON None = 0;
	public const BBIFHJJGHGG.PCOHJIGILON NormalPush = 1;
	public const BBIFHJJGHGG.PCOHJIGILON ManualPush = 2;
	public const BBIFHJJGHGG.PCOHJIGILON PredictPush = 3;
}
public enum BBIFHJJGHGG.FLONNNIEIBD
{
	// Fields
	public const BBIFHJJGHGG.FLONNNIEIBD SlowLerpingBack = 0;
	public const BBIFHJJGHGG.FLONNNIEIBD FastLerpingBack = 1;
	public const BBIFHJJGHGG.FLONNNIEIBD None = 2;
}
public enum BBIFHJJGHGG.BLEINDLMNGB
{
	// Fields
	public const BBIFHJJGHGG.BLEINDLMNGB None = 0;
	public const BBIFHJJGHGG.BLEINDLMNGB RecoverElevation = 1;
}
public enum NCJJELDAJFF.KELIBDEAGHD
{
	// Fields
	public const NCJJELDAJFF.KELIBDEAGHD Idle = 0;
	public const NCJJELDAJFF.KELIBDEAGHD Moving = 1;
	public const NCJJELDAJFF.KELIBDEAGHD Finish = 2;
}
public enum CNBLJCAJEKC
{
	// Fields
	public const CNBLJCAJEKC Null = 0;
	public const CNBLJCAJEKC Catmull = 1;
	public const CNBLJCAJEKC Bezier = 2;
}
public enum EDFEGNICDLD
{
	// Fields
	public const EDFEGNICDLD Rotation = 0;
	public const EDFEGNICDLD Target = 1;
}
public enum GFOCEOCPPEL
{
	// Fields
	public const GFOCEOCPPEL None = 0;
	public const GFOCEOCPPEL CombatStateParam = 1;
	public const GFOCEOCPPEL FarmodeMixin = 2;
	public const GFOCEOCPPEL SceneLook = 3;
}
public enum HACHIDMGCIM
{
	// Fields
	public const HACHIDMGCIM Normal = 0;
	public const HACHIDMGCIM Parallel = 1;
	public const HACHIDMGCIM Cinema = 2;
}
public enum CMGHANNKMJO
{
	// Fields
	public const CMGHANNKMJO Straight = 0;
	public const CMGHANNKMJO Sphere = 1;
	public const CMGHANNKMJO Curve = 2;
	public const CMGHANNKMJO StartFromHere = 3;
	public const CMGHANNKMJO KeepDirection = 4;
	public const CMGHANNKMJO GoToAvatarBackward = 5;
	public const CMGHANNKMJO Cut = 6;
	public const CMGHANNKMJO StraightKeep = 7;
	public const CMGHANNKMJO KeepSpecial = 8;
	public const CMGHANNKMJO KeepDirection_Straight = 9;
}
public enum FBPMCKLFLBA
{
	// Fields
	public const FBPMCKLFLBA None = 0;
	public const FBPMCKLFLBA Entering = 1;
	public const FBPMCKLFLBA Acting = 2;
	public const FBPMCKLFLBA Exiting = 3;
}
public enum MNHBJEMGGGJ
{
	// Fields
	public const MNHBJEMGGGJ Empty = 0;
	public const MNHBJEMGGGJ Initialize = 1;
	public const MNHBJEMGGGJ FollowRotate = 3;
	public const MNHBJEMGGGJ Zoom = 9;
	public const MNHBJEMGGGJ MotionController = 10;
	public const MNHBJEMGGGJ ProtectGround1 = 12;
	public const MNHBJEMGGGJ FollowRotateParallel = 20;
	public const MNHBJEMGGGJ Slope6 = 27;
	public const MNHBJEMGGGJ LockingTarget = 28;
	public const MNHBJEMGGGJ Story = 29;
	public const MNHBJEMGGGJ CameraShake2 = 31;
	public const MNHBJEMGGGJ BoatAdjust = 32;
	public const MNHBJEMGGGJ Cinemachine = 33;
	public const MNHBJEMGGGJ Recover = 34;
	public const MNHBJEMGGGJ Focus = 35;
	public const MNHBJEMGGGJ GcgCardStatic = 36;
	public const MNHBJEMGGGJ GiantBossAdjust = 37;
	public const MNHBJEMGGGJ GadgetAdjust = 38;
	public const MNHBJEMGGGJ Photo = 39;
	public const MNHBJEMGGGJ FixedPoint = 40;
	public const MNHBJEMGGGJ BoxRange = 41;
	public const MNHBJEMGGGJ OrbitEntity = 42;
	public const MNHBJEMGGGJ LockingV3 = 45;
	public const MNHBJEMGGGJ Aircraft = 46;
	public const MNHBJEMGGGJ end = 47;
}
public enum ValueRangeAttribute.typeEnum
{
	// Fields
	public const ValueRangeAttribute.typeEnum Int = 0;
	public const ValueRangeAttribute.typeEnum Float = 1;
	public const ValueRangeAttribute.typeEnum Bool = 2;
	public const ValueRangeAttribute.typeEnum EaseType = 3;
}
public enum IFENFIOOBPO
{
	// Fields
	public const IFENFIOOBPO Left = 0;
	public const IFENFIOOBPO Right = 1;
}
public enum MMDELHMJAOM
{
	// Fields
	public const MMDELHMJAOM START = 0;
	public const MMDELHMJAOM STOP = 1;
	public const MMDELHMJAOM CHANGE_ROUTE = 2;
}
public enum BFNEFGGPCKI
{
	// Fields
	public const BFNEFGGPCKI TransformOnly = 0;
	public const BFNEFGGPCKI ColliderRoot = 1;
	public const BFNEFGGPCKI Animation = 2;
}
public enum NGHBEIGAGJI
{
	// Fields
	public const NGHBEIGAGJI SAFE = 0;
	public const NGHBEIGAGJI ALMOST_IN_OR_OUT_WATER = 1;
	public const NGHBEIGAGJI BOUND_EXCEEDED = 2;
}
public enum LMFBKIDIODF
{
	// Fields
	public const LMFBKIDIODF None = 0;
	public const LMFBKIDIODF Normal = 1;
	public const LMFBKIDIODF Standby = 2;
}
public enum IBOIJBNDMAP
{
	// Fields
	public const IBOIJBNDMAP Others = 0;
	public const IBOIJBNDMAP Normal = 1;
	public const IBOIJBNDMAP Air = 2;
	public const IBOIJBNDMAP Angle = 3;
}
public enum BBLDGIIAGHF.BLADHIOCMLK
{
	// Fields
	public const BBLDGIIAGHF.BLADHIOCMLK Idle = 0;
	public const BBLDGIIAGHF.BLADHIOCMLK Walk = 1;
	public const BBLDGIIAGHF.BLADHIOCMLK Run = 2;
	public const BBLDGIIAGHF.BLADHIOCMLK Climb = 3;
	public const BBLDGIIAGHF.BLADHIOCMLK ClimbIdle = 4;
	public const BBLDGIIAGHF.BLADHIOCMLK Sprint = 5;
	public const BBLDGIIAGHF.BLADHIOCMLK SwimIdle = 6;
	public const BBLDGIIAGHF.BLADHIOCMLK SwimMove = 7;
	public const BBLDGIIAGHF.BLADHIOCMLK SwimDash = 8;
	public const BBLDGIIAGHF.BLADHIOCMLK BackWard = 9;
	public const BBLDGIIAGHF.BLADHIOCMLK CombatAir = 10;
	public const BBLDGIIAGHF.BLADHIOCMLK CrouchIdle = 11;
	public const BBLDGIIAGHF.BLADHIOCMLK CrouchMove = 12;
	public const BBLDGIIAGHF.BLADHIOCMLK CombatAirMove = 13;
	public const BBLDGIIAGHF.BLADHIOCMLK LadderIdle = 20;
	public const BBLDGIIAGHF.BLADHIOCMLK LadderMove = 21;
	public const BBLDGIIAGHF.BLADHIOCMLK FreeStyle = 99;
}
public enum BBLDGIIAGHF.NCKHDFBKFKB
{
	// Fields
	public const BBLDGIIAGHF.NCKHDFBKFKB Idle = 0;
	public const BBLDGIIAGHF.NCKHDFBKFKB Forward = 1;
	public const BBLDGIIAGHF.NCKHDFBKFKB Backward = 2;
	public const BBLDGIIAGHF.NCKHDFBKFKB Left = 3;
	public const BBLDGIIAGHF.NCKHDFBKFKB Right = 4;
}
public enum BBLDGIIAGHF.IELHGDFBGJI
{
	// Fields
	public const BBLDGIIAGHF.IELHGDFBGJI MoveKeep = 0;
	public const BBLDGIIAGHF.IELHGDFBGJI MoveToStandby = 1;
	public const BBLDGIIAGHF.IELHGDFBGJI Slip = 2;
	public const BBLDGIIAGHF.IELHGDFBGJI Air = 3;
	public const BBLDGIIAGHF.IELHGDFBGJI Swim = 4;
}
public enum GJLCLJNIKJD.OHPDLLDPPOL
{
	// Fields
	public const GJLCLJNIKJD.OHPDLLDPPOL Climb = 0;
	public const GJLCLJNIKJD.OHPDLLDPPOL FlyGroundDistCheck = 1;
	public const GJLCLJNIKJD.OHPDLLDPPOL EnableLand = 2;
	public const GJLCLJNIKJD.OHPDLLDPPOL Frozen = 3;
	public const GJLCLJNIKJD.OHPDLLDPPOL EnableFly = 4;
}
public enum GEKNLIPFNMK
{
	// Fields
	public const GEKNLIPFNMK None = 0;
	public const GEKNLIPFNMK Avatar = 1;
	public const GEKNLIPFNMK Weapon = 2;
	public const GEKNLIPFNMK Relic = 3;
	public const GEKNLIPFNMK Team = 4;
}
public enum NAGLBIGNPDA
{
	// Fields
	public const NAGLBIGNPDA UnInited = 0;
	public const NAGLBIGNPDA Disabled = 1;
	public const NAGLBIGNPDA DieAnimation = 2;
	public const NAGLBIGNPDA DieRagdoll = 3;
	public const NAGLBIGNPDA Down = 4;
	public const NAGLBIGNPDA GetUp = 5;
	public const NAGLBIGNPDA PrefabNotLoaded = 6;
}
public enum BindingData.Type
{
	// Fields
	public const BindingData.Type Float = 0;
	public const BindingData.Type Color = 1;
}
public enum LightProbeVolumeType
{
	// Fields
	public const LightProbeVolumeType Fixed = 0;
	public const LightProbeVolumeType Float = 1;
}
public enum MusicGamePlayMode
{
	// Fields
	public const MusicGamePlayMode Arc = 0;
	public const MusicGamePlayMode Vertical = 1;
}
public enum MusicGameNotifyType
{
	// Fields
	public const MusicGameNotifyType MusicGamePlayerUpdate = 0;
	public const MusicGameNotifyType MusicGamePlayerPause = 1;
	public const MusicGameNotifyType MusicGamePlayerResume = 2;
	public const MusicGameNotifyType MusicGamePlayerFinish = 3;
	public const MusicGameNotifyType MusicGamePlayerAllNotesFinish = 4;
	public const MusicGameNotifyType MusicGamePlayerRefresh = 5;
	public const MusicGameNotifyType BeatMapPosInfoRefresh = 6;
	public const MusicGameNotifyType NoteHitScore = 7;
	public const MusicGameNotifyType NoteHitRange = 8;
	public const MusicGameNotifyType NoteMiss = 9;
	public const MusicGameNotifyType CalibrationHit = 10;
	public const MusicGameNotifyType ScoreUpdate = 11;
	public const MusicGameNotifyType DelayUpdate = 12;
	public const MusicGameNotifyType SpeedUpdate = 13;
	public const MusicGameNotifyType NoteRefresh = 14;
	public const MusicGameNotifyType NoteInserted = 15;
	public const MusicGameNotifyType NoteRemoved = 16;
	public const MusicGameNotifyType TimeLineCursorSelect = 17;
	public const MusicGameNotifyType TimeLineCursorDeselect = 18;
	public const MusicGameNotifyType Save = 19;
	public const MusicGameNotifyType BeatMapSaved = 20;
	public const MusicGameNotifyType CannotInsertNote = 21;
	public const MusicGameNotifyType CannotAddLongPressNote = 22;
	public const MusicGameNotifyType NoteTotalCountLimitReached = 23;
	public const MusicGameNotifyType NoteRegionalCountLimitReached = 24;
	public const MusicGameNotifyType NoteTimeLimitReached = 25;
	public const MusicGameNotifyType MakePlayTimeVisible = 26;
	public const MusicGameNotifyType ClearEditor = 27;
	public const MusicGameNotifyType ClearEditorInput = 28;
	public const MusicGameNotifyType DragForceEnd = 29;
	public const MusicGameNotifyType SetHitPointKey = 30;
	public const MusicGameNotifyType RefreshHitPointKeys = 31;
	public const MusicGameNotifyType ToggleMenu = 32;
	public const MusicGameNotifyType CloseEditor = 33;
	public const MusicGameNotifyType PlayPageOpenned = 34;
	public const MusicGameNotifyType PlayPageClosed = 35;
	public const MusicGameNotifyType DisableInputAdapter = 36;
	public const MusicGameNotifyType RefreshStyle = 37;
}
public enum NoteStyle.StyleType
{
	// Fields
	public const NoteStyle.StyleType Single = 0;
	public const NoteStyle.StyleType LongPress = 1;
	public const NoteStyle.StyleType LongPressTerminal = 2;
}
public enum NoteState
{
	// Fields
	public const NoteState Normal = 0;
	public const NoteState Missed = 1;
	public const NoteState Hidden = 2;
	public const NoteState Holding = 3;
}
public enum HitRange.RangeType
{
	// Fields
	public const HitRange.RangeType None = 0;
	public const HitRange.RangeType Perfect = 1;
	public const HitRange.RangeType Great = 2;
	public const HitRange.RangeType Miss = 3;
}
public enum EditorAction
{
	// Fields
	public const EditorAction AddSingleNote = 0;
	public const EditorAction AddLongPressNote = 1;
	public const EditorAction RemoveNote = 2;
	public const EditorAction PointerDown = 3;
	public const EditorAction PointerUp = 4;
	public const EditorAction BeginDrag = 5;
	public const EditorAction EndDrag = 6;
	public const EditorAction Drag = 7;
	public const EditorAction RemoveNoteShortCut = 8;
	public const EditorAction ReleaseLongPressTerminal = 9;
}
public enum PluginType
{
	// Fields
	public const PluginType None = 0;
	public const PluginType PreviewButton = 1;
	public const PluginType DescriptionButton = 2;
	public const PluginType ConsumeUnits = 3;
	public const PluginType Title = 4;
	public const PluginType Desc = 5;
	public const PluginType TotalScore = 6;
	public const PluginType SpecialMechanic = 7;
	public const PluginType SelectLevel = 8;
	public const PluginType SelectLevelIcon = 9;
	public const PluginType DesignPoint = 10;
	public const PluginType Reward = 11;
	public const PluginType UpPreview = 12;
	public const PluginType IconDesignPoint = 13;
	public const PluginType AwardConsumption = 14;
	public const PluginType HighestScore = 15;
	public const PluginType RewardBottom = 16;
	public const PluginType MatchTips = 17;
	public const PluginType OnlineMatching = 18;
	public const PluginType PlayButtons = 19;
	public const PluginType LimitTips = 20;
}
public enum MPPagePlayButtonsPlugin.PlayType
{
	// Fields
	public const MPPagePlayButtonsPlugin.PlayType None = 0;
	public const MPPagePlayButtonsPlugin.PlayType Draft = 1;
	public const MPPagePlayButtonsPlugin.PlayType Match = 2;
	public const MPPagePlayButtonsPlugin.PlayType ScenePlay = 3;
	public const MPPagePlayButtonsPlugin.PlayType Cancel = 4;
	public const MPPagePlayButtonsPlugin.PlayType Simple = 5;
}
public enum MPPagePlayButtonsPlugin.PlayMode
{
	// Fields
	public const MPPagePlayButtonsPlugin.PlayMode None = 0;
	public const MPPagePlayButtonsPlugin.PlayMode Local = 1;
	public const MPPagePlayButtonsPlugin.PlayMode Online = 2;
}
public enum MFJINPBICHF.JJKPGNGLIKM
{
	// Fields
	public const MFJINPBICHF.JJKPGNGLIKM NONE = 0;
	public const MFJINPBICHF.JJKPGNGLIKM LOADING = 1;
	public const MFJINPBICHF.JJKPGNGLIKM LOADED = 2;
	public const MFJINPBICHF.JJKPGNGLIKM FAILED = 3;
}
public enum MFENCPINAJO.IFMONKFLEIN
{
	// Fields
	public const MFENCPINAJO.IFMONKFLEIN NONE = 0;
	public const MFENCPINAJO.IFMONKFLEIN LOADING = 1;
	public const MFENCPINAJO.IFMONKFLEIN LOADED = 2;
	public const MFENCPINAJO.IFMONKFLEIN FAILED = 3;
}
public enum ACGNAFGKKNO
{
	// Fields
	public const ACGNAFGKKNO NPC = 0;
	public const ACGNAFGKKNO AnimatorMove = 1;
}
public enum GBPAOPAAJLC
{
	// Fields
	public const GBPAOPAAJLC Unpack = 0;
	public const GBPAOPAAJLC ReturnToPool = 1;
}
public enum DHEAEAMPEKL
{
	// Fields
	public const DHEAEAMPEKL CAMERA_MOVE = 0;
	public const DHEAEAMPEKL ENTITY_COMMON_MOVE = 1;
	public const DHEAEAMPEKL ENTITY_AI = 2;
	public const DHEAEAMPEKL SECTR_STREAM_LOD_CAMERA = 3;
	public const DHEAEAMPEKL ALLOC_GUID = 4;
	public const DHEAEAMPEKL SIGNIFICANCE = 5;
	public const DHEAEAMPEKL L_C_ROCK_GADGET_COLLISION_CHECKER = 6;
	public const DHEAEAMPEKL DYNAMIC_BONE_ARRAY = 7;
	public const DHEAEAMPEKL TERRAIN_GRASS = 8;
	public const DHEAEAMPEKL AUDIO_MANAGER = 9;
	public const DHEAEAMPEKL SECTR_STREAM_LOD = 10;
	public const DHEAEAMPEKL SECTR_STREAM_COLLIDER = 11;
	public const DHEAEAMPEKL SECTR_STREAM_SPLIT = 12;
	public const DHEAEAMPEKL SECTR_STREAM_FLUSH = 13;
	public const DHEAEAMPEKL CONFIG_LOADER = 14;
	public const DHEAEAMPEKL LEVEL_AI_MANAGER = 15;
	public const DHEAEAMPEKL CONFIG_VALIDATION = 16;
	public const DHEAEAMPEKL NPC_MANAGER = 17;
	public const DHEAEAMPEKL SCENE_TILE_INIT_DATA = 18;
	public const DHEAEAMPEKL NET_WORK_PACKET = 19;
	public const DHEAEAMPEKL SIGNIFICANCE_TICK_L_O_D = 20;
	public const DHEAEAMPEKL ABILITY_SYSTEM = 21;
	public const DHEAEAMPEKL LEVEL_TRAFFIC_NAVIGATION = 22;
	public const DHEAEAMPEKL AUDIO_DYNAMIC_RAY = 23;
	public const DHEAEAMPEKL MTR_MANAGER = 24;
	public const DHEAEAMPEKL LIGHTNING_BOLT_STATE = 25;
	public const DHEAEAMPEKL SDK_INVOKE = 26;
	public const DHEAEAMPEKL NETWORK_RECYCLE = 27;
	public const DHEAEAMPEKL PROJECTED_HEIGHTMAP = 28;
	public const DHEAEAMPEKL ABILITY_TILE_ATTACK = 29;
	public const DHEAEAMPEKL ENTITY_AI_COLLECT = 30;
	public const DHEAEAMPEKL LEVEL_AI_MANAGER_OLD = 31;
	public const DHEAEAMPEKL EFFECT_DEALLOC = 32;
	public const DHEAEAMPEKL ENTITY_RECYCLE = 33;
	public const DHEAEAMPEKL GRAPPLING_HOOK = 34;
	public const DHEAEAMPEKL L_C_SIMULATE_PHYSICS = 35;
	public const DHEAEAMPEKL EFFECT_PLUGIN_LINE_WAVE = 36;
	public const DHEAEAMPEKL PARTICLE_LOADER = 37;
	public const DHEAEAMPEKL SPINE_UPDATE = 38;
	public const DHEAEAMPEKL SPINE_LATE_UPDATE = 39;
	public const DHEAEAMPEKL P_O_I_NAVIGATION = 40;
}
public enum KIMMCKKIHLN
{
	// Fields
	public const KIMMCKKIHLN Invalid = 0;
	public const KIMMCKKIHLN Skill = 1;
	public const KIMMCKKIHLN HitLight = 1000100;
	public const KIMMCKKIHLN HitHeavy = 1000101;
	public const KIMMCKKIHLN LowHealth = 90002;
	public const KIMMCKKIHLN Die = 1020000;
	public const KIMMCKKIHLN SelectOnStage = 357;
}
public enum OLBJOPAHCLI
{
	// Fields
	public const OLBJOPAHCLI None = 0;
	public const OLBJOPAHCLI ADD = 1;
	public const OLBJOPAHCLI SUB = 2;
}
public enum MonoGcgCardModifyInfoVerticalArrangement.BAECKIHBGID
{
	// Fields
	public const MonoGcgCardModifyInfoVerticalArrangement.BAECKIHBGID None = 0;
	public const MonoGcgCardModifyInfoVerticalArrangement.BAECKIHBGID Disappear = 1;
	public const MonoGcgCardModifyInfoVerticalArrangement.BAECKIHBGID DoingDisappear = 2;
	public const MonoGcgCardModifyInfoVerticalArrangement.BAECKIHBGID Move = 3;
	public const MonoGcgCardModifyInfoVerticalArrangement.BAECKIHBGID DoingMove = 4;
	public const MonoGcgCardModifyInfoVerticalArrangement.BAECKIHBGID Appear = 5;
	public const MonoGcgCardModifyInfoVerticalArrangement.BAECKIHBGID DoingAppear = 6;
}
public enum NJEOHNOGAAB
{
	// Fields
	public const NJEOHNOGAAB NoOffset = 0;
	public const NJEOHNOGAAB LeftOffset = 1;
	public const NJEOHNOGAAB RightOffset = 2;
}
public enum IFCFCLBJLIJ
{
	// Fields
	public const IFCFCLBJLIJ SelfShowCenter = 0;
	public const IFCFCLBJLIJ SelfHandCard = 1;
	public const IFCFCLBJLIJ OppositeShowArea = 2;
	public const IFCFCLBJLIJ OppositeHandCard = 3;
	public const IFCFCLBJLIJ SelfCharacterCard = 4;
	public const IFCFCLBJLIJ OppositeCharacterCard = 5;
	public const IFCFCLBJLIJ SelfSupportCard = 6;
	public const IFCFCLBJLIJ OppositeSupportCard = 7;
	public const IFCFCLBJLIJ SelfSummonCard = 8;
	public const IFCFCLBJLIJ OppositeSummonCard = 9;
}
public enum CFHNBKOEPGP
{
	// Fields
	public const CFHNBKOEPGP SelfHandCardHide = 0;
	public const CFHNBKOEPGP SelfHandCardExpand = 1;
	public const CFHNBKOEPGP SelfShow = 2;
	public const CFHNBKOEPGP SelfCharacter = 3;
	public const CFHNBKOEPGP SelfDeck = 4;
	public const CFHNBKOEPGP SelfUseShow = 5;
	public const CFHNBKOEPGP SelfSupport = 6;
	public const CFHNBKOEPGP SelfSummon = 7;
	public const CFHNBKOEPGP SelfCharacterBorn = 8;
	public const CFHNBKOEPGP SelfReboot = 9;
	public const CFHNBKOEPGP OpponentHand = 10;
	public const CFHNBKOEPGP OpponentShow = 11;
	public const CFHNBKOEPGP OpponentCharacter = 12;
	public const CFHNBKOEPGP OpponentDeck = 13;
	public const CFHNBKOEPGP OpponentUseShow = 14;
	public const CFHNBKOEPGP OpponentSupport = 15;
	public const CFHNBKOEPGP OpponentSummon = 16;
	public const CFHNBKOEPGP OpponentCharacterBorn = 17;
}
public enum MDMGDFFGKCP
{
	// Fields
	public uint value__; // 0x10
	public const MDMGDFFGKCP OutSide = 1;
	public const MDMGDFFGKCP Middle = 2;
	public const MDMGDFFGKCP Inner = 3;
	public const MDMGDFFGKCP Camp = 4;
	public const MDMGDFFGKCP CampReverse = 5;
}
public enum JBFANECBJOD
{
	// Fields
	public const JBFANECBJOD Up = 0;
	public const JBFANECBJOD Forward = 1;
	public const JBFANECBJOD Right = 2;
}
public enum ConfigGcgMoveTaskByCurveWithTarget.ICNMNNMAHJE
{
	// Fields
	public uint value__; // 0x10
	public const ConfigGcgMoveTaskByCurveWithTarget.ICNMNNMAHJE Attack = 0;
	public const ConfigGcgMoveTaskByCurveWithTarget.ICNMNNMAHJE CharacterBorn = 1;
}
public enum ConfigGcgMoveTaskByCurveWithTarget.CAIEELHOPFB
{
	// Fields
	public uint value__; // 0x10
	public const ConfigGcgMoveTaskByCurveWithTarget.CAIEELHOPFB Normal = 0;
	public const ConfigGcgMoveTaskByCurveWithTarget.CAIEELHOPFB MaxPoint = 1;
	public const ConfigGcgMoveTaskByCurveWithTarget.CAIEELHOPFB LastPoint = 2;
}
public enum BLFGLBBOCAM
{
	// Fields
	public const BLFGLBBOCAM EditDeck = 0;
	public const BLFGLBBOCAM SelectDeck = 1;
}
public enum KJMDJJFHINK
{
	// Fields
	public const KJMDJJFHINK Valid = 0;
	public const KJMDJJFHINK NotEnough = 1;
	public const KJMDJJFHINK Banned = 2;
	public const KJMDJJFHINK NotSatisfied = 3;
}
public enum FIOOGBNKFGF
{
	// Fields
	public const FIOOGBNKFGF Valid = 0;
	public const FIOOGBNKFGF NotEnough = 1;
	public const FIOOGBNKFGF Comma = 2;
	public const FIOOGBNKFGF ReachSameCharLimit = 3;
	public const FIOOGBNKFGF ReachSameCardLimit = 4;
	public const FIOOGBNKFGF NotSatisfied = 5;
	public const FIOOGBNKFGF Banned = 6;
	public const FIOOGBNKFGF ReachDeckCardLimit = 7;
}
public enum NHJDPIKCLHA
{
	// Fields
	public const NHJDPIKCLHA None = 0;
	public const NHJDPIKCLHA Character = 1;
	public const NHJDPIKCLHA NonCharacter = 2;
}
public enum IOPLNOMKPGP
{
	// Fields
	public const IOPLNOMKPGP HpInfo = 0;
	public const IOPLNOMKPGP TimeToken = 1;
	public const IOPLNOMKPGP ModifyIcon = 2;
	public const IOPLNOMKPGP Energy = 3;
	public const IOPLNOMKPGP Cost = 4;
	public const IOPLNOMKPGP InfoCanvas = 5;
	public const IOPLNOMKPGP ColliderAndSelect = 6;
	public const IOPLNOMKPGP Frame = 7;
	public const IOPLNOMKPGP PositionAdjust = 8;
	public const IOPLNOMKPGP Count = 9;
}
public enum OIMJAIOBPNO.GECIPHDGPGM
{
	// Fields
	public const OIMJAIOBPNO.GECIPHDGPGM Up = 0;
	public const OIMJAIOBPNO.GECIPHDGPGM Down = 1;
}
public enum ENOJBDOGBOG
{
	// Fields
	public uint value__; // 0x10
	public const ENOJBDOGBOG BehaviourAction = 0;
	public const ENOJBDOGBOG CardProxyAction = 1;
}
public enum DKFLBPGCAKE
{
	// Fields
	public const DKFLBPGCAKE Weapon = 0;
	public const DKFLBPGCAKE Relic = 1;
	public const DKFLBPGCAKE Talent = 2;
}
public enum MKNDKMMFAEG
{
	// Fields
	public const MKNDKMMFAEG NormalPve = 0;
	public const MKNDKMMFAEG ReinforcePve = 1;
	public const MKNDKMMFAEG WavePve = 2;
}
public enum MDOPGDAAFNK
{
	// Fields
	public const MDOPGDAAFNK ShowTogSwitch = 0;
	public const MDOPGDAAFNK HideTogSwitch = 1;
	public const MDOPGDAAFNK HideDetailPanel = 2;
	public const MDOPGDAAFNK ShowBtnOk = 3;
	public const MDOPGDAAFNK HideBtnOk = 4;
}
public enum ICOFODHMEAB
{
	// Fields
	public const ICOFODHMEAB None = 0;
	public const ICOFODHMEAB Round = 1;
	public const ICOFODHMEAB Tips = 2;
	public const ICOFODHMEAB Detail = 3;
}
public enum GADNKKCKNMB
{
	// Fields
	public const GADNKKCKNMB TriggerEffect = 0;
	public const GADNKKCKNMB Attack = 1;
	public const GADNKKCKNMB Heal = 2;
	public const GADNKKCKNMB Create = 3;
	public const GADNKKCKNMB Multi = 4;
	public const GADNKKCKNMB None = 5;
}
public enum CBJAOLCPFAG
{
	// Fields
	public const CBJAOLCPFAG Invalid = 0;
	public const CBJAOLCPFAG GcgLevelReady = 1;
	public const CBJAOLCPFAG GcgLevelSettle = 2;
	public const CBJAOLCPFAG GcgLevelTimeScaleChange = 3;
	public const CBJAOLCPFAG EntityCreate = 4;
	public const CBJAOLCPFAG EntityDestroy = 5;
	public const CBJAOLCPFAG CardAdd = 6;
	public const CBJAOLCPFAG CardRemove = 7;
	public const CBJAOLCPFAG CharacterOnStage = 8;
	public const CBJAOLCPFAG CharacterTransform = 9;
	public const CBJAOLCPFAG NonCharacterCardConvert = 10;
	public const CBJAOLCPFAG ModifyChange = 11;
	public const CBJAOLCPFAG EasyTouchTouchDown = 12;
	public const CBJAOLCPFAG EasyTouchTouchUp = 13;
	public const CBJAOLCPFAG CardSelectedModeEnter = 14;
	public const CBJAOLCPFAG CardSelectedModeExit = 15;
	public const CBJAOLCPFAG CardSelectedModeConfirm = 16;
	public const CBJAOLCPFAG CardSelectedCandidateAdd = 17;
	public const CBJAOLCPFAG CardSelectedCandidateRemove = 18;
	public const CBJAOLCPFAG HandCardDragBegin = 19;
	public const CBJAOLCPFAG HandCardDragOnGoing = 20;
	public const CBJAOLCPFAG HandCardDragAreaChange = 21;
	public const CBJAOLCPFAG HandCardDragRelease = 22;
	public const CBJAOLCPFAG HandCardExpand = 23;
	public const CBJAOLCPFAG HandCardHide = 24;
	public const CBJAOLCPFAG OrganizerAddUnit = 25;
	public const CBJAOLCPFAG OrganizerRemoveUnit = 26;
	public const CBJAOLCPFAG UseSkill = 27;
	public const CBJAOLCPFAG SkillPanel_Refresh = 28;
	public const CBJAOLCPFAG BehaviourStart = 29;
	public const CBJAOLCPFAG BehaviourHitLanded = 30;
	public const CBJAOLCPFAG BehaviourEnd = 31;
	public const CBJAOLCPFAG BehaviourTriggerVoice = 32;
	public const CBJAOLCPFAG PveCurrentWaitingIndexChange = 33;
	public const CBJAOLCPFAG PveIntentionUpdate = 34;
	public const CBJAOLCPFAG DiceRefresh = 35;
	public const CBJAOLCPFAG DiceAdd = 36;
	public const CBJAOLCPFAG DiceCost = 37;
	public const CBJAOLCPFAG UIDicePanelCommand = 38;
	public const CBJAOLCPFAG DiceSelect = 39;
	public const CBJAOLCPFAG DiceDeSelect = 40;
	public const CBJAOLCPFAG TokenChange = 41;
	public const CBJAOLCPFAG SkillLimitChange = 42;
	public const CBJAOLCPFAG TapOnUI = 43;
	public const CBJAOLCPFAG TapOnUIUp = 44;
	public const CBJAOLCPFAG TapOnCardPre = 45;
	public const CBJAOLCPFAG TapOnCard = 46;
	public const CBJAOLCPFAG TapOnCardPost = 47;
	public const CBJAOLCPFAG TapOnDice = 48;
	public const CBJAOLCPFAG TapOnDeck = 49;
	public const CBJAOLCPFAG SeverCostInfoUpdate = 50;
	public const CBJAOLCPFAG PhaseChangePre = 51;
	public const CBJAOLCPFAG PhaseChange = 52;
	public const CBJAOLCPFAG PhaseChangePost = 53;
	public const CBJAOLCPFAG PhaseUpdate = 54;
	public const CBJAOLCPFAG PhaseContinue = 55;
	public const CBJAOLCPFAG PhaseRecover = 56;
	public const CBJAOLCPFAG PhaseBegin = 57;
	public const CBJAOLCPFAG PhaseEnd = 58;
	public const CBJAOLCPFAG PhaseActionChanceChange = 59;
	public const CBJAOLCPFAG MainPhaseOperationEnter = 60;
	public const CBJAOLCPFAG MainPhaseOperationEnterPost = 61;
	public const CBJAOLCPFAG MainPhaseOperationConfirm = 62;
	public const CBJAOLCPFAG MainPhaseOperationConfirmPost = 63;
	public const CBJAOLCPFAG MainPhaseOperationCancel = 64;
	public const CBJAOLCPFAG MainPhaseOperationCancelPost = 65;
	public const CBJAOLCPFAG DrawReDrawToggleTableCardShow = 66;
	public const CBJAOLCPFAG DiceRollToggleTableCardShow = 67;
	public const CBJAOLCPFAG TalkBegin = 68;
	public const CBJAOLCPFAG TalkUpdate = 69;
	public const CBJAOLCPFAG TalkEnd = 70;
	public const CBJAOLCPFAG UICommand = 71;
	public const CBJAOLCPFAG ShowDetail = 72;
	public const CBJAOLCPFAG RefreshDetail = 73;
	public const CBJAOLCPFAG RefreshDetailPVEIntention = 74;
	public const CBJAOLCPFAG SkillCompIntoSelectChar = 75;
	public const CBJAOLCPFAG SkillCompIntoSkill = 76;
	public const CBJAOLCPFAG PlayerInfoBoom = 77;
	public const CBJAOLCPFAG OnDetailPanelShow = 78;
	public const CBJAOLCPFAG OnDetailPanelHide = 79;
	public const CBJAOLCPFAG OnSettingPanelOrHistoryRecordShow = 80;
	public const CBJAOLCPFAG OnSettingPanelOrHistoryRecordHide = 81;
	public const CBJAOLCPFAG RefreshReplay = 82;
	public const CBJAOLCPFAG ReinitPlayerInfo = 83;
	public const CBJAOLCPFAG GuideTaskStateFinish = 84;
	public const CBJAOLCPFAG GuideTaskCheckType = 85;
}
public enum INFBMIJMCIN
{
	// Fields
	public const INFBMIJMCIN SystemTime = 0;
	public const INFBMIJMCIN LevelTime = 1;
}
public enum LNLLHJHFFAP.PPLEHBLDKDK
{
	// Fields
	public const LNLLHJHFFAP.PPLEHBLDKDK StageRoot = 0;
	public const LNLLHJHFFAP.PPLEHBLDKDK CardProxyRoot = 1;
	public const LNLLHJHFFAP.PPLEHBLDKDK PoolRoot = 2;
	public const LNLLHJHFFAP.PPLEHBLDKDK EffectProxy = 3;
	public const LNLLHJHFFAP.PPLEHBLDKDK GadgetRoot = 4;
	public const LNLLHJHFFAP.PPLEHBLDKDK PrefabRoot = 5;
	public const LNLLHJHFFAP.PPLEHBLDKDK CardFaceRoot = 6;
	public const LNLLHJHFFAP.PPLEHBLDKDK CardBackRoot = 7;
}
public enum FBCJAGAMPNM.LJANBDKHPKL
{
	// Fields
	public const FBCJAGAMPNM.LJANBDKHPKL ThisGameFinish = 0;
	public const FBCJAGAMPNM.LJANBDKHPKL ThisGameFail = 1;
	public const FBCJAGAMPNM.LJANBDKHPKL FinishedBefore = 2;
	public const FBCJAGAMPNM.LJANBDKHPKL CanNotFinish = 3;
}
public enum IBBEGENDPAO
{
	// Fields
	public const IBBEGENDPAO OnStart = 0;
	public const IBBEGENDPAO OnHitLanded = 1;
}
public enum OMDJKALEFEJ.HJFKBOCCKJH
{
	// Fields
	public const OMDJKALEFEJ.HJFKBOCCKJH Happy = 0;
	public const OMDJKALEFEJ.HJFKBOCCKJH LowHealth = 1;
	public const OMDJKALEFEJ.HJFKBOCCKJH HighHealth = 2;
	public const OMDJKALEFEJ.HJFKBOCCKJH Tough = 3;
	public const OMDJKALEFEJ.HJFKBOCCKJH Sad = 4;
	public const OMDJKALEFEJ.HJFKBOCCKJH ElementBurst = 5;
}
public enum NPPLAHPLIJC.HPKLBDMLEKP
{
	// Fields
	public const NPPLAHPLIJC.HPKLBDMLEKP None = 0;
	public const NPPLAHPLIJC.HPKLBDMLEKP PrepareTimer = 1;
	public const NPPLAHPLIJC.HPKLBDMLEKP Dragging = 2;
}
public enum HKOBLCOABLF.FALCIPJFMDF
{
	// Fields
	public const HKOBLCOABLF.FALCIPJFMDF None = 0;
	public const HKOBLCOABLF.FALCIPJFMDF UseCard = 1;
	public const HKOBLCOABLF.FALCIPJFMDF Reboot = 2;
}
public enum MLBEBCAJEIB
{
	// Fields
	public const MLBEBCAJEIB UseSkill = 0;
	public const MLBEBCAJEIB UseCard = 1;
	public const MLBEBCAJEIB OnStageCharChange = 2;
	public const MLBEBCAJEIB Reboot = 3;
}
public enum DFLHDCJEMBP
{
	// Fields
	public const DFLHDCJEMBP Invalid = 0;
	public const DFLHDCJEMBP DiceNotMatchEnergyLess = 1;
	public const DFLHDCJEMBP DiceNotMatchTooLess = 2;
	public const DFLHDCJEMBP DiceNotMatch = 3;
	public const DFLHDCJEMBP DiceNotMatchTooMuch = 4;
	public const DFLHDCJEMBP DiceMatch = 5;
	public const DFLHDCJEMBP DiceMatchTooMuch = 6;
	public const DFLHDCJEMBP ConditionDenied = 7;
}
public enum CANLJCFPCGI
{
	// Fields
	public const CANLJCFPCGI Equal = 0;
	public const CANLJCFPCGI Increase = 1;
	public const CANLJCFPCGI Reduce = 2;
}
public enum JHOAFBOGALF
{
	// Fields
	public const JHOAFBOGALF Precisely = 0;
	public const JHOAFBOGALF Roughly = 1;
}
public enum PHNINJDPAKI
{
	// Fields
	public const PHNINJDPAKI Skill = 0;
	public const PHNINJDPAKI OnStageCharChange = 1;
	public const PHNINJDPAKI HandCard = 2;
}
public enum PNIIELFCJJG
{
	// Fields
	public const PNIIELFCJJG Expand = 0;
	public const PNIIELFCJJG Hide = 1;
	public const PNIIELFCJJG OutSight = 2;
}
public enum ENENDOJHCMB.COEGOKELAJG
{
	// Fields
	public const ENENDOJHCMB.COEGOKELAJG Invalid = 0;
	public const ENENDOJHCMB.COEGOKELAJG Skill = 1;
	public const ENENDOJHCMB.COEGOKELAJG Char = 2;
	public const ENENDOJHCMB.COEGOKELAJG Card = 3;
	public const ENENDOJHCMB.COEGOKELAJG Keyword = 4;
	public const ENENDOJHCMB.COEGOKELAJG DeclaredValue = 5;
}
public enum JCJOGALJIHI.MJIGILKGMGH
{
	// Fields
	public const JCJOGALJIHI.MJIGILKGMGH None = 0;
	public const JCJOGALJIHI.MJIGILKGMGH UseCard = 1;
	public const JCJOGALJIHI.MJIGILKGMGH UseSkill = 2;
	public const JCJOGALJIHI.MJIGILKGMGH ChangeChar = 3;
}
public enum OCNADNANGPH.PDBCIFDMNAB
{
	// Fields
	public const OCNADNANGPH.PDBCIFDMNAB Dissolve = 0;
	public const OCNADNANGPH.PDBCIFDMNAB Dither = 1;
	public const OCNADNANGPH.PDBCIFDMNAB Desaturation = 2;
}
public enum JFBGFKMPOAK.LEJNBBOAMJD
{
	// Fields
	public const JFBGFKMPOAK.LEJNBBOAMJD None = 0;
	public const JFBGFKMPOAK.LEJNBBOAMJD Weapon = 1;
	public const JFBGFKMPOAK.LEJNBBOAMJD Relic = 2;
	public const JFBGFKMPOAK.LEJNBBOAMJD Talent = 3;
	public const JFBGFKMPOAK.LEJNBBOAMJD Target = 4;
	public const JFBGFKMPOAK.LEJNBBOAMJD ExchangeCard = 5;
	public const JFBGFKMPOAK.LEJNBBOAMJD ExchangeCharacter = 6;
	public const JFBGFKMPOAK.LEJNBBOAMJD Attack = 7;
	public const JFBGFKMPOAK.LEJNBBOAMJD Healing = 8;
	public const JFBGFKMPOAK.LEJNBBOAMJD Replace = 9;
}
public enum DCDHNJEPBDC.GMONBDEALLD
{
	// Fields
	public const DCDHNJEPBDC.GMONBDEALLD None = 0;
	public const DCDHNJEPBDC.GMONBDEALLD WaitingBlackScreen = 1;
	public const DCDHNJEPBDC.GMONBDEALLD WaitingDiceDisappear = 2;
	public const DCDHNJEPBDC.GMONBDEALLD DiceDropDownPrepare = 3;
	public const DCDHNJEPBDC.GMONBDEALLD DiceDropDown = 4;
	public const DCDHNJEPBDC.GMONBDEALLD DiceDropDownFinish = 5;
	public const DCDHNJEPBDC.GMONBDEALLD DiceOrganize = 6;
}
public enum MFFEOALHEHC.NOBLCEIHEOA
{
	// Fields
	public const MFFEOALHEHC.NOBLCEIHEOA None = 0;
	public const MFFEOALHEHC.NOBLCEIHEOA WaitLoadingCanvasFadeOut = 1;
	public const MFFEOALHEHC.NOBLCEIHEOA SpecialModeHint = 2;
	public const MFFEOALHEHC.NOBLCEIHEOA CoinAnimationPlay = 3;
	public const MFFEOALHEHC.NOBLCEIHEOA ShowWait = 4;
	public const MFFEOALHEHC.NOBLCEIHEOA CoinDisappearWait = 5;
	public const MFFEOALHEHC.NOBLCEIHEOA PerformFinish = 6;
}
public enum OIAGHMFAIJL
{
	// Fields
	public const OIAGHMFAIJL None = 0;
	public const OIAGHMFAIJL CharacterSkill = 1;
	public const OIAGHMFAIJL UseHandCard = 2;
	public const OIAGHMFAIJL UseHandCardNoCostNoTarget = 3;
	public const OIAGHMFAIJL SelectChar = 4;
	public const OIAGHMFAIJL Reboot = 5;
}
public enum MonoGcgCardDetailProxy.JIIKOGGDDBF
{
	// Fields
	public const MonoGcgCardDetailProxy.JIIKOGGDDBF DeckChosen = 0;
	public const MonoGcgCardDetailProxy.JIIKOGGDDBF DeckToChoose = 1;
	public const MonoGcgCardDetailProxy.JIIKOGGDDBF CardDetail = 2;
	public const MonoGcgCardDetailProxy.JIIKOGGDDBF Appearance = 3;
}
public enum NPKPOLPPIKN
{
	// Fields
	public const NPKPOLPPIKN Hide = 0;
	public const NPKPOLPPIKN Skill = 1;
	public const NPKPOLPPIKN UseCard = 2;
	public const NPKPOLPPIKN CharacterCard = 3;
	public const NPKPOLPPIKN OtherCard = 4;
	public const NPKPOLPPIKN Reboot = 5;
	public const NPKPOLPPIKN PVEOppoIntention = 6;
	public const NPKPOLPPIKN HyperLink = 7;
}
public enum JJHBAMPNFFP
{
	// Fields
	public const JJHBAMPNFFP UseSkill = 0;
	public const JJHBAMPNFFP UseCard = 1;
	public const JJHBAMPNFFP TapOnCard = 2;
	public const JJHBAMPNFFP Reboot = 3;
	public const JJHBAMPNFFP PVEOppoIntention = 4;
	public const JJHBAMPNFFP HyperLinkCard = 5;
	public const JJHBAMPNFFP HyperLinkChar = 6;
	public const JJHBAMPNFFP HyperLinkSkill = 7;
	public const JJHBAMPNFFP HyperLinkKeyword = 8;
}
public enum PKEEHCNMHKA
{
	// Fields
	public const PKEEHCNMHKA MainPanel = 0;
	public const PKEEHCNMHKA DetailPanel = 1;
	public const PKEEHCNMHKA DescriptionPanel = 2;
}
public enum GAAGMAIMILC
{
	// Fields
	public const GAAGMAIMILC Tag = 0;
	public const GAAGMAIMILC SkillKeyword = 1;
	public const GAAGMAIMILC CardKeyword = 2;
	public const GAAGMAIMILC CardCost = 3;
}
public enum DFDPKAHHEOG
{
	// Fields
	public const DFDPKAHHEOG NameGrp = 0;
	public const DFDPKAHHEOG Title = 1;
	public const DFDPKAHHEOG IconTitle = 2;
	public const DFDPKAHHEOG SkillGrp = 3;
	public const DFDPKAHHEOG BuffGrp = 4;
	public const DFDPKAHHEOG TagDescGrp = 5;
	public const DFDPKAHHEOG DescGrp = 6;
	public const DFDPKAHHEOG Energy = 7;
	public const DFDPKAHHEOG EmptyTip = 8;
	public const DFDPKAHHEOG PartLine = 9;
	public const DFDPKAHHEOG IntentGrp = 10;
}
public enum HNGGABGHJKK
{
	// Fields
	public const HNGGABGHJKK AllHide = 0;
	public const HNGGABGHJKK Fold = 1;
	public const HNGGABGHJKK FoldWithSelection = 2;
	public const HNGGABGHJKK UnFold = 3;
	public const HNGGABGHJKK SpecicalModeEff = 4;
}
public enum HHBCDIHMGKF.DNLIDFMNJDJ
{
	// Fields
	public const HHBCDIHMGKF.DNLIDFMNJDJ None = 0;
	public const HHBCDIHMGKF.DNLIDFMNJDJ Free = 1;
	public const HHBCDIHMGKF.DNLIDFMNJDJ Condition = 2;
}
public enum HHBCDIHMGKF.NLFNIPJDMIA
{
	// Fields
	public const HHBCDIHMGKF.NLFNIPJDMIA NORMAL = 0;
	public const HHBCDIHMGKF.NLFNIPJDMIA FESTIVAL = 1;
}
public enum FGJMKOBPPFO.FHCLLLFNFME
{
	// Fields
	public const FGJMKOBPPFO.FHCLLLFNFME None = 0;
	public const FGJMKOBPPFO.FHCLLLFNFME OnCard = 1;
	public const FGJMKOBPPFO.FHCLLLFNFME OnSwitchRound = 2;
	public const FGJMKOBPPFO.FHCLLLFNFME OnSkill = 3;
	public const FGJMKOBPPFO.FHCLLLFNFME OnDeck = 4;
}
public enum PCLEEOLBKJO.OJBBJENLGIK
{
	// Fields
	public const PCLEEOLBKJO.OJBBJENLGIK ArrowSelection = 0;
	public const PCLEEOLBKJO.OJBBJENLGIK DetailCheck = 1;
}
public enum GGNBOJOCPJI.LJBGPICGHME
{
	// Fields
	public const GGNBOJOCPJI.LJBGPICGHME ArrowSelection = 0;
	public const GGNBOJOCPJI.LJBGPICGHME DetailCheck = 1;
}
public enum NOMGNHHOGFI.LFEEHAPCGEF
{
	// Fields
	public const NOMGNHHOGFI.LFEEHAPCGEF Prepare = 0;
	public const NOMGNHHOGFI.LFEEHAPCGEF DetailCheck = 1;
	public const NOMGNHHOGFI.LFEEHAPCGEF UIDiceSelection = 2;
}
public enum OBOEKPLLMGF.BHALDKBIBHE
{
	// Fields
	public const OBOEKPLLMGF.BHALDKBIBHE ArrowSelection = 0;
	public const OBOEKPLLMGF.BHALDKBIBHE DetailCheck = 1;
}
public enum PCDGAEJBMLB.CEJHLGJINND
{
	// Fields
	public const PCDGAEJBMLB.CEJHLGJINND ArrowSelection = 0;
	public const PCDGAEJBMLB.CEJHLGJINND UIDiceSelection = 1;
}
public enum HGJPPLAHDJO
{
	// Fields
	public const HGJPPLAHDJO JLayer_DontMove = 0;
	public const HGJPPLAHDJO JLayer_Draw = 1;
	public const HGJPPLAHDJO JLayer_SelectChar = 2;
	public const HGJPPLAHDJO JLayer_DiceRoll = 3;
	public const HGJPPLAHDJO JLayer_Free = 4;
	public const HGJPPLAHDJO JLayer_Free_Detail = 5;
	public const HGJPPLAHDJO JLayer_Free_HandCardCheck = 6;
	public const HGJPPLAHDJO JLayer_Free_Skill = 7;
	public const HGJPPLAHDJO JLayer_Free_Setting = 8;
	public const HGJPPLAHDJO JLayer_Main_Reboot = 9;
	public const HGJPPLAHDJO JLayer_Main_ChangeChar = 10;
	public const HGJPPLAHDJO JLayer_Main_UseHandCard = 11;
}
public enum BHFLGKGLAAB
{
	// Fields
	public const BHFLGKGLAAB None = 0;
	public const BHFLGKGLAAB PveIntention = 1;
	public const BHFLGKGLAAB OppoUseCard = 2;
}
public enum KKLMILMILHP
{
	// Fields
	public uint value__; // 0x10
	public const KKLMILMILHP StartTip = 0;
	public const KKLMILMILHP BottomTypeAAutoCloseTip = 1;
	public const KKLMILMILHP BottomTypeAHoldTip = 2;
	public const KKLMILMILHP BottomTypeBHoldTip = 3;
	public const KKLMILMILHP CommonRoundTip = 4;
	public const KKLMILMILHP CommonPassTip = 5;
	public const KKLMILMILHP CommonAutoCloseTip = 6;
	public const KKLMILMILHP CommonHoldTip = 7;
	public const KKLMILMILHP TopTip = 8;
	public const KKLMILMILHP PopHintSkill = 9;
	public const KKLMILMILHP PopHintCharChange = 10;
}
public enum LBLILBAHAOD
{
	// Fields
	public const LBLILBAHAOD Normal = 0;
	public const LBLILBAHAOD Blink = 1;
}
public enum GELPMJNLPGI.ILMLIHBFCDK
{
	// Fields
	public uint value__; // 0x10
	public const GELPMJNLPGI.ILMLIHBFCDK StartTipSlot = 0;
	public const GELPMJNLPGI.ILMLIHBFCDK BottomTipSlotA = 1;
	public const GELPMJNLPGI.ILMLIHBFCDK BottomTipSlotB = 2;
	public const GELPMJNLPGI.ILMLIHBFCDK CenterTipSlot = 3;
	public const GELPMJNLPGI.ILMLIHBFCDK TopTipSlot = 4;
	public const GELPMJNLPGI.ILMLIHBFCDK PopHintSlot = 5;
}
public enum MonoGcgPsBtn.EPCHOPHIIEM
{
	// Fields
	public const MonoGcgPsBtn.EPCHOPHIIEM Center = 0;
	public const MonoGcgPsBtn.EPCHOPHIIEM Left = 1;
	public const MonoGcgPsBtn.EPCHOPHIIEM Right = 2;
}
public enum MonoGcgUIActiveProxySkillBtnGrp.ILIOIPMCJFP
{
	// Fields
	public const MonoGcgUIActiveProxySkillBtnGrp.ILIOIPMCJFP SkillBtnList = 0;
	public const MonoGcgUIActiveProxySkillBtnGrp.ILIOIPMCJFP SelectCharBtn = 1;
	public const MonoGcgUIActiveProxySkillBtnGrp.ILIOIPMCJFP None = 2;
}
public enum MonoGcgUICostDiceList.NMEBOGDFOLL
{
	// Fields
	public const MonoGcgUICostDiceList.NMEBOGDFOLL SkillUnable = 0;
	public const MonoGcgUICostDiceList.NMEBOGDFOLL SkillReady = 1;
	public const MonoGcgUICostDiceList.NMEBOGDFOLL Details = 2;
}
public enum MonoGcgUIDice.BMJMJAEPLFJ
{
	// Fields
	public const MonoGcgUIDice.BMJMJAEPLFJ DoNotShow = 0;
	public const MonoGcgUIDice.BMJMJAEPLFJ ShowLargeIcon = 1;
	public const MonoGcgUIDice.BMJMJAEPLFJ ShowSmallIcon = 2;
	public const MonoGcgUIDice.BMJMJAEPLFJ ShowRebootIcon = 3;
}
public enum MonoGcgUISkillBtn.LEHGGCNNPGN
{
	// Fields
	public const MonoGcgUISkillBtn.LEHGGCNNPGN Skill = 0;
	public const MonoGcgUISkillBtn.LEHGGCNNPGN SelectChar = 1;
}
public enum MatVector.PositionMode
{
	// Fields
	public const MatVector.PositionMode WorldPosition = 0;
	public const MatVector.PositionMode WorldToScreenPos = 1;
	public const MatVector.PositionMode WorldToLocalPos = 2;
}
public enum BNFFOOOMCMH.LLKJALBFOJH.KLBAJAIMJAF
{
	// Fields
	public const BNFFOOOMCMH.LLKJALBFOJH.KLBAJAIMJAF Add = 0;
	public const BNFFOOOMCMH.LLKJALBFOJH.KLBAJAIMJAF Sub = 1;
	public const BNFFOOOMCMH.LLKJALBFOJH.KLBAJAIMJAF Mul = 11;
	public const BNFFOOOMCMH.LLKJALBFOJH.KLBAJAIMJAF Div = 12;
}
public enum OLMHMCHLCHM
{
	// Fields
	public const OLMHMCHLCHM None = 0;
	public const OLMHMCHLCHM ReferenceCounting = 1;
	public const OLMHMCHLCHM FullyPin = 2;
}
public enum GCJCHAKJCEO.DADDFBKBDHG
{
	// Fields
	public const GCJCHAKJCEO.DADDFBKBDHG Normal = 0;
	public const GCJCHAKJCEO.DADDFBKBDHG Difficult = 1;
	public const GCJCHAKJCEO.DADDFBKBDHG Dangerous = 2;
}
public enum LNMFBMGLKEA
{
	// Fields
	public const LNMFBMGLKEA CLOSE_INIT_SPEED_CHECK = 0;
	public const LNMFBMGLKEA ACTION_SORT_BY_DELAYTIME = 1;
	public const LNMFBMGLKEA FINISH_CLOSE_LOOP_AUDIO = 2;
	public const LNMFBMGLKEA OPEN_ADAPTIVE_SOUND = 3;
}
public enum DGANGJMOKOK
{
	// Fields
	public const DGANGJMOKOK Other = 0;
	public const DGANGJMOKOK TransPointNormal = 1;
	public const DGANGJMOKOK TransPointStatue = 2;
	public const DGANGJMOKOK TransPointPortal = 3;
	public const DGANGJMOKOK DungeonEntry = 4;
	public const DGANGJMOKOK DungeonExit = 5;
	public const DGANGJMOKOK DungeonWayPoint = 6;
	public const DGANGJMOKOK DungeonQuitPoint = 7;
	public const DGANGJMOKOK DungeonRewardPoint = 8;
	public const DGANGJMOKOK PersonalSceneJumpPoint = 9;
	public const DGANGJMOKOK SceneBuildingPoint = 10;
	public const DGANGJMOKOK DungeonSlipRevivePoint = 11;
	public const DGANGJMOKOK VehicleSummonPoint = 12;
}
public enum MDMKHGAPGFG
{
	// Fields
	public const MDMKHGAPGFG SHOWTYPE_SHOW = 0;
	public const MDMKHGAPGFG SHOWTYPE_HIDE = 1;
}
public enum KFNJPFKACJL
{
	// Fields
	public const KFNJPFKACJL PROGRESSTYPE_NONE = 0;
	public const KFNJPFKACJL PROGRESSTYPE_FINISH = 1;
	public const KFNJPFKACJL PROGRESSTYPE_THOUSAND_TO_ONE = 2;
}
public enum HJLNNJBJCIP
{
	// Fields
	public const HJLNNJBJCIP FERRET = 0;
	public const HJLNNJBJCIP PIG = 1;
	public const HJLNNJBJCIP FISH = 2;
}
public enum IPKDLBDLCAP
{
	// Fields
	public const IPKDLBDLCAP TEACH = 0;
	public const IPKDLBDLCAP FORMAL = 1;
}
public enum PKBGEFEJBKI
{
	// Fields
	public const PKBGEFEJBKI LOW = 0;
	public const PKBGEFEJBKI HIGH = 1;
}
public enum CCKEIBIFBHO
{
	// Fields
	public const CCKEIBIFBHO UNRELATED = 0;
	public const CCKEIBIFBHO YES = 1;
	public const CCKEIBIFBHO NO = 2;
}
public enum LOEEIOMPIMA
{
	// Fields
	public const LOEEIOMPIMA NONE = 0;
	public const LOEEIOMPIMA POSITIVE = 1;
	public const LOEEIOMPIMA NEGATIVE = 2;
}
public enum FPAAKBHDAKM
{
	// Fields
	public const FPAAKBHDAKM NONE = 0;
	public const FPAAKBHDAKM CHANGE_GADGET = 1;
	public const FPAAKBHDAKM CHANGE_MONSTER = 2;
}
public enum HMOLBBJFCKB.MIOHDKCMHFF.LIEHLOHNHGB
{
	// Fields
	public const HMOLBBJFCKB.MIOHDKCMHFF.LIEHLOHNHGB None = 0;
	public const HMOLBBJFCKB.MIOHDKCMHFF.LIEHLOHNHGB ArenaChallenge = 1;
	public const HMOLBBJFCKB.MIOHDKCMHFF.LIEHLOHNHGB MistTrial = 2;
}
public enum CFMKFIBBGKP
{
	// Fields
	public const CFMKFIBBGKP ASTER_PHASE_NONE = 0;
	public const CFMKFIBBGKP ASTER_PHASE_LITTLE = 1;
	public const CFMKFIBBGKP ASTER_PHASE_MID = 2;
	public const CFMKFIBBGKP ASTER_PHASE_LARGE = 3;
}
public enum GELDAGILGGI
{
	// Fields
	public const GELDAGILGGI ACTIVITY_BANNER_DEFAULT = 0;
	public const GELDAGILGGI ACTIVITY_BANNER_MONSTER = 1;
	public const GELDAGILGGI ACTIVITY_BANNER_CHAPTER = 2;
}
public enum FAAJPBAKANK
{
	// Fields
	public const FAAJPBAKANK LIGHT = 0;
	public const FAAJPBAKANK MIDDLE = 1;
	public const FAAJPBAKANK HEAVY = 2;
}
public enum BOAJKJHHOOC
{
	// Fields
	public const BOAJKJHHOOC BARTENDER_CUP_NONE = 0;
	public const BOAJKJHHOOC BARTENDER_CUP_SMALL = 1;
	public const BOAJKJHHOOC BARTENDER_CUP_MEDIUM = 2;
	public const BOAJKJHHOOC BARTENDER_CUP_BIG = 3;
}
public enum OIECLIHGGDI
{
	// Fields
	public const OIECLIHGGDI BARTENDER_ORIGIN_CUP_ONTABLE = 0;
	public const OIECLIHGGDI BARTENDER_ORIGIN_CUP_ONHAND = 1;
	public const OIECLIHGGDI BARTENDER_MIX_BAR = 2;
	public const OIECLIHGGDI BARTENDER_INGREDIENTS = 3;
	public const OIECLIHGGDI BARTENDER_INGREDIENTS_POUR_EFF = 4;
	public const OIECLIHGGDI BARTENDER_FINISH_CUP_ONHAND = 5;
	public const OIECLIHGGDI BARTENDER_FINISH_CUP_ONTABLE = 6;
	public const OIECLIHGGDI BARTENDER_FINISH_CUP_PUSH = 7;
	public const OIECLIHGGDI BARTENDER_FINISH_CUP_OVER = 8;
	public const OIECLIHGGDI BARTENDER_FINISH_POUR_EFF = 9;
	public const OIECLIHGGDI BARTENDER_FINISH_CUP_EFF = 10;
}
public enum NGBLPCFPAEE
{
	// Fields
	public const NGBLPCFPAEE BLESSING_SCAN_TYPE_NONE = 0;
	public const NGBLPCFPAEE BLESSING_SCAN_TYPE_MONSTER = 1;
	public const NGBLPCFPAEE BLESSING_SCAN_TYPE_GATHER = 2;
}
public enum CJPNCFLCJOF
{
	// Fields
	public const CJPNCFLCJOF BRICK_BREAKER_SKILL_TYPE_NONE = 0;
	public const CJPNCFLCJOF BRICK_BREAKER_TYPE_FAST_BALL = 1;
	public const CJPNCFLCJOF BRICK_BREAKER_TYPE_EXTRA_BALL = 2;
	public const CJPNCFLCJOF BRICK_BREAKER_TYPE_BONUS = 3;
	public const CJPNCFLCJOF BRICK_BREAKER_TYPE_MISSILE = 4;
	public const CJPNCFLCJOF BRICK_BREAKER_TYPE_WIDER_PADDLE = 5;
	public const CJPNCFLCJOF BRICK_BREAKER_TYPE_SAVER_WALL = 6;
	public const CJPNCFLCJOF BRICK_BREAKER_TYPE_FAST_AVATAR = 7;
	public const CJPNCFLCJOF BRICK_BREAKER_TYPE_SUPER_MISSILE = 8;
}
public enum ENMKOBCLIKI
{
	// Fields
	public const ENMKOBCLIKI BRICK_BREAKER_TYPE_NONE = 0;
	public const ENMKOBCLIKI BRICK_BREAKER_TYPE_WORLD = 1;
	public const ENMKOBCLIKI BRICK_BREAKER_TYPE_DUNGEON = 2;
}
public enum LPHKKHINKMO
{
	// Fields
	public const LPHKKHINKMO CHANNELLER_SLAB_BUFF_QUALITY_NONE = 0;
	public const LPHKKHINKMO CHANNELLER_SLAB_BUFF_QUALITY_GREEN = 1;
	public const LPHKKHINKMO CHANNELLER_SLAB_BUFF_QUALITY_BLUE = 2;
	public const LPHKKHINKMO CHANNELLER_SLAB_BUFF_QUALITY_PURPLE = 3;
	public const LPHKKHINKMO CHANNELLER_SLAB_BUFF_QUALITY_ORANGE = 4;
}
public enum HLDADBPCHAE
{
	// Fields
	public const HLDADBPCHAE CHANNELLER_SLAB_DIFFICULTY_NONE = 0;
	public const HLDADBPCHAE CHANNELLER_SLAB_DIFFICULTY_PRIMER = 1;
	public const HLDADBPCHAE CHANNELLER_SLAB_DIFFICULTY_NORMAL = 2;
	public const HLDADBPCHAE CHANNELLER_SLAB_DIFFICULTY_HARD = 3;
	public const HLDADBPCHAE CHANNELLER_SLAB_DIFFICULTY_EXPERT = 4;
}
public enum EKLIFAAKGCF
{
	// Fields
	public const EKLIFAAKGCF CHANNELLER_SLAB_CONDITION_NONE = 0;
	public const EKLIFAAKGCF CHANNELLER_SLAB_CONDITION_LIMIT = 1;
	public const EKLIFAAKGCF CHANNELLER_SLAB_CONDITION_CONFIG = 2;
	public const EKLIFAAKGCF CHANNELLER_SLAB_LINEUP_REPLACE = 3;
}
public enum MMHPILMLOIP
{
	// Fields
	public const MMHPILMLOIP STAGE_TYPE_NONE = 0;
	public const MMHPILMLOIP STAGE_TYPE_NORMAL = 1;
	public const MMHPILMLOIP STAGE_TYPE_RANDOM = 2;
}
public enum MFOMGAFAGNN
{
	// Fields
	public const MFOMGAFAGNN LEVEL_TYPE_NONE = 0;
	public const MFOMGAFAGNN LEVEL_TYPE_AMUSEMENT = 1;
	public const MFOMGAFAGNN LEVEL_TYPE_FIGHT = 2;
}
public enum AHHFIBNOKHH
{
	// Fields
	public const AHHFIBNOKHH CHESS_CARDFORTUNE_BAD = 0;
	public const AHHFIBNOKHH CHESS_CARDFORTUNE_NORMAL = 1;
	public const AHHFIBNOKHH CHESS_CARDFORTUNE_GOOD = 2;
	public const AHHFIBNOKHH CHESS_CARDFORTUNE_VERYGOOD = 3;
	public const AHHFIBNOKHH CHESS_CARDFORTUNE_PERFECT = 4;
}
public enum NAAGMMPOENG
{
	// Fields
	public const NAAGMMPOENG CARD_QUALITY_NORAML = 0;
	public const NAAGMMPOENG CARD_QUALITY_GOOD = 1;
	public const NAAGMMPOENG CARD_QUALITY_PERCECT = 2;
}
public enum IOPHFJDCGGN
{
	// Fields
	public const IOPHFJDCGGN CHESS_CARD_CURSE = 0;
	public const IOPHFJDCGGN CHESS_CARD_MECHANISM = 1;
	public const IOPHFJDCGGN CHESS_CARD_CHALLENGE = 2;
	public const IOPHFJDCGGN CHESS_CARD_STRENGTHEN = 3;
}
public enum AKOGPHEJDOI
{
	// Fields
	public const AKOGPHEJDOI CHESS_CARD_TARGET_DEFAULT = 0;
	public const AKOGPHEJDOI CHESS_CARD_TARGET_ALL = 1;
	public const AKOGPHEJDOI CHESS_CARD_TARGET_GADGETS = 2;
}
public enum CPKPGANNALE
{
	// Fields
	public const CPKPGANNALE CARD_NUMERICAL_DEFAULT_TYPE = 0;
	public const CPKPGANNALE CARD_NUMERICAL_ATTACK = 1;
	public const CPKPGANNALE CARD_NUMERICAL_MASTERY = 2;
	public const CPKPGANNALE CARD_NUMERICAL_ATTACK_INTERVAL = 3;
	public const CPKPGANNALE CARD_NUMERICAL_ATTACK_RANGE = 4;
}
public enum PEPPJOJFPNF
{
	// Fields
	public const PEPPJOJFPNF CARD_NUMERICAL_DEFAULT_MODE = 0;
	public const PEPPJOJFPNF CARD_NUMERICAL_BASE = 1;
	public const PEPPJOJFPNF CARD_NUMERICAL_PERCENTAGE = 2;
}
public enum KEACCFGLANK
{
	// Fields
	public const KEACCFGLANK CHESS_CARD_EFFECT_DEFAULT = 0;
	public const KEACCFGLANK CHESS_CARD_EFFECT_SET_SGV = 1;
	public const KEACCFGLANK CHESS_CARD_EFFECT_MOD_COST = 2;
	public const KEACCFGLANK CHESS_CARD_EFFECT_MOD_REFUND = 3;
	public const KEACCFGLANK CHESS_CARD_EFFECT_SET_HOME_HP = 4;
	public const KEACCFGLANK CHESS_CARD_EFFECT_ADD_HOME_HP = 5;
	public const KEACCFGLANK CHESS_CARD_EFFECT_ADD_KILL_POINTS = 6;
	public const KEACCFGLANK CHESS_CARD_EFFECT_MOD_KILL_POINTS = 7;
	public const KEACCFGLANK CHESS_CARD_EFFECT_ADD_GEAR_NUM = 8;
	public const KEACCFGLANK CHESS_CARD_EFFECT_KILL_GEARS = 9;
	public const KEACCFGLANK CHESS_CARD_EFFECT_GRANT_POINTS = 10;
	public const KEACCFGLANK CHESS_PASSIVE_AURA_BONUS_POINTS = 11;
	public const KEACCFGLANK CHESS_PASSIVE_AURA_SGV = 12;
	public const KEACCFGLANK CHESS_CARD_EFFECT_RANDOM_REMOVE = 13;
	public const KEACCFGLANK CHESS_CARD_EFFECT_POINTS_ON_ROUND_END = 14;
	public const KEACCFGLANK CHESS_CARD_EFFECT_SGV_PICK_CARD_LTE = 15;
	public const KEACCFGLANK CHESS_CARD_EFFECT_MOD_CARD_COST = 16;
	public const KEACCFGLANK CHESS_CARD_EFFECT_CARDS_TYPE_COUNT_NO_COST = 17;
	public const KEACCFGLANK CHESS_CARD_EFFECT_MOD_CANDIDATE_CARDS = 18;
	public const KEACCFGLANK CHESS_CARD_EFFECT_MOD_QUALITY_PROB = 19;
	public const KEACCFGLANK CHESS_CARD_EFFECT_FREE_CARD_REFRESH = 20;
	public const KEACCFGLANK CHESS_CARD_EFFECT_MOD_REFRESH_COST = 21;
	public const KEACCFGLANK CHESS_CARD_EFFECT_CARDS_COUNT_STACK_SGV = 22;
	public const KEACCFGLANK CHESS_CARD_EFFECT_POINTS_STACK_SGV = 23;
	public const KEACCFGLANK CHESS_CARD_EFFECT_CARD_TYPE_STACK_SGV = 24;
	public const KEACCFGLANK CHESS_CARD_EFFECT_CARD_TYPE_FORCE_CURSE = 25;
}
public enum DLMDCJIJLOC
{
	// Fields
	public const DLMDCJIJLOC CARD_TAG_NONE = 0;
	public const DLMDCJIJLOC CARD_TAG_WATER = 1;
	public const DLMDCJIJLOC CARD_TAG_FIRE = 2;
	public const DLMDCJIJLOC CARD_TAG_ICE = 3;
	public const DLMDCJIJLOC CARD_TAG_WIND = 4;
	public const DLMDCJIJLOC CARD_TAG_ELECTRIC = 5;
	public const DLMDCJIJLOC CARD_TAG_PHYSICS = 6;
	public const DLMDCJIJLOC CARD_TAG_HELP = 7;
	public const DLMDCJIJLOC CARD_TAG_OTHER = 8;
}
public enum FNHBBGAIEOD
{
	// Fields
	public const FNHBBGAIEOD CRYSTAL_LINK_DIFFICULTY_EASY = 0;
	public const FNHBBGAIEOD CRYSTAL_LINK_DIFFICULTY_MID = 1;
	public const FNHBBGAIEOD CRYSTAL_LINK_DIFFICULTY_HARD = 2;
}
public enum CHDHDOKFIDG
{
	// Fields
	public const CHDHDOKFIDG DRAGON_SPINE_PHASE_NONE = 0;
	public const CHDHDOKFIDG DRAGON_SPINE_PHASE_FIRST = 1;
	public const CHDHDOKFIDG DRAGON_SPINE_PHASE_SECOND = 2;
	public const CHDHDOKFIDG DRAGON_SPINE_PHASE_THIRD = 3;
	public const CHDHDOKFIDG DRAGON_SPINE_PHASE_FOURTH = 4;
}
public enum HFOKGKEENHC
{
	// Fields
	public const HFOKGKEENHC DRAGON_SPINE_EXEC_TYPE_NONE = 0;
	public const HFOKGKEENHC DRAGON_SPINE_EXEC_TYPE_BAN_DROP = 1;
	public const HFOKGKEENHC DRAGON_SPINE_EXEC_TYPE_CLEAR_ITEM = 2;
}
public enum FALBKIGGKFK
{
	// Fields
	public const FALBKIGGKFK DUEL_HEART_DIFFICULTY_NONE = 0;
	public const FALBKIGGKFK DUEL_HEART_DIFFICULTY_NORAML = 1;
	public const FALBKIGGKFK DUEL_HEART_DIFFICULTY_HARD = 2;
	public const FALBKIGGKFK DUEL_HEART_DIFFICULTY_MASTER = 3;
}
public enum ABIPFOHFFGF
{
	// Fields
	public const ABIPFOHFFGF ECHO_SHELL_TYPE_NORMAL_ECHO = 0;
	public const ABIPFOHFFGF ECHO_SHELL_TYPE_SPECIAL_ECHO = 1;
	public const ABIPFOHFFGF ECHO_SHELL_TYPE_NORMAL_IMAGE = 2;
	public const ABIPFOHFFGF ECHO_SHELL_TYPE_SPECIAL_IMAGE = 3;
	public const ABIPFOHFFGF ECHO_SHELL_TYPE_NORMAL_INTERACT = 4;
}
public enum JKIEBMKPLGJ
{
	// Fields
	public const JKIEBMKPLGJ EFFIGY_DIFFICULTY_NONE = 0;
	public const JKIEBMKPLGJ EFFIGY_DIFFICULTY_PRIMER = 1;
	public const JKIEBMKPLGJ EFFIGY_DIFFICULTY_NORMAL = 2;
	public const JKIEBMKPLGJ EFFIGY_DIFFICULTY_HARD = 3;
	public const JKIEBMKPLGJ EFFIGY_DIFFICULTY_EXPERT = 4;
}
public enum EJKNAKOCILI
{
	// Fields
	public const EJKNAKOCILI EFFIGY_CONDITION_NONE = 0;
	public const EJKNAKOCILI EFFIGY_CONDITION_TIME_LIMIT = 1;
	public const EJKNAKOCILI EFFIGY_CONDITION_LEVEL_CONFIG = 2;
	public const EJKNAKOCILI EFFIGY_CONDITION_MONSTER_CONFIG = 3;
}
public enum ELJJPKPINML
{
	// Fields
	public const ELJJPKPINML ELECTROHERCULES_BATTLE_DIFFICULTY_NONE = 0;
	public const ELJJPKPINML ELECTROHERCULES_BATTLE_DIFFICULTY_NORAML = 1;
	public const ELJJPKPINML ELECTROHERCULES_BATTLE_DIFFICULTY_HARD = 2;
	public const ELJJPKPINML ELECTROHERCULES_BATTLE_DIFFICULTY_MASTER = 3;
}
public enum DAPKGOCMADG
{
	// Fields
	public const DAPKGOCMADG ELECTROHERCULES_BATTLE_LEVEL_TYPE_NONE = 0;
	public const DAPKGOCMADG ELECTROHERCULES_BATTLE_LEVEL_TYPE_CHALLENGE = 1;
	public const DAPKGOCMADG ELECTROHERCULES_BATTLE_LEVEL_TYPE_GUIDE = 2;
}
public enum OPMHFHCICFM
{
	// Fields
	public const OPMHFHCICFM FLEUR_FAIR_MINI_GAME_NONE = 0;
	public const OPMHFHCICFM FLEUR_FAIR_MINI_GAME_BALLOON = 1;
	public const OPMHFHCICFM FLEUR_FAIR_MINI_GAME_FALL = 2;
	public const OPMHFHCICFM FLEUR_FAIR_MINI_GAME_MUSIC = 3;
}
public enum JFPIIMEKIGH
{
	// Fields
	public const JFPIIMEKIGH FLEUR_FAIR_DUNGEON_STAT_NONE = 0;
	public const JFPIIMEKIGH FLEUR_FAIR_DUNGEON_STAT_GROUP_VARIABLE = 1;
	public const JFPIIMEKIGH FLEUR_FAIR_DUNGEON_STAT_MONSTER_HURT = 2;
}
public enum PHCCNPCLGNH
{
	// Fields
	public const PHCCNPCLGNH FLEUR_FAIR_DUNGEON_STAT_METHOD_NONE = 0;
	public const PHCCNPCLGNH FLEUR_FAIR_DUNGEON_STAT_METHOD_MAXIMUM = 1;
	public const PHCCNPCLGNH FLEUR_FAIR_DUNGEON_STAT_METHOD_MINIMUM = 2;
}
public enum OEADMKDPCEK
{
	// Fields
	public const OEADMKDPCEK FUNGUS_TRAINING_DUNGEON_NONE = 0;
	public const OEADMKDPCEK FUNGUS_TRAINING_DUNGEON_ATTACK = 1;
	public const OEADMKDPCEK FUNGUS_TRAINING_DUNGEON_DEFEND = 2;
}
public enum MGGGINGDKHG
{
	// Fields
	public const MGGGINGDKHG Default = 0;
	public const MGGGINGDKHG Auto = 1;
	public const MGGGINGDKHG Manual = 2;
}
public enum MDJKNLNPMPH
{
	// Fields
	public const MDJKNLNPMPH Default = 0;
	public const MDJKNLNPMPH Partner = 1;
	public const MDJKNLNPMPH Enemy = 2;
}
public enum HIMDGMJDNMP
{
	// Fields
	public const HIMDGMJDNMP ROBOT_TYPE_NONE = 0;
	public const HIMDGMJDNMP ROBOT_TYPE_NORMAL = 1;
	public const HIMDGMJDNMP ROBOT_TYPE_HIDDEN = 2;
}
public enum OODOEFJFEKK
{
	// Fields
	public const OODOEFJFEKK TARGET_TYPE_NONE = 0;
	public const OODOEFJFEKK TARGET_TYPE_GATHER = 1;
	public const OODOEFJFEKK TARGET_TYPE_ELEM = 2;
	public const OODOEFJFEKK TARGET_TYPE_MONSTER = 3;
}
public enum NEPDFNEDOOK
{
	// Fields
	public const NEPDFNEDOOK ROBOT_TYPE_NONE = 0;
	public const NEPDFNEDOOK ROBOT_TYPE_SHAPE = 1;
	public const NEPDFNEDOOK ROBOT_TYPE_COLOR = 2;
	public const NEPDFNEDOOK ROBOT_TYPE_ACTION = 3;
	public const NEPDFNEDOOK ROBOT_TYPE_NUM = 4;
}
public enum PFNGGENBLIO
{
	// Fields
	public const PFNGGENBLIO DISCRETE = 0;
	public const PFNGGENBLIO CIRCLE = 1;
}
public enum JLABIGPMJPH
{
	// Fields
	public const JLABIGPMJPH NONE = 0;
	public const JLABIGPMJPH FINISH = 1;
}
public enum FADBFMCLHHE
{
	// Fields
	public const FADBFMCLHHE DEFAULT = 0;
	public const FADBFMCLHHE WINTER_CAMP_RACE = 1;
	public const FADBFMCLHHE WINTER_CAMP_EXPLORE = 2;
	public const FADBFMCLHHE WINTER_CAMP_BATTLE = 3;
	public const FADBFMCLHHE LANTERN_RITE_SALVAGE_PREVENT = 4;
	public const FADBFMCLHHE LANTERN_RITE_SALVAGE_ESCORT = 5;
	public const FADBFMCLHHE LANTERN_RITE_SALVAGE_SEA = 6;
	public const FADBFMCLHHE LANTERN_RITE_SALVAGE_LAND = 7;
	public const FADBFMCLHHE LANTERN_RITE_SALVAGE_BOSS = 8;
	public const FADBFMCLHHE MICHIAE_MATSURI_DARK_CHALLENGE = 9;
	public const FADBFMCLHHE SUMMER_TIME_V2_BOAT = 10;
	public const FADBFMCLHHE GRAVEN_RACE = 11;
	public const FADBFMCLHHE LAN_V3_RACE = 12;
	public const FADBFMCLHHE SORUSH_TRIAL_RACE = 13;
	public const FADBFMCLHHE SORUSH_TRIAL_HITMAN = 14;
}
public enum CCHGLKDCGEN
{
	// Fields
	public const CCHGLKDCGEN HIDE_AND_SEEK_SKILL_CATEGORY_NONE = 0;
	public const CCHGLKDCGEN HIDE_AND_SEEK_SKILL_CATEGORY_HUNTER = 1;
	public const CCHGLKDCGEN HIDE_AND_SEEK_SKILL_CATEGORY_PREY = 2;
	public const CCHGLKDCGEN HIDE_AND_SEEK_SKILL_CATEGORY_GHOST = 3;
}
public enum PEOCBJDFLAP
{
	// Fields
	public const PEOCBJDFLAP HIDE_AND_SEEK_SKILL_SUB_CATEGORY_NONE = 0;
	public const PEOCBJDFLAP HIDE_AND_SEEK_SKILL_SUB_CATEGORY_COMMON = 1;
	public const PEOCBJDFLAP HIDE_AND_SEEK_SKILL_SUB_CATEGORY_SKILL1 = 2;
	public const PEOCBJDFLAP HIDE_AND_SEEK_SKILL_SUB_CATEGORY_SKILL2 = 3;
}
public enum NIAMLDJEEBM
{
	// Fields
	public const NIAMLDJEEBM IRODORI_CHESS_CARD_MECHANISM = 0;
	public const NIAMLDJEEBM IRODORI_CHESS_CARD_STRENGTHEN = 1;
}
public enum LJJFNPNDJOO
{
	// Fields
	public const LJJFNPNDJOO IRODORI_CARD_QUALITY_NORAML = 0;
	public const LJJFNPNDJOO IRODORI_CARD_QUALITY_GOOD = 1;
	public const LJJFNPNDJOO IRODORI_CARD_QUALITY_PERCECT = 2;
}
public enum FKAADNOHKNO
{
	// Fields
	public const FKAADNOHKNO IRODORI_CHESS_CARD_TARGET_DEFAULT = 0;
	public const FKAADNOHKNO IRODORI_CHESS_CARD_TARGET_ALL = 1;
	public const FKAADNOHKNO IRODORI_CHESS_CARD_TARGET_GADGETS = 2;
}
public enum AAKPDBLDOFD
{
	// Fields
	public const AAKPDBLDOFD IRODORI_CHESS_CARD_EFFECT_DEFAULT = 0;
	public const AAKPDBLDOFD IRODORI_CHESS_CARD_EFFECT_ADD_SGV = 1;
	public const AAKPDBLDOFD IRODORI_CHESS_CARD_EFFECT_ADD_GEAR_NUM = 2;
	public const AAKPDBLDOFD IRODORI_CHESS_CARD_EFFECT_MOD_REFUND_BY_COST = 3;
	public const AAKPDBLDOFD IRODORI_CHESS_CARD_EFFECT_ADD_ABILITY_GROUP = 4;
	public const AAKPDBLDOFD IRODORI_CHESS_CARD_EFFECT_ADD_TARGET_GEAR_NUM = 5;
	public const AAKPDBLDOFD IRODORI_CHESS_CARD_EFFECT_LUA_CUSTOM = 6;
	public const AAKPDBLDOFD IRODORI_CHESS_CARD_EFFECT_SET_SGV = 7;
}
public enum PNDHKKLKHOP
{
	// Fields
	public const PNDHKKLKHOP IRODORI_CARD_TAG_NONE = 0;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_WATER = 1;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_FIRE = 2;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_ICE = 3;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_WIND = 4;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_ELECTRIC = 5;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_PHYSICS = 6;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_BOMB = 7;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_TRAP = 8;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_REPEL = 9;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_CHARACTER = 10;
	public const PNDHKKLKHOP IRODORI_CARD_TAG_OTHER = 11;
}
public enum JHAHACBLEHG
{
	// Fields
	public const JHAHACBLEHG IRODORI_CARD_NUMERICAL_DEFAULT_TYPE = 0;
	public const JHAHACBLEHG IRODORI_CARD_NUMERICAL_ATTACK = 1;
	public const JHAHACBLEHG IRODORI_CARD_NUMERICAL_MASTERY = 2;
	public const JHAHACBLEHG IRODORI_CARD_NUMERICAL_ATTACK_INTERVAL = 3;
	public const JHAHACBLEHG IRODORI_CARD_NUMERICAL_ATTACK_RANGE = 4;
}
public enum ECAADJIINBL
{
	// Fields
	public const ECAADJIINBL IRODORI_CARD_NUMERICAL_DEFAULT_MODE = 0;
	public const ECAADJIINBL IRODORI_CARD_NUMERICAL_BASE = 1;
	public const ECAADJIINBL IRODORI_CARD_NUMERICAL_PERCENTAGE = 2;
}
public enum KDABGALFDFO
{
	// Fields
	public const KDABGALFDFO IRODORI_MASTER_LEVEL_NONE = 0;
	public const KDABGALFDFO IRODORI_MASTER_LEVEL_NORAML = 1;
	public const KDABGALFDFO IRODORI_MASTER_LEVEL_HARD = 2;
	public const KDABGALFDFO IRODORI_MASTER_LEVEL_MASTER = 3;
}
public enum LNHDDIKFFHN
{
	// Fields
	public const LNHDDIKFFHN IRODORI_MASTER_MEDAL_NONE = 0;
	public const LNHDDIKFFHN IRODORI_MASTER_MEDAL_GOLD = 1;
	public const LNHDDIKFFHN IRODORI_MASTER_MEDAL_SILVER = 2;
}
public enum FKEIANPNBLD
{
	// Fields
	public const FKEIANPNBLD IRODORI_POETRY_ENTITY_TYPE_NONE = 0;
	public const FKEIANPNBLD IRODORI_POETRY_ENTITY_TYPE_EMPTY_GADGET = 1;
	public const FKEIANPNBLD IRODORI_POETRY_ENTITY_TYPE_GATHER = 2;
	public const FKEIANPNBLD IRODORI_POETRY_ENTITY_TYPE_MONSTER = 3;
}
public enum AHFBLOGNGBP
{
	// Fields
	public const AHFBLOGNGBP STAGE_TYPE_NONE = 0;
	public const AHFBLOGNGBP STAGE_TYPE_RAFT = 1;
	public const AHFBLOGNGBP STAGE_TYPE_SAIL = 2;
	public const AHFBLOGNGBP STAGE_TYPE_DOWN_HILL = 3;
}
public enum BIFDIHLMNNP
{
	// Fields
	public const BIFDIHLMNNP LUNA_RITE_REGION_TYPE_INVALID = 0;
	public const BIFDIHLMNNP LUNA_RITE_REGION_TYPE_LIYUE = 1;
	public const BIFDIHLMNNP LUNA_RITE_REGION_TYPE_MENGDE = 2;
	public const BIFDIHLMNNP LUNA_RITE_REGION_TYPE_DRAGONSPINE = 3;
}
public enum FHOOGMKCOGJ
{
	// Fields
	public const FHOOGMKCOGJ LUNA_RITE_QUEST_TYPE_MAINLINE = 0;
	public const FHOOGMKCOGJ LUNA_RITE_QUEST_TYPE_BIGWORLD = 1;
}
public enum ODIICHDCDOI
{
	// Fields
	public const ODIICHDCDOI ACTIVITY_MAP_TYPE_DEFAULT = 0;
	public const ODIICHDCDOI ACTIVITY_MAP_TYPE_PACMAN = 1;
}
public enum KCFKOMFICOH
{
	// Fields
	public const KCFKOMFICOH ACTIVITY_MARK_ROTATE_TYPE_NEVER = 0;
	public const KCFKOMFICOH ACTIVITY_MARK_ROTATE_TYPE_ENTITY_DIRECTION = 1;
	public const KCFKOMFICOH ACTIVITY_MARK_ROTATE_TYPE_MAP_BACK = 2;
}
public enum GPECCEPLCDI
{
	// Fields
	public const GPECCEPLCDI ACTIVITY_MICHIAE_INTERACT_NONE = 0;
	public const GPECCEPLCDI ACTIVITY_MICHIAE_INTERACT_STATUE = 1;
	public const GPECCEPLCDI ACTIVITY_MICHIAE_INTERACT_DARK_CHALLENGE = 2;
	public const GPECCEPLCDI ACTIVITY_MICHIAE_INTERACT_BOSS_CHALLENGE = 3;
	public const GPECCEPLCDI ACTIVITY_MICHIAE_INTERACT_STATUE_SHOW_REMINDER = 4;
}
public enum IDGOBBANPIM
{
	// Fields
	public const IDGOBBANPIM MICHIAE_MATSURI_RADAR_MARK_TYPE_NONE = 0;
	public const IDGOBBANPIM MICHIAE_MATSURI_RADAR_MARK_TYPE_CHEST = 1;
	public const IDGOBBANPIM MICHIAE_MATSURI_RADAR_MARK_TYPE_CHALLENGE = 2;
}
public enum GMPFKNBEKAA
{
	// Fields
	public const GMPFKNBEKAA ASSIGNMENT_TYPE_GIVING = 0;
	public const GMPFKNBEKAA ASSIGNMENT_TYPE_FIGHT = 1;
}
public enum CDPCMJAPKEP
{
	// Fields
	public const CDPCMJAPKEP MIST_TRIAL_SYNC_NONE = 0;
	public const CDPCMJAPKEP MIST_TRIAL_SYNC_PROGRESS = 1;
	public const CDPCMJAPKEP MIST_TRIAL_SYNC_STAT_VALUE = 2;
	public const CDPCMJAPKEP MIST_TRIAL_SYNC_CHALLENGE_LEFT_TIME = 3;
}
public enum JLCEHNFCIDC
{
	// Fields
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_NONE = 0;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_FINISH_CHALLENGE_COUNT = 1;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_ATTACK_BY_GEAR_COUNT = 2;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_KILL_MONSTER_BY_ATTACK_TAG = 3;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_RECOVER_HP_COUNT = 4;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_KILL_SHIELD_COUNT = 5;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_BE_HURT_COUNT = 6;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_KILL_MONSTER_BY_SHIELD = 7;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_DISABLE_GEAR_COUNT = 8;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_ELEMENT_REACTION_TYPE_NUM = 9;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_ELEMENT_REACTION_COUNT = 10;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_ELEMENT_BURST_COUNT = 11;
	public const JLCEHNFCIDC MIST_TRIAL_STAT_TYPE_KILL_MONSTER_COUNT = 12;
}
public enum GKLFAGOHKPM
{
	// Fields
	public const GKLFAGOHKPM MOONFIN_TRIAL_ACTIVITY_LEVEL_TYPE_QUEST = 0;
	public const GKLFAGOHKPM MOONFIN_TRIAL_ACTIVITY_LEVEL_TYPE_CHALLENGE_TOTAL = 1;
	public const GKLFAGOHKPM MOONFIN_TRIAL_ACTIVITY_LEVEL_TYPE_CHALLENGE_SPECIFIC = 2;
	public const GKLFAGOHKPM MOONFIN_TRIAL_ACTIVITY_LEVEL_TYPE_CHALLENGE_CONTINUOUS = 3;
	public const GKLFAGOHKPM MOONFIN_TRIAL_ACTIVITY_LEVEL_TYPE_SPECIAL_FISH = 4;
}
public enum HJMKDPOAOEM
{
	// Fields
	public const HJMKDPOAOEM NONE = 0;
	public const HJMKDPOAOEM ARANARA = 1;
}
public enum NCCJLKPECAI
{
	// Fields
	public const NCCJLKPECAI REGION_SEARCH_TYPE_NONE = 0;
	public const NCCJLKPECAI REGION_SEARCH_TYPE_ACTIVITY = 1;
}
public enum GHFCDALGPBI
{
	// Fields
	public const GHFCDALGPBI REGION_SEARCH_COND_NONE = 0;
	public const GHFCDALGPBI REGION_SEARCH_COND_ACTIVITY_COND = 1;
	public const GHFCDALGPBI REGION_SEARCH_COND_FINISH_SEARCH = 2;
}
public enum OPFPCOHIPOO
{
	// Fields
	public const OPFPCOHIPOO REGION_SEARCH_RECYCLE_NONE = 0;
	public const OPFPCOHIPOO REGION_SEARCH_RECYCLE_PROGRESS = 1;
}
public enum ALPFHGDPDHM
{
	// Fields
	public const ALPFHGDPDHM ROGUE_DIARY_STAGE_DIFFICULTY_NONE = 0;
	public const ALPFHGDPDHM ROGUE_DIARY_STAGE_DIFFICULTY_NORMAL = 1;
	public const ALPFHGDPDHM ROGUE_DIARY_STAGE_DIFFICULTY_HARD = 2;
	public const ALPFHGDPDHM ROGUE_DIARY_STAGE_DIFFICULTY_INSANE = 3;
}
public enum HMOINAOCOGJ
{
	// Fields
	public const HMOINAOCOGJ ROGUE_DIARY_TIRED_NONE = 0;
	public const HMOINAOCOGJ ROGUE_DIARY_TIRED_SELECT = 1;
	public const HMOINAOCOGJ ROGUE_DIARY_TIRED_RANDOM = 2;
	public const HMOINAOCOGJ ROGUE_DIARY_TIRED_ALL = 3;
}
public enum IDOJIKMEHIE
{
	// Fields
	public const IDOJIKMEHIE ROGUE_DIARY_BUFF_NONE = 0;
	public const IDOJIKMEHIE ROGUE_DIARY_BUFF_R = 1;
	public const IDOJIKMEHIE ROGUE_DIARY_BUFF_SR = 2;
}
public enum ODNDHCIEEPO
{
	// Fields
	public const ODNDHCIEEPO ROGUE_DIARY_BUFF_EFFECT_NONE = 0;
	public const ODNDHCIEEPO ROGUE_DIARY_BUFF_EFFECT_ABILITY = 1;
	public const ODNDHCIEEPO ROGUE_DIARY_BUFF_EFFECT_UNLOCK_TALENT = 2;
}
public enum JMLMLJAOJFK
{
	// Fields
	public const JMLMLJAOJFK ROGUE_DIARY_GET_FIGHT = 0;
	public const JMLMLJAOJFK ROGUE_DIARY_GET_CHALLENGE = 1;
	public const JMLMLJAOJFK ROGUE_DIARY_GET_BOSS = 2;
	public const JMLMLJAOJFK ROGUE_DIARY_USE_REROLL = 3;
	public const JMLMLJAOJFK ROGUE_DIARY_GET_BUYCARD = 4;
	public const JMLMLJAOJFK ROGUE_DIARY_GET_REVIVE = 5;
}
public enum PPEEGMFMEAD
{
	// Fields
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_NONE = 0;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_STATIC_COMBAT = 1;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_DYNAMIC_COMBAT = 2;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_DISABLE_SPRING_CELL = 3;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_ADD_TALENT = 4;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_ADD_LEVEL_TRAP = 5;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_CLEAR_LEVEL_TRAP = 6;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_RANDOM_CLEAR_A_CURSE = 7;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_CLEAR_ALL_CURSE = 8;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_ADD_RUNE_MAX_COUNT = 9;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_ADD_RUNE_USE_COUNT = 10;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_FILL_RUNE_USE_COUNT = 11;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_USE_RUNE_PROB_NOT_SUB = 12;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_CLEAR_MIST = 13;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_ADD_RESOURCE = 14;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_RANDOM_AVATAR_NOHEAL = 15;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_ADD_CARD_TYPE_WEIGHT = 16;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_SUB_REFRESH_CARD_COST = 17;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_CHANGE_GADGET_NUM = 18;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_SUB_CURSE_PROB = 19;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_PROB_FREE_REFRESH_CARD = 20;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_ADD_CARD_TYPE_WEIGHT_ROOM_FIRST = 21;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_AT_MOST_TRAP_COUNT = 22;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_SPRING_AND_BOSS = 23;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_AT_LEAST_STORE_COUNT = 24;
	public const PPEEGMFMEAD ROGUELIKE_EFFECT_BAN_GUARD = 25;
}
public enum BPLOBGADEDE
{
	// Fields
	public const BPLOBGADEDE SHIKIGAMI_UNLOCK_NONE = 0;
	public const BPLOBGADEDE SHIKIGAMI_UNLOCK_SHIKIGAMI = 1;
	public const BPLOBGADEDE SHIKIGAMI_UNLOCK_ACTIVITY_DAY = 2;
	public const BPLOBGADEDE SHIKIGAMI_UNLOCK_ROGUELIKE_STAGE = 3;
}
public enum MMGNOJHNGMC
{
	// Fields
	public const MMGNOJHNGMC ROGUELIKE_CARD_TPYE_NONE = 0;
	public const MMGNOJHNGMC ROGUELIKE_CARD_TPYE_SSR = 1;
	public const MMGNOJHNGMC ROGUELIKE_CARD_TPYE_SR = 2;
	public const MMGNOJHNGMC ROGUELIKE_CARD_TPYE_R = 3;
}
public enum BLDNKJEBKOH
{
	// Fields
	public const BLDNKJEBKOH ROGUELIKE_CARD_LABEL_COMBAT = 0;
	public const BLDNKJEBKOH ROGUELIKE_CARD_LABEL_LEVEL = 1;
	public const BLDNKJEBKOH ROGUELIKE_CARD_LABEL_RUNE = 2;
	public const BLDNKJEBKOH ROGUELIKE_CARD_LABEL_EQUIPMENT = 3;
}
public enum MNEAODMPGCA
{
	// Fields
	public const MNEAODMPGCA ROGUE_CELL_TYPE_NONE = 0;
	public const MNEAODMPGCA ROGUE_CELL_TYPE_INIT = 1;
	public const MNEAODMPGCA ROGUE_CELL_TYPE_STORE = 2;
	public const MNEAODMPGCA ROGUE_CELL_TYPE_ELITE = 3;
	public const MNEAODMPGCA ROGUE_CELL_TYPE_NORMAL = 4;
	public const MNEAODMPGCA ROGUE_CELL_TYPE_SPRING = 5;
	public const MNEAODMPGCA ROGUE_CELL_TYPE_BOSS = 6;
	public const MNEAODMPGCA ROGUE_CELL_TYPE_CHEST = 7;
}
public enum DMPKMHEEGCC
{
	// Fields
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_NONE = 0;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_DOOR = 1;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_NORMAL_OPERATOR = 2;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_ELITE_OPERATOR = 3;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_SPRING_OPERATOR_REVEAL = 4;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_SPRING_OPERATOR_REVIVE = 5;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_SPRING_OPERATOR_SWITCH = 6;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_SPRING_STORE = 7;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_BLAST = 8;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_TRAP = 9;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_BREAKAGES = 10;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_BALL = 11;
	public const DMPKMHEEGCC ROGUE_GADGET_TYPE_GUARD = 12;
}
public enum FLEGIDEKCEL
{
	// Fields
	public const FLEGIDEKCEL ROGUE_GADGET_STATE_NONE = 0;
	public const FLEGIDEKCEL ROGUE_GADGET_STATE_DOOR_OPEN = 1;
	public const FLEGIDEKCEL ROGUE_GADGET_STATE_DOOR_CLOSE = 2;
	public const FLEGIDEKCEL ROGUE_GADGET_STATE_OPERATOR_DEFAULT = 3;
	public const FLEGIDEKCEL ROGUE_GADGET_STATE_OPERATOR_IN_CHALLENGE = 4;
	public const FLEGIDEKCEL ROGUE_GADGET_STATE_OPERATOR_FINISH_CHALLENGE = 5;
	public const FLEGIDEKCEL ROGUE_GADGET_STATE_OPERATOR_AFTER_USE = 6;
	public const FLEGIDEKCEL ROGUE_GADGET_STATE_OPERATOR_FORBID = 7;
}
public enum IDPHHNMJJCK
{
	// Fields
	public const IDPHHNMJJCK ROGUE_GADGET_ROT_UP = 0;
	public const IDPHHNMJJCK ROGUE_GADGET_ROT_DOWN = 1;
	public const IDPHHNMJJCK ROGUE_GADGET_ROT_LEFT = 2;
	public const IDPHHNMJJCK ROGUE_GADGET_ROT_RIGHT = 3;
}
public enum JMPKDJBPKIP
{
	// Fields
	public const JMPKDJBPKIP ROGUE_MONSTER_DIFFICULTY_NORMAL = 0;
	public const JMPKDJBPKIP ROGUE_MONSTER_DIFFICULTY_ELITE_EASY = 1;
	public const JMPKDJBPKIP ROGUE_MONSTER_DIFFICULTY_ELITE_HARD = 2;
	public const JMPKDJBPKIP ROGUE_MONSTER_DIFFICULTY_BOSS = 3;
}
public enum IJMABDFLMFK
{
	// Fields
	public const IJMABDFLMFK SPECIAL_REWARD = 0;
	public const IJMABDFLMFK SPECIAL_MATERIAL = 1;
	public const IJMABDFLMFK SPECIAL_DROP = 2;
}
public enum FGKBDDAFIKB
{
	// Fields
	public const FGKBDDAFIKB METHOD_DAY_PROBABILITY = 0;
	public const FGKBDDAFIKB METHOD_DAY_ACCUMULATION = 1;
}
public enum LLPLEPNJIGG
{
	// Fields
	public const LLPLEPNJIGG ELEC = 0;
	public const LLPLEPNJIGG FIRE = 1;
	public const LLPLEPNJIGG GRASS = 2;
	public const LLPLEPNJIGG ICE = 3;
	public const LLPLEPNJIGG ROCK = 4;
	public const LLPLEPNJIGG WATER = 5;
	public const LLPLEPNJIGG WIND = 6;
}
public enum HHBCNFFKGJG
{
	// Fields
	public const HHBCNFFKGJG None = 0;
	public const HHBCNFFKGJG FreeRotation = 1;
	public const HHBCNFFKGJG SingleAxisRotation = 2;
}
public enum CGBDFLECPEC
{
	// Fields
	public const CGBDFLECPEC FreeRotation = 0;
	public const CGBDFLECPEC SingleAxisRotation = 1;
	public const CGBDFLECPEC SingleAxisTranslation = 2;
}
public enum EHEIHHNLLDL
{
	// Fields
	public const EHEIHHNLLDL SALVAGE_PLAY_TYPE_NONE = 0;
	public const EHEIHHNLLDL SALVAGE_PLAY_TYPE_LAND = 1;
	public const EHEIHHNLLDL SALVAGE_PLAY_TYPE_SEA = 2;
	public const EHEIHHNLLDL SALVAGE_PLAY_TYPE_CARRIAGE = 3;
	public const EHEIHHNLLDL SALVAGE_PLAY_TYPE_ESCORT = 4;
	public const EHEIHHNLLDL SALVAGE_PLAY_TYPE_BOSS = 5;
}
public enum PIDAJGLBKOC
{
	// Fields
	public const PIDAJGLBKOC FIREWORKS_REFORM_SKILL_NONE = 0;
	public const PIDAJGLBKOC FIREWORKS_REFORM_SKILL_GENERAL = 1;
	public const PIDAJGLBKOC FIREWORKS_REFORM_SKILL_INSTABLE = 2;
	public const PIDAJGLBKOC FIREWORKS_REFORM_SKILL_ADJACENT = 3;
}
public enum APAIPDBOEBP
{
	// Fields
	public const APAIPDBOEBP LAN_V3_BOAT_NONE = 0;
	public const APAIPDBOEBP LAN_V3_BOAT_MULTI = 1;
	public const APAIPDBOEBP LAN_V3_BOAT_SINGLE = 2;
}
public enum MEGNPKAMIEB
{
	// Fields
	public const MEGNPKAMIEB ACTIVITY_SHOP_SHEET_COND_NONE = 0;
	public const MEGNPKAMIEB ACTIVITY_SHOP_SHEET_COND_QUEST_FINISH = 1;
	public const MEGNPKAMIEB ACTIVITY_SHOP_SHEET_COND_TIME_EQUAL_GREATER = 2;
	public const MEGNPKAMIEB ACTIVITY_SHOP_SHEET_COND_SEA_LAMP_PHASE = 3;
}
public enum DDLGBDHECOI
{
	// Fields
	public const DDLGBDHECOI SORUSH_TRIAL_GALLERY_TYPE_INVALID = 0;
	public const DDLGBDHECOI SORUSH_TRIAL_GALLERY_TYPE_HITMAN = 1;
	public const DDLGBDHECOI SORUSH_TRIAL_GALLERY_TYPE_RACE = 2;
	public const DDLGBDHECOI SORUSH_TRIAL_GALLERY_TYPE_PHOTO_MATCH = 3;
}
public enum GJKDINFCJLF
{
	// Fields
	public const GJKDINFCJLF SORUSH_TRIAL_STAGE_DETAIL_TYPE_NONE = 0;
	public const GJKDINFCJLF SORUSH_TRIAL_STAGE_DETAIL_TYPE_QUEST = 1;
	public const GJKDINFCJLF SORUSH_TRIAL_STAGE_DETAIL_TYPE_HITMAN = 2;
	public const GJKDINFCJLF SORUSH_TRIAL_STAGE_DETAIL_TYPE_PHOTOMATCH = 3;
	public const GJKDINFCJLF SORUSH_TRIAL_STAGE_DETAIL_TYPE_RACE = 4;
}
public enum AKHKPLGHJDK
{
	// Fields
	public const AKHKPLGHJDK SORUSH_TRIAL_HITMAN_SURVEY_TYPE_NONE = 0;
	public const AKHKPLGHJDK SORUSH_TRIAL_HITMAN_SURVEY_TYPE_GADGET = 1;
	public const AKHKPLGHJDK SORUSH_TRIAL_HITMAN_SURVEY_TYPE_MONSTER = 2;
}
public enum EPMOCONPIME
{
	// Fields
	public const EPMOCONPIME TIME = 0;
	public const EPMOCONPIME PARAM = 1;
}
public enum NLOJJHCKONB
{
	// Fields
	public const NLOJJHCKONB SUMO_MONSTER_WAVE_TIME = 0;
	public const NLOJJHCKONB SUMO_MONSTER_WAVE_COUNT = 1;
}
public enum NNIPBKMFNAL
{
	// Fields
	public const NNIPBKMFNAL SUMO_DIFFICULTY_EASY = 0;
	public const NNIPBKMFNAL SUMO_DIFFICULTY_MID = 1;
	public const NNIPBKMFNAL SUMO_DIFFICULTY_HARD = 2;
}
public enum DKNNHEELPEB
{
	// Fields
	public const DKNNHEELPEB PRESENT_TYPE_NONE = 0;
	public const DKNNHEELPEB PRESENT_TYPE_NORMAL = 1;
	public const DKNNHEELPEB PRESENT_TYPE_SPECIAL = 2;
	public const DKNNHEELPEB PRESENT_TYPE_AVARTAR = 3;
}
public enum IIFBGLBBADE
{
	// Fields
	public const IIFBGLBBADE MARKET_TRADE_TYPE_DEAL = 0;
	public const IIFBGLBBADE MARKET_TRADE_TYPE_BARGAIN = 1;
}
public enum DGDPBCBCHFH
{
	// Fields
	public const DGDPBCBCHFH VINTAGE_MARKET_EVENT_TRIGGER_NONE = 0;
	public const DGDPBCBCHFH VINTAGE_MARKET_EVENT_TRIGGER_ROUND = 1;
}
public enum JEIAKPMPFDJ
{
	// Fields
	public const JEIAKPMPFDJ VINTAGE_MARKET_EVENT_NONE = 0;
	public const JEIAKPMPFDJ VINTAGE_MARKET_EVENT_ENV = 1;
	public const JEIAKPMPFDJ VINTAGE_MARKET_EVENT_NPC = 2;
}
public enum BOJBIPLBNOP
{
	// Fields
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_NONE = 0;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_ATTR_ADD_FIXED = 1;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_ATTR_SUB_FIXED = 2;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_AIM_ATTR_ADD_FIXED = 3;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_AIM_ATTR_SUB_FIXED = 4;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_ATTR_ADD_PERCENT = 5;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_FIXED_INCOME_WITH_ENV = 6;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_PERCENT_INCOME_WITH_ENV = 7;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_ADD_FIXED_ATTR_WITH_ENV = 8;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_ADD_PERCENT_ATTR_WITH_ENV = 9;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_REWARD_FACTOR = 10;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_FIXED_INCOME_BY_TOTAL_INCOME = 11;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_PERCENT_INCOME_BY_TOTAL_INCOME = 12;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_PROB_RETURN_COST_WHEN_ATTR_GE_AIM = 13;
	public const BOJBIPLBNOP VINTAGE_MARKET_EFFECT_PERCENT_INCOME_WHEN_ATTR_GE_AIM = 14;
}
public enum PFDBIJJMFND
{
	// Fields
	public const PFDBIJJMFND VINTAGE_STORE_DIVIDEND_NONE = 0;
	public const PFDBIJJMFND VINTAGE_STORE_DIVIDEND_LIMIT = 1;
	public const PFDBIJJMFND VINTAGE_STORE_DIVIDEND_CLOSE = 2;
	public const PFDBIJJMFND VINTAGE_STORE_DIVIDEND_SUCC = 3;
}
public enum LBHILHBILNG
{
	// Fields
	public const LBHILHBILNG SHOW_TYPE_NONE = 0;
	public const LBHILHBILNG SHOW_TYPE_WIND = 1;
	public const LBHILHBILNG SHOW_TYPE_WIND_TIME = 2;
	public const LBHILHBILNG SHOW_TYPE_COIN = 3;
	public const LBHILHBILNG SHOW_TYPE_DEFEAT_MONSTER = 4;
	public const LBHILHBILNG SHOW_TYPE_TATAKAI = 5;
	public const LBHILHBILNG SHOW_TYPE_GOAL = 6;
	public const LBHILHBILNG SHOW_TYPE_WIND_PROGRESS = 7;
}
public enum AKOECOIAOHK
{
	// Fields
	public const AKOECOIAOHK AVATAR_TEST = 0;
	public const AKOECOIAOHK AVATAR_SYNC_TEST = 1;
	public const AKOECOIAOHK AVATAR_FORMAL = 2;
	public const AKOECOIAOHK AVATAR_ABANDON = 3;
}
public enum JKLDFIDFDCC
{
	// Fields
	public const JKLDFIDFDCC AVATAR_IDENTITY_MASTER = 0;
	public const JKLDFIDFDCC AVATAR_IDENTITY_NORMAL = 1;
}
public enum DCFDBDLDIEJ
{
	// Fields
	public const DCFDBDLDIEJ FASHION_TYPE_NONE = 0;
	public const DCFDBDLDIEJ FASHION_TYPE_FLYCLOAK = 1;
}
public enum FLGFALKJLKK
{
	// Fields
	public const FLGFALKJLKK MONITOR_NEVER = 0;
	public const FLGFALKJLKK MONITOR_OFF_STAGE = 1;
	public const FLGFALKJLKK MONITOR_ON_STAGE = 2;
	public const FLGFALKJLKK MONITOR_ALWAYS = 3;
}
public enum DBNNANKNOBI
{
	// Fields
	public const DBNNANKNOBI AST_AVATAR = 0;
	public const DBNNANKNOBI AST_TEAM = 1;
	public const DBNNANKNOBI AST_PLAY = 2;
	public const DBNNANKNOBI AST_VEHICLE = 3;
}
public enum EHNKPEEIJNF
{
	// Fields
	public const EHNKPEEIJNF TALENT_POINT_NONE = 0;
	public const EHNKPEEIJNF TALENT_POINT_SMALL = 1;
	public const EHNKPEEIJNF TALENT_POINT_BIG = 2;
}
public enum KEHNKKHDCBK
{
	// Fields
	public const KEHNKKHDCBK TALENT_FILTER_NONE = 0;
	public const KEHNKKHDCBK TALENT_FILTER_FIRE_AVATAR = 1;
	public const KEHNKKHDCBK TALENT_FILTER_ELEC_AVATAR = 2;
	public const KEHNKKHDCBK TALENT_FILTER_WATER_AVATAR = 3;
	public const KEHNKKHDCBK TALENT_FILTER_GRASS_AVATAR = 4;
	public const KEHNKKHDCBK TALENT_FILTER_WIND_AVATAR = 5;
	public const KEHNKKHDCBK TALENT_FILTER_ICE_AVATAR = 6;
	public const KEHNKKHDCBK TALENT_FILTER_ROCK_AVATAR = 7;
}
public enum BHGPCIBJAAA
{
	// Fields
	public const BHGPCIBJAAA PROUD_SKILL_NONE = 0;
	public const BHGPCIBJAAA PROUD_SKILL_CORE = 1;
	public const BHGPCIBJAAA PROUD_SKILL_INHERENT = 2;
	public const BHGPCIBJAAA PROUD_SKILL_ACTIVE = 3;
}
public enum COOHKOMNEKI
{
	// Fields
	public const COOHKOMNEKI EFFECT_TARGET_NONE = 0;
	public const COOHKOMNEKI EFFECT_TARGET_SOLO = 1;
	public const COOHKOMNEKI EFFECT_TARGET_TEAM = 2;
}
public enum IKPPIGECICC
{
	// Fields
	public const IKPPIGECICC PROUD_EFFECT_NONE = 0;
	public const IKPPIGECICC PROUD_EFFECT_COMBINE_RETURN_MATERIAL = 1;
	public const IKPPIGECICC PROUD_EFFECT_COMBINE_MULTIPLY_OUTPUT = 2;
	public const IKPPIGECICC PROUD_EFFECT_COMBINE_EXTRA_OUTPUT = 3;
	public const IKPPIGECICC PROUD_EFFECT_COMBINE_ADD_EXTRA_PROB = 4;
	public const IKPPIGECICC PROUD_EFFECT_COMBINE_RETURN_SPECIAL_MATERIAL = 5;
	public const IKPPIGECICC PROUD_EFFECT_COOK_EXTRA_PROFICIENCY = 101;
	public const IKPPIGECICC PROUD_EFFECT_COOK_WIDEN_JUDGE_AREA = 102;
	public const IKPPIGECICC PROUD_EFFECT_COOK_ADD_BONUS_PROB = 103;
	public const IKPPIGECICC PROUD_EFFECT_COOK_PERFECT_MULTI_OUTPUT = 104;
	public const IKPPIGECICC PROUD_EFFECT_COOK_PROB_MULTI_OUTPUT = 105;
	public const IKPPIGECICC PROUD_EFFECT_COOK_CAN_NOT_COOK = 106;
	public const IKPPIGECICC PROUD_EFFECT_FORGE_REDUCE_TIME = 203;
	public const IKPPIGECICC PROUD_EFFECT_FORGE_ADD_EXTRA_PROB = 204;
	public const IKPPIGECICC PROUD_EFFECT_FORGE_RETURN_MATERIAL = 205;
	public const IKPPIGECICC PROUD_EFFECT_EXPEDITION_SHORTEN_TIME = 301;
	public const IKPPIGECICC PROUD_EFFECT_EXPEDITION_EXTRA_OUTPUT = 302;
	public const IKPPIGECICC PROUD_EFFECT_FURNITURE_MAKE_RETURN_MATERIAL = 401;
	public const IKPPIGECICC PROUD_EFFECT_WEAPON_PROMOTE_REDUCE_SCOIN = 501;
	public const IKPPIGECICC PROUD_EFFECT_FISHING_EXTRA_OUTPUT = 601;
	public const IKPPIGECICC PROUD_EFFECT_HIT_TREE_EXTRA_OUTPUT = 701;
}
public enum DJNAHDPEEMC
{
	// Fields
	public const DJNAHDPEEMC BATTLE_PASS_SCHEDULE_REWARD_WEAPON = 0;
	public const DJNAHDPEEMC BATTLE_PASS_SCHEDULE_REWARD_WING = 1;
}
public enum MBMNIGMOELE
{
	// Fields
	public const MBMNIGMOELE BATTLE_PASS_MISSION_REFRESH_DAILY = 0;
	public const MBMNIGMOELE BATTLE_PASS_MISSION_REFRESH_CYCLE = 1;
	public const MBMNIGMOELE BATTLE_PASS_MISSION_REFRESH_SCHEDULE = 2;
	public const MBMNIGMOELE BATTLE_PASS_MISSION_REFRESH_CYCLE_CROSS_SCHEDULE = 3;
}
public enum MBLFKOAJMFB
{
	// Fields
	public const MBLFKOAJMFB BLOSSOM_REFRESH_NONE = 0;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_SCOIN = 1;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_WEAPON = 2;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_EXP = 3;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_CRYSTAL = 4;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_INFUSED_CRYSTAL = 5;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_DRAGON_SPINE_A = 6;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_DRAGON_SPINE_B = 7;
	public const MBLFKOAJMFB BLOSSOM_ISLAND_SENTRY_TOWER_A = 8;
	public const MBLFKOAJMFB BLOSSOM_ISLAND_SENTRY_TOWER_B = 9;
	public const MBLFKOAJMFB BLOSSOM_ISLAND_BOMB = 10;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_BLITZ_RUSH_A = 11;
	public const MBLFKOAJMFB BLOSSOM_REFRESH_BLITZ_RUSH_B = 12;
}
public enum JKLLOFNGKBO
{
	// Fields
	public const JKLLOFNGKBO BLOSSOM_SHOWTYPE_NONE = 0;
	public const JKLLOFNGKBO BLOSSOM_SHOWTYPE_CHALLENGE = 1;
	public const JKLLOFNGKBO BLOSSOM_SHOWTYPE_NPCTALK = 2;
	public const JKLLOFNGKBO BLOSSOM_SHOWTYPE_GROUPCHALLENGE = 3;
}
public enum LOALJDNAMMP
{
	// Fields
	public const LOALJDNAMMP BLOSSOM_REWARD_TYPE_DEFAULT = 0;
	public const LOALJDNAMMP BLOSSOM_REWARD_TYPE_TO_BAG = 1;
}
public enum EFGCKHLBNFD
{
	// Fields
	public const EFGCKHLBNFD BLOSSOM_CHEST_SHOWTYPE_BLOSSOM = 0;
	public const EFGCKHLBNFD BLOSSOM_CHEST_SHOWTYPE_NO_RESIN = 1;
}
public enum CJFLIJBCMOH
{
	// Fields
	public const CJFLIJBCMOH BLOSSOM_REFRESH_COND_NONE = 0;
	public const CJFLIJBCMOH BLOSSOM_REFRESH_COND_PLAYER_LEVEL_EQUAL_GREATER = 1;
	public const CJFLIJBCMOH BLOSSOM_REFRESH_COND_PLAYER_LEVEL_LESS_THAN = 2;
	public const CJFLIJBCMOH BLOSSOM_REFRESH_COND_OPEN_STATE = 3;
	public const CJFLIJBCMOH BLOSSOM_REFRESH_COND_QUEST_FINISH = 4;
	public const CJFLIJBCMOH BLOSSOM_REFRESH_COND_ACTIVITY_COND = 5;
	public const CJFLIJBCMOH BLOSSOM_REFRESH_COND_SCENE_TAG_ADDED = 6;
}
public enum CKFIGFFMCDG
{
	// Fields
	public const CKFIGFFMCDG BOARD_EVENT_NONE = 0;
	public const CKFIGFFMCDG BOARD_EVENT_KILL_MONSTER = 1;
	public const CKFIGFFMCDG BOARD_EVENT_GAME = 101;
	public const CKFIGFFMCDG BOARD_EVENT_GATHER = 102;
	public const CKFIGFFMCDG BOARD_EVENT_ACCELERATE = 104;
	public const CKFIGFFMCDG BOARD_EVENT_USE_ITEM = 105;
	public const CKFIGFFMCDG BOARD_EVENT_CHANGE_AVATAR = 106;
	public const CKFIGFFMCDG BOARD_EVENT_SKILL = 107;
	public const CKFIGFFMCDG BOARD_EVENT_REGION = 108;
}
public enum LEJDJKNGMIB
{
	// Fields
	public const LEJDJKNGMIB BORED_ACTION_NONE = 0;
	public const LEJDJKNGMIB BORED_ACTION_CREATE_MONSTER = 1;
	public const LEJDJKNGMIB BORED_ACTION_AMBUSH = 2;
	public const LEJDJKNGMIB BORED_ACTION_ENHANCE_GATHER = 3;
}
public enum DKFINLLFCHM
{
	// Fields
	public const DKFINLLFCHM BUFF_REFRESH = 0;
	public const DKFINLLFCHM BUFF_EXTEND = 1;
	public const DKFINLLFCHM BUFF_STACK = 2;
}
public enum OHGINMHIPOM
{
	// Fields
	public const OHGINMHIPOM ARANARA_COLLECTION_TYPE_NONE = 0;
	public const OHGINMHIPOM ARANARA_COLLECTION_TYPE_CATALOG_V1 = 1;
}
public enum IIHBAAHKOLK
{
	// Fields
	public const IIHBAAHKOLK CATALOG_TYPE_NONE = 0;
	public const IIHBAAHKOLK CATALOG_TYPE_ARANARA = 1;
	public const IIHBAAHKOLK CATALOG_TYPE_DESHRET_GUIDE = 2;
}
public enum IDNOBGJEJGL
{
	// Fields
	public const IDNOBGJEJGL QUEST_CATALOG_COND_TYPE_NONE = 0;
	public const IDNOBGJEJGL QUEST_CATALOG_COND_TYPE_QUEST = 1;
}
public enum JJDBJMDLHIA
{
	// Fields
	public const JJDBJMDLHIA AREA = 0;
	public const JJDBJMDLHIA SUBAREA = 1;
	public const JJDBJMDLHIA POLYGON = 2;
	public const JJDBJMDLHIA BIGWORLD = 3;
}
public enum IIKKAEPKKKD
{
	// Fields
	public const IIKKAEPKKKD CODEX_ANIMAL = 0;
	public const IIKKAEPKKKD CODEX_MONSTER = 1;
}
public enum NNMCFNBIMIK
{
	// Fields
	public const NNMCFNBIMIK CODEX_SUBTYPE_ELEMENTAL = 0;
	public const NNMCFNBIMIK CODEX_SUBTYPE_HILICHURL = 1;
	public const NNMCFNBIMIK CODEX_SUBTYPE_ABYSS = 2;
	public const NNMCFNBIMIK CODEX_SUBTYPE_FATUI = 3;
	public const NNMCFNBIMIK CODEX_SUBTYPE_AUTOMATRON = 4;
	public const NNMCFNBIMIK CODEX_SUBTYPE_HUMAN = 5;
	public const NNMCFNBIMIK CODEX_SUBTYPE_BEAST = 6;
	public const NNMCFNBIMIK CODEX_SUBTYPE_BOSS = 7;
	public const NNMCFNBIMIK CODEX_SUBTYPE_AVIARY = 8;
	public const NNMCFNBIMIK CODEX_SUBTYPE_ANIMAL = 9;
	public const NNMCFNBIMIK CODEX_SUBTYPE_FISH = 10;
	public const NNMCFNBIMIK CODEX_SUBTYPE_CRITTER = 11;
}
public enum KPBPKAKNLMF
{
	// Fields
	public const KPBPKAKNLMF CODEX_COUNT_TYPE_NONE = 0;
	public const KPBPKAKNLMF CODEX_COUNT_TYPE_KILL = 1;
	public const KPBPKAKNLMF CODEX_COUNT_TYPE_FISH = 2;
	public const KPBPKAKNLMF CODEX_COUNT_TYPE_CAPTURE = 3;
}
public enum MPOIEMALHJJ
{
	// Fields
	public const MPOIEMALHJJ CODEX_COLLECTION = 0;
	public const MPOIEMALHJJ CODEX_COOKING_FOOD = 1;
	public const MPOIEMALHJJ CODEX_WAR_TROPHIES = 2;
	public const MPOIEMALHJJ CODEX_WIDGET = 3;
}
public enum AGICKFEPIJJ
{
	// Fields
	public const AGICKFEPIJJ CHARING_FILL_POSITIVE = 0;
	public const AGICKFEPIJJ CHARING_FILL_NEGATIVE = 1;
	public const AGICKFEPIJJ CHARING_FILL_NONE = 2;
}
public enum GHIHBHFAICG
{
	// Fields
	public const GHIHBHFAICG COMBINE_UNLOCK_NONE = 0;
	public const GHIHBHFAICG COMBINE_UNLOCK_QUEST = 1;
	public const GHIHBHFAICG COMBINE_UNLOCK_FORMULA = 2;
	public const GHIHBHFAICG COMBINE_UNLOCK_SEA_LAMP_QUEST = 3;
	public const GHIHBHFAICG COMBINE_UNLOCK_ACTIVITY_COND_MEET = 4;
}
public enum HOPAHACBILI
{
	// Fields
	public const HOPAHACBILI RECIPE_TYPE_NONE = 0;
	public const HOPAHACBILI RECIPE_TYPE_COMBINE = 1;
	public const HOPAHACBILI RECIPE_TYPE_CONVERT = 2;
	public const HOPAHACBILI RECIPE_TYPE_COMBINE_HOMEWORLD = 3;
}
public enum KMEKGKIHFAE
{
	// Fields
	public const KMEKGKIHFAE ARITH_NONE = 0;
	public const KMEKGKIHFAE ARITH_ADD = 1;
	public const KMEKGKIHFAE ARITH_MULTI = 2;
	public const KMEKGKIHFAE ARITH_SUB = 3;
	public const KMEKGKIHFAE ARITH_DIVIDE = 4;
}
public enum GGJLDLDGMGF
{
	// Fields
	public const GGJLDLDGMGF QUALITY_NONE = 0;
	public const GGJLDLDGMGF QUALITY_WHITE = 1;
	public const GGJLDLDGMGF QUALITY_GREEN = 2;
	public const GGJLDLDGMGF QUALITY_BLUE = 3;
	public const GGJLDLDGMGF QUALITY_PURPLE = 4;
	public const GGJLDLDGMGF QUALITY_ORANGE = 5;
	public const GGJLDLDGMGF QUALITY_ORANGE_SP = 105;
}
public enum BHCOJEGNJJJ
{
	// Fields
	public const BHCOJEGNJJJ JOB_NONE = 0;
	public const BHCOJEGNJJJ JOB_SWORDMAN = 1;
	public const BHCOJEGNJJJ JOB_ARCHER = 2;
}
public enum NAGAGLLHCEI
{
	// Fields
	public const NAGAGLLHCEI BODY_NONE = 0;
	public const NAGAGLLHCEI BODY_BOY = 1;
	public const NAGAGLLHCEI BODY_GIRL = 2;
	public const NAGAGLLHCEI BODY_LADY = 3;
	public const NAGAGLLHCEI BODY_MALE = 4;
	public const NAGAGLLHCEI BODY_LOLI = 5;
}
public enum DLMGHCJMODH
{
	// Fields
	public const DLMGHCJMODH LIFE_NONE = 0;
	public const DLMGHCJMODH LIFE_ALIVE = 1;
	public const DLMGHCJMODH LIFE_DEAD = 2;
	public const DLMGHCJMODH LIFE_REVIVE = 3;
}
public enum OHHINJCBJID
{
	// Fields
	public const OHHINJCBJID BUFF_NONE = 0;
	public const OHHINJCBJID BUFF_CONTROL = 1;
}
public enum JMKBNIPMGCP
{
	// Fields
	public const JMKBNIPMGCP MONSTER_NONE = 0;
	public const JMKBNIPMGCP MONSTER_ORDINARY = 1;
	public const JMKBNIPMGCP MONSTER_BOSS = 2;
	public const JMKBNIPMGCP MONSTER_ENV_ANIMAL = 3;
	public const JMKBNIPMGCP MONSTER_LITTLE_MONSTER = 4;
	public const JMKBNIPMGCP MONSTER_FISH = 5;
	public const JMKBNIPMGCP MONSTER_PARTNER = 6;
}
public enum NEFDAFCNCJI
{
	// Fields
	public const NEFDAFCNCJI DRAG_NONE = 0;
	public const NEFDAFCNCJI DRAG_ROTATE_CAMERA = 1;
	public const NEFDAFCNCJI DRAG_ROTATE_CHARACTER = 2;
}
public enum MoleMole.Config.FightPropType
{
	// Fields
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONE = 0;
	public const MoleMole.Config.FightPropType FIGHT_PROP_BASE_HP = 1;
	public const MoleMole.Config.FightPropType FIGHT_PROP_HP = 2;
	public const MoleMole.Config.FightPropType FIGHT_PROP_HP_PERCENT = 3;
	public const MoleMole.Config.FightPropType FIGHT_PROP_BASE_ATTACK = 4;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ATTACK = 5;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ATTACK_PERCENT = 6;
	public const MoleMole.Config.FightPropType FIGHT_PROP_BASE_DEFENSE = 7;
	public const MoleMole.Config.FightPropType FIGHT_PROP_DEFENSE = 8;
	public const MoleMole.Config.FightPropType FIGHT_PROP_DEFENSE_PERCENT = 9;
	public const MoleMole.Config.FightPropType FIGHT_PROP_BASE_SPEED = 10;
	public const MoleMole.Config.FightPropType FIGHT_PROP_SPEED_PERCENT = 11;
	public const MoleMole.Config.FightPropType FIGHT_PROP_HP_MP_PERCENT = 12;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ATTACK_MP_PERCENT = 13;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CRITICAL = 20;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ANTI_CRITICAL = 21;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CRITICAL_HURT = 22;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CHARGE_EFFICIENCY = 23;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ADD_HURT = 24;
	public const MoleMole.Config.FightPropType FIGHT_PROP_SUB_HURT = 25;
	public const MoleMole.Config.FightPropType FIGHT_PROP_HEAL_ADD = 26;
	public const MoleMole.Config.FightPropType FIGHT_PROP_HEALED_ADD = 27;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEMENT_MASTERY = 28;
	public const MoleMole.Config.FightPropType FIGHT_PROP_PHYSICAL_SUB_HURT = 29;
	public const MoleMole.Config.FightPropType FIGHT_PROP_PHYSICAL_ADD_HURT = 30;
	public const MoleMole.Config.FightPropType FIGHT_PROP_DEFENCE_IGNORE_RATIO = 31;
	public const MoleMole.Config.FightPropType FIGHT_PROP_DEFENCE_IGNORE_DELTA = 32;
	public const MoleMole.Config.FightPropType FIGHT_PROP_FIRE_ADD_HURT = 40;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEC_ADD_HURT = 41;
	public const MoleMole.Config.FightPropType FIGHT_PROP_WATER_ADD_HURT = 42;
	public const MoleMole.Config.FightPropType FIGHT_PROP_GRASS_ADD_HURT = 43;
	public const MoleMole.Config.FightPropType FIGHT_PROP_WIND_ADD_HURT = 44;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ROCK_ADD_HURT = 45;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ICE_ADD_HURT = 46;
	public const MoleMole.Config.FightPropType FIGHT_PROP_HIT_HEAD_ADD_HURT = 47;
	public const MoleMole.Config.FightPropType FIGHT_PROP_FIRE_SUB_HURT = 50;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEC_SUB_HURT = 51;
	public const MoleMole.Config.FightPropType FIGHT_PROP_WATER_SUB_HURT = 52;
	public const MoleMole.Config.FightPropType FIGHT_PROP_GRASS_SUB_HURT = 53;
	public const MoleMole.Config.FightPropType FIGHT_PROP_WIND_SUB_HURT = 54;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ROCK_SUB_HURT = 55;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ICE_SUB_HURT = 56;
	public const MoleMole.Config.FightPropType FIGHT_PROP_EFFECT_HIT = 60;
	public const MoleMole.Config.FightPropType FIGHT_PROP_EFFECT_RESIST = 61;
	public const MoleMole.Config.FightPropType FIGHT_PROP_FREEZE_RESIST = 62;
	public const MoleMole.Config.FightPropType FIGHT_PROP_DIZZY_RESIST = 64;
	public const MoleMole.Config.FightPropType FIGHT_PROP_FREEZE_SHORTEN = 65;
	public const MoleMole.Config.FightPropType FIGHT_PROP_DIZZY_SHORTEN = 67;
	public const MoleMole.Config.FightPropType FIGHT_PROP_MAX_FIRE_ENERGY = 70;
	public const MoleMole.Config.FightPropType FIGHT_PROP_MAX_ELEC_ENERGY = 71;
	public const MoleMole.Config.FightPropType FIGHT_PROP_MAX_WATER_ENERGY = 72;
	public const MoleMole.Config.FightPropType FIGHT_PROP_MAX_GRASS_ENERGY = 73;
	public const MoleMole.Config.FightPropType FIGHT_PROP_MAX_WIND_ENERGY = 74;
	public const MoleMole.Config.FightPropType FIGHT_PROP_MAX_ICE_ENERGY = 75;
	public const MoleMole.Config.FightPropType FIGHT_PROP_MAX_ROCK_ENERGY = 76;
	public const MoleMole.Config.FightPropType FIGHT_PROP_SKILL_CD_MINUS_RATIO = 80;
	public const MoleMole.Config.FightPropType FIGHT_PROP_SHIELD_COST_MINUS_RATIO = 81;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_FIRE_ENERGY = 1000;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_ELEC_ENERGY = 1001;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_WATER_ENERGY = 1002;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_GRASS_ENERGY = 1003;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_WIND_ENERGY = 1004;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_ICE_ENERGY = 1005;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_ROCK_ENERGY = 1006;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_HP = 1010;
	public const MoleMole.Config.FightPropType FIGHT_PROP_MAX_HP = 2000;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_ATTACK = 2001;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_DEFENSE = 2002;
	public const MoleMole.Config.FightPropType FIGHT_PROP_CUR_SPEED = 2003;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ATTACK = 3000;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_DEFENSE = 3001;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_CRITICAL = 3002;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ANTI_CRITICAL = 3003;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_CRITICAL_HURT = 3004;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY = 3005;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ELEMENT_MASTERY = 3006;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_PHYSICAL_SUB_HURT = 3007;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_FIRE_ADD_HURT = 3008;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ELEC_ADD_HURT = 3009;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_WATER_ADD_HURT = 3010;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_GRASS_ADD_HURT = 3011;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_WIND_ADD_HURT = 3012;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ROCK_ADD_HURT = 3013;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ICE_ADD_HURT = 3014;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_FIRE_SUB_HURT = 3015;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ELEC_SUB_HURT = 3016;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_WATER_SUB_HURT = 3017;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_GRASS_SUB_HURT = 3018;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_WIND_SUB_HURT = 3019;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ROCK_SUB_HURT = 3020;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_ICE_SUB_HURT = 3021;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_SKILL_CD_MINUS_RATIO = 3022;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_SHIELD_COST_MINUS_RATIO = 3023;
	public const MoleMole.Config.FightPropType FIGHT_PROP_NONEXTRA_PHYSICAL_ADD_HURT = 3024;
	public const MoleMole.Config.FightPropType FIGHT_PROP_BASE_ELEM_REACT_CRITICAL = 3045;
	public const MoleMole.Config.FightPropType FIGHT_PROP_BASE_ELEM_REACT_CRITICAL_HURT = 3046;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_CRITICAL = 3025;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_CRITICAL_HURT = 3026;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_EXPLODE_CRITICAL = 3027;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_EXPLODE_CRITICAL_HURT = 3028;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_SWIRL_CRITICAL = 3029;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_SWIRL_CRITICAL_HURT = 3030;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_ELECTRIC_CRITICAL = 3031;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_ELECTRIC_CRITICAL_HURT = 3032;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_SCONDUCT_CRITICAL = 3033;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_SCONDUCT_CRITICAL_HURT = 3034;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_BURN_CRITICAL = 3035;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_BURN_CRITICAL_HURT = 3036;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_FROZENBROKEN_CRITICAL = 3037;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_FROZENBROKEN_CRITICAL_HURT = 3038;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_OVERGROW_CRITICAL = 3039;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_OVERGROW_CRITICAL_HURT = 3040;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_OVERGROW_FIRE_CRITICAL = 3041;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_OVERGROW_FIRE_CRITICAL_HURT = 3042;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_OVERGROW_ELECTRIC_CRITICAL = 3043;
	public const MoleMole.Config.FightPropType FIGHT_PROP_ELEM_REACT_OVERGROW_ELECTRIC_CRITICAL_HURT = 3044;
}
public enum MoleMole.Config.PropType
{
	// Fields
	public const MoleMole.Config.PropType PROP_NONE = 0;
	public const MoleMole.Config.PropType PROP_EXP = 1001;
	public const MoleMole.Config.PropType PROP_BREAK_LEVEL = 1002;
	public const MoleMole.Config.PropType PROP_SATIATION_VAL = 1003;
	public const MoleMole.Config.PropType PROP_SATIATION_PENALTY_TIME = 1004;
	public const MoleMole.Config.PropType PROP_GEAR_START_VAL = 2001;
	public const MoleMole.Config.PropType PROP_GEAR_STOP_VAL = 2002;
	public const MoleMole.Config.PropType PROP_LEVEL = 4001;
	public const MoleMole.Config.PropType PROP_LAST_CHANGE_AVATAR_TIME = 10001;
	public const MoleMole.Config.PropType PROP_MAX_SPRING_VOLUME = 10002;
	public const MoleMole.Config.PropType PROP_CUR_SPRING_VOLUME = 10003;
	public const MoleMole.Config.PropType PROP_IS_SPRING_AUTO_USE = 10004;
	public const MoleMole.Config.PropType PROP_SPRING_AUTO_USE_PERCENT = 10005;
	public const MoleMole.Config.PropType PROP_IS_FLYABLE = 10006;
	public const MoleMole.Config.PropType PROP_IS_WEATHER_LOCKED = 10007;
	public const MoleMole.Config.PropType PROP_IS_GAME_TIME_LOCKED = 10008;
	public const MoleMole.Config.PropType PROP_IS_TRANSFERABLE = 10009;
	public const MoleMole.Config.PropType PROP_MAX_STAMINA = 10010;
	public const MoleMole.Config.PropType PROP_CUR_PERSIST_STAMINA = 10011;
	public const MoleMole.Config.PropType PROP_CUR_TEMPORARY_STAMINA = 10012;
	public const MoleMole.Config.PropType PROP_PLAYER_LEVEL = 10013;
	public const MoleMole.Config.PropType PROP_PLAYER_EXP = 10014;
	public const MoleMole.Config.PropType PROP_PLAYER_HCOIN = 10015;
	public const MoleMole.Config.PropType PROP_PLAYER_SCOIN = 10016;
	public const MoleMole.Config.PropType PROP_PLAYER_MP_SETTING_TYPE = 10017;
	public const MoleMole.Config.PropType PROP_IS_MP_MODE_AVAILABLE = 10018;
	public const MoleMole.Config.PropType PROP_PLAYER_WORLD_LEVEL = 10019;
	public const MoleMole.Config.PropType PROP_PLAYER_RESIN = 10020;
	public const MoleMole.Config.PropType PROP_PLAYER_WAIT_SUB_HCOIN = 10022;
	public const MoleMole.Config.PropType PROP_PLAYER_WAIT_SUB_SCOIN = 10023;
	public const MoleMole.Config.PropType PROP_IS_ONLY_MP_WITH_PS_PLAYER = 10024;
	public const MoleMole.Config.PropType PROP_PLAYER_MCOIN = 10025;
	public const MoleMole.Config.PropType PROP_PLAYER_WAIT_SUB_MCOIN = 10026;
	public const MoleMole.Config.PropType PROP_PLAYER_LEGENDARY_KEY = 10027;
	public const MoleMole.Config.PropType PROP_IS_HAS_FIRST_SHARE = 10028;
	public const MoleMole.Config.PropType PROP_PLAYER_FORGE_POINT = 10029;
	public const MoleMole.Config.PropType PROP_CUR_CLIMATE_METER = 10035;
	public const MoleMole.Config.PropType PROP_CUR_CLIMATE_TYPE = 10036;
	public const MoleMole.Config.PropType PROP_CUR_CLIMATE_AREA_ID = 10037;
	public const MoleMole.Config.PropType PROP_CUR_CLIMATE_AREA_CLIMATE_TYPE = 10038;
	public const MoleMole.Config.PropType PROP_PLAYER_WORLD_LEVEL_LIMIT = 10039;
	public const MoleMole.Config.PropType PROP_PLAYER_WORLD_LEVEL_ADJUST_CD = 10040;
	public const MoleMole.Config.PropType PROP_PLAYER_LEGENDARY_DAILY_TASK_NUM = 10041;
	public const MoleMole.Config.PropType PROP_PLAYER_HOME_COIN = 10042;
	public const MoleMole.Config.PropType PROP_PLAYER_WAIT_SUB_HOME_COIN = 10043;
	public const MoleMole.Config.PropType PROP_IS_AUTO_UNLOCK_SPECIFIC_EQUIP = 10044;
	public const MoleMole.Config.PropType PROP_PLAYER_GCG_COIN = 10045;
	public const MoleMole.Config.PropType PROP_PLAYER_WAIT_SUB_GCG_COIN = 10046;
	public const MoleMole.Config.PropType PROP_PLAYER_ONLINE_TIME = 10047;
}
public enum ILHFGPPBPKC
{
	// Fields
	public const ILHFGPPBPKC ITEM_NONE = 0;
	public const ILHFGPPBPKC ITEM_VIRTUAL = 1;
	public const ILHFGPPBPKC ITEM_MATERIAL = 2;
	public const ILHFGPPBPKC ITEM_RELIQUARY = 3;
	public const ILHFGPPBPKC ITEM_WEAPON = 4;
	public const ILHFGPPBPKC ITEM_DISPLAY = 5;
	public const ILHFGPPBPKC ITEM_FURNITURE = 6;
}
public enum MoleMole.Config.MaterialType
{
	// Fields
	public const MoleMole.Config.MaterialType MATERIAL_NONE = 0;
	public const MoleMole.Config.MaterialType MATERIAL_FOOD = 1;
	public const MoleMole.Config.MaterialType MATERIAL_QUEST = 2;
	public const MoleMole.Config.MaterialType MATERIAL_EXCHANGE = 4;
	public const MoleMole.Config.MaterialType MATERIAL_CONSUME = 5;
	public const MoleMole.Config.MaterialType MATERIAL_EXP_FRUIT = 6;
	public const MoleMole.Config.MaterialType MATERIAL_AVATAR = 7;
	public const MoleMole.Config.MaterialType MATERIAL_ADSORBATE = 8;
	public const MoleMole.Config.MaterialType MATERIAL_CRICKET = 9;
	public const MoleMole.Config.MaterialType MATERIAL_ELEM_CRYSTAL = 10;
	public const MoleMole.Config.MaterialType MATERIAL_WEAPON_EXP_STONE = 11;
	public const MoleMole.Config.MaterialType MATERIAL_CHEST = 12;
	public const MoleMole.Config.MaterialType MATERIAL_RELIQUARY_MATERIAL = 13;
	public const MoleMole.Config.MaterialType MATERIAL_AVATAR_MATERIAL = 14;
	public const MoleMole.Config.MaterialType MATERIAL_NOTICE_ADD_HP = 15;
	public const MoleMole.Config.MaterialType MATERIAL_SEA_LAMP = 16;
	public const MoleMole.Config.MaterialType MATERIAL_SELECTABLE_CHEST = 17;
	public const MoleMole.Config.MaterialType MATERIAL_FLYCLOAK = 18;
	public const MoleMole.Config.MaterialType MATERIAL_NAMECARD = 19;
	public const MoleMole.Config.MaterialType MATERIAL_TALENT = 20;
	public const MoleMole.Config.MaterialType MATERIAL_WIDGET = 21;
	public const MoleMole.Config.MaterialType MATERIAL_CHEST_BATCH_USE = 22;
	public const MoleMole.Config.MaterialType MATERIAL_FAKE_ABSORBATE = 23;
	public const MoleMole.Config.MaterialType MATERIAL_CONSUME_BATCH_USE = 24;
	public const MoleMole.Config.MaterialType MATERIAL_WOOD = 25;
	public const MoleMole.Config.MaterialType MATERIAL_FURNITURE_FORMULA = 27;
	public const MoleMole.Config.MaterialType MATERIAL_CHANNELLER_SLAB_BUFF = 28;
	public const MoleMole.Config.MaterialType MATERIAL_FURNITURE_SUITE_FORMULA = 29;
	public const MoleMole.Config.MaterialType MATERIAL_COSTUME = 30;
	public const MoleMole.Config.MaterialType MATERIAL_HOME_SEED = 31;
	public const MoleMole.Config.MaterialType MATERIAL_FISH_BAIT = 32;
	public const MoleMole.Config.MaterialType MATERIAL_FISH_ROD = 33;
	public const MoleMole.Config.MaterialType MATERIAL_SUMO_BUFF = 34;
	public const MoleMole.Config.MaterialType MATERIAL_FIREWORKS = 35;
	public const MoleMole.Config.MaterialType MATERIAL_BGM = 36;
	public const MoleMole.Config.MaterialType MATERIAL_SPICE_FOOD = 37;
	public const MoleMole.Config.MaterialType MATERIAL_ACTIVITY_ROBOT = 38;
	public const MoleMole.Config.MaterialType MATERIAL_ACTIVITY_GEAR = 39;
	public const MoleMole.Config.MaterialType MATERIAL_ACTIVITY_JIGSAW = 40;
	public const MoleMole.Config.MaterialType MATERIAL_ARANARA = 41;
	public const MoleMole.Config.MaterialType MATERIAL_DESHRET_MANUAL = 46;
	public const MoleMole.Config.MaterialType MATERIAL_GCG_CARD = 42;
	public const MoleMole.Config.MaterialType MATERIAL_GCG_CARD_FACE = 43;
	public const MoleMole.Config.MaterialType MATERIAL_GCG_CARD_BACK = 44;
	public const MoleMole.Config.MaterialType MATERIAL_GCG_FIELD = 45;
	public const MoleMole.Config.MaterialType MATERIAL_RENAME_ITEM = 47;
	public const MoleMole.Config.MaterialType MATERIAL_GCG_EXCHANGE_ITEM = 48;
}
public enum MoleMole.Config.GrowCurveType
{
	// Fields
	public const MoleMole.Config.GrowCurveType GROW_CURVE_NONE = 0;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_HP = 1;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK = 2;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_STAMINA = 3;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_STRIKE = 4;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ANTI_STRIKE = 5;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ANTI_STRIKE1 = 6;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ANTI_STRIKE2 = 7;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ANTI_STRIKE3 = 8;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_STRIKE_HURT = 9;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ELEMENT = 10;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_KILL_EXP = 11;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_DEFENSE = 12;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_BOMB = 13;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_HP_LITTLEMONSTER = 14;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ELEMENT_MASTERY = 15;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_PROGRESSION = 16;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_DEFENDING = 17;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_MHP = 18;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_MATK = 19;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_TOWERATK = 20;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_HP_S5 = 21;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_HP_S4 = 22;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_HP_2 = 23;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_2 = 24;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_S5 = 31;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_S4 = 32;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_S3 = 33;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_STRIKE_S5 = 34;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_DEFENSE_S5 = 41;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_DEFENSE_S4 = 42;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_101 = 1101;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_102 = 1102;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_103 = 1103;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_104 = 1104;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_105 = 1105;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_201 = 1201;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_202 = 1202;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_203 = 1203;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_204 = 1204;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_205 = 1205;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_301 = 1301;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_302 = 1302;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_303 = 1303;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_304 = 1304;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_ATTACK_305 = 1305;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_101 = 2101;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_102 = 2102;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_103 = 2103;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_104 = 2104;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_105 = 2105;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_201 = 2201;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_202 = 2202;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_203 = 2203;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_204 = 2204;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_205 = 2205;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_301 = 2301;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_302 = 2302;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_303 = 2303;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_304 = 2304;
	public const MoleMole.Config.GrowCurveType GROW_CURVE_CRITICAL_305 = 2305;
}
public enum HIFDKJEGPOM
{
	// Fields
	public const HIFDKJEGPOM EQUIP_NONE = 0;
	public const HIFDKJEGPOM EQUIP_BRACER = 1;
	public const HIFDKJEGPOM EQUIP_NECKLACE = 2;
	public const HIFDKJEGPOM EQUIP_SHOES = 3;
	public const HIFDKJEGPOM EQUIP_RING = 4;
	public const HIFDKJEGPOM EQUIP_DRESS = 5;
	public const HIFDKJEGPOM EQUIP_WEAPON = 6;
}
public enum HPJGINAEKAH
{
	// Fields
	public const HPJGINAEKAH RELIQUARY_TYPE_COUNT = 5;
}
public enum BLICIDCENCC
{
	// Fields
	public const BLICIDCENCC WEAPON_NONE = 0;
	public const BLICIDCENCC WEAPON_SWORD_ONE_HAND = 1;
	public const BLICIDCENCC WEAPON_CROSSBOW = 2;
	public const BLICIDCENCC WEAPON_STAFF = 3;
	public const BLICIDCENCC WEAPON_DOUBLE_DAGGER = 4;
	public const BLICIDCENCC WEAPON_KATANA = 5;
	public const BLICIDCENCC WEAPON_SHURIKEN = 6;
	public const BLICIDCENCC WEAPON_STICK = 7;
	public const BLICIDCENCC WEAPON_SPEAR = 8;
	public const BLICIDCENCC WEAPON_SHIELD_SMALL = 9;
	public const BLICIDCENCC WEAPON_CATALYST = 10;
	public const BLICIDCENCC WEAPON_CLAYMORE = 11;
	public const BLICIDCENCC WEAPON_BOW = 12;
	public const BLICIDCENCC WEAPON_POLE = 13;
}
public enum CJJGCIMEFNO
{
	// Fields
	public const CJJGCIMEFNO DUNGEON_PLAY_TYPE_NONE = 0;
	public const CJJGCIMEFNO DUNGEON_PLAY_TYPE_FOGGY_MAZE = 1;
	public const CJJGCIMEFNO DUNGEON_PLAY_TYPE_TRIAL_AVATAR = 2;
	public const CJJGCIMEFNO DUNGEON_PLAY_TYPE_MIST_TRIAL = 3;
}
public enum CCGDBHMIFEF
{
	// Fields
	public const CCGDBHMIFEF VISION_LEVEL_NORMAL = 0;
	public const CCGDBHMIFEF VISION_LEVEL_LITTLE_REMOTE = 1;
	public const CCGDBHMIFEF VISION_LEVEL_REMOTE = 2;
	public const CCGDBHMIFEF VISION_LEVEL_SUPER = 3;
	public const CCGDBHMIFEF VISION_LEVEL_NEARBY = 4;
	public const CCGDBHMIFEF VISION_LEVEL_SUPER_NEARBY = 5;
	public const CCGDBHMIFEF VISION_LEVEL_NUM = 6;
}
public enum GBJJEEFPGAO
{
	// Fields
	public const GBJJEEFPGAO ROUND_TYPE_FLOOR = 0;
	public const GBJJEEFPGAO ROUND_TYPE_ROUND = 1;
	public const GBJJEEFPGAO ROUND_TYPE_CEIL = 2;
}
public enum GBDPDHFEJHH
{
	// Fields
	public const GBDPDHFEJHH SERVER_BUFF_NONE = 0;
	public const GBDPDHFEJHH SERVER_BUFF_AVATAR = 1;
	public const GBDPDHFEJHH SERVER_BUFF_TEAM = 2;
	public const GBDPDHFEJHH SERVER_BUFF_TOWER = 3;
}
public enum AFDGKNGJPOO
{
	// Fields
	public const AFDGKNGJPOO WATCHER_TRACE_BACK_NONE = 0;
	public const AFDGKNGJPOO WATCHER_TRACE_BACK_YES = 1;
	public const AFDGKNGJPOO WATCHER_TRACE_BACK_NO = 2;
}
public enum MoleMole.Config.WatcherTriggerType
{
	// Fields
	public const MoleMole.Config.WatcherTriggerType TRIGGER_NONE = 0;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_COMBAT_CONFIG_COMMON = 1;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELEMENT_VIEW = 2;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ENTER_AIRFLOW = 5;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_NEW_MONSTER = 6;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_NEW_AFFIX = 8;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHANGE_INPUT_DEVICE_TYPE = 9;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PAIMON_ANGRY_VOICE_EASTER_EGG = 10;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WIND_CRYSTAL = 11;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TAKE_PHOTO = 12;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_COMBAT_MULTICOND_CONFIG_COMMON = 13;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GENERAL_GADGET = 14;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GENERAL_GADGET_OR = 15;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELEMENT_BALL = 101;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WORLD_LEVEL_UP = 102;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DUNGEON_ENTRY_TO_BE_EXPLORED = 103;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_GATE_TEMPLE = 104;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_AREA = 105;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_TRANS_POINT = 106;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OPEN_CHEST_WITH_GADGET_ID = 107;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CITY_LEVEL_UP = 108;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MONSTER_DIE = 109;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PLATFORM_START_MOVE = 110;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GROUP_NOTIFY = 111;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELEMENT_TYPE_CHANGE = 112;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GADGET_INTERACTABLE = 113;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_COLLECT_SET_OF_READINGS = 114;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TELEPORT_WITH_CERTAIN_PORTAL = 115;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WORLD_GATHER = 116;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TAKE_GENERAL_REWARD = 117;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BATTLE_FOR_MONSTER_DIE_OR = 118;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BATTLE_FOR_MONSTER_DIE_AND = 119;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OPEN_WORLD_CHEST = 120;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ENTER_CLIMATE_AREA = 121;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_SCENE_POINT = 122;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_INTERACT_GADGET_WITH_INTERACT_ID = 123;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TAKE_DUNGEON_FIRST_PASS_REWARD = 124;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MONSTER_CATEGORY_DIE = 125;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_SPECIFIC_TRANS_POINT = 126;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OBTAIN_AVATAR = 201;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PLAYER_LEVEL = 202;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AVATAR_UPGRADE = 203;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AVATAR_PROMOTE = 204;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WEAPON_UPGRADE = 205;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WEAPON_PROMOTE = 206;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_RELIQUARY_UPGRADE = 207;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WEAR_RELIQUARY = 208;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UPGRADE_TALENT = 209;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_RECIPE = 210;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_RELIQUARY_SET_NUM = 211;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OBTAIN_MATERIAL_NUM = 212;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OBTAIN_RELIQUARY_NUM = 213;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GACHA_NUM = 214;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ANY_RELIQUARY_UPGRADE = 215;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FETTER_LEVEL_AVATAR_NUM = 216;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SKILLED_AT_RECIPE = 217;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_RELIQUARY_UPGRADE_EQUAL_RANK_LEVEL = 218;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SPECIFIED_WEAPON_UPGRADE = 219;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SPECIFIED_WEAPON_AWAKEN = 220;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_SPECIFIC_RECIPE_OR = 221;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_POSSESS_MATERIAL_NUM = 222;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_EXHIBITION_ACCUMULABLE_VALUE = 223;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_EXHIBITION_REPLACEABLE_VALUE_SETTLE_NUM = 224;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ANY_WEAPON_UPGRADE_NUM = 225;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ANY_RELIQUARY_UPGRADE_NUM = 226;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ACTIVITY_SCORE_EXCEED_VALUE = 227;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_SPECIFIC_FORGE_OR = 228;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_SPECIFIC_ANIMAL_CODEX = 229;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OBTAIN_ITEM_NUM = 230;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CAPTURE_ANIMAL = 231;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AVATAR_PROMOTE_EXCLUDING_PLAYER = 232;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DAILY_TASK = 301;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_RAND_TASK = 302;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AVATAR_EXPEDITION = 303;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_TOWER_LEVEL = 304;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WORLD_BOSS_REWARD = 306;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_DUNGEON = 307;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_START_AVATAR_EXPEDITION = 308;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OPEN_BLOSSOM_CHEST = 309;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_BLOSSOM_PROGRESS = 310;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DONE_TOWER_GADGET_UNHURT = 311;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DONE_TOWER_STARS = 312;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DONE_TOWER_UNHURT = 313;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_STEAL_FOOD_TIMES = 314;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DONE_DUNGEON_WITH_SAME_ELEMENT_AVATARS = 315;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GROUP_FLIGHT_CHALLENGE_REACH_POINTS = 316;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_DAILY_DELIVERY_NUM = 317;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TOWER_STARS_NUM = 318;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_SPECIFED_TYPE_BLOSSOM_NUM = 319;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_SPECIFED_TYPE_BLOSSOM_CLIMATE_METER = 320;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_BLOSSOM_GROUP_VARIABLE_GT = 321;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_EFFIGY_CHALLENGE_SCORE = 322;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_ROUTINE = 323;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ACTIVITY_EXPEDITION_FINISH = 324;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ACTIVITY_CHANNELLER_SLAB_FINISH_ALL_CAMP = 325;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ACTIVITY_CHANNELLER_SLAB_FINISH_ALL_ONEOFF_DUNGEON = 326;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ACTIVITY_CHANNELLER_SLAB_LOOP_DUNGEON_TOTAL_SCORE = 327;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GROUP_SUMMER_TIME_SPRINT_BOAT_REACH_POINTS = 328;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WEEKLY_BOSS_KILL = 329;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BOUNCE_CONJURING_FINISH_COUNT = 330;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BOUNCE_CONJURING_SCORE = 331;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GROUP_VARIABLE_SET_VALUE_TO = 332;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_KILL_GADGETS_BY_SPECIFIC_SKILL = 333;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_KILL_MONSTERS_WITHOUT_VEHICLE = 334;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_KILL_MONSTER_IN_AREA = 335;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ENTER_VEHICLE = 336;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VEHICLE_DURATION = 337;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VEHICLE_FRIENDS = 338;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VEHICLE_KILLED_BY_MONSTER = 339;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VEHICLE_DASH = 340;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DO_COOK = 401;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DO_FORGE = 402;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DO_COMPOUND = 403;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DO_COMBINE = 404;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BUY_SHOP_GOODS = 405;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FORGE_WEAPON = 406;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BUY_SHOP_GOODS_AND = 407;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MP_PLAY_BATTLE_WIN = 421;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_KILL_GROUP_MONSTER = 422;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CRUCIBLE_ELEMENT_SCORE = 423;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MP_DUNGEON_TIMES = 424;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MP_KILL_MONSTER_NUM = 425;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CRUCIBLE_MAX_BALL = 426;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CRUCIBLE_MAX_SCORE = 427;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CRUCIBLE_SUBMIT_BALL = 428;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CRUCIBLE_WORLD_LEVEL_SCORE = 429;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MP_PLAY_GROUP_STATISTIC = 430;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_KILL_GROUP_SPECIFIC_MONSTER = 431;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_REACH_MP_PLAY_SCORE = 432;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_REACH_MP_PLAY_RECORD = 433;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TREASURE_MAP_DONE_REGION = 434;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SEA_LAMP_MINI_QUEST = 435;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_FIND_HILICHURL_LEVEL = 436;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_COMBINE_ITEM = 437;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_CHALLENGE_IN_DURATION = 438;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_CHALLENGE_LEFT_TIME = 439;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MP_KILL_MONSTER_ID_NUM = 440;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_LOGIN = 501;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_COST_MATERIAL = 502;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DELIVER_ITEM_TO_SALESMAN = 503;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_USE_ITEM = 504;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ACCUMULATE_DAILY_LOGIN = 505;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_CHALLENGE = 601;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_UNLOCK_GEAR = 602;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_LEVELUP_GEAR = 603;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_DIFFICULT = 604;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_DIFFICULT_SCORE = 605;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_KILL_MONSTER = 606;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BUILDING_POINT = 607;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_DIFFICULT_EQ = 608;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END = 609;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_EXCAPED_LESS_THAN = 610;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_POINTS_MORE_THAN = 611;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_GEAR_MORE_THAN = 612;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_PURE_GEAR_DAMAGE = 613;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_CARD_PICK_MORE_THAN = 614;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_CARD_TARGET_MORE_THAN = 615;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_BUILD_GEAR_MORE_THAN = 616;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_GEAR_KILL_MORE_THAN = 617;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_ROUND_MORE_THAN = 618;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_END_ROUND = 619;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_FIN_CHALLENGE_MORE_THAN = 620;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_WATCHER_FINISH_COUNT = 621;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_INTERACT_COUNT = 622;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_DIFFICULT_ESCAPE = 623;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_DIFFICULT_GEAR_NUM = 624;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MECHANICUS_BATTLE_DIFFICULT_GEAR_ID_NUM = 625;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FLEUR_FAIR_DUNGEON_FINISH_IN_LIMIT_TIME = 626;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FLEUR_FAIR_DUNGEON_FINISH_KEEP_ENERGY = 627;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FLEUR_FAIR_DUNGEON_FINISH_WITH_GROUP_VARIABLE = 628;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FLEUR_FAIR_DUNGEON_FINISH_WITH_BUFF_NUM = 629;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FLEUR_FAIR_DUNGEON_MISSION_FINISH = 630;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_DUNGEON_AND_CHALLENGE_REMAIN_TIME_GREATER_THAN = 631;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_DUNGEON_WITH_MIST_TRIAL_STAT = 632;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DUNGEON_MIST_TRIAL_STAT = 633;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DUNGEON_ELEMENT_REACTION_NUM = 634;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_LEVEL_AVATAR_FINISH_DUNGEON_COUNT = 635;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHESS_REACH_LEVEL = 636;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHESS_DUNGEON_ADD_SCORE = 637;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHESS_DUNGEON_SUCC_WITH_ESCAPED_MONSTERS_LESS_THAN = 638;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHESS_DUNGEON_SUCC_WITH_TOWER_COUNT_LESS_OR_EQUAL = 639;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHESS_DUNGEON_SUCC_WITH_CARD_COUNT_LESS_OR_EQUAL = 640;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHESS_DUNGEON_SUCC_WITH_CARD_COUNT_GREATER_THAN = 641;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHESS_KILL_MONSTERS = 642;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHESS_COST_BUILDING_POINTS = 643;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SUMO_STAGE_SCORE_REACH = 644;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SUMO_TOTAL_MAX_SCORE_REACH = 645;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_DESTROY_GADGET_NUM = 646;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_KILL_MONSTER_NUM = 647;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_FINISH_WITHOUT_USING_SPRING_CELL = 649;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_FINISH_ALL_CHALLENGE_CELL = 650;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_FINISH_WITH_AVATAR_ELEMENT_TYPE_NUM_LESS_THAN = 651;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_FINISH_WITH_AVATAR_NUM_LESS_THAN = 652;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_FINISH_NO_AVATAR_DEAD = 653;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_SHIKIGAMI_UPGRADE = 654;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_CURSE_NUM = 655;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROGUE_SELECT_CARD_NUM = 656;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_QUEST_AND = 700;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_QUEST_OR = 701;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DAILY_TASK_VAR_EQUAL = 702;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_QUEST_GLOBAL_VAR_EQUAL = 703;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TALK_NUM = 704;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_PARENT_QUEST_AND = 705;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_PARENT_QUEST_OR = 706;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_CHAPTER = 707;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELEMENT_REACTION_TIMELIMIT_NUM = 800;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELEMENT_REACTION_TIMELIMIT_KILL_NUM = 801;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELEMENT_REACTION_TIMELIMIT_DAMAGE_NUM = 802;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ABILITY_STATE_PASS_TIME = 803;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MAX_CRITICAL_DAMAGE = 804;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FULL_SATIATION_TEAM_AVATAR_NUM = 805;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_KILLED_BY_CERTAIN_MONSTER = 806;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CUR_AVATAR_HURT = 807;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CUR_AVATAR_ABILITY_STATE = 808;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_USE_ENERGY_SKILL_NUM_TIMELIMIT = 809;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SHIELD_SOURCE_NUM = 810;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CUR_AVATAR_HURT_BY_SPECIFIC_ABILITY = 811;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_KILLED_BY_SPECIFIC_ABILITY = 812;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MAX_DASH_TIME = 900;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MAX_FLY_TIME = 901;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MAX_FLY_MAP_DISTANCE = 902;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SIT_DOWN_IN_POINT = 903;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DASH = 904;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CLIMB = 905;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FLY = 906;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SIT_DOWN_IN_ALL_POINTS = 907;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CITY_REPUTATION_LEVEL = 930;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CITY_REPUTATION_FINISH_REQUEST = 931;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HUNTING_FINISH_NUM = 932;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HUNTING_FAIL_NUM = 933;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OFFERING_LEVEL = 934;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MIRACLE_RING_DELIVER_ITEM = 935;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MIRACLE_RING_TAKE_REWARD = 936;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BLESSING_EXCHANGE_PIC_NUM = 937;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BLESSING_REDEEM_REWARD_NUM = 938;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GALLERY_BALLOON_REACH_SCORE = 939;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GALLERY_FALL_REACH_SCORE = 940;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FLEUR_FAIR_MUSIC_GAME_REACH_SCORE = 941;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MAIN_COOP_SAVE_POINT_AND = 942;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MAIN_COOP_SAVE_POINT_OR = 943;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MAIN_COOP_VAR_EQUAL = 944;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_ALL_ARENA_CHALLENGE_WATCHER_IN_SCHEDULE = 945;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GALLERY_BUOYANT_COMBAT_REACH_SCORE = 946;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BUOYANT_COMBAT_REACH_NEW_SCORE_LEVEL = 947;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PLACE_MIRACLE_RING = 948;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_LUNA_RITE_SEARCH = 949;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GALLERY_FISH_REACH_SCORE = 950;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GALLERY_TRIATHLON_REACH_SCORE = 951;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_WINTER_CAMP_SNOWMAN_COMPLEIET = 952;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CREATE_CUSTOM_DUNGEON = 953;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PUBLISH_CUSTOM_DUNGEON = 954;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PLAY_OTHER_CUSTOM_DUNGEON = 955;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_CUSTOM_DUNGEON_OFFICIAL = 956;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CUSTOM_DUNGEON_OFFICIAL_COIN = 957;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OBTAIN_WOOD_TYPE = 1000;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_OBTAIN_WOOD_COUNT = 1001;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_UNLOCK_FURNITURE_COUNT = 1002;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FURNITURE_MAKE = 1003;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_LEVEL = 1004;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_COIN = 1005;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_COMFORT_LEVEL = 1006;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_LIMITED_SHOP_BUY = 1007;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FURNITURE_SUITE_TYPE = 1008;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ARRANGEMENT_FURNITURE_COUNT = 1009;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ENTER_SELF_HOME = 1010;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_MODULE_COMFORT_VALUE = 1011;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_ENTER_ROOM = 1012;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_AVATAR_IN = 1013;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_AVATAR_REWARD_EVENT_COUNT = 1014;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_AVATAR_TALK_FINISH_COUNT = 1015;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_AVATAR_REWARD_EVENT_ALL_COUNT = 1016;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_AVATAR_TALK_FINISH_ALL_COUNT = 1017;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_AVATAR_FETTER_GET = 1018;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_AVATAR_IN_COUNT = 1019;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_DO_PLANT = 1020;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ARRANGEMENT_FURNITURE = 1021;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_GATHER_COUNT = 1022;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_FIELD_GATHER_COUNT = 1023;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_HOME_UNLOCK_BGM_COUNT = 1024;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FISHING_SUCC_NUM = 1100;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FISHING_KEEP_BONUS = 1101;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_EMPTY_FISH_POOL = 1102;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FISHING_FAIL_NUM = 1103;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SHOCK_FISH_NUM = 1104;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PLANT_FLOWER_SET_WISH = 1105;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PLANT_FLOWER_GIVE_FLOWER = 1106;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PLANT_FLOWER_OBTAIN_FLOWER_TYPE = 1107;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PLANT_FLOWER_COMMON_OBTAIN_FLOWER_TYPE = 1108;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_LANV2_PROJECTION_LEVEL = 1111;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GALLERY_SALVAGE_REACH_SCORE = 1112;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_LANV2_FIREWORKS_CHALLENGE_REACH_SCORE = 1113;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_POTION_STAGE_LEVEL_PASS_NUM = 1115;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_POTION_STAGE_OBTAIN_MEDAL_NUM = 1116;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_POTION_STAGE_REACH_TOTAL_SCORE = 1117;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BARTENDER_FINISH_STORY_MODULE = 1120;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BARTENDER_CHALLENGE_MODULE_LEVEL_SCORE = 1121;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BARTENDER_UNLOCK_FORMULA = 1122;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MICHIAE_MATSURI_UNLOCK_CRYSTAL_SKILL_REACH_NUM = 1123;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MICHIAE_MATSURI_FINISH_DARK_CHALLENGE_REACH_NUM = 1124;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CAPTURE_ENV_ANIMAL_REACH_NUM = 1125;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SPICE_MAKE_FORMULA_TIMES = 1126;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SPICE_GIVE_FOOD_TIMES = 1127;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SPICE_MAKE_FORMULA_SUCCESSFUL_TIMES = 1128;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_IRODORI_FINISH_FLOWER_THEME = 1131;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_IRODORI_FINISH_MASTER_STAGE = 1132;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_IRODORI_CHESS_STAGE_REACH_SCORE = 1133;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_IRODORI_FINISH_POETRY_THEME = 1134;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PHOTO_FINISH_POS_ID = 1135;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CRYSTAL_LINK_LEVEL_SCORE_REACH = 1138;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CRYSTAL_LINK_TOTAL_MAX_SCORE_REACH = 1139;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_LUMINANCE_STONE_CHALLENGE_SCORE_REACH = 1140;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GACHA_FINISH_STAGE_ID = 1141;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GACHA_MAKE_ROBOT_NUM = 1142;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GACHA_GET_ROBOT_NUM = 1143;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GACHA_GIVE_ROBOT_NUM = 1144;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GACHA_CONVERT_ROBOT_NUM = 1145;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_ROGUE_DIARY_STAGE = 1151;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FINISH_ROGUE_DIARY_STAGE_ROUND = 1152;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MUSIC_GAME_SETTLE_OTHERS_UGC = 1153;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MUSIC_GAME_SAVE_UGC = 1154;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GEAR_FINISH_LEVEL_ID = 1161;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GEAR_FINISH_JIGSAW_PICTURE = 1162;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ISLAND_PARTY_REACH_SCORE = 1165;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GRAVEN_INNOCENCE_RACE_REACH_SCORE = 1171;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GRAVEN_INNOCENCE_CARVE_COMPLETE_NUM = 1172;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GRAVEN_INNOCENCE_PHOTO_COMPLETE_NUM = 1173;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GRAVEN_INNOCENCE_CAMP_FINISH_LEVEL = 1174;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_INSTABLE_SPRAY_REACH_SCORE = 1176;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MUQADAS_POTION_LEVEL_SCORE = 1180;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MUQADAS_POTION_LEVEL_WEAKNESS_NUM = 1181;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_MUQADAS_POTION_LEVEL_ONCE_WEAKNESS_NUM = 1182;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TREASURE_SEELIE_DONE_REGION = 1186;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_POPULARITY = 1190;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_HUNTING_SCORE = 1191;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_HUNTING_CAPTURE_NUM = 1192;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_HUNTING_CAPTURE_NO_BATTLE_NUM = 1193;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_HUNTING_CAPTURE_TYPE = 1194;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_HUNTING_FINISH_BOSS = 1195;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_HUNTING_FINISH_BOSS_IN_TIME = 1196;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_DECORATION_COMPLETE = 1197;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_COLLECT_DECORATION_NUM = 1198;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_FINISH_CAMP = 1199;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ROCK_BOARD_EXPLORE_FINISH_STAGE_ID = 1200;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_MARKET_COIN_A = 1206;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_HUNTING_BOSS_GO_WEAK = 1207;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_VINTAGE_MARKET_CONTENT_FINISH = 1208;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FUNGUS_FIGHTER_CAPTURE_FUNGUS = 1210;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FUNGUS_FIGHTER_CULTIVATE_FUNGUS = 1211;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_EFFIGY_CHALLENGE_V2_FINISH_ROOM = 1212;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_CHAR_AMUSEMENT_FINISH_STAGE_ID = 1213;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FUNGUS_FIGHTER_TRAINING_REACH_SCORE = 3200;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_COIN_COLLECT_RESULT_REACH = 3300;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_OBTAIN_CARD = 1300;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_OBTAIN_COIN = 1301;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_OBTAIN_CHARACTER_CARD = 1302;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_FINISH_WEEK_CHALLENGE = 1303;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_WORLD_CHALLENGE_TOTAL_STAR_NUM = 1304;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_VALID_DECK_NUM = 1305;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_UNLOCK_GOLD_FACE_NUM = 1306;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_UNLOCK_CHARACTER_GOLD_FACE_NUM = 1307;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_FULL_PROFICIENCY_CHARACTER_NUM = 1308;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_FINISH_HARD_CHARACTER_CHALLENGE = 1309;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_FINISH_NORMAL_BOSS_CHALLENGE = 1310;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_FINISH_HARD_BOSS_CHALLENGE = 1311;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_SHARE_DECK = 1312;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_CHALLENGE_PROGRESS = 1313;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BUY_SHOP_ITEM_ID = 1314;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BUY_SHOP_GOODS_COUNT = 1315;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_FINISH_WORLD_LEVEL = 3310;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_WORLD_LEVEL_SCORE = 3311;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_WORLD_LEVEL_COMBO = 3312;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_FINISH_DUNGEON_LEVEL = 3313;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_DUNGEON_LEVEL_SCORE = 3314;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_DUNGEON_LEVEL_COMBO = 3315;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_WORLD_LEVEL_ELEM_REACTION = 3316;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_WORLD_LEVEL_BALL_ELEM_REACTION = 3317;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_DUNGEON_LEVEL_ELEM_REACTION = 3318;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_BRICK_BREAKER_DUNGEON_LEVEL_BALL_ELEM_REACTION = 3319;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ENTER_SCENE_NOT_DUNGEON = 3320;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_DUEL_HEART_FINISH_LEVEL = 3400;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TEAM_CHAIN_SCORE_REACH = 3401;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TEAM_CHAIN_FINISH_STAGE_CNT = 3402;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELECTROHERCULES_BATTLE_FINISH_LEVEL = 3403;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELECTROHERCULES_BATTLE_FINISH_LEVEL_WITH_HP = 3404;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_ELECTROHERCULES_BATTLE_PASS_LEVEL = 3405;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_LAN_V3_RACE_REACH_SCORE = 3406;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_LAN_V3_SHADOW_FINISH_LEVEL = 3407;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_LAN_V3_CAMP_FINISH_LEVEL = 3408;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_TEAM_CHAIN_TOTAL_SCORE_REACH = 3411;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_GCG_PLAY_FESTIVAL_MODE = 3412;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PACMAN_FINISH_LEVEL = 3500;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_PACMAN_SCORE_REACH = 3501;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FLEURFAIR_V2_PHOTO_FINISH_POS_ID = 3502;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FUNGUS_FIGHTER_V2_FINISH_LEVEL = 3506;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FUNGUS_FIGHTER_V2_FINISH_LEVEL_IN_TIME = 3507;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_FUNGUS_FIGHTER_V2_FINISH_LEVEL_DEAD_COUNT = 3508;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AKA_FES_ARCHITECT_FINISH_LEVEL_LESS_EQUAL = 3600;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AKA_FES_POTION_FINISH_DIFFICULTY_LEVEL = 3601;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AKA_FES_RHYTHM_SCORE_REACH = 3611;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AKA_FES_ARCHAEOLOGY_FINISH_STAGE = 3616;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AKA_FES_REASONING_FINISH_STAGE = 3631;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_AKA_FES_ASTROLABE_FINISH_LEVEL = 3636;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SORUSH_TRIAL_FINISH_GALLERY = 3621;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SORUSH_TRIAL_HITMAN_MISSILE_LESS_EQUAL = 3622;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SANDWORM_CANNON_FINISH_GALLERY = 3650;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SANDWORM_CANNON_FINISH_LEVEL_WITH_DESTORY_SANDPILE_REACH = 3651;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SANDWORM_CANNON_FINISH_LEVEL_WITH_CHARGING_PILE_HP_REACH = 3652;
	public const MoleMole.Config.WatcherTriggerType TRIGGER_SANDWORM_CANNON_FINISH_LEVEL_IN_TIME = 3653;
}
public enum MoleMole.Config.OpenStateType
{
	// Fields
	public const MoleMole.Config.OpenStateType OPEN_STATE_NONE = 0;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PAIMON = 1;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PAIMON_NAVIGATION = 2;
	public const MoleMole.Config.OpenStateType OPEN_STATE_AVATAR_PROMOTE = 3;
	public const MoleMole.Config.OpenStateType OPEN_STATE_AVATAR_TALENT = 4;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_PROMOTE = 5;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_AWAKEN = 6;
	public const MoleMole.Config.OpenStateType OPEN_STATE_QUEST_REMIND = 7;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GAME_GUIDE = 8;
	public const MoleMole.Config.OpenStateType OPEN_STATE_COOK = 9;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_UPGRADE = 10;
	public const MoleMole.Config.OpenStateType OPEN_STATE_RELIQUARY_UPGRADE = 11;
	public const MoleMole.Config.OpenStateType OPEN_STATE_RELIQUARY_PROMOTE = 12;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_PROMOTE_GUIDE = 13;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_CHANGE_GUIDE = 14;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PLAYER_LVUP_GUIDE = 15;
	public const MoleMole.Config.OpenStateType OPEN_STATE_FRESHMAN_GUIDE = 16;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SKIP_FRESHMAN_GUIDE = 17;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MOVE_CAMERA = 18;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SCALE_CAMERA = 19;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_KEYBOARD = 20;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MOVE = 21;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_JUMP = 22;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SPRINT = 23;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MAP = 24;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ATTACK = 25;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FLY = 26;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_TALENT = 27;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_RELIC = 28;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_RELIC_PROM = 29;
	public const MoleMole.Config.OpenStateType OPEN_STATE_COMBINE = 30;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GACHA = 31;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_GACHA = 32;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_TEAM = 33;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PROUD = 34;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AVATAR_PROMOTE = 35;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ADVENTURE_CARD = 36;
	public const MoleMole.Config.OpenStateType OPEN_STATE_FORGE = 37;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BAG = 38;
	public const MoleMole.Config.OpenStateType OPEN_STATE_EXPEDITION = 39;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ADVENTURE_DAILYTASK = 40;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ADVENTURE_DUNGEON = 41;
	public const MoleMole.Config.OpenStateType OPEN_STATE_TOWER = 42;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WORLD_STAMINA = 43;
	public const MoleMole.Config.OpenStateType OPEN_STATE_TOWER_FIRST_ENTER = 44;
	public const MoleMole.Config.OpenStateType OPEN_STATE_RESIN = 45;
	public const MoleMole.Config.OpenStateType OPEN_STATE_LIMIT_REGION_FRESHMEAT = 47;
	public const MoleMole.Config.OpenStateType OPEN_STATE_LIMIT_REGION_GLOBAL = 48;
	public const MoleMole.Config.OpenStateType OPEN_STATE_MULTIPLAYER = 49;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MOUSEPC = 50;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MULTIPLAYER = 51;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_DUNGEONREWARD = 52;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BLOSSOM = 53;
	public const MoleMole.Config.OpenStateType OPEN_STATE_AVATAR_FASHION = 54;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PHOTOGRAPH = 55;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_KSLQUEST = 56;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PERSONAL_LINE = 57;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PERSONAL_LINE = 58;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_APPEARANCE = 59;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PROCESS = 60;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PERSONAL_LINE_KEY = 61;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_WIDGET = 62;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ACTIVITY_SKILL_ASTER = 63;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_COLDCLIMATE = 64;
	public const MoleMole.Config.OpenStateType OPEN_STATE_DERIVATIVE_MALL = 65;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_EXITMULTIPLAYER = 66;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_BUILD = 67;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_REBUILD = 68;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_CARD = 69;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_MONSTER = 70;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_MISSION_CHECK = 71;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_BUILD_SELECT = 72;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_CHALLENGE_START = 73;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CONVERT = 74;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_MULTIPLAYER = 75;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_COOP_TASK = 76;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_HOMEWORLD_ADEPTIABODE = 77;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_HOMEWORLD_DEPLOY = 78;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_EQUIP = 79;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_MP_SOLUTION = 80;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_POWER = 81;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_HIDEANDSEEK_SKILL = 82;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_HOMEWORLD_MAPLIST = 83;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_RELICRESOLVE = 84;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_GGUIDE = 85;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_GGUIDE_HINT = 86;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_EQUIP_V2 = 87;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_MP_SOLUTION_V2 = 88;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_POWER_V2 = 89;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_QUICK_TEAMMEMBERCHANGE = 90;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GGUIDE_FIRSTSHOW = 91;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GGUIDE_MAINPAGE_ENTRY_DISAPPEAR = 92;
	public const MoleMole.Config.OpenStateType OPEN_STATE_CITY_REPUATION_MENGDE = 800;
	public const MoleMole.Config.OpenStateType OPEN_STATE_CITY_REPUATION_LIYUE = 801;
	public const MoleMole.Config.OpenStateType OPEN_STATE_CITY_REPUATION_UI_HINT = 802;
	public const MoleMole.Config.OpenStateType OPEN_STATE_CITY_REPUATION_INAZUMA = 803;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_MALL = 900;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_RECOMMANDED = 901;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_GENESISCRYSTAL = 902;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_GIFTPACKAGE = 903;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_PAIMON = 1001;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_CITY = 1002;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_BLACKSMITH = 1003;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_GROCERY = 1004;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_FOOD = 1005;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_SEA_LAMP = 1006;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_VIRTUAL_SHOP = 1007;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_LIYUE_GROCERY = 1008;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_LIYUE_SOUVENIR = 1009;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_LIYUE_RESTAURANT = 1010;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_INAZUMA_SOUVENIR = 1011;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_NPC_TOMOKI = 1012;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_INAZUMA_SOUVENIR_BLACK_BAR = 1013;
	public const MoleMole.Config.OpenStateType OPEN_ADVENTURE_MANUAL = 1100;
	public const MoleMole.Config.OpenStateType OPEN_ADVENTURE_MANUAL_CITY_MENGDE = 1101;
	public const MoleMole.Config.OpenStateType OPEN_ADVENTURE_MANUAL_CITY_LIYUE = 1102;
	public const MoleMole.Config.OpenStateType OPEN_ADVENTURE_MANUAL_MONSTER = 1103;
	public const MoleMole.Config.OpenStateType OPEN_ADVENTURE_MANUAL_BOSS_DUNGEON = 1104;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_SEALAMP = 1200;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_SEALAMP_TAB2 = 1201;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_SEALAMP_TAB3 = 1202;
	public const MoleMole.Config.OpenStateType OPEN_STATE_BATTLE_PASS = 1300;
	public const MoleMole.Config.OpenStateType OPEN_STATE_BATTLE_PASS_ENTRY = 1301;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_CRUCIBLE = 1400;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_NEWBEEBOUNS_OPEN = 1401;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_NEWBEEBOUNS_CLOSE = 1402;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_ENTRY_OPEN = 1403;
	public const MoleMole.Config.OpenStateType OPEN_STATE_MENGDE_INFUSEDCRYSTAL = 1404;
	public const MoleMole.Config.OpenStateType OPEN_STATE_LIYUE_INFUSEDCRYSTAL = 1405;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SNOW_MOUNTAIN_ELDER_TREE = 1406;
	public const MoleMole.Config.OpenStateType OPEN_STATE_MIRACLE_RING = 1407;
	public const MoleMole.Config.OpenStateType OPEN_STATE_COOP_LINE = 1408;
	public const MoleMole.Config.OpenStateType OPEN_STATE_INAZUMA_INFUSEDCRYSTAL = 1409;
	public const MoleMole.Config.OpenStateType OPEN_STATE_FISH = 1410;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SUMO_TEAM_SKILL = 1411;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FISH_RECIPE = 1412;
	public const MoleMole.Config.OpenStateType OPEN_STATE_HOME = 1500;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_HOMEWORLD = 1501;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ADEPTIABODE = 1502;
	public const MoleMole.Config.OpenStateType OPEN_STATE_HOME_AVATAR = 1503;
	public const MoleMole.Config.OpenStateType OPEN_STATE_HOME_EDIT = 1504;
	public const MoleMole.Config.OpenStateType OPEN_STATE_HOME_EDIT_TIPS = 1505;
	public const MoleMole.Config.OpenStateType OPEN_STATE_RELIQUARY_DECOMPOSE = 1600;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_H5 = 1700;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ORAIONOKAMI = 2000;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHESS_MISSION_CHECK = 2001;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHESS_BUILD = 2002;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHESS_WIND_TOWER_CIRCLE = 2003;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHESS_CARD_SELECT = 2004;
	public const MoleMole.Config.OpenStateType OPEN_STATE_INAZUMA_MAINQUEST_FINISHED = 2005;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PAIMON_LVINFO = 2100;
	public const MoleMole.Config.OpenStateType OPEN_STATE_TELEPORT_HUD = 2101;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MAP_UNLOCK = 2102;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PAIMON_LVINFO = 2103;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AMBORTRANSPORT = 2104;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FLY_SECOND = 2105;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_KAEYA_CLUE = 2106;
	public const MoleMole.Config.OpenStateType OPEN_STATE_CAPTURE_CODEX = 2107;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_FISH_OPEN = 2200;
	public const MoleMole.Config.OpenStateType OPEN_STATE_ACTIVITY_FISH_CLOSE = 2201;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ROGUE_MAP = 2205;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ROGUE_RUNE = 2206;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BARTENDER_FORMULA = 2210;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BARTENDER_MIX = 2211;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BARTENDER_CUP = 2212;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MAIL_FAVORITES = 2400;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_POTION_CONFIGURE = 2401;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_LANV2_FIREWORK = 2402;
	public const MoleMole.Config.OpenStateType OPEN_STATE_LOADINGTIPS_ENKANOMIYA = 2403;
	public const MoleMole.Config.OpenStateType OPEN_STATE_MICHIAE_CASKET = 2500;
	public const MoleMole.Config.OpenStateType OPEN_STATE_MAIL_COLLECT_UNLOCK_RED_POINT = 2501;
	public const MoleMole.Config.OpenStateType OPEN_STATE_LUMEN_STONE = 2600;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CRYSTALLINK_BUFF = 2601;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V3 = 2700;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V3_REAL_TIME_EDIT = 2701;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V3_TIMELINE_EDIT = 2702;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V3_SETTING = 2703;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ROBOTGACHA = 2704;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FRAGILE_RESIN = 2800;
	public const MoleMole.Config.OpenStateType OPEN_ADVENTURE_MANUAL_EDUCATION = 2801;
	public const MoleMole.Config.OpenStateType OPEN_STATE_CITY_REPUATION_SUMERU = 3000;
	public const MoleMole.Config.OpenStateType OPEN_STATE_VANASARA = 3001;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SUMERU_INFUSEDCRYSTAL = 3002;
	public const MoleMole.Config.OpenStateType OPEN_STATE_LIMIT_REGION_WITHERED_FOREST = 3003;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_SUMERU_SOUVENIR = 3004;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_SUMERU_SOUVENIR_BLACK_BAR = 3005;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ACTIVITY_SKILL_MUQADAS = 3006;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUQADAS = 3007;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_WINDFIELD_SKILL = 3100;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_VINTAGE_MARKET_UPGRADE = 3101;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_VINTAGE_MARKET_SKILL = 3102;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_VINTAGE_MARKET_STAFF = 3103;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_RESOURCE_MANAGEMENT = 3200;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTER_1 = 3201;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTER_2 = 3202;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTER_3 = 3203;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_LEVEL = 3300;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_INVITE = 3301;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_MATCH = 3302;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_PVP = 3303;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_DECK = 3304;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_MANUAL = 3305;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_BOSS_CHALLENGE = 3306;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_WORLD_CHALLENGE = 3307;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_WEEK_CHALLENGE = 3308;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_TAVERN_SCENE_BUILDER = 3309;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_SHOP_CARDFACE = 3310;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GCG_SHOP_SYSTEM = 3311;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BRICKBREAKER_SKILL = 3312;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MISTTRIAL_MAP = 3313;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MISTTRIAL_GAME_TIPS = 3314;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_LANV3_SHADOW = 3400;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V4 = 3500;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V4_REAL_TIME_EDIT = 3501;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V4_TIMELINE_EDIT = 3502;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V4_SETTING = 3503;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CRYSTALLINK_BUFF_V2 = 3504;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTERV2_CODEX = 3505;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTERV2_CODEX_ENTRY = 3506;
	public const MoleMole.Config.OpenStateType OPEN_STATE_OFFERINGPARI = 3600;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ARCHITECT = 3601;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ASTROLABE_ROTATE = 3611;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ASTROLABE_ROTATE_PS = 3612;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ASTROLABE_HEIGHT = 3613;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ASTROLABE_HEIGHT_PS = 3614;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SORUSHTRIAL_HITMAN_1 = 3615;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SORUSHTRIAL_PHOTOMATCH_1 = 3616;
}
public enum HDLDDHGPJGN
{
	// Fields
	public const HDLDDHGPJGN DESTROY_NONE = 0;
	public const HDLDDHGPJGN DESTROY_RETURN_MATERIAL = 1;
}
public enum AFKGDMPOGHB
{
	// Fields
	public const AFKGDMPOGHB CLIMATE_NONE = 0;
	public const AFKGDMPOGHB CLIMATE_SUNNY = 1;
	public const AFKGDMPOGHB CLIMATE_CLOUDY = 2;
	public const AFKGDMPOGHB CLIMATE_RAIN = 3;
	public const AFKGDMPOGHB CLIMATE_THUNDERSTORM = 4;
	public const AFKGDMPOGHB CLIMATE_SNOW = 5;
	public const AFKGDMPOGHB CLIMATE_MIST = 6;
	public const AFKGDMPOGHB CLIMATE_DESERT = 7;
}
public enum AANKEMPHKAI
{
	// Fields
	public const AANKEMPHKAI FETTER_COND_NONE = 0;
	public const AANKEMPHKAI FETTER_COND_FETTER_LEVEL = 1;
	public const AANKEMPHKAI FETTER_COND_AVATAR_LEVEL = 2;
	public const AANKEMPHKAI FETTER_COND_FINISH_DUNGEON = 3;
	public const AANKEMPHKAI FETTER_COND_UNLOCK_TRANS_POINT = 4;
	public const AANKEMPHKAI FETTER_COND_UNLOCK_AREA = 5;
	public const AANKEMPHKAI FETTER_COND_FINISH_QUEST = 6;
	public const AANKEMPHKAI FETTER_COND_AVATAR_PROMOTE_LEVEL = 7;
	public const AANKEMPHKAI FETTER_COND_PLAYER_BIRTHDAY = 8;
	public const AANKEMPHKAI FETTER_COND_AVATAR_BIRTHDAY = 9;
	public const AANKEMPHKAI FETTER_COND_NOT_OPEN = 10;
	public const AANKEMPHKAI FETTER_COND_FINISH_PARENT_QUEST = 11;
	public const AANKEMPHKAI FETTER_COND_UNLOCK_ARENA_BY_CITY_ID = 12;
}
public enum MoleMole.Config.ItemLimit
{
	// Fields
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_NONE = 0;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_UNLIMITED = 1;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GM = 2;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_QUEST = 3;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_CITY_UPGRADE = 4;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_UNLOCK_TRANS_POINT = 5;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_UNLOCK_DUNGEON = 6;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_INVESTIGATION = 7;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_PLAYER_LEVEL_UPGRADE = 8;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_PUSH_TIPS_REWARD = 9;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_AVATAR_FETTER_REWARD = 10;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_WORLD_AREA_EXPLORE_EVENT_REWARD = 11;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SEA_LAMP = 12;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BATTLE_PASS_PAID_REWARD = 13;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ONEOFF_BIG_WORLD_DROP = 14;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GAMEPLAY_NICHE = 15;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ONEOFF_DUNGEON_DROP = 16;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ONEOFF_PLUNDER_DROP = 17;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ONEOFF_SUBFIELD_DROP = 18;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BIG_WORLD_CHEST = 19;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GACHA_TOKEN_DROP = 20;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DAILY_BIG_WORLD_DROP = 22;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DAILY_DUNGEON_DROP = 23;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DAILY_PLUNDER_DROP = 24;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DAILY_SUBFIELD_DROP = 25;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DAILY_SEA_LAMP_DROP = 26;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_NORMAL_DUNGEON = 27;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DAILY_TASK = 28;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DAILY_TASK_SCORE = 29;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_RAND_TASK_DROP = 30;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_EXPEDITION = 31;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_SMALL_MONSTER_DIE = 32;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ELITE_MONSTER_DIE = 33;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BOSS_MONSTER_DIE = 34;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BIG_BOSS_MONSTER_DIE = 35;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_SMALL_ENV_ANIMAL_DIE = 36;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_MONSTER_EXCEL_DROP = 37;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_REPEATABLE_QUEST_REWARD = 38;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ENV_ANIMAL = 39;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GATHER = 40;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_OPERATION_DAILY_ACTIVITY = 41;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_QUEST_ADD_ITEM = 42;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BONUS_ACTIVITY = 43;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_TOWER_MONTHLY = 44;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BATTLE_PASS_LEVEL_REWARD = 45;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_SIGN_IN = 46;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GACHA = 47;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_SHOP = 48;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_COOK = 49;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_COMPOUND = 50;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_COMBINE = 51;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_FORGE = 52;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_RANDOM_CHEST = 53;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_USE_ITEM = 54;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_USE_ITEM_REWARD = 55;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BLOSSOM_CHEST_DROP = 56;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_MP_PLAY_DROP = 57;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_FORGE_DROP = 58;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_MP_PLAY_CRUCIBLE_DROP = 59;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_CRUCIBLE_REWARD = 60;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_REWARD = 61;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_TRIAL_AVATAR = 62;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SALESMAN = 63;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_REBATE = 64;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_MONTH_CARD = 65;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BIRTHDAY_BENEFIT = 67;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACHIEVEMENT_REWARD = 68;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACHIEVEMENT_GOAL_REWARD = 69;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DESTROY_RETURN_MATERIAL = 70;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_TOWER_REWARD = 71;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_SHARE_REWARD = 72;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_FETTER_LEVEL_REWARD = 73;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_DUNGEON_FIRST_PASS_REWARD = 74;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_CODEX_LEVELUP_REWARD = 75;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_DELIVERY = 76;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_CITY_REPUTATION_LEVEL = 77;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_CITY_REPUTATION_QUEST = 78;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_UPGRADE_WEAPON_RETURN_MATERIAL = 79;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_CITY_REPUTATION_REQUEST = 80;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HUNTING_REWARD = 81;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_CITY_REPUTATION_EXPLORE = 82;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_FLIGHT_REWARD = 83;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ASTER_REWARD = 84;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ASTER_DROP = 85;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_DRGAON_SPINE_REWARD = 86;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_DRAGON_SPINE_DROP = 87;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_SNOW_MOUNTAIN_TREE_TASK = 88;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_SNOW_MOUNTAIN_TREE_LEVEL = 89;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SALESMAN_CHEST_DROP = 90;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_EFFIGY_REWARD = 91;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_REUNION_REWARD = 92;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_AVATAR_PROMOTE_REWARD = 93;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SALESMAN_MP = 94;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_TREASURE_MAP_REWARD = 95;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_RESIN_CARD = 96;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_BLESSING = 97;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_MIRACLE_RING_REWARD = 98;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_EXPEDITION_REWARD = 99;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_MECHANICUS_BATTLE_SETTLE_REWARD = 100;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_SEA_LAMP_ACTIVITY_AVATAR_REWARD = 101;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_PLAYER_EXP_OVERFLOW_TRANSFORM = 1401;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ARENA_CHALLENGE_REWARD = 1402;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_COOP_TASK_REWARD = 1403;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_WATER_SPIRIT_REWARD = 1404;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_REGION_SEARCH_REWARD = 1405;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_WATER_SPIRIT_DROP = 1406;
	public const MoleMole.Config.ItemLimit ITEM_LIMTT_ACTIVITY_FLEUR_FAIR_REWARD = 1407;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HIT_TREE_DROP = 1501;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_MIST_TRIAL = 1502;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_CHANNELLER_SLAB = 1503;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_HIDE_AND_SEEK = 1504;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_FIND_HILICHURL = 1505;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_FURNITURE_MAKE_CANCEL = 1506;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HOME_LEVELUP_REWARD = 1507;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_FURNITURE_MAKE = 1508;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_CONDITION_MAIL_REWARD = 1509;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BATTLE_PASS_NOTIFY_MAIL_REWARD = 1510;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_CHANNELLER_SLAB_AVATAR_REWARD = 1511;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HOME_RESOURCE = 1512;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_OPERATION_WELFARE = 1513;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SUMMER_TIME_REWARD = 1601;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ECHO_SHELL = 1602;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_RELIQUARY_DECOMPOSE = 1603;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HOME_FETTER = 1604;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HOME_EVENT_REWARD = 1605;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_BUOYANT_COMBAT_REWARD = 1606;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_BOUNCE_CONJURING_REWARD = 1607;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ORAIONOKAMI_REWARD = 2000;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_BOOK_LEAF_DROP = 2001;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_EXPLORATION_LINE_LEVEL_REWARD = 2002;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_BLITZ_RUSH_REWARD = 2003;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_BLITZ_RUSH_AVATAR_REWARD = 2004;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_CHESS_REWARD = 2005;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HOME_PLANT_BOX_SEED_DROP = 2006;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HOME_PLANT_GATHER_DROP = 2007;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_HOME_FURNITURE_MAKE_RETURN = 2008;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SUMO = 2100;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_LUNA_RITE = 2101;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_FISH_REWARD = 2102;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_MOONFIN_TRIAL = 2103;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_LUNA_RITE_DROP = 2104;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ROGUELIKE_DUNGEON = 2200;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ROGUELIKE_DUNGEON_AVATAR_REWARD = 2201;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_PLANT_FLOWER = 2202;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_DIG_REWARD = 2203;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_DIG_DROP = 2204;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_MUSIC_GAME_REWARD = 2205;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_CAPTURE_REWARD = 2300;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_WINTER_CAMP_REWARD = 2301;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_WINTER_CAMP_DROP = 2302;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_CAPTURE_NONE_DROP = 2303;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_HACHI_REWARD = 2304;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_POTION = 2400;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_TANUKI_TRAVEL = 2401;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_LANTERN_RITE = 2402;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_LANTERN_RITE_AVATAR_REWARD = 2403;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_LANTERN_RITE_DROP = 2404;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_MICHIAE_MATSURI = 2500;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_MICHIAE_MATSURI_DROP = 2501;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_BARTENDER = 2502;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_UGC_REWARD = 2503;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_LUMEN_STONE_LEVEL = 2600;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_CRYSTAL_LINK = 2601;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SPICE = 2602;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_IRODORI = 2603;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_IRODORI_AVATAR_REWARD = 2604;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_PHOTO = 2605;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_GACHA = 2700;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ROGUE_DIARY = 2701;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_COMEBACK_QUESTIONNAIRE = 2702;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_LUMINANCE_STONE_CHALLENGE = 2703;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GIVING_TAKE_BACK = 2800;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SUMMER_TIME_V2 = 2801;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SUMMER_TIME_V2_AVATAR_REWARD = 2802;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ISLAND_PARTY = 2803;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_GEAR = 2804;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_GRAVEN_INNOCENCE = 3000;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_GRAVEN_INNOCENCE_AVATAR_REWARD = 3001;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_WOOD_EXCHANGE = 3002;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_INSTABLE_SPRAY = 3003;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_TREASURE_SEELIE = 3004;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_MUQADAS = 3005;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ROCK_BOARD_EXPLORE = 3100;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_WIND_FIELD = 3101;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_VINTAGE = 3102;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_FUNGUS_FIGHTER = 3201;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_FUNGUS_FIGHTER_AVATAR_REWARD = 3202;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_CHAR_AMUSEMENT = 3203;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_EFFIGY_CHALLENGE_V2 = 3204;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_BRICK_BREAKER = 3300;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_AVATAR_RENAME = 3301;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GCG_LEVEL_REWARD = 3302;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GCG_CHALLENGE_REWARD = 3303;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GCG_REPEATABLE_CHALLENGE_REWARD = 3304;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_COIN_COLLECT = 3305;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_GCG_PROFICIENCY_REWARD = 3306;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SEA_LAMP_V3 = 3400;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SEA_LAMP_V3_AVATAR_REWARD = 3401;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_COMPOUND_DROP = 3402;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_ELECTROHERCULES_BATTLE = 3403;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_TEAM_CHAIN = 3404;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_GCG_FESTIVAL = 3405;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_DUEL_HEART = 3406;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_FLEURFAIR_V2 = 3500;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_FUNGUS_FIGHTER_V2 = 3501;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_AKA_FES = 3600;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_AKA_FES_AVATAR_REWARD = 3601;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_OFFERING_PARI_LEVEL = 3602;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SORUSH_TRIAL = 3603;
	public const MoleMole.Config.ItemLimit ITEM_LIMIT_ACTIVITY_SANDWORM_CANNON = 3604;
}
public enum JBOAFHIMOME
{
	// Fields
	public const JBOAFHIMOME ROUTINE_TYPE_NONE = 0;
	public const JBOAFHIMOME ROUTINE_SNOW_MOUNTAIN = 1;
}
public enum FFMAGJGEBJN
{
	// Fields
	public const FFMAGJGEBJN CAPTURE_CODEX_SHOW_TYPE_NONE = 0;
	public const FFMAGJGEBJN CAPTURE_CODEX_SHOW_TYPE_NOT_SHOW = 1;
	public const FFMAGJGEBJN CAPTURE_CODEX_SHOW_TYPE_CAPTURE_ANIMAL = 2;
}
public enum PIJLPJNDAPA
{
	// Fields
	public const PIJLPJNDAPA GCG_CHALLENGE_NONE = 0;
	public const PIJLPJNDAPA GCG_CHALLENGE_WIN = 1;
	public const PIJLPJNDAPA GCG_CHALLENGE_CHARACTER_ALIVE_NUM = 2;
	public const PIJLPJNDAPA GCG_CHALLENGE_BEING_HEAL_SUM = 3;
	public const PIJLPJNDAPA GCG_CHALLENGE_SHIELD_REDUCE_SUM = 4;
	public const PIJLPJNDAPA GCG_CHALLENGE_ELEMENT_REACTION_TIMES = 5;
	public const PIJLPJNDAPA GCG_CHALLENGE_ONE_HIT_DAMAGE_TIMES = 6;
	public const PIJLPJNDAPA GCG_CHALLENGE_PLAY_CARD_TIMES = 7;
	public const PIJLPJNDAPA GCG_CHALLENGE_SUMMON_TIMES = 8;
	public const PIJLPJNDAPA GCG_CHALLENGE_SETTLE_WITH_SKILL_TAG_Q_TIMES = 9;
	public const PIJLPJNDAPA GCG_CHALLENGE_ONE_OPERATION_KILL_COUNT_TIMES = 10;
	public const PIJLPJNDAPA GCG_CHALLENGE_DEAD_CHARACTER_NUM = 11;
	public const PIJLPJNDAPA GCG_CHALLENGE_ROUND_NUM = 12;
	public const PIJLPJNDAPA GCG_CHALLENGE_REACTION_WITH_TARGET_ELEMENT_TIMES = 13;
	public const PIJLPJNDAPA GCG_CHALLENGE_SKILL_TAG_Q_TIMES = 14;
	public const PIJLPJNDAPA GCG_CHALLENGE_SUMMON_TIMES_X = 15;
	public const PIJLPJNDAPA GCG_CHALLENGE_PLAY_CARD_WITH_TAG_AND_TYPE_TIMES = 16;
	public const PIJLPJNDAPA GCG_CHALLENGE_ONE_OPERATION_DAMAGE_SUM_TIMES = 17;
}
public enum KNAHHEHIFBP
{
	// Fields
	public const KNAHHEHIFBP GCG_FESTIVAL_MODE_TYPE_NONE = 0;
	public const KNAHHEHIFBP GCG_FESTIVAL_MODE_TYPE_PAIMON = 1;
	public const KNAHHEHIFBP GCG_FESTIVAL_MODE_TYPE_COST_REDUCTION = 2;
	public const KNAHHEHIFBP GCG_FESTIVAL_MODE_TYPE_FAST = 3;
}
public enum MKFOFGGLJCN
{
	// Fields
	public const MKFOFGGLJCN REGION_NONE = 0;
	public const MKFOFGGLJCN REGION_SPHERE = 1;
	public const MKFOFGGLJCN REGION_CUBIC = 2;
	public const MKFOFGGLJCN REGION_CYLINDER = 3;
	public const MKFOFGGLJCN REGION_POLYGON = 4;
}
public enum MoleMole.Config.EventType
{
	// Fields
	public const MoleMole.Config.EventType EVENT_NONE = 0;
	public const MoleMole.Config.EventType EVENT_ANY_MONSTER_DIE = 1;
	public const MoleMole.Config.EventType EVENT_ANY_GADGET_DIE = 2;
	public const MoleMole.Config.EventType EVENT_VARIABLE_CHANGE = 3;
	public const MoleMole.Config.EventType EVENT_ENTER_REGION = 4;
	public const MoleMole.Config.EventType EVENT_LEAVE_REGION = 5;
	public const MoleMole.Config.EventType EVENT_GADGET_CREATE = 6;
	public const MoleMole.Config.EventType EVENT_GADGET_STATE_CHANGE = 7;
	public const MoleMole.Config.EventType EVENT_DUNGEON_SETTLE = 8;
	public const MoleMole.Config.EventType EVENT_SELECT_OPTION = 9;
	public const MoleMole.Config.EventType EVENT_CLIENT_EXECUTE = 10;
	public const MoleMole.Config.EventType EVENT_ANY_MONSTER_LIVE = 11;
	public const MoleMole.Config.EventType EVENT_SPECIFIC_MONSTER_HP_CHANGE = 12;
	public const MoleMole.Config.EventType EVENT_CITY_LEVELUP_UNLOCK_DUNGEON_ENTRY = 13;
	public const MoleMole.Config.EventType EVENT_DUNGEON_BROADCAST_ONTIMER = 14;
	public const MoleMole.Config.EventType EVENT_TIMER_EVENT = 15;
	public const MoleMole.Config.EventType EVENT_CHALLENGE_SUCCESS = 16;
	public const MoleMole.Config.EventType EVENT_CHALLENGE_FAIL = 17;
	public const MoleMole.Config.EventType EVENT_SEAL_BATTLE_BEGIN = 18;
	public const MoleMole.Config.EventType EVENT_SEAL_BATTLE_END = 19;
	public const MoleMole.Config.EventType EVENT_GATHER = 20;
	public const MoleMole.Config.EventType EVENT_QUEST_FINISH = 21;
	public const MoleMole.Config.EventType EVENT_MONSTER_BATTLE = 22;
	public const MoleMole.Config.EventType EVENT_CITY_LEVELUP = 23;
	public const MoleMole.Config.EventType EVENT_CUTSCENE_END = 24;
	public const MoleMole.Config.EventType EVENT_AVATAR_NEAR_PLATFORM = 25;
	public const MoleMole.Config.EventType EVENT_PLATFORM_REACH_POINT = 26;
	public const MoleMole.Config.EventType EVENT_UNLOCK_TRANS_POINT = 27;
	public const MoleMole.Config.EventType EVENT_QUEST_START = 28;
	public const MoleMole.Config.EventType EVENT_GROUP_LOAD = 29;
	public const MoleMole.Config.EventType EVENT_GROUP_WILL_UNLOAD = 30;
	public const MoleMole.Config.EventType EVENT_GROUP_WILL_REFRESH = 31;
	public const MoleMole.Config.EventType EVENT_GROUP_REFRESH = 32;
	public const MoleMole.Config.EventType EVENT_DUNGEON_REWARD_GET = 33;
	public const MoleMole.Config.EventType EVENT_SPECIFIC_GADGET_HP_CHANGE = 34;
	public const MoleMole.Config.EventType EVENT_MONSTER_TIDE_OVER = 35;
	public const MoleMole.Config.EventType EVENT_MONSTER_TIDE_CREATE = 36;
	public const MoleMole.Config.EventType EVENT_MONSTER_TIDE_DIE = 37;
	public const MoleMole.Config.EventType EVENT_SEALAMP_PHASE_CHANGE = 38;
	public const MoleMole.Config.EventType EVENT_BLOSSOM_PROGRESS_FINISH = 39;
	public const MoleMole.Config.EventType EVENT_BLOSSOM_CHEST_DIE = 40;
	public const MoleMole.Config.EventType EVENT_GADGET_PLAY_START = 41;
	public const MoleMole.Config.EventType EVENT_GADGET_PLAY_START_CD = 42;
	public const MoleMole.Config.EventType EVENT_GADGET_PLAY_STOP = 43;
	public const MoleMole.Config.EventType EVENT_GADGET_LUA_NOTIFY = 44;
	public const MoleMole.Config.EventType EVENT_MP_PLAY_PREPARE = 45;
	public const MoleMole.Config.EventType EVENT_MP_PLAY_BATTLE = 46;
	public const MoleMole.Config.EventType EVENT_MP_PLAY_PREPARE_INTERRUPT = 47;
	public const MoleMole.Config.EventType EVENT_SELECT_DIFFICULTY = 48;
	public const MoleMole.Config.EventType EVENT_SCENE_MP_PLAY_BATTLE_STATE = 49;
	public const MoleMole.Config.EventType EVENT_SCENE_MP_PLAY_BATTLE_STAGE_CHANGE = 50;
	public const MoleMole.Config.EventType EVENT_SCENE_MP_PLAY_BATTLE_RESULT = 51;
	public const MoleMole.Config.EventType EVENT_SEAL_BATTLE_PROGRESS_DECREASE = 52;
	public const MoleMole.Config.EventType EVENT_GENERAL_REWARD_DIE = 53;
	public const MoleMole.Config.EventType EVENT_SCENE_MP_PLAY_BATTLE_INTERRUPT = 54;
	public const MoleMole.Config.EventType EVENT_MONSTER_DIE_BEFORE_LEAVE_SCENE = 55;
	public const MoleMole.Config.EventType EVENT_SCENE_MP_PLAY_OPEN = 56;
	public const MoleMole.Config.EventType EVENT_OFFERING_LEVELUP = 57;
	public const MoleMole.Config.EventType EVENT_DUNGEON_REVIVE = 58;
	public const MoleMole.Config.EventType EVENT_SCENE_MP_PLAY_ALL_AVATAR_DIE = 59;
	public const MoleMole.Config.EventType EVENT_DUNGEON_ALL_AVATAR_DIE = 60;
	public const MoleMole.Config.EventType EVENT_GENERAL_REWARD_TAKEN = 61;
	public const MoleMole.Config.EventType EVENT_PLATFORM_REACH_ARRAYPOINT = 62;
	public const MoleMole.Config.EventType EVENT_SCENE_MULTISTAGE_PLAY_STAGE_END = 63;
	public const MoleMole.Config.EventType EVENT_SCENE_MULTISTAGE_PLAY_END_STAGE_REQ = 64;
	public const MoleMole.Config.EventType EVENT_MECHANICUS_PICKED_CARD = 65;
	public const MoleMole.Config.EventType EVENT_POOL_MONSTER_TIDE_OVER = 66;
	public const MoleMole.Config.EventType EVENT_POOL_MONSTER_TIDE_CREATE = 67;
	public const MoleMole.Config.EventType EVENT_POOL_MONSTER_TIDE_DIE = 68;
	public const MoleMole.Config.EventType EVENT_DUNGEON_AVATAR_SLIP_DIE = 69;
	public const MoleMole.Config.EventType EVENT_GALLERY_START = 70;
	public const MoleMole.Config.EventType EVENT_GALLERY_STOP = 71;
	public const MoleMole.Config.EventType EVENT_TIME_AXIS_PASS = 72;
	public const MoleMole.Config.EventType EVENT_FLEUR_FAIR_DUNGEON_ALL_PLAYER_ENTER = 73;
	public const MoleMole.Config.EventType EVENT_GADGETTALK_DONE = 74;
	public const MoleMole.Config.EventType EVENT_SET_GAME_TIME = 75;
	public const MoleMole.Config.EventType EVENT_HIDE_AND_SEEK_PLAYER_QUIT = 76;
	public const MoleMole.Config.EventType EVENT_AVATAR_DIE = 77;
	public const MoleMole.Config.EventType EVENT_SCENE_MULTISTAGE_PLAY_STAGE_START = 78;
	public const MoleMole.Config.EventType EVENT_GALLERY_PROGRESS_PASS = 79;
	public const MoleMole.Config.EventType EVENT_GALLERY_PROGRESS_EMPTY = 80;
	public const MoleMole.Config.EventType EVENT_GALLERY_PROGRESS_FULL = 81;
	public const MoleMole.Config.EventType EVENT_HUNTING_FINISH_FINAL = 82;
	public const MoleMole.Config.EventType EVENT_USE_WIDGET_TOY_FOX_CAMERA = 83;
	public const MoleMole.Config.EventType EVENT_LUNA_RITE_SACRIFICE = 84;
	public const MoleMole.Config.EventType EVENT_SUMO_SWITCH_TEAM_EVENT = 85;
	public const MoleMole.Config.EventType EVENT_FISHING_START = 86;
	public const MoleMole.Config.EventType EVENT_FISHING_STOP = 87;
	public const MoleMole.Config.EventType EVENT_FISHING_QTE_FINISH = 88;
	public const MoleMole.Config.EventType EVENT_FISHING_TIMEOUT_FLEE = 89;
	public const MoleMole.Config.EventType EVENT_ROGUE_CELL_STATE_CHANGE = 90;
	public const MoleMole.Config.EventType EVENT_ROGUE_CELL_CONSTRUCT = 91;
	public const MoleMole.Config.EventType EVENT_ROGUE_CELL_FINISH_SELECT_CARD = 92;
	public const MoleMole.Config.EventType EVENT_ANY_MONSTER_CAPTURE = 93;
	public const MoleMole.Config.EventType EVENT_ACTIVITY_INTERACT_GADGET = 94;
	public const MoleMole.Config.EventType EVENT_CHALLENGE_PAUSE = 95;
	public const MoleMole.Config.EventType EVENT_LEVEL_TAG_CHANGE = 96;
	public const MoleMole.Config.EventType EVENT_CUSTOM_DUNGEON_START = 97;
	public const MoleMole.Config.EventType EVENT_CUSTOM_DUNGEON_RESTART = 98;
	public const MoleMole.Config.EventType EVENT_CUSTOM_DUNGEON_REACTIVE = 99;
	public const MoleMole.Config.EventType EVENT_CUSTOM_DUNGEON_OUT_STUCK = 100;
	public const MoleMole.Config.EventType EVENT_CUSTOM_DUNGEON_EXIT_TRY = 101;
	public const MoleMole.Config.EventType EVENT_CUSTOM_DUNGEON_OFFICIAL_RESTART = 102;
	public const MoleMole.Config.EventType EVENT_ANY_MONSTER_CAPTURE_AND_DISAPPEAR = 103;
	public const MoleMole.Config.EventType EVENT_MICHIAE_INTERACT = 104;
	public const MoleMole.Config.EventType EVENT_SELECT_UIINTERACT = 105;
	public const MoleMole.Config.EventType EVENT_LUA_NOTIFY = 106;
	public const MoleMole.Config.EventType EVENT_PHOTO_FINISH = 107;
	public const MoleMole.Config.EventType EVENT_IRODORI_MASTER_READY = 108;
	public const MoleMole.Config.EventType EVENT_ROGUE_START_FIGHT = 109;
	public const MoleMole.Config.EventType EVENT_ROGUE_CREAGE_FIGHT_GADGET = 110;
	public const MoleMole.Config.EventType EVENT_ROGUE_CREAGE_REPAIR_GADGET = 111;
	public const MoleMole.Config.EventType EVENT_ROGUE_OPEN_ACCESS = 112;
	public const MoleMole.Config.EventType EVENT_GADGET_GIVING_FINISHED = 113;
	public const MoleMole.Config.EventType EVENT_OBSERVATION_POINT_NOTIFY = 114;
	public const MoleMole.Config.EventType EVENT_GADGET_GIVING_TAKEBACK = 115;
	public const MoleMole.Config.EventType EVENT_ECHO_SHELL_INTERACT = 116;
	public const MoleMole.Config.EventType EVENT_ARANARA_COLLECTION_COLLECTED = 117;
	public const MoleMole.Config.EventType EVENT_DEATH_ZONE_OBSERVE = 118;
	public const MoleMole.Config.EventType EVENT_DEATH_ZONE_STATUS_CHANGE = 119;
	public const MoleMole.Config.EventType EVENT_GALLERY_PLAYER_LEAVE_SCENE = 120;
	public const MoleMole.Config.EventType EVENT_PLATFORM_ARRIVAL = 2701;
	public const MoleMole.Config.EventType EVENT_PLAYER_BACK_GALLERY_REVIVE_POINT = 2800;
	public const MoleMole.Config.EventType EVENT_GALLERY_CANNOT_START_AFTER_COUNTDOWN = 2801;
	public const MoleMole.Config.EventType EVENT_CUSTOM_GADGET_SLOT_MAP_CHANGED = 3000;
	public const MoleMole.Config.EventType EVENT_GRAVEN_PHOTO_REFRESH_GROUP = 3001;
	public const MoleMole.Config.EventType EVENT_GADGET_CHAIN_LEVEL_CHANGE = 3101;
	public const MoleMole.Config.EventType EVENT_GCG_TAVERN_SCENE_REFRESH = 3200;
	public const MoleMole.Config.EventType EVENT_CHAR_AMUSEMENT_DUNGEON_ALL_PLAYER_ENTER = 3201;
	public const MoleMole.Config.EventType EVENT_TRAINING_FUNGUS_SELECT_DONE = 3202;
	public const MoleMole.Config.EventType EVENT_GALLERY_PRE_START = 3300;
	public const MoleMole.Config.EventType EVENT_PLATFORM_DEPART = 3301;
	public const MoleMole.Config.EventType EVENT_GALLERY_ALL_AVATAR_DIE = 3500;
	public const MoleMole.Config.EventType EVENT_CUSTOM_GALLERY_SCORE_BOARD_FINISH = 3600;
}
public enum FHDOPCIKGKO
{
	// Fields
	public const FHDOPCIKGKO GADGET_NONE = 0;
	public const FHDOPCIKGKO GADGET_WORLD_CHECT = 1;
	public const FHDOPCIKGKO GADGET_DUNGEON_SECRET_CHEST = 2;
	public const FHDOPCIKGKO GADGET_DUNGEON_PASS_CHEST = 3;
}
public enum FIJGPEBKMME
{
	// Fields
	public const FIJGPEBKMME GROUP_KILL_NONE = 0;
	public const FIJGPEBKMME GROUP_KILL_ALL = 1;
	public const FIJGPEBKMME GROUP_KILL_MONSTER = 2;
	public const FIJGPEBKMME GROUP_KILL_GADGET = 3;
	public const FIJGPEBKMME GROUP_KILL_NPC = 4;
}
public enum HMBAKIPOOIP
{
	// Fields
	public const HMBAKIPOOIP PLATFORM_ROT_NONE = 0;
	public const HMBAKIPOOIP PLATFORM_ROT_SPEED = 1;
	public const HMBAKIPOOIP PLATFORM_ROT_ROUND = 2;
}
public enum KIKCEDGKIJB
{
	// Fields
	public const KIKCEDGKIJB EXPLORE_NONE = 0;
	public const KIKCEDGKIJB EXPLORE_CHEST = 1;
	public const KIKCEDGKIJB EXPLORE_TEMPLE = 2;
	public const KIKCEDGKIJB EXPLORE_GATHER = 3;
}
public enum CNBCGCKFPMC
{
	// Fields
	public const CNBCGCKFPMC DURATION = 0;
	public const CNBCGCKFPMC CUR_SUCC = 1;
	public const CNBCGCKFPMC CUR_FAIL = 2;
	public const CNBCGCKFPMC SUM_SUCC = 3;
	public const CNBCGCKFPMC SUM_FAIL = 4;
}
public enum LCPMMPCAHFE
{
	// Fields
	public const LCPMMPCAHFE CHALLENGE_EVENT_NONE = 0;
	public const LCPMMPCAHFE FLIGHT_TIME = 1;
	public const LCPMMPCAHFE FLIGHT_GATHER_POINT = 2;
	public const LCPMMPCAHFE SUMMER_TIME_SPRINT_BOAT_TIME = 3;
	public const LCPMMPCAHFE SUMMER_TIME_SPRINT_BOAT_GATHER_POINT = 4;
}
public enum CICHEOPPOOJ
{
	// Fields
	public const CICHEOPPOOJ MULTISTAGE_STAGE_MECHANICUS_BUILD = 0;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_MECHANICUS_KILL = 1;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_MECHANICUS_FLIP_CARD = 2;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_IDLE = 3;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_FLEUR_FAIR_GALLERY = 4;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_FLEUR_FAIR_BOSS = 5;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_FLEUR_FAIR_PREVIEW = 6;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_CHESS_BUILD = 7;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_CHESS_KILL = 8;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_IRODORI_CHESS_BUILD = 9;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_IRODORI_CHESS_KILL = 10;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_CHAR_AMUSEMENT_GALLERY = 11;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_CHAR_AMUSEMENT_PREVIEW = 12;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_COIN_COLLECT_CUTSCENE = 13;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_COIN_COLLECT_GALLERY = 14;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_COIN_COLLECT_PREPARE = 15;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_LAN_V3_BOAT_PREPARE = 16;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_LAN_V3_BOAT_PLAY = 17;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_LAN_V3_BOAT_SETTLE = 18;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_FLEUR_FAIR_V2_PACMAN_PREPARE = 19;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_FLEUR_FAIR_V2_PACMAN_GALLERY = 20;
	public const CICHEOPPOOJ MULTISTAGE_STAGE_FLEUR_FAIR_V2_PACMAN_SETTLE = 21;
}
public enum ENMICGGOIGA
{
	// Fields
	public const ENMICGGOIGA GROUP_IO_TYPE_DEFAULT = 0;
	public const ENMICGGOIGA GROUP_IO_TYPE_FLOW = 1;
}
public enum HIMALHHMEFH
{
	// Fields
	public const HIMALHHMEFH GROUP_SUB_FLOW_TYPE_DEFAULT = 0;
	public const HIMALHHMEFH GROUP_SUB_FLOW_TYPE_WORLD_QUEST = 1;
}
public enum DJHKJIMCMAA
{
	// Fields
	public const DJHKJIMCMAA COMMON_PLAYER_TIPS_TYPE_FINISH = 0;
	public const DJHKJIMCMAA COMMON_PLAYER_TIPS_TYPE_START = 1;
	public const DJHKJIMCMAA COMMON_PLAYER_TIPS_TYPE_FAIL = 2;
}
public enum INLKOBDHNNK
{
	// Fields
	public const INLKOBDHNNK FLOW_SUITE_OP_DEFAULT = 0;
	public const INLKOBDHNNK FLOW_SUITE_OP_COMPLETE = 1;
}
public enum OFBICLJHALN
{
	// Fields
	public const OFBICLJHALN GALLERY_PROGRESS_SCORE_UI_TYPE_NONE = 0;
	public const OFBICLJHALN GALLERY_PROGRESS_SCORE_UI_TYPE_BUOYANT_COMBAT = 1;
	public const OFBICLJHALN GALLERY_PROGRESS_SCORE_UI_TYPE_SUMO_STAGE = 2;
	public const OFBICLJHALN GALLERY_PROGRESS_SCORE_UI_TYPE_DIG = 3;
	public const OFBICLJHALN GALLERY_PROGRESS_SCORE_UI_TYPE_CRYSTAL_LINK = 4;
	public const OFBICLJHALN GALLERY_PROGRESS_SCORE_UI_TYPE_TREASURE = 5;
}
public enum EFPLBJMAKDL
{
	// Fields
	public const EFPLBJMAKDL GALLERY_PROGRESS_SCORE_NONE = 0;
	public const EFPLBJMAKDL GALLERY_PROGRESS_SCORE_NO_DEGRADE = 1;
}
public enum PGBKKBBALKC
{
	// Fields
	public const PGBKKBBALKC COMPOUND_NONE = 0;
	public const PGBKKBBALKC COMPOUND_COOK = 1;
	public const PGBKKBBALKC COMPOUND_PLACEHOLDER_2 = 2;
	public const PGBKKBBALKC COMPOUND_RANDOM_COOK = 3;
}
public enum MoleMole.Config.ConstValueType
{
	// Fields
	public const MoleMole.Config.ConstValueType CONST_VALUE_GAME_TIME_PER_DAY = 1;
	public const MoleMole.Config.ConstValueType CONST_VALUE_INIT_GAME_TIME = 2;
	public const MoleMole.Config.ConstValueType CONST_VALUE_INIT_TEAM_AVATAR = 3;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CHANGE_AVATAR_CD = 4;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AVATAR_HP_RECOVER = 5;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DASH_COST_STAMINA = 6;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CLIMB_COST_STAMINA = 7;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CLIMB_JUMP_COST_STAMINA = 8;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SWIM_COST_STAMINA = 9;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SWIM_DASH_COST_STAMINA = 10;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FLY_COST_STAMINA = 11;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FALL_HURT = 12;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PACK_MAX_WEIGHT = 13;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEPOT_MAX_WEIGHT = 14;
	public const MoleMole.Config.ConstValueType CONST_VALUE_KILL_MONSTER_EXP = 15;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PLAYER_WORLD_SCENE_ID = 16;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PLAYER_PICKUP_RANGE = 17;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ITEM_STACK_MAX = 18;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AVATAR_DIE_MAX_TIME = 19;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEFENSE_RESIST_RATIO = 20;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CRITICAL_LIMIT = 21;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BLOCK_REFRESH_PARAM = 22;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_KEEP_TIME = 23;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ADSORBATE_PICKUP_RANGE = 24;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ADSORBATE_STAY_TIME = 25;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ELEMENT_OVERLOAD_MAX = 26;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ELEMENT_OVERLOAD_REDUCE = 27;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PURGE_DECREMENT = 28;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WATER_FIRE_DECRATE = 29;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ICE_FIRE_DECRATE = 30;
	public const MoleMole.Config.ConstValueType CONST_VALUE_EFFECT_RESIST_LEVEL_FIX = 31;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_REVIVE_WAIT_TIME = 32;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FOOD_WEAPON_EXP_DISCOUNT_PARAM = 33;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FOOD_RELIQUARY_EXP_DISCOUNT_PARAM = 34;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DAMAGE_LEVEL_FIX = 35;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_CANCEL_WAIT_TIME = 36;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ENDURE_LEVEL_FIX = 37;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SECRET_CHEST_DAY_LIMIT = 38;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HURT_REVIVE_HP_PERCENT = 39;
	public const MoleMole.Config.ConstValueType CONST_VALUE_NO_HURT_DIE_SUB_HP_PERCENT = 40;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SPRING_RECOVER_TIME = 41;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SPRING_RECOVER_PARAM = 42;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SPRING_AUTO_RECOVER_DELAY = 43;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BACK_AVATAR_AUTO_RECOVER_PARAM = 44;
	public const MoleMole.Config.ConstValueType CONST_VALUE_STAMINA_LIMIT = 45;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BORED_LIMIT = 46;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BORED_CREATE_MONSTER = 47;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SKILL_CD_MIN_PRESERVE_TIME = 48;
	public const MoleMole.Config.ConstValueType CONST_VALUE_TALENT_POINT_LIMIT = 49;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ELEMENTREACTION_AREALEVELDELTA_LIMIT = 50;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BORED_ENABLE_QUEST_ID = 51;
	public const MoleMole.Config.ConstValueType CONST_VALUE_EXTRA_STAMINA_LIMIT = 52;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MODIFIER_MIN_PRESERVE_TIME = 53;
	public const MoleMole.Config.ConstValueType CONST_VALUE_NICKNAME_MAX_LENGTH = 54;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AREA_CHECK_CD = 55;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PORTAL_TRANSPORT_TIME = 56;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ENV_ANIMAL_REFRESH = 58;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ENV_ANIMAL_GROUP = 59;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BUSH_DROP = 61;
	public const MoleMole.Config.ConstValueType CONST_VALUE_COOK_AUTO_QUALITY = 62;
	public const MoleMole.Config.ConstValueType CONST_VALUE_KILL_DROP_EXP_CONFIG = 63;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AVATAR_MAX_PROMOTE_LEVEL = 64;
	public const MoleMole.Config.ConstValueType CONST_VALUE_VIOLIN_LIST = 65;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CROUCH_ROLL_COST_STAMINA = 66;
	public const MoleMole.Config.ConstValueType CONST_VALUE_STAMINA_RECOVER_WAIT_TIME = 67;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FIREWORM_ESCAPE_PARMA = 68;
	public const MoleMole.Config.ConstValueType CONST_VALUE_TIMEOUT_SECOND_PARMA = 69;
	public const MoleMole.Config.ConstValueType CONST_VALUE_TIMEOUT_COUND_PARMA = 70;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DASH_BS_COST_STAMINA = 71;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MAIL_MAX_NUM = 72;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RECORD_MONSTER_DIS = 73;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RECORD_MONSTER_ANGLE = 74;
	public const MoleMole.Config.ConstValueType CONST_VALUE_COMPOUND_QUEUE_MAX_COUNT = 75;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WEAPON_AUTO_HIDE_TIME = 76;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WEAPON_LEVELUP_COST = 77;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RELIQUARY_LEVELUP_COST = 78;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CLIMB_MIN_STAMINA = 79;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ELEMENT_SHOW_DISTANCE = 80;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WALK_TO_SWIM_ADD_STAMINA = 81;
	public const MoleMole.Config.ConstValueType CONST_VALUE_QUESTGUIDE_SHOW_DISTANCE = 82;
	public const MoleMole.Config.ConstValueType CONST_VALUE_LIMIT_QUALITY_ONDROP = 83;
	public const MoleMole.Config.ConstValueType CONST_VALUE_STEER_MIN_ANGLE = 84;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MAP_WARNING_DISTANCE = 85;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MAP_WARNING_INTERVAL = 86;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AREA_LEVEL_WARNING_THR = 87;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SUPERCONDUCTOR_DURABILITY = 88;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SWIRL_PARAM = 89;
	public const MoleMole.Config.ConstValueType CONST_VALUE_IS_MP_OPEN = 91;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CRASH_PARAM = 92;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ELEMENT_MASTERY_PARAM = 93;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DAILY_TASK_PARAM = 94;
	public const MoleMole.Config.ConstValueType CONST_VALUE_NEXT_DAY = 95;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RAND_TASK_REFRESH_PARAM = 96;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RAND_TASK_POS_PARAM = 97;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ENERGY_RECHANGE_RATIO = 98;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEFAULT_WORLD_ID = 99;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RAND_TASK_QEST_PARAM = 100;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RAND_TASK_COMP_PARAM = 101;
	public const MoleMole.Config.ConstValueType CONST_VALUE_EXPEDITION_INIT_LIMIT = 102;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WORLD_LEVEL_FORMULA = 103;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SWIM_DASH_COST_STAMINA_PER_SECOND = 104;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RAND_TASK_POINT_PARAM = 105;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WEATHER_INTERVAL = 106;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_DAILY_ITEM = 107;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_WEEKLY_ITEM = 108;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AVATAR_COMBAT_FORCE_PARAM = 109;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PLAYER_COMBAT_FORCE_PARAM = 110;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CORE_PROUD_SKILL_MAX_LEVEL = 111;
	public const MoleMole.Config.ConstValueType CONST_VALUE_INHERENT_PROUD_SKILL_MAX_LEVEL = 112;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVE_SKILL_MAX_LEVEL = 113;
	public const MoleMole.Config.ConstValueType CONST_VALUE_COOK_QTE_PERFECT_RANGE_VALUE = 114;
	public const MoleMole.Config.ConstValueType CONST_VALUE_TEAMNAME_MAX_LENGTH = 115;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_OEPN_QUEST = 116;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MP_CHAT_PARAM = 117;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CLIMB_COST_STAMINA_FORMULA = 118;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CLIMB_JUMP_COST_STAMINA_FORMULA = 119;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_CANDIDATE_INVITE_VAILD_TIME_SEC = 120;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SET_STRUGGLE_LEVEL_DIFFERENCE_THRESHOLD = 121;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_INVITE_NEED_TRANS_DISTANCE = 122;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PLAYER_LEVEL_REWARD_UNLOCK_PREVIEW_LIMIT = 123;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DROP_SUBFIELD_PARAM = 124;
	public const MoleMole.Config.ConstValueType CONST_VALUE_NPC_CONFLICT_DISTANCE = 125;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SEA_LAMP_ACTIVITY = 126;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY = 127;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AVATAR_UPGRADE_COST_RATIO = 128;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SEA_LAMP_PRAY_URL = 129;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SEA_LAMP_ACTIVITY2 = 130;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DAILY_TASK_PARAM2 = 131;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SEA_LAMP_QUEST = 132;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DAILY_TASK_OPEN_CUSTOM_POOL = 133;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RESIN_PARAM = 134;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RESIN_BUYING_COST = 136;
	public const MoleMole.Config.ConstValueType CONST_VALUE_TOWER_DAILY_MAIL_ID = 138;
	public const MoleMole.Config.ConstValueType CONST_VALUE_TOWER_MONTHLY_MAIL_ID = 139;
	public const MoleMole.Config.ConstValueType CONST_VALUE_TOWER_OVERFLOW_FIRST_PASS = 140;
	public const MoleMole.Config.ConstValueType CONST_VALUE_LIMIT_REGION_PATH = 141;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SEA_LAMP_ACTIVITY3 = 142;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEFAULT_MATERIAL_GADGET_ID = 144;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DISTANCE_CHECK = 145;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PROFICIENT_PLAYER_CHILD_QUEST = 146;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GACHA_GUARANTEE_START_COEFFICIENT = 147;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GACHA_GUARANTEE_INCREASE_COEFFICIENT = 148;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GACHA_DYNAMIC_UP_BASE = 149;
	public const MoleMole.Config.ConstValueType CONST_VALUE_QUEST_TRIAL_AVATAR_COMBAT_FORCE_CONVERT_RATIO = 150;
	public const MoleMole.Config.ConstValueType CONST_VALUE_OUTPUT_LIMIT_SWITCH = 151;
	public const MoleMole.Config.ConstValueType CONST_VALUE_OUTPUT_CONTROL_SWITCH = 152;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FROMBACK_LIMITTIME = 153;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FROMBACK_LIMITRATIO = 154;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RECONNECT_DELAY_BASE = 155;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FROMBACK_RECONNECT_DURATION = 156;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FORCE_RECONNECT_DURATION = 157;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SOCIAL_CONFIG = 158;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BATTLE_PASS_MISSION_REFRESH = 159;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PRODUCT_PARAM = 160;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SATIATION_PARAM = 161;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MALL_LIMITTIMEPT_SHOWTIME = 162;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GAGDET_CREATION_LIMIT_DROP_TAG = 163;
	public const MoleMole.Config.ConstValueType CONST_VALUE_LOADING_LIGHT_BG_PERIOD = 164;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_LEVEL_LIMIT = 165;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MOVE_SPEED_CHECK_PARAM = 166;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DISCONNECTHINT_TIMEOUT_SECONDS = 167;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BAG_OVERFLOW_MAIL_ID = 168;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_CRUCIBLE_QUEST_ID = 169;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MP_PLAY_CONFIG = 170;
	public const MoleMole.Config.ConstValueType CONST_VALUE_REBATE_MAIL_ID = 172;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CRUCIBLE_CONFIG = 173;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEFAULT_FLYCLOAK_CONFIG = 174;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEFAULT_NAME_CARD_ID = 175;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MATERIAL_ITEM_LIMIT = 176;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RELIQUARY_ITEM_LIMIT = 177;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WEAPON_ITEM_LIMIT = 178;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BATTLEPASS_VIDEO_CONFIG = 180;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MATERIAL_DESTROY_RETURN_MATERIAL_LIMIT = 181;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BATTLE_PASS_ITEM_USE_CONFIG = 182;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_NEWBEE_ID = 183;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PERSONAL_LINE_CONFIG = 184;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RTT_LOW = 185;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RTT_MID = 186;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RTT_HIGH = 187;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RTT_REFRESH_TIME = 188;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SPEECH_BUBBLE_DEFAULT_DURATION = 189;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SPEECH_BUBBLE_EXTRA_DURATION = 190;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FORGE_POINT_DAY_LIMIT = 191;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FIRST_SHARE_REWARD = 192;
	public const MoleMole.Config.ConstValueType CONST_VALUE_POINT_CARD_RECHARGE = 193;
	public const MoleMole.Config.ConstValueType CONST_VALUE_EXPLORE = 194;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MAP_MARK_MAX_LENGTH = 195;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GUIDE_RATING_CHAPTERID = 196;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PS4_TROPHY_SWITCH = 197;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ASTER_MIDDLE_RECOVER = 198;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ASTER_MIDDLE_NPC_TALK_ID = 199;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HUNTING_REVISE_LEVEL = 200;
	public const MoleMole.Config.ConstValueType CONST_VALUE_REMINDER_INTERRUPT_SHOW_DELAY = 201;
	public const MoleMole.Config.ConstValueType CONST_VALUE_UPGRADE_WEAPON_RETURN_MATERIAL_ID = 202;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CITY_REPUTATION_PARAM = 203;
	public const MoleMole.Config.ConstValueType CONST_VALUE_REPORT_PARAM = 204;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DRAGON_SPINE_CONFIG = 205;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DUNGEON_RESTART_INVITE_VAILD_TIME_SEC = 206;
	public const MoleMole.Config.ConstValueType CONST_VALUE_REUNION_PARAM = 207;
	public const MoleMole.Config.ConstValueType CONST_VALUE_TOWER_RESET = 208;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SNOW_MOUNTAIN_ROUTINE = 209;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ELEMENT_TRIAL_MARK_SHOW_LEVEL_LIMIT = 210;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ANTI_HARASSMENT_CONFIG = 211;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DRAGON_SPINE_MP_PLAY_CONFIG = 212;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DIE_INVINCIBLE_CONFIG = 213;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GRASS_TILE_ELEMENT_REACTION_POS_OFFSET = 214;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ASK_ADD_FRIEND_FREQUENCY_CONFIG = 215;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BLESSING_CONFIG = 216;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MIRACLE_RING_CD = 217;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MIRACLE_RING_DROP_COUNT = 218;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MIRACLE_RING_DELIVER_VALUE = 219;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MIRACLE_RING_RANDOM_DROP_PROB = 220;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MIRACLE_RING_ITEM_ADD_PACK = 221;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MP_REWARD_RESERVED_TIME_CONFIG = 222;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CHAT_PARAM = 223;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_EXPEDITION_DAILY_REFRESH_PATH_LIMIT = 224;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_EXPEDITION_DAILY_COUNT_LIMIT = 225;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_EXPEDITION_SUPER_ELEM_COEF = 226;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_MONSTER_BANNER_DRAKE_PRIMO_ROCK = 227;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SHOP_OUTPUT_SWITCH = 228;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MECHANICUS_ROTATION_PARAM = 229;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MECHANICUS_CARD_PARAM = 230;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FORCE_DRAG_BACK_PARAM = 231;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_EXPEDITION_CONTENT_DURATION = 232;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_EXPEDITION_CHALLENGE_HINT_CD = 233;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MUIP_MAIL_REWARD_LIMIT = 234;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ARENA_CHALLENGE_REWARD_WORKTOP = 235;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_WATER_SPRITE_PARA = 236;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WORLD_LEVEL_ADJUST = 237;
	public const MoleMole.Config.ConstValueType CONST_VALUE_NECHANICUS_OPEN_QUESTID = 238;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_WATER_SPRITE_PARA_SECONDPART = 239;
	public const MoleMole.Config.ConstValueType CONST_VALUE_COOP_QUESTID_INTERVAL = 240;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HIT_TREE_DROP_PARAM = 241;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HIT_TREE_DROP_PROB = 243;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEFAULT_HOME_WORLD_ID = 244;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_SPEECHBUBBLE_DEFAULT_DELAY = 245;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_SPEECHBUBBLE_DEFAULT_INTERVAL = 246;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_SPEECHBUBBLE_PRIORITY = 247;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_GREET_DIST_MIN = 248;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_GREET_DIST_MAX = 249;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_GREET_ANGLE_MAX = 250;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_GREET_TURN_ANGLE = 251;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_GREET_TURN_DURATION = 252;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MULTI_PLAY_FETTER_EXP_RATIO = 253;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ROOM_MINIMAP_DEFAULT_SCALE = 254;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_TYPE_LIMIT = 255;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_ARRANGEMENT_COST_LEVEL = 256;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_LEGO_HEIGHT = 257;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_ACCELERATE_PARAM = 258;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_WEEKEND_DJINN_PARAM = 259;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_EFFIGY_ICE = 260;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_HOMEWORLD = 261;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOMEWORLD_TUTRIAL_QUEST = 262;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CHANNELLER_SLAB_SINGLE_BUFF_ENERGY_LIMIT = 263;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CHANNELLER_SLAB_MP_BUFF_ENERGY_LIMIT = 264;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_RESOURCE_PRODUCE_INTERVAL = 265;
	public const MoleMole.Config.ConstValueType CONST_VALUE_WEEKLY_BOSS_RESIN_DISCOUNT_PARAM = 266;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BUSH_DROP_CACHA_NUM = 267;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GENERAL_MATCH = 268;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_DJINN_PARAM = 269;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FURNITURE_ITEM_LIMIT = 270;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SUMMER_TIME_SCENE_ID = 271;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CAN_NOT_DESTROY_MATERIAL_TYPE_LIST = 272;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DANGERZONE_GET_LOST_COUNTDOWN = 273;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SKIFF_SPRINT_COST_STAMINA = 274;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SKIFF_DASH_COST_STAMINA = 275;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SIGNAL_ACTIVE_DISTANCE = 276;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEFAULT_COSTUME_ICON = 277;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HERO_COURSE_TRANSFER_CONFIG = 278;
	public const MoleMole.Config.ConstValueType CONST_VALUE_VEHICLE_CONFIG = 279;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_GREET_LEAVE_DELAY = 280;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CHESS_PARAMS = 281;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GENSHIN_RELEASE_TIME = 282;
	public const MoleMole.Config.ConstValueType CONST_VALUE_INIT_HOME_TIME = 283;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_CD_LIMIT = 300;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_NUM_LIMIT = 301;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_RESOURCE_BASE_VALUE = 302;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_PRIOR_CHECK_TIME_RANGE = 303;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_PLANT_BOX = 304;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_WAIT_ENTER_EDIT_FINISH_RSP = 305;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_BLUE_PRINT_COMPLETENESS = 306;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_BLUEPRINT_CD_LIMIT = 307;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_BLUEPRINT_GEN_SHARE_CODE_RETRY_TIMES = 308;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_BLUEPRINT_SHARE_CODE_SEARCH_PATTERN_LIMIT = 309;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_SEARCH_PATTERN_LIMIT = 310;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_ARRANGEMENT_COST_LEVEL_HALL = 350;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_ARRANGEMENT_COST_LEVEL_ROOM = 351;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_COMFORT_MODIFER = 352;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_SUITE_FURNITURE_ID = 353;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_GROUP_NUM_LIMIT = 354;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_GROUP_RECORD_NUM_LIMIT = 355;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_FURNITURE_CUSTOM_SUITE_PARAM = 356;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BATTLEPASS_PURCHASE_ABOUT_TO_CLOSE_THRESHOLD = 400;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BATTLEPASS_PURCHASE_CLOSE_AHEAD_MINUTES = 401;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_DAOQI_ADVERTISEMENT = 410;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MAP_MARK_PARAM = 411;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GATHER_SAVETYPE_TO_GATHERID = 412;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HOME_NPC_EVENT_TRANSFER_TIME = 413;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_EFFIGY_FIRE = 414;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_PERPETUAL = 415;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MECHANICUS_2_ATTACK = 416;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MECHANICUS_2_MASTERY = 417;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MECHANICUS_2_ATTACK_SPEED = 418;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MECHANICUS_2_ALERT_RANGE = 419;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CONDENSE_RESINRE_PLACE_RESIN_COUNT = 420;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BLOSSOM_BAG_REWARD_RADIUS = 422;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CHESS_CARD_CONFIG = 425;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PSN_SOCIAL_CONFIG = 426;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SUMO_ACTIVITY_CONFIG = 427;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FISHING = 428;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ELEMENT_MASTERY_PARAM_OVERDOSE = 423;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GADGET_INTERACT_CHECK_DISTANCE = 424;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEFAULT_WEATHER_AREA_ID = 429;
	public const MoleMole.Config.ConstValueType CONST_VALUE_EMOJI_COLLECT_NUM_LIMIT = 431;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACTIVITY_EXPEDITION_2_PARAMS = 440;
	public const MoleMole.Config.ConstValueType CONST_VALUE_QIANDAOGUA_PARAMS = 441;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CUSTOM_GADGET_PARTS_MAX_NUM = 442;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DIG_ACTIVITY_HINT_RAND_DEGREE = 443;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ROGUELIKE_ACTIVITY_PARAMS = 444;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MOONFIN_BANNER = 445;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MINORS_GACHA_PARAM = 446;
	public const MoleMole.Config.ConstValueType CONST_VALUE_FIREWORKS_LAUNCH_PARAM = 447;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MICHIAE_MATSURI_ACTIVITY_REGIONAL_PLAY_PARAMS = 448;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MICHIAE_MATSURI_ACTIVITY_DARK_PRESURE_MAX_PARAMS = 449;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CUSTOM_DUNGEON_RECOMMEND_1 = 450;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CUSTOM_DUNGEON_RECOMMEND_2 = 451;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CUSTOM_DUNGEON_RECOMMEND_FILT = 452;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CUSTOM_DUNGEON = 453;
	public const MoleMole.Config.ConstValueType CONST_VALUE_COLLECTIBLE_MAIL_PARAM = 460;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PLAYER_NPC = 461;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SHARECD_SERVER_BUFFER_TIME = 462;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CUSTOMLEVEL_CUSTOMSUITE_BLOCK_MAX_NUM = 463;
	public const MoleMole.Config.ConstValueType CONST_VALUE_CODEX_GUIDE_PAPAM = 464;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BAN_NEW_LANGUAGE_SHOW = 465;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PACKET_LOSS_WARNING_THRESHOLD = 470;
	public const MoleMole.Config.ConstValueType CONST_VALUE_PACKET_LOSS_WARNING_INTERVAL = 471;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACHIEVEMENT_SEARCH_PATTERN_LIMIT = 480;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SEND_QUESTIONNAIRE_MAIL_LOGOUT_TIME = 481;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SEND_QUESTIONNAIRE_MAIL_CD_TIME = 482;
	public const MoleMole.Config.ConstValueType CONST_VALUE_NIGHT_CROW_CONFIG = 483;
	public const MoleMole.Config.ConstValueType CONST_VALUE_HANDBOOK_QUEST_GUIDE_MAX_NUM = 484;
	public const MoleMole.Config.ConstValueType CONST_VALUE_SUMMER_TIME_PORTAL_LOADING = 485;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DEATH_ZONE_PARAM = 490;
	public const MoleMole.Config.ConstValueType CONST_VALUE_COMPOUND_BOOST_ITEM_ID = 495;
	public const MoleMole.Config.ConstValueType CONST_VALUE_COMPOUND_BOOST_TIME_TOLERANCE = 496;
	public const MoleMole.Config.ConstValueType CONST_VALUE_REQ_FRIEND_AVATAR_TIME_LIMIT = 498;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DECK_LIMIT_SIZE = 500;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_CHAR_LIMIT_SIZE = 501;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_CARD_LIMIT = 502;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DECK_SAVE_CD = 503;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DECK_CHANGE_NAME_CD = 504;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DUNGEON_ID = 505;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DECK_NAME_SIZE_LIMIT = 506;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_TAVERN_SCENE_ID = 507;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DEFAULT_CARD_BACK_AND_TABLE = 508;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_ROUND_LIMIT = 509;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_UNLOCK_CHARACTER_ITEM_ID = 510;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_TAVERN_POINT_ID = 511;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_CARD_PROFICIENCY_LIMIT = 512;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_TAVERN_GROUP_ID = 513;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DEFAULT_PVP_GAME_ID = 514;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_TAVERN_CONST_NPC_COUNT = 515;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_INVITE_TIME_EXPIRE = 516;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_TAVERN_REFRESH_INTERVAL = 517;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DUNGEON_SETTLE_DOWN_COUNT_TIME = 518;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_LOCAL_BATTLE_ENTRY_POINT = 519;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_DECK_SYSTEM_INIT_DECK = 520;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_SHOP_MATERIALS_SHOW_IN_MALL = 521;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_RELEASE_TIME = 522;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACHIEVEMENT_SEARCH_LIMIT = 600;
	public const MoleMole.Config.ConstValueType CONST_VALUE_NAHIDA_NARRATOR = 601;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ACHIEVEMENT_RESULT_AMOUNT_PER_PAGE = 602;
	public const MoleMole.Config.ConstValueType CONST_VALUE_NAHIDA_DUNGEON_MASK = 603;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DAILY_TASK_RELATED_TAG_EFFECT_PROB = 499;
	public const MoleMole.Config.ConstValueType CONST_VALUE_DESHRET_MANUAL_MAXLEVEL_ICON = 604;
	public const MoleMole.Config.ConstValueType CONST_VALUE_BATCH_BUY_GOODS_COUNT_LIMIT = 3301;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AVATAR_RENAME_AUTO_FAIL_HOUR = 3302;
	public const MoleMole.Config.ConstValueType CONST_VALUE_AVATAR_RENAME_COOL_DOWM = 3303;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_PRE_QUEST_ID = 3304;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GADGET_NAHIDA_INTERACT_CHECK_DISTANCE = 3401;
	public const MoleMole.Config.ConstValueType CONST_VALUE_EXCHANGE_CODE_BUTTON_COOL_DOWN = 3501;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MAX_DAMAGE_LOAN_BY_HP = 3502;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MAIL_STAR_FREQ_CONTROL_PARAM = 3503;
	public const MoleMole.Config.ConstValueType CONST_VALUE_MUSIC_UGC_SAVE_NUM = 3504;
	public const MoleMole.Config.ConstValueType CONST_VALUE_RAND_TASK_REFRESH_UPPER_LIMIT = 3505;
	public const MoleMole.Config.ConstValueType CONST_VALUE_ARCHAEOLOGY_MIN_DISTANCE = 3601;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_REPLAY_LIMIT = 3602;
	public const MoleMole.Config.ConstValueType CONST_VALUE_VANASARA_OFFERING_MAX_CUTSCENE = 3603;
	public const MoleMole.Config.ConstValueType CONST_VALUE_VANASARA_OFFERING_LEVEL_TAG_SWITCH_ABILITY = 3604;
	public const MoleMole.Config.ConstValueType CONST_VALUE_GCG_REPLAY_TTL = 3605;
}
public enum FAMEMJGBEEC
{
	// Fields
	public const FAMEMJGBEEC COOK_FOOD_NONE = 0;
	public const FAMEMJGBEEC COOK_FOOD_HEAL = 1;
	public const FAMEMJGBEEC COOK_FOOD_ATTACK = 2;
	public const FAMEMJGBEEC COOK_FOOD_FUNCTION = 3;
	public const FAMEMJGBEEC COOK_FOOD_DEFENSE = 4;
	public const FAMEMJGBEEC COOK_RECIPE = 5;
}
public enum HMKCJJNDLCP
{
	// Fields
	public const HMKCJJNDLCP COOK_METHOD_NONE = 0;
	public const HMKCJJNDLCP COOK_METHOD_STEAM = 1;
	public const HMKCJJNDLCP COOK_METHOD_BOIL = 2;
	public const HMKCJJNDLCP COOK_METHOD_FRY = 3;
	public const HMKCJJNDLCP COOK_METHOD_BAKE = 4;
}
public enum FLDPCMFFHJL
{
	// Fields
	public const FLDPCMFFHJL COOK_BONUS_NONE = 0;
	public const FLDPCMFFHJL COOK_BONUS_REPLACE = 1;
	public const FLDPCMFFHJL COOK_BONUS_PROFICIENCY = 2;
}
public enum EAICACBDFIG
{
	// Fields
	public const EAICACBDFIG COOP_COND_NONE = 0;
	public const EAICACBDFIG COOP_COND_FINISH_QUEST = 1;
	public const EAICACBDFIG COOP_COND_PLAYER_LEVEL = 2;
	public const EAICACBDFIG COOP_COND_COOP_POINT_FINISH = 3;
	public const EAICACBDFIG COOP_COND_AVATAR_FETTER_LEVEL = 4;
	public const EAICACBDFIG COOP_COND_CHAPTER_END_ALL_FINISH = 5;
	public const EAICACBDFIG COOP_COND_CHAPTER_END_FINISH_COUNT = 6;
}
public enum BIAFMNMNDCE
{
	// Fields
	public const BIAFMNMNDCE COOP_VALUE_UI_DEFAULT = 0;
	public const BIAFMNMNDCE COOP_VALUE_UI_PRESSURE = 1;
}
public enum GDLHLMBEHDH
{
	// Fields
	public const GDLHLMBEHDH CG_NONE = 0;
	public const GDLHLMBEHDH CG_MALE = 1;
	public const GDLHLMBEHDH CG_FEMALE = 2;
}
public enum NLFKJCDAGEJ
{
	// Fields
	public const NLFKJCDAGEJ POINT_NONE = 0;
	public const NLFKJCDAGEJ POINT_START = 1;
	public const NLFKJCDAGEJ POINT_MIDDLE = 2;
	public const NLFKJCDAGEJ POINT_END = 3;
}
public enum IIACBGEPMKJ
{
	// Fields
	public const IIACBGEPMKJ BRICK_ROTATE_NONE = 0;
	public const IIACBGEPMKJ BRICK_ROTATE_45 = 1;
	public const IIACBGEPMKJ BRICK_ROTATE_90 = 2;
}
public enum KGJFNMEMCBP
{
	// Fields
	public const KGJFNMEMCBP BRICK_TYPE_NONE = 0;
	public const KGJFNMEMCBP BRICK_TYPE_COIN = 1;
	public const KGJFNMEMCBP BRICK_TYPE_FINISH = 2;
}
public enum PNIABIIANCK
{
	// Fields
	public const PNIABIIANCK DAILY_TASK_QUEST = 0;
	public const PNIABIIANCK DAILY_TASK_SCENE = 1;
}
public enum EMMLLBBFJFI
{
	// Fields
	public const EMMLLBBFJFI CONDITION_NONE = 0;
	public const EMMLLBBFJFI CONDITION_QUEST = 1;
	public const EMMLLBBFJFI CONDITION_PLAYER_LEVEL = 2;
	public const EMMLLBBFJFI CONDITION_VAR_EQ = 3;
	public const EMMLLBBFJFI CONDITION_VAR_NE = 4;
	public const EMMLLBBFJFI CONDITION_VAR_GT = 5;
	public const EMMLLBBFJFI CONDITION_VAR_LT = 6;
	public const EMMLLBBFJFI CONDITION_UNLOCK_POINT = 7;
	public const EMMLLBBFJFI CONDITION_PLAYER_LEVEL_GT_EQ = 8;
	public const EMMLLBBFJFI CONDITION_PLAYER_LEVEL_LT = 9;
	public const EMMLLBBFJFI CONDITION_SPECIFIC_ACTIVITY_OPEN = 10;
	public const EMMLLBBFJFI CONDITION_ACTIVITY_TYPE_OPEN = 11;
	public const EMMLLBBFJFI CONDITION_QUEST_GLOBAL_VAR_EQUAL = 12;
	public const EMMLLBBFJFI CONDITION_QUEST_GLOBAL_VAR_GREATER = 13;
	public const EMMLLBBFJFI CONDITION_QUEST_GLOBAL_VAR_LESS = 14;
	public const EMMLLBBFJFI CONDITION_FINISH_ACHIEVEMENT = 15;
}
public enum PFJFLENJOLJ
{
	// Fields
	public const PFJFLENJOLJ DAILY_FINISH_NONE = 0;
	public const PFJFLENJOLJ DAILY_FINISH_MONSTER_ID_NUM = 1;
	public const PFJFLENJOLJ DAILY_FINISH_GADGET_ID_NUM = 2;
	public const PFJFLENJOLJ DAILY_FINISH_MONSTER_CONFIG_NUM = 3;
	public const PFJFLENJOLJ DAILY_FINISH_GADGET_CONFIG_NUM = 4;
	public const PFJFLENJOLJ DAILY_FINISH_MONSTER_NUM = 5;
	public const PFJFLENJOLJ DAILY_FINISH_CHEST_CONFIG = 6;
	public const PFJFLENJOLJ DAILY_FINISH_GATHER = 7;
	public const PFJFLENJOLJ DAILY_FINISH_CHALLENGE = 8;
}
public enum MGNJCLNAKMC
{
	// Fields
	public const MGNJCLNAKMC DAILY_TASK_ACTION_NONE = 0;
	public const MGNJCLNAKMC DAILY_TASK_ACTION_SET_VAR = 1;
	public const MGNJCLNAKMC DAILY_TASK_ACTION_INC_VAR = 2;
	public const MGNJCLNAKMC DAILY_TASK_ACTION_DEC_VAR = 3;
	public const MGNJCLNAKMC DAILY_TASK_ACTION_ADD_SURE_POOL = 4;
	public const MGNJCLNAKMC DAILY_TASK_ACTION_ADD_POSSIBLE_POOL = 5;
}
public enum IOHONFDAOAI
{
	// Fields
	public const IOHONFDAOAI DAILY_TASK_COND_NONE = 0;
	public const IOHONFDAOAI DAILY_TASK_COND_VAR_EQ = 1;
	public const IOHONFDAOAI DAILY_TASK_COND_VAR_NE = 2;
	public const IOHONFDAOAI DAILY_TASK_COND_VAR_GT = 3;
	public const IOHONFDAOAI DAILY_TASK_COND_VAR_LT = 4;
}
public enum DFJIDPIOOEK
{
	// Fields
	public const DFJIDPIOOEK PLAYER_DIE_NONE = 0;
	public const DFJIDPIOOEK PLAYER_DIE_KILL_BY_MONSTER = 1;
	public const DFJIDPIOOEK PLAYER_DIE_KILL_BY_GEAR = 2;
	public const DFJIDPIOOEK PLAYER_DIE_FALL = 3;
	public const DFJIDPIOOEK PLAYER_DIE_DRAWN = 4;
	public const DFJIDPIOOEK PLAYER_DIE_ABYSS = 5;
}
public enum HGHCOJKDEKJ
{
	// Fields
	public const HGHCOJKDEKJ RELIQUARY_ITEM = 0;
	public const HGHCOJKDEKJ BARTENDER_ITEM = 1;
	public const HGHCOJKDEKJ DEFAULT_ITEM = 100;
}
public enum EMAMJKEDCDN
{
	// Fields
	public const EMAMJKEDCDN DRAFT_EXEC_NONE = 0;
	public const EMAMJKEDCDN DRAFT_EXEC_GALLERY = 1;
	public const EMAMJKEDCDN DRAFT_EXEC_HIDE_AND_SEEK = 2;
	public const EMAMJKEDCDN DRAFT_EXEC_AUTOSTART_GALLERY = 3;
	public const EMAMJKEDCDN DRAFT_EXEC_CHAR_AMUSEMENT = 4;
	public const EMAMJKEDCDN DRAFT_EXEC_BRICK_BREAKER = 5;
	public const EMAMJKEDCDN DRAFT_EXEC_COIN_COLLECT = 6;
	public const EMAMJKEDCDN DRAFT_EXEC_LAN_V3_BOAT_MULTI = 7;
}
public enum FMOLDPKLLFC
{
	// Fields
	public const FMOLDPKLLFC DRAFT_START_LIMIT_NONE = 0;
	public const FMOLDPKLLFC DRAFT_START_LIMIT_SCENE = 1;
	public const FMOLDPKLLFC DRAFT_START_LIMIT_NOT_IN_HOME_DUNGEON = 2;
}
public enum KHENELCDCOD
{
	// Fields
	public const KHENELCDCOD DRAFT_INVITE_NONE = 0;
	public const KHENELCDCOD DRAFT_INVITE_SCENE = 1;
	public const KHENELCDCOD DRAFT_INVITE_WORLD = 2;
}
public enum EMHNFFIHDPK
{
	// Fields
	public const EMHNFFIHDPK DRAFT_EXEC_SUB_NONE = 0;
	public const EMHNFFIHDPK DRAFT_EXEC_SUB_ISLAND_PARTY = 1;
}
public enum DFHBJNJHPCN
{
	// Fields
	public const DFHBJNJHPCN DROP_RANDOM_BY_WEIGHT = 0;
	public const DFHBJNJHPCN DROP_RANDOM_INDEPENDENT = 1;
}
public enum DOLEMFMHDOC
{
	// Fields
	public const DOLEMFMHDOC DROP_NODE_LEAF = 0;
	public const DOLEMFMHDOC DROP_NODE_TREE = 1;
}
public enum BNFKNHHKKLP
{
	// Fields
	public const BNFKNHHKKLP DATA_ENTITY_NONE = 0;
	public const BNFKNHHKKLP DATA_ENTITY_MONSTER = 1;
	public const BNFKNHHKKLP DATA_ENTITY_GADGET = 2;
}
public enum IIALLOHICHL
{
	// Fields
	public const IIALLOHICHL DUNGEON_ENTRY_CONDITION_NONE = 0;
	public const IIALLOHICHL DUNGEON_ENTRY_CONDITION_LEVEL = 1;
	public const IIALLOHICHL DUNGEON_ENTRY_CONDITION_QUEST = 2;
}
public enum MoleMole.Config.DungeonEntryType
{
	// Fields
	public const MoleMole.Config.DungeonEntryType DUNGEN_ENTRY_TYPE_NONE = 0;
	public const MoleMole.Config.DungeonEntryType DUNGEN_ENTRY_TYPE_AVATAR_EXP = 1;
	public const MoleMole.Config.DungeonEntryType DUNGEN_ENTRY_TYPE_WEAPON_PROMOTE = 2;
	public const MoleMole.Config.DungeonEntryType DUNGEN_ENTRY_TYPE_AVATAR_TALENT = 3;
	public const MoleMole.Config.DungeonEntryType DUNGEN_ENTRY_TYPE_RELIQUARY = 4;
	public const MoleMole.Config.DungeonEntryType DUNGEN_ENTRY_TYPE_SCOIN = 5;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_OBSCURAE = 6;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_NORMAL = 7;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_TRIAL = 8;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_EFFIGY = 9;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_FLEUR_FAIR = 10;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_CHANNELLER_SLAB_LOOP = 11;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_CHANNELLER_SLAB_ONE_OFF = 12;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_BLITZ_RUSH = 13;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_SUMO = 14;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_ACTIVITY = 15;
	public const MoleMole.Config.DungeonEntryType DUNGEON_ENTRY_TYPE_HACHI = 16;
}
public enum MoleMole.Config.DungeonType
{
	// Fields
	public const MoleMole.Config.DungeonType DUNGEON_NONE = 0;
	public const MoleMole.Config.DungeonType DUNGEON_PLOT = 1;
	public const MoleMole.Config.DungeonType DUNGEON_FIGHT = 2;
	public const MoleMole.Config.DungeonType DUNGEON_DAILY_FIGHT = 3;
	public const MoleMole.Config.DungeonType DUNGEON_WEEKLY_FIGHT = 4;
	public const MoleMole.Config.DungeonType DUNGEON_DISCARDED = 5;
	public const MoleMole.Config.DungeonType DUNGEON_TOWER = 6;
	public const MoleMole.Config.DungeonType DUNGEON_BOSS = 7;
	public const MoleMole.Config.DungeonType DUNGEON_ACTIVITY = 8;
	public const MoleMole.Config.DungeonType DUNGEON_EFFIGY = 9;
	public const MoleMole.Config.DungeonType DUNGEON_ELEMENT_CHALLENGE = 10;
	public const MoleMole.Config.DungeonType DUNGEON_THEATRE_MECHANICUS = 11;
	public const MoleMole.Config.DungeonType DUNGEON_FLEUR_FAIR = 12;
	public const MoleMole.Config.DungeonType DUNGEON_CHANNELLER_SLAB_LOOP = 13;
	public const MoleMole.Config.DungeonType DUNGEON_CHANNELLER_SLAB_ONE_OFF = 14;
	public const MoleMole.Config.DungeonType DUNGEON_BLITZ_RUSH = 15;
	public const MoleMole.Config.DungeonType DUNGEON_CHESS = 16;
	public const MoleMole.Config.DungeonType DUNGEON_SUMO_COMBAT = 17;
	public const MoleMole.Config.DungeonType DUNGEON_ROGUELIKE = 18;
	public const MoleMole.Config.DungeonType DUNGEON_HACHI = 19;
	public const MoleMole.Config.DungeonType DUNGEON_POTION = 20;
	public const MoleMole.Config.DungeonType DUNGEON_MINI_ELDRITCH = 21;
	public const MoleMole.Config.DungeonType DUNGEON_UGC = 22;
	public const MoleMole.Config.DungeonType DUNGEON_GCG = 23;
	public const MoleMole.Config.DungeonType DUNGEON_CRYSTAL_LINK = 24;
	public const MoleMole.Config.DungeonType DUNGEON_IRODORI_CHESS = 25;
	public const MoleMole.Config.DungeonType DUNGEON_ROGUE_DIARY = 26;
	public const MoleMole.Config.DungeonType DUNGEON_DREAMLAND = 27;
	public const MoleMole.Config.DungeonType DUNGEON_SUMMER_V2 = 28;
	public const MoleMole.Config.DungeonType DUNGEON_MUQADAS_POTION = 29;
	public const MoleMole.Config.DungeonType DUNGEON_INSTABLE_SPRAY = 30;
	public const MoleMole.Config.DungeonType DUNGEON_WIND_FIELD = 31;
	public const MoleMole.Config.DungeonType DUNGEON_BIGWORLD_MIRROR = 32;
	public const MoleMole.Config.DungeonType DUNGEON_FUNGUS_FIGHTER_TRAINING = 33;
	public const MoleMole.Config.DungeonType DUNGEON_FUNGUS_FIGHTER_PLOT = 34;
	public const MoleMole.Config.DungeonType DUNGEON_EFFIGY_CHALLENGE_V2 = 35;
	public const MoleMole.Config.DungeonType DUNGEON_CHAR_AMUSEMENT = 36;
	public const MoleMole.Config.DungeonType DUNGEON_MIST_TRIAL = 37;
	public const MoleMole.Config.DungeonType DUNGEON_BRICK_BREAKER = 39;
	public const MoleMole.Config.DungeonType DUNGEON_TEAM_CHAIN = 38;
	public const MoleMole.Config.DungeonType DUNGEON_DUEL_HEART = 40;
	public const MoleMole.Config.DungeonType DUNGEON_DUEL_HEART_PLOT = 41;
	public const MoleMole.Config.DungeonType DUNGEON_PACMAN = 42;
	public const MoleMole.Config.DungeonType DUNGEON_FUNGUS_FIGHTER_V2 = 43;
	public const MoleMole.Config.DungeonType DUNGEON_GCG_REPLAY = 44;
	public const MoleMole.Config.DungeonType DUNGEON_SORUSH_PLOT = 45;
	public const MoleMole.Config.DungeonType DUNGEON_AKA_FES_RHYTHM_PIG = 46;
	public const MoleMole.Config.DungeonType DUNGEON_AKA_FES_RHYTHM_WEASEL = 47;
	public const MoleMole.Config.DungeonType DUNGEON_AKA_FES_RHYTHM_FISH = 48;
	public const MoleMole.Config.DungeonType DUNGEON_AKA_FES_ARCHITECT = 49;
	public const MoleMole.Config.DungeonType DUNGEON_AKA_FES_POTION = 50;
	public const MoleMole.Config.DungeonType DUNGEON_AKA_FES_RHYTHM_PIG_ADJUST = 51;
	public const MoleMole.Config.DungeonType DUNGEON_AKA_FES_RHYTHM_WEASEL_ADJUST = 52;
	public const MoleMole.Config.DungeonType DUNGEON_AKA_FES_RHYTHM_FISH_ADJUST = 53;
}
public enum KHHGNILNKOB
{
	// Fields
	public const KHHGNILNKOB DUNGEON_SUB_NONE = 0;
	public const KHHGNILNKOB DUNGEON_SUB_RELIQUARY = 1;
	public const KHHGNILNKOB DUNGEON_SUB_TALENT = 2;
	public const KHHGNILNKOB DUNGEON_SUB_WEAPON = 3;
	public const KHHGNILNKOB DUNGEON_SUB_BOSS = 4;
}
public enum IPGFNKHGHIM
{
	// Fields
	public const IPGFNKHGHIM DUNGEON_BLOCK_NONE = 0;
	public const IPGFNKHGHIM DUNGEON_UI_BLOCK_BY_QUEST = 1;
}
public enum LPEFBGAMMDJ
{
	// Fields
	public const LPEFBGAMMDJ INVOLVE_NONE = 0;
	public const LPEFBGAMMDJ INVOLVE_ONLY_SINGLE = 1;
	public const LPEFBGAMMDJ INVOLVE_SINGLE_MULTIPLE = 2;
	public const LPEFBGAMMDJ INVOLVE_DYNAMIC_MULTIPLE = 3;
	public const LPEFBGAMMDJ INVOLVE_ONLY_MULTIPLE = 4;
}
public enum HLLANLAIGLA
{
	// Fields
	public const HLLANLAIGLA SETTLE_SHOW_NONE = 0;
	public const HLLANLAIGLA SETTLE_SHOW_TIME_COST = 1;
	public const HLLANLAIGLA SETTLE_SHOW_OPEN_CHEST_COUNT = 2;
	public const HLLANLAIGLA SETTLE_SHOW_KILL_MONSTER_COUNT = 3;
	public const HLLANLAIGLA SETTLE_SHOW_BLACKSCREEN = 4;
}
public enum GGMOJGLNNCO
{
	// Fields
	public const GGMOJGLNNCO SETTLE_UI_AlWAYS_SHOW = 0;
	public const GGMOJGLNNCO SETTLE_UI_ON_SUCCESS = 1;
	public const GGMOJGLNNCO SETTLE_UI_ON_FAIL = 2;
	public const GGMOJGLNNCO SETTLE_UI_NEVER_SHOW = 3;
}
public enum JEBCNPMHNDH
{
	// Fields
	public const JEBCNPMHNDH DUNGEON_STATE_NONE = 0;
	public const JEBCNPMHNDH DUNGEON_STATE_RELEASE = 1;
	public const JEBCNPMHNDH DUNGEON_STATE_TEST = 2;
}
public enum HPNNHILBMIF
{
	// Fields
	public const HPNNHILBMIF SUBCHALLENGE_FADEOUT_TYPE_NONE = 0;
	public const HPNNHILBMIF SUBCHALLENGE_FADEOUT_TYPE_SUCCESS = 1;
	public const HPNNHILBMIF SUBCHALLENGE_FADEOUT_TYPE_FAIL = 2;
	public const HPNNHILBMIF SUBCHALLENGE_FADEOUT_TYPE_FINISH = 3;
}
public enum HCNGAEGFADP
{
	// Fields
	public const HCNGAEGFADP SUBCHALLENGE_BANNER_TYPE_NONE = 0;
	public const HCNGAEGFADP SUBCHALLENGE_BANNER_TYPE_SUCCESS = 1;
	public const HCNGAEGFADP SUBCHALLENGE_BANNER_TYPE_FAIL = 2;
	public const HCNGAEGFADP SUBCHALLENGE_BANNER_TYPE_SHOW_FINAL = 3;
	public const HCNGAEGFADP SUBCHALLENGE_BANNER_TYPE_HIDE_FINAL = 4;
}
public enum OINELFBMFEI
{
	// Fields
	public const OINELFBMFEI DUNGEON_COND_NONE = 0;
	public const OINELFBMFEI DUNGEON_COND_KILL_MONSTER = 3;
	public const OINELFBMFEI DUNGEON_COND_KILL_GROUP_MONSTER = 5;
	public const OINELFBMFEI DUNGEON_COND_KILL_TYPE_MONSTER = 7;
	public const OINELFBMFEI DUNGEON_COND_FINISH_QUEST = 9;
	public const OINELFBMFEI DUNGEON_COND_KILL_MONSTER_COUNT = 11;
	public const OINELFBMFEI DUNGEON_COND_IN_TIME = 13;
	public const OINELFBMFEI DUNGEON_COND_FINISH_CHALLENGE = 14;
	public const OINELFBMFEI DUNGEON_COND_END_MULTISTAGE_PLAY = 15;
}
public enum MoleMole.Config.ChallengeType
{
	// Fields
	public const MoleMole.Config.ChallengeType CHALLENGE_NONE = 0;
	public const MoleMole.Config.ChallengeType CHALLENGE_KILL_COUNT = 1;
	public const MoleMole.Config.ChallengeType CHALLENGE_KILL_COUNT_IN_TIME = 2;
	public const MoleMole.Config.ChallengeType CHALLENGE_SURVIVE = 3;
	public const MoleMole.Config.ChallengeType CHALLENGE_TIME_FLY = 4;
	public const MoleMole.Config.ChallengeType CHALLENGE_KILL_COUNT_FAST = 5;
	public const MoleMole.Config.ChallengeType CHALLENGE_KILL_COUNT_FROZEN_LESS = 6;
	public const MoleMole.Config.ChallengeType CHALLENGE_KILL_MONSTER_IN_TIME = 7;
	public const MoleMole.Config.ChallengeType CHALLENGE_TRIGGER_IN_TIME = 8;
	public const MoleMole.Config.ChallengeType CHALLENGE_GUARD_HP = 9;
	public const MoleMole.Config.ChallengeType CHALLENGE_KILL_COUNT_GUARD_HP = 10;
	public const MoleMole.Config.ChallengeType CHALLENGE_TRIGGER_IN_TIME_FLY = 11;
	public const MoleMole.Config.ChallengeType CHALLENGE_TRIGGER2_AVOID_TRIGGER1 = 12;
	public const MoleMole.Config.ChallengeType CHALLENGE_FATHER_SUCC_IN_TIME = 13;
	public const MoleMole.Config.ChallengeType CHALLENGE_MONSTER_DAMAGE_COUNT = 14;
	public const MoleMole.Config.ChallengeType CHALLENGE_ELEMENT_REACTION_COUNT = 15;
	public const MoleMole.Config.ChallengeType CHALLENGE_FREEZE_ENEMY_IN_TIME = 16;
	public const MoleMole.Config.ChallengeType CHALLENGE_CRYSTAL_ELEMENT_REACTION_COUNT = 17;
	public const MoleMole.Config.ChallengeType CHALLENGE_SHEILD_ABSORB_DAMAGE_COUNT = 18;
	public const MoleMole.Config.ChallengeType CHALLENGE_ELEMENT_TRIAL = 19;
	public const MoleMole.Config.ChallengeType CHALLENGE_SWIRL_ELEMENT_REACTION_COUNT = 20;
	public const MoleMole.Config.ChallengeType CHALLENGE_DIE_LESS_IN_TIME = 21;
	public const MoleMole.Config.ChallengeType CHALLENGE_SURVIVE_IN_TIME = 22;
	public const MoleMole.Config.ChallengeType CHALLENGE_TRIGGER_COUNT = 23;
	public const MoleMole.Config.ChallengeType CHALLENGE_LUA_COUNT = 24;
	public const MoleMole.Config.ChallengeType CHALLENGE_LUA_IN_TIME = 25;
}
public enum NOFHHOLDKGB
{
	// Fields
	public const NOFHHOLDKGB CHALLENGE_RECORD_TYPE_NONE = 0;
	public const NOFHHOLDKGB CHALLENGE_RECORD_TYPE_IN_TIME = 1;
}
public enum HKNLIHACCLK
{
	// Fields
	public const HKNLIHACCLK CHALLENGE_COND_NONE = 0;
	public const HKNLIHACCLK CHALLENGE_COND_IN_TIME = 1;
	public const HKNLIHACCLK CHALLENGE_COND_ALL_TIME = 2;
	public const HKNLIHACCLK CHALLENGE_COND_KILL_COUNT = 3;
	public const HKNLIHACCLK CHALLENGE_COND_SURVIVE = 4;
	public const HKNLIHACCLK CHALLENGE_COND_TIME_INC = 5;
	public const HKNLIHACCLK CHALLENGE_COND_KILL_FAST = 6;
	public const HKNLIHACCLK CHALLENGE_COND_DOWN_LESS = 7;
	public const HKNLIHACCLK CHALLENGE_COND_BEATEN_LESS = 8;
	public const HKNLIHACCLK CHALLENGE_COND_UNNATURAL_COUNT = 9;
	public const HKNLIHACCLK CHALLENGE_COND_FROZEN_LESS = 10;
	public const HKNLIHACCLK CHALLENGE_COND_KILL_MONSTER = 11;
	public const HKNLIHACCLK CHALLENGE_COND_TRIGGER = 12;
	public const HKNLIHACCLK CHALLENGE_COND_GUARD_HP = 13;
	public const HKNLIHACCLK CHALLENGE_COND_TIME_DEC = 14;
	public const HKNLIHACCLK CHALLENGE_COND_CHILD_SUCC = 15;
	public const HKNLIHACCLK CHALLENGE_COND_CHILD_FAIL = 16;
	public const HKNLIHACCLK CHALLENGE_COND_FLIGHT_GET_BADGE = 17;
	public const HKNLIHACCLK CHALLENGE_COND_MONSTER_DAMAGE_COUNT = 18;
	public const HKNLIHACCLK CHALLENGE_COND_ELEMENT_REACTION_CONT = 19;
	public const HKNLIHACCLK CHALLENGE_COND_FREEZE_ENEMY_IN_TIME = 20;
	public const HKNLIHACCLK CHALLENGE_COND_CRYSTAL_ELEMENT_REACTION_COUNT = 21;
	public const HKNLIHACCLK CHALLENGE_COND_SHEILD_ABSORB_DAMAGE_COUNT = 22;
	public const HKNLIHACCLK CHALLENGE_COND_SWIRL_ELEMENT_REACTION_COUNT = 23;
	public const HKNLIHACCLK CHALLENGE_COND_DIE_LESS = 24;
	public const HKNLIHACCLK CHALLENGE_COND_LUA = 25;
}
public enum CPHCIDEKJIE
{
	// Fields
	public const CPHCIDEKJIE INTERRUPT_BUTTON_TYPE_NONE = 0;
	public const CPHCIDEKJIE INTERRUPT_BUTTON_TYPE_HOST = 1;
	public const CPHCIDEKJIE INTERRUPT_BUTTON_TYPE_ALL = 2;
}
public enum PLCNLIHAACJ
{
	// Fields
	public const PLCNLIHAACJ SUB_CHALLENGE_ANIM_TYPE_DEFAULT = 0;
	public const PLCNLIHAACJ SUB_CHALLENGE_ANIM_TYPE_FORBID = 1;
	public const PLCNLIHAACJ SUB_CHALLENGE_ANIM_TYPE_SUCCESS = 2;
	public const PLCNLIHAACJ SUB_CHALLENGE_ANIM_TYPE_FAIL = 3;
}
public enum LOCNFNOIODK
{
	// Fields
	public const LOCNFNOIODK SUB_CHALLENGE_SORT_TYPE_DEFAULT = 0;
	public const LOCNFNOIODK SUB_CHALLENGE_SORT_TYPE_CHALLENGEINDEX = 1;
}
public enum ODIEKFDHHHI
{
	// Fields
	public const ODIEKFDHHHI DUNGEON_ROSTER_CYCLE_TYPE_NONE = 0;
	public const ODIEKFDHHHI DUNGEON_ROSTER_CYCLE_TYPE_BY_ORDER = 1;
}
public enum NOOGCAGOKPK
{
	// Fields
	public const NOOGCAGOKPK EXCLUSIVE_NONE = 0;
	public const NOOGCAGOKPK EXCLUSIVE_PSN = 1;
}
public enum IOKMHEPLJDN
{
	// Fields
	public const IOKMHEPLJDN EXCLUSIVE_RULE_NONE = 0;
	public const IOKMHEPLJDN EXCLUSIVE_RULE_WEAPON_AFFIX = 1;
	public const IOKMHEPLJDN EXCLUSIVE_RULE_FLYCLOAK = 2;
}
public enum ICCEIGAFFCA
{
	// Fields
	public const ICCEIGAFFCA EXHIBITION_KEY_NONE = 0;
	public const ICCEIGAFFCA EXHIBITION_KEY_SERVER = 1;
	public const ICCEIGAFFCA EXHIBITION_KEY_LUA = 2;
}
public enum JPPMHKBFOAM
{
	// Fields
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_NONE = 0;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_TEST = 1;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_HIDE_AND_SEEK_HUNTER_WIN_LAST_TIME = 2;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_HIDE_AND_SEEK_HIDER_SURVIVAL_TIME = 3;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_HIDE_AND_SEEK_WIN = 4;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_DAMAGE_BY_GROUP_CONFIGID = 5;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_DAMAGE_BY_MONSTERID = 6;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_CHESS_SUCCESS = 7;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_CHESS_SETTLE_ROUND = 8;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_CHESS_ESCAPED_MONSTERS = 9;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_CHESS_PICK_CURSE_CARD_COUNT = 10;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_CHESS_PICK_CHALLENGE_CARD_COUNT = 11;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_CHESS_OBTAIN_BUILDING_POINTS = 12;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_CHESS_PICK_SSR_CARD_COUNT = 13;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_CHESS_LAST_ROUND_KILL_STAGE_COST_TIME = 14;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_MIST_TRIAL_SHORTEST_SUCCESS_TIME = 15;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_MIST_TRIAL_STRONGEST_BLOW = 16;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_MIST_TRIAL_LEAST_TAKE_DAMAGE = 17;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_MIST_TRIAL_ELEMENT_REACTION_COUNT = 18;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_MIST_TRIAL_ELEMENT_BURST_COUNT = 19;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_MIST_TRIAL_SUCCESS = 20;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_DAMAGE_PERCENTAGE_ON_MONSTER_DIE = 21;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_DAMAGE_BY_GROUPID = 22;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_MONSTER_DRAWN_FALL_BY_TIME_GROUPID = 23;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_SUMMER_V2_DUNGEON_ELEMENT_BURST_COUNT = 24;
	public const JPPMHKBFOAM EXHIBITION_SERVER_TRIGGER_GALLERY_SUCC_LAST_TIME = 25;
}
public enum DKEOIGHKBFH
{
	// Fields
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_NONE = 0;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_A_GE_B = 1;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_AND = 2;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_OR = 3;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_RETURN_A_IF_B_MEET = 4;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_RETURN_TRUE_IF_B_MEET = 5;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_SCENE_PLAYER_LARGEST = 6;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_SCENE_PLAYER_SMALLEST = 7;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_RETURN_A_IF_AND_IS_TRUE = 8;
	public const DKEOIGHKBFH EXHIBITION_DISPLAY_COND_A_SUB_B = 9;
}
public enum ADBGOOLHJAB
{
	// Fields
	public const ADBGOOLHJAB EXHIBITION_DISPLAY_COND_PARAM_NONE = 0;
	public const ADBGOOLHJAB EXHIBITION_DISPLAY_COND_PARAM_REPLACEABLE_VALUE = 1;
	public const ADBGOOLHJAB EXHIBITION_DISPLAY_COND_PARAM_ACCUMULABLE_VALUE = 2;
	public const ADBGOOLHJAB EXHIBITION_DISPLAY_COND_PARAM_UNSIGNED_INTEGER = 3;
	public const ADBGOOLHJAB EXHIBITION_DISPLAY_COND_PARAM_DISPLAY_VALUE = 4;
}
public enum PMDCOGNBOEL
{
	// Fields
	public const PMDCOGNBOEL EXHIBITION_SERIES_NONE = 0;
	public const PMDCOGNBOEL EXHIBITION_SERIES_ACTIVITY = 1;
	public const PMDCOGNBOEL EXHIBITION_SERIES_DUNGEON = 2;
	public const PMDCOGNBOEL EXHIBITION_SERIES_PERMANENT = 3;
}
public enum BBAHOGKBFKE
{
	// Fields
	public const BBAHOGKBFKE EXHIBITION_SCORE_NONE = 0;
	public const BBAHOGKBFKE EXHIBITION_SCORE_VALUE = 1;
	public const BBAHOGKBFKE EXHIBITION_SCORE_DISPLAY_PARAM_FACTOR = 2;
}
public enum EEKMJFHLOMG
{
	// Fields
	public const EEKMJFHLOMG EXHIBITION_CARD_ORDER_NONE = 0;
	public const EEKMJFHLOMG EXHIBITION_CARD_ORDER_LESS_BETTER = 1;
	public const EEKMJFHLOMG EXHIBITION_CARD_ORDER_GREATER_BETTER = 2;
}
public enum OKOEHHBKMCI
{
	// Fields
	public const OKOEHHBKMCI EXHIBITION_DISPLAY_TYPE_NONE = 0;
	public const OKOEHHBKMCI EXHIBITION_DISPLAY_TYPE_TIME_MINSEC = 1;
	public const OKOEHHBKMCI EXHIBITION_DISPLAY_TYPE_INT = 2;
	public const OKOEHHBKMCI EXHIBITION_DISPLAY_TYPE_INT_CHARACTER = 3;
}
public enum CPBBDHEIMJM
{
	// Fields
	public const CPBBDHEIMJM Challenge = 0;
	public const CPBBDHEIMJM Gallery = 1;
}
public enum DDEHMKMFPII
{
	// Fields
	public const DDEHMKMFPII EXP_OPEN_COND_LEVEL = 0;
	public const DDEHMKMFPII EXP_OPEN_COND_POINT = 1;
	public const DDEHMKMFPII EXP_OPEN_COND_QUEST = 2;
}
public enum DFOFKBFMNPF
{
	// Fields
	public const DFOFKBFMNPF ASSOC_TYPE_NONE = 0;
	public const DFOFKBFMNPF ASSOC_TYPE_MONDSTADT = 1;
	public const DFOFKBFMNPF ASSOC_TYPE_LIYUE = 2;
	public const DFOFKBFMNPF ASSOC_TYPE_MAINACTOR = 3;
	public const DFOFKBFMNPF ASSOC_TYPE_FATUI = 4;
	public const DFOFKBFMNPF ASSOC_TYPE_INAZUMA = 5;
	public const DFOFKBFMNPF ASSOC_TYPE_RANGER = 6;
	public const DFOFKBFMNPF ASSOC_TYPE_SUMERU = 7;
	public const DFOFKBFMNPF ASSOC_TYPE_FONTAINE = 8;
	public const DFOFKBFMNPF ASSOC_TYPE_NATLAN = 9;
	public const DFOFKBFMNPF ASSOC_TYPE_SNEZHNAYA = 10;
}
public enum OPOKBEJNOEA
{
	// Fields
	public const OPOKBEJNOEA TRIAL_FETTER_CONDITION_COMPLETE_SUB_MISSION = 0;
	public const OPOKBEJNOEA TRIAL_FETTER_CONDITION_LEVEL = 1;
}
public enum KNOLNNMNMJM
{
	// Fields
	public const KNOLNNMNMJM FIREWORKS_REFORM_PARAM_NONE = 0;
	public const KNOLNNMNMJM FIREWORKS_REFORM_PARAM_COLOR = 1;
	public const KNOLNNMNMJM FIREWORKS_REFORM_PARAM_HEIGHT = 2;
	public const KNOLNNMNMJM FIREWORKS_REFORM_PARAM_SIZE = 3;
	public const KNOLNNMNMJM FIREWORKS_REFORM_PARAM_DENSITY = 4;
	public const KNOLNNMNMJM FIREWORKS_REFORM_PARAM_ROTATION = 5;
}
public enum BBNIKFNAAPI
{
	// Fields
	public const BBNIKFNAAPI None = 0;
	public const BBNIKFNAAPI SphericalFireworks = 1;
	public const BBNIKFNAAPI PatternShapeFireworks = 2;
}
public enum MLJPFHKIKKI
{
	// Fields
	public const MLJPFHKIKKI FIREWORKS_LAUNCH_PARAM_NONE = 0;
	public const MLJPFHKIKKI FIREWORKS_LAUNCH_PARAM_REPEAT = 1;
	public const MLJPFHKIKKI FIREWORKS_LAUNCH_PARAM_INTEVAL = 2;
	public const MLJPFHKIKKI FIREWORKS_LAUNCH_PARAM_DELAY = 3;
	public const MLJPFHKIKKI FIREWORKS_LAUNCH_PARAM_ROUND_INTEVAL = 4;
}
public enum MJCAPABLAPB
{
	// Fields
	public const MJCAPABLAPB FISH_STOCK_TYPE_NONE = 0;
	public const MJCAPABLAPB FISH_STOCK_TYPE_ANY = 1;
	public const MJCAPABLAPB FISH_STOCK_TYPE_DAY = 2;
	public const MJCAPABLAPB FISH_STOCK_TYPE_NIGHT = 3;
}
public enum CLLLMPJJFJE
{
	// Fields
	public const CLLLMPJJFJE FISH_SKILL_NONE = 0;
	public const CLLLMPJJFJE FISH_SKILL_HP = 1;
	public const CLLLMPJJFJE FISH_SKILL_FORCE = 2;
	public const CLLLMPJJFJE FISH_SKILL_TIME = 3;
}
public enum MLHCGEBNGJL
{
	// Fields
	public const MLHCGEBNGJL FISH_SKILL_CATEGORY_NONE = 0;
	public const MLHCGEBNGJL FISH_SKILL_CATEGORY_FORCE = 1;
	public const MLHCGEBNGJL FISH_SKILL_CATEGORY_BONUS = 2;
}
public enum FHNOLAMMHKA
{
	// Fields
	public const FHNOLAMMHKA FORGE_UNLOCK_NONE = 0;
	public const FHNOLAMMHKA FORGE_UNLOCK_QUEST = 1;
	public const FHNOLAMMHKA FORGE_UNLOCK_FORMULA = 2;
}
public enum OABMEKCKLHK
{
	// Fields
	public const OABMEKCKLHK GACHA_TYPE_NEWBIE = 100;
	public const OABMEKCKLHK GACHA_TYPE_STANDARD = 200;
	public const OABMEKCKLHK GACHA_TYPE_STANDARD_AVATAR = 201;
	public const OABMEKCKLHK GACHA_TYPE_STANDARD_WEAPON = 202;
	public const OABMEKCKLHK GACHA_TYPE_ACTIVITY = 300;
	public const OABMEKCKLHK GACHA_TYPE_ACTIVITY_AVATAR = 301;
	public const OABMEKCKLHK GACHA_TYPE_ACTIVITY_WEAPON = 302;
	public const OABMEKCKLHK GACHA_TYPE_SPECIAL_ACTIVITY_AVATAR = 400;
}
public enum HONMPKADNNM
{
	// Fields
	public const HONMPKADNNM GACHA_ITEM_PARENT_INVALID = 0;
	public const HONMPKADNNM GACHA_ITEM_PARENT_S5 = 1;
	public const HONMPKADNNM GACHA_ITEM_PARENT_S4 = 2;
	public const HONMPKADNNM GACHA_ITEM_PARENT_S3 = 3;
}
public enum JEBNFFAAAFB
{
	// Fields
	public const JEBNFFAAAFB Default = 0;
	public const JEBNFFAAAFB Oculus = 1;
	public const JEBNFFAAAFB Ore = 2;
	public const JEBNFFAAAFB HarvetGadget = 3;
	public const JEBNFFAAAFB SmallMeteorite = 4;
	public const JEBNFFAAAFB ReginFeatherIntact = 5;
	public const JEBNFFAAAFB AbyssalisleHarvest = 6;
	public const JEBNFFAAAFB AbyssalislePlant = 7;
	public const JEBNFFAAAFB ActivityTreasureHuntBall = 8;
	public const JEBNFFAAAFB EchoShell = 9;
	public const JEBNFFAAAFB ActivityVintagePresent = 10;
	public const JEBNFFAAAFB General = 1000;
}
public enum HBFAHKOLDLB
{
	// Fields
	public const HBFAHKOLDLB INTERACT_ACTION_NONE = 0;
	public const HBFAHKOLDLB INTERACT_ACTION_STATE = 1;
	public const HBFAHKOLDLB INTERACT_ACTION_SET_GADGET_CHAIN_BUFF = 2;
	public const HBFAHKOLDLB INTERACT_ACTION_UNLOCK_SPECIAL_TRANSPORT_POINT = 3;
	public const HBFAHKOLDLB INTERACT_ACTION_CONSUME_REGIONAL_PLAY_VAR = 4;
}
public enum JOPDOABGAMB
{
	// Fields
	public const JOPDOABGAMB INTERACT_COND_NONE = 0;
	public const JOPDOABGAMB INTERACT_COND_WIDGET_ON = 1;
	public const JOPDOABGAMB INTERACT_COND_HAS_ITEM = 2;
	public const JOPDOABGAMB INTERACT_COND_REGIONAL_PLAY_VAR_GREATER_THAN = 3;
	public const JOPDOABGAMB INTERACT_COND_OFFERING_LEVEL = 4;
}
public enum OJGIODLFKPB
{
	// Fields
	public const OJGIODLFKPB HIDE = 0;
	public const OJGIODLFKPB GRAP = 1;
}
public enum HPFHLCCMDCB
{
	// Fields
	public const HPFHLCCMDCB GALLERY_TYPE_NONE = 0;
	public const HPFHLCCMDCB GALLERY_TYPE_BALLOON = 1;
	public const HPFHLCCMDCB GALLERY_TYPE_FALL = 2;
	public const HPFHLCCMDCB GALLERY_TYPE_ARENA_CHALLENGE = 3;
	public const HPFHLCCMDCB GALLERY_TYPE_CATCH_FLOWER = 4;
	public const HPFHLCCMDCB GALLERY_TYPE_FADEOUT_FLOOR = 5;
	public const HPFHLCCMDCB GALLERY_TYPE_AVOID_RAYS = 6;
	public const HPFHLCCMDCB GALLERY_TYPE_BROKEN_FLOOR = 7;
	public const HPFHLCCMDCB GALLERY_TYPE_BULLET_GAME = 8;
	public const HPFHLCCMDCB GALLERY_TYPE_AVOID_BUBBLES = 9;
	public const HPFHLCCMDCB GALLERY_TYPE_REMEMBER_ROAD = 10;
	public const HPFHLCCMDCB GALLERY_TYPE_MIST_TRIAL = 11;
	public const HPFHLCCMDCB GALLERY_TYPE_HIDE_AND_SEEK = 12;
	public const HPFHLCCMDCB GALLERY_TYPE_BUOYANT_COMBAT = 13;
	public const HPFHLCCMDCB GALLERY_TYPE_BOUNCE_CONJURING = 14;
	public const HPFHLCCMDCB GALLERY_TYPE_HANDBALL = 15;
	public const HPFHLCCMDCB GALLERY_TYPE_SUMO_COMBAT = 16;
	public const HPFHLCCMDCB GALLERY_TYPE_FISH = 17;
	public const HPFHLCCMDCB GALLERY_TYPE_DIG_COMBAT = 18;
	public const HPFHLCCMDCB GALLERY_TYPE_TRIATHLON = 19;
	public const HPFHLCCMDCB GALLERY_TYPE_HOME_RACING = 20;
	public const HPFHLCCMDCB GALLERY_TYPE_SALVAGE_PREVENT = 21;
	public const HPFHLCCMDCB GALLERY_TYPE_SALVAGE_ESCORT = 22;
	public const HPFHLCCMDCB GALLERY_TYPE_HOME_BALLOON = 23;
	public const HPFHLCCMDCB GALLERY_TYPE_CRYSTAL_LINK = 24;
	public const HPFHLCCMDCB GALLERY_TYPE_PHOTO = 25;
	public const HPFHLCCMDCB GALLERY_TYPE_SWORD_WAY = 26;
	public const HPFHLCCMDCB GALLERY_TYPE_LUMINANCE_STONE_CHALLENGE = 27;
	public const HPFHLCCMDCB GALLERY_TYPE_HOME_SEEK_FURNITURE = 28;
	public const HPFHLCCMDCB GALLERY_TYPE_MP_BLOCK = 29;
	public const HPFHLCCMDCB GALLERY_TYPE_ISLAND_PARTY_RAFT = 30;
	public const HPFHLCCMDCB GALLERY_TYPE_ISLAND_PARTY_SAIL = 31;
	public const HPFHLCCMDCB GALLERY_TYPE_ISLAND_PARTY_DOWN_HILL = 32;
	public const HPFHLCCMDCB GALLERY_TYPE_SUMMER_TIME_V2_BOAT_RACE = 33;
	public const HPFHLCCMDCB GALLERY_TYPE_GRAVEN_INNOCENCE_RACE = 34;
	public const HPFHLCCMDCB GALLERY_TYPE_INSTABLE_SPRAY = 35;
	public const HPFHLCCMDCB GALLERY_TYPE_MUQADAS_POTION = 36;
	public const HPFHLCCMDCB GALLERY_TYPE_TREASURE_SEELIE = 37;
	public const HPFHLCCMDCB GALLERY_TYPE_VINTAGE_HUNTING = 38;
	public const HPFHLCCMDCB GALLERY_TYPE_WIND_FIELD = 39;
	public const HPFHLCCMDCB GALLERY_TYPE_FUNGUS_FIGHTING_TRAINING = 40;
	public const HPFHLCCMDCB GALLERY_TYPE_FUNGUS_FIGHTING_CAPTURE = 41;
	public const HPFHLCCMDCB GALLERY_TYPE_CHAR_AMUSE_SPIN_BALL = 42;
	public const HPFHLCCMDCB GALLERY_TYPE_CHAR_AMUSE_PILLAR = 43;
	public const HPFHLCCMDCB GALLERY_TYPE_CHAR_AMUSE_RUN_ON_WATER = 44;
	public const HPFHLCCMDCB GALLERY_TYPE_CHAR_AMUSE_BASE_BALL = 45;
	public const HPFHLCCMDCB GALLERY_TYPE_CHAR_AMUSE_FOOT_BALL = 46;
	public const HPFHLCCMDCB GALLERY_TYPE_CHAR_AMUSE_BRICK_WALL = 47;
	public const HPFHLCCMDCB GALLERY_TYPE_CHAR_AMUSE_BATTLE = 48;
	public const HPFHLCCMDCB GALLERY_TYPE_EFFIGY_CHALLENGE_V2 = 49;
	public const HPFHLCCMDCB GALLERY_TYPE_BRICK_BREAKER = 50;
	public const HPFHLCCMDCB GALLERY_TYPE_COIN_COLLECT = 51;
	public const HPFHLCCMDCB GALLERY_TYPE_ELECTROHERCULES_BATTLE = 52;
	public const HPFHLCCMDCB GALLERY_TYPE_LANV3_BOAT_GAME_SINGLE = 53;
	public const HPFHLCCMDCB GALLERY_TYPE_LANV3_BOAT_GAME_MULTI = 54;
	public const HPFHLCCMDCB GALLERY_TYPE_TEAM_CHAIN = 55;
	public const HPFHLCCMDCB GALLERY_TYPE_DUEL_HEART = 56;
	public const HPFHLCCMDCB GALLERY_TYPE_LANV3_RACE = 57;
	public const HPFHLCCMDCB GALLERY_TYPE_PACMAN = 58;
	public const HPFHLCCMDCB GALLERY_TYPE_FUNGUS_FIGHTER_V2 = 59;
	public const HPFHLCCMDCB GALLERY_TYPE_SANDWORM_CANNON = 60;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_ARCHAEOLOGY = 61;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_RHYTHM_PIG = 62;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_RHYTHM_WEASEL = 63;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_RHYTHM_FISH = 64;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_ARCHITECT = 65;
	public const HPFHLCCMDCB GALLERY_TYPE_SORUSH_TRIAL_HITMAN = 66;
	public const HPFHLCCMDCB GALLERY_TYPE_SORUSH_TRIAL_RACE = 67;
	public const HPFHLCCMDCB GALLERY_TYPE_SORUSH_TRIAL_PHOTO_MATCH = 68;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_POTION = 69;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_RHYTHM_PIG_ADJUST = 70;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_RHYTHM_WEASEL_ADJUST = 71;
	public const HPFHLCCMDCB GALLERY_TYPE_AKA_FES_RHYTHM_FISH_ADJUST = 72;
}
public enum ILEGJLKPEJJ
{
	// Fields
	public const ILEGJLKPEJJ UNDEFINE_PROGRESS_TYPE = 0;
	public const ILEGJLKPEJJ SIDE = 1;
	public const ILEGJLKPEJJ TOPCOUNTDOWN = 2;
}
public enum NOCPOOIKBCC
{
	// Fields
	public const NOCPOOIKBCC UNDEFINE_PROGRESS_SUB_TYPE = 0;
	public const NOCPOOIKBCC MAIN = 1;
	public const NOCPOOIKBCC SUB = 2;
	public const NOCPOOIKBCC INTERRUPT = 3;
}
public enum AILJDMDKCEA
{
	// Fields
	public const AILJDMDKCEA UNDEFINE_PROGRESS_TARGET_TYPE = 0;
	public const AILJDMDKCEA BANNER = 1;
}
public enum HHHHACKGHBE
{
	// Fields
	public const HHHHACKGHBE UNDEFINE_PROGRESS_TARGET_SUB_TYPE = 0;
	public const HHHHACKGHBE START = 1;
	public const HHHHACKGHBE COMPLETE = 2;
	public const HHHHACKGHBE FAIL = 3;
}
public enum BNOBIPGDKFH
{
	// Fields
	public const BNOBIPGDKFH NORMAL_STATE = 0;
	public const BNOBIPGDKFH COMPLETE_STATE = 1;
	public const BNOBIPGDKFH FAIL_STATE = 2;
}
public enum KLBJHDBEPFG
{
	// Fields
	public const KLBJHDBEPFG POINT_GROUND = 0;
	public const KLBJHDBEPFG POINT_AIR = 1;
}
public enum MJNCNBELBBA
{
	// Fields
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_Mengde = 1;
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_Liyue = 2;
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_Daoqi = 3;
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_Sumeru = 4;
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_Fontaine = 5;
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_Natlan = 6;
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_Snezhnaya = 7;
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_MichiaeMatsuri = 101;
	public const MJNCNBELBBA _ABILITY_Radar_Collectables_Activity = 102;
	public const MJNCNBELBBA _ABILITY_Radar_Ore = 998;
	public const MJNCNBELBBA COLLECT_GENERAL = 999;
}
public enum FBDNNJIHIAB
{
	// Fields
	public const FBDNNJIHIAB GATHER_SAVE_TYPE_NONE = 0;
	public const FBDNNJIHIAB GATHER_SAVE_TYPE_LOW = 1;
	public const FBDNNJIHIAB GATHER_SAVE_TYPE_MID = 2;
	public const FBDNNJIHIAB GATHER_SAVE_TYPE_HIGH = 3;
	public const FBDNNJIHIAB GATHER_SAVE_TYPE_OWN = 4;
}
public enum BLEIIJECFIC
{
	// Fields
	public const BLEIIJECFIC NONE = 0;
	public const BLEIIJECFIC DUEL_LEVEL = 1;
}
public enum HIGNEIGAFKF
{
	// Fields
	public const HIGNEIGAFKF GCG_CARD_FACE_NORMAL = 0;
	public const HIGNEIGAFKF GCG_CARD_FACE_GOLD = 1;
}
public enum PNFDCHOEKAI
{
	// Fields
	public const PNFDCHOEKAI GCG_PURCHASE = 0;
	public const PNFDCHOEKAI GCG_PROFICIENCY_REWARD = 1;
}
public enum GALDNMPJOGG
{
	// Fields
	public const GALDNMPJOGG NONE = 0;
	public const GALDNMPJOGG CARD_TAG = 1;
	public const GALDNMPJOGG CARD_TYPE = 2;
	public const GALDNMPJOGG CARD_COST = 3;
	public const GALDNMPJOGG CARD_OWNERSHIP = 5;
	public const GALDNMPJOGG CARD_VALIDATION = 6;
}
public enum BKDPEHNIMCK
{
	// Fields
	public const BKDPEHNIMCK GCG_COST_INVALID = 0;
	public const BKDPEHNIMCK GCG_COST_ENERGY = 1;
	public const BKDPEHNIMCK GCG_COST_DICE_SAME = 3;
	public const BKDPEHNIMCK GCG_COST_DICE_PAIMON = 5;
	public const BKDPEHNIMCK GCG_COST_DICE_VOID = 10;
	public const BKDPEHNIMCK GCG_COST_DICE_CRYO = 11;
	public const BKDPEHNIMCK GCG_COST_DICE_HYDRO = 12;
	public const BKDPEHNIMCK GCG_COST_DICE_PYRO = 13;
	public const BKDPEHNIMCK GCG_COST_DICE_ELECTRO = 14;
	public const BKDPEHNIMCK GCG_COST_DICE_GEO = 15;
	public const BKDPEHNIMCK GCG_COST_DICE_DENDRO = 16;
	public const BKDPEHNIMCK GCG_COST_DICE_ANEMO = 17;
}
public enum ANBCJGGBKMD
{
	// Fields
	public const ANBCJGGBKMD GCG_HINT_INVALID = 0;
	public const ANBCJGGBKMD GCG_HINT_CRYO = 1;
	public const ANBCJGGBKMD GCG_HINT_HYDRO = 2;
	public const ANBCJGGBKMD GCG_HINT_PYRO = 3;
	public const ANBCJGGBKMD GCG_HINT_ELECTRO = 4;
	public const ANBCJGGBKMD GCG_HINT_GEO = 5;
	public const ANBCJGGBKMD GCG_HINT_DENDRO = 6;
	public const ANBCJGGBKMD GCG_HINT_ANEMO = 7;
	public const ANBCJGGBKMD GCG_HINT_VOID = 8;
	public const ANBCJGGBKMD GCG_HINT_HEAL = 9;
}
public enum EKBCFJDHLLP
{
	// Fields
	public const EKBCFJDHLLP GCG_CHOOSE_NONE = 0;
	public const EKBCFJDHLLP GCG_CHOOSE_WEAPON_MOVE = 1;
	public const EKBCFJDHLLP GCG_CHOOSE_ARTIFACT_MOVE = 2;
}
public enum IIGKPBJAEKJ
{
	// Fields
	public const IIGKPBJAEKJ GCG_TAG_IDENTIFIER_NONE = 0;
	public const IIGKPBJAEKJ GCG_TAG_IDENTIFIER_CHAR = 1;
	public const IIGKPBJAEKJ GCG_TAG_IDENTIFIER_WEAPON = 2;
	public const IIGKPBJAEKJ GCG_TAG_IDENTIFIER_RELIC = 3;
	public const IIGKPBJAEKJ GCG_TAG_IDENTIFIER_ELEMENT = 4;
	public const IIGKPBJAEKJ GCG_TAG_IDENTIFIER_MODIFY = 5;
	public const IIGKPBJAEKJ GCG_TAG_IDENTIFIER_EVENT = 6;
	public const IIGKPBJAEKJ GCG_TAG_IDENTIFIER_ASSIST = 7;
}
public enum LBKGLEBPNJG
{
	// Fields
	public const LBKGLEBPNJG GCG_STATE_BUFF_NONE = 0;
	public const LBKGLEBPNJG GCG_STATE_BUFF_POSTIVE = 1;
	public const LBKGLEBPNJG GCG_STATE_BUFF_NEGATIVE = 2;
	public const LBKGLEBPNJG GCG_STATE_BUFF_CRYO = 3;
	public const LBKGLEBPNJG GCG_STATE_BUFF_HYDRO = 4;
	public const LBKGLEBPNJG GCG_STATE_BUFF_PYRO = 5;
	public const LBKGLEBPNJG GCG_STATE_BUFF_ELECTRO = 6;
	public const LBKGLEBPNJG GCG_STATE_BUFF_GEO = 7;
	public const LBKGLEBPNJG GCG_STATE_BUFF_DENDRO = 8;
	public const LBKGLEBPNJG GCG_STATE_BUFF_ANEMO = 9;
}
public enum HGKPEDHKGJB
{
	// Fields
	public const HGKPEDHKGJB GCG_TOKEN_ICON_NONE = 0;
	public const HGKPEDHKGJB GCG_TOKEN_ICON_HOURGLASS = 1;
	public const HGKPEDHKGJB GCG_TOKEN_ICON_CLOCK = 2;
	public const HGKPEDHKGJB GCG_TOKEN_ICON_BARRIER_SHIELD = 3;
	public const HGKPEDHKGJB GCG_TOKEN_ICON_NORMAL_SHIELD = 4;
}
public enum IGEFOBCDEMI
{
	// Fields
	public const IGEFOBCDEMI GCG_PERSIST_EFFECT_NONE = 0;
	public const IGEFOBCDEMI GCG_PERSIST_EFFECT_PROTEGO = 1;
	public const IGEFOBCDEMI GCG_PERSIST_EFFECT_EXPECTO_PATRONUM = 2;
	public const IGEFOBCDEMI GCG_PERSIST_EFFECT_STUPEFY = 3;
	public const IGEFOBCDEMI GCG_PERSIST_EFFECT_PETRIFICUS_TOTALUS = 4;
	public const IGEFOBCDEMI GCG_PERSIST_EFFECT_IMPERTURBABLE_CHARM = 6;
}
public enum ANBAADNNJGF
{
	// Fields
	public const ANBAADNNJGF None = 0;
	public const ANBAADNNJGF OnBannerShow = 1;
	public const ANBAADNNJGF OnBehaviorStart = 2;
	public const ANBAADNNJGF OnHitLanded = 3;
	public const ANBAADNNJGF OnBehaviorEnd = 4;
	public const ANBAADNNJGF OnCostReviseReceived = 5;
}
public enum KMKOPKEMCID
{
	// Fields
	public const KMKOPKEMCID Oppo = 0;
	public const KMKOPKEMCID Self = 1;
}
public enum IELEHFHNDAK
{
	// Fields
	public const IELEHFHNDAK DEFAULT = 0;
	public const IELEHFHNDAK FRIENDLY = 1;
	public const IELEHFHNDAK ENEMY = 2;
}
public enum GODKBHOJMMP
{
	// Fields
	public const GODKBHOJMMP NONE = 0;
	public const GODKBHOJMMP CARD = 1;
	public const GODKBHOJMMP ONSTAGE = 2;
	public const GODKBHOJMMP HAS_MODIFY_STATE = 3;
	public const GODKBHOJMMP NOT_HAS_MODIFY_STATE = 4;
	public const GODKBHOJMMP HAS_MODIFY_STATE_WITH_TAG = 5;
	public const GODKBHOJMMP NOT_HAS_MODIFY_STATE_WITH_TAG = 6;
	public const GODKBHOJMMP SAME_WEAPON_TYPE_WITH = 7;
	public const GODKBHOJMMP SAME_WEAPON_TYPE_CHAR_COUNT = 8;
	public const GODKBHOJMMP ALIVE_CHAR_COUNT = 9;
	public const GODKBHOJMMP IS_ALIVE_CHARACTER = 10;
	public const GODKBHOJMMP CHARACTER_NOT_CHARGED_MIN = 11;
	public const GODKBHOJMMP CHARACTER_NOT_CHARGED_MAX = 12;
	public const GODKBHOJMMP CHARACTER_HURT_MIN = 13;
	public const GODKBHOJMMP CHARACTER_HURT_MAX = 14;
}
public enum AKCGAOOBPNI
{
	// Fields
	public const AKCGAOOBPNI NONE = 0;
	public const AKCGAOOBPNI TOKEN_TO_SHOW = 1;
	public const AKCGAOOBPNI HP = 2;
	public const AKCGAOOBPNI CHARACTER_ORDER = 3;
	public const AKCGAOOBPNI CREATE_ORDER = 4;
	public const AKCGAOOBPNI HAS_TAG = 5;
}
public enum HKOLCCNLLLL
{
	// Fields
	public const HKOLCCNLLLL DEFAULT = 0;
	public const HKOLCCNLLLL WEAPON = 1;
	public const HKOLCCNLLLL RELIC = 2;
	public const HKOLCCNLLLL TALENT = 3;
	public const HKOLCCNLLLL ATTACK = 4;
	public const HKOLCCNLLLL HEALING = 5;
}
public enum IDHNACBMBCO
{
	// Fields
	public const IDHNACBMBCO GCG_VIRTUAL_DICE_INVALID = 0;
	public const IDHNACBMBCO GCG_VIRTUAL_DICE_PAIMON = 1;
	public const IDHNACBMBCO GCG_VIRTUAL_DICE_VOID = 2;
}
public enum GJIFKDBFOLG
{
	// Fields
	public const GJIFKDBFOLG PVP = 0;
	public const GJIFKDBFOLG AI = 1;
	public const GJIFKDBFOLG PVE = 2;
}
public enum GCLCMIHMCJK
{
	// Fields
	public const GCLCMIHMCJK RANDOM = 0;
	public const GCLCMIHMCJK SELF = 1;
	public const GCLCMIHMCJK OPPONENT = 2;
}
public enum DCOIEFIBCCO
{
	// Fields
	public const DCOIEFIBCCO GCG_LEVEL_ICON_TYPE_PRIMARY = 0;
	public const DCOIEFIBCCO GCG_LEVEL_ICON_TYPE_COPPER = 1;
	public const DCOIEFIBCCO GCG_LEVEL_ICON_TYPE_SILIVER = 2;
	public const DCOIEFIBCCO GCG_LEVEL_ICON_TYPE_GOLD = 3;
	public const DCOIEFIBCCO GCG_LEVEL_ICON_TYPE_PLATINUM = 4;
}
public enum ANEKMMBDFEB
{
	// Fields
	public const ANEKMMBDFEB PVE_AI = 0;
	public const ANEKMMBDFEB PVE_MONSTER = 1;
	public const ANEKMMBDFEB PVE_RUSH = 2;
}
public enum LFCJHHBFOKP
{
	// Fields
	public const LFCJHHBFOKP GCG_TALK_EMOJI_NON = 0;
	public const LFCJHHBFOKP GCG_TALK_EMOJI_MAD = 1;
	public const LFCJHHBFOKP GCG_TALK_EMOJI_AWKWARD = 2;
	public const LFCJHHBFOKP GCG_TALK_EMOJI_HAPPY = 3;
	public const LFCJHHBFOKP GCG_TALK_EMOJI_ELATION = 4;
}
public enum KLMNHMAPAPD
{
	// Fields
	public const KLMNHMAPAPD NONE = 0;
	public const KLMNHMAPAPD GCG_LEVEL = 1;
	public const KLMNHMAPAPD FINISH_LEVEL_CHALLENGE = 2;
}
public enum PAHFMAEDDBO
{
	// Fields
	public const PAHFMAEDDBO NONE = 0;
	public const PAHFMAEDDBO TRAVELER = 1;
}
public enum POFNEIMJEAL
{
	// Fields
	public const POFNEIMJEAL POINT_MOTION_NONE = 0;
	public const POFNEIMJEAL POINT_MOTION_STAND = 1;
	public const POFNEIMJEAL POINT_MOTION_SIT = 2;
}
public enum IBAOKCDCHFL
{
	// Fields
	public const IBAOKCDCHFL SUPPORT_NONE = 0;
	public const IBAOKCDCHFL SUPPORT_CALL = 1;
	public const IBAOKCDCHFL SUPPORT_WEEK = 2;
	public const IBAOKCDCHFL SUPPORT_CONST = 3;
}
public enum FJGKJPIFMJL
{
	// Fields
	public const FJGKJPIFMJL WEEK_NPC_NONE = 0;
	public const FJGKJPIFMJL WEEK_NPC_NORMAL = 1;
	public const FJGKJPIFMJL WEEK_NPC_CHARACTER = 2;
}
public enum ADBGGAGLEIC
{
	// Fields
	public const ADBGGAGLEIC Avatar = 0;
	public const ADBGGAGLEIC NPC = 1;
	public const ADBGGAGLEIC Monster = 2;
	public const ADBGGAGLEIC Animal = 3;
}
public enum PJKAHLOJGPN
{
	// Fields
	public const PJKAHLOJGPN GCG_LEVEL_UNLOCK_NONE = 0;
	public const PJKAHLOJGPN GCG_LEVEL_UNLOCK_LEVEL = 1;
	public const PJKAHLOJGPN GCG_LEVEL_UNLOCK_QUEST = 2;
}
public enum EADPEILECLH
{
	// Fields
	public const EADPEILECLH GIVING_METHOD_NONE = 0;
	public const EADPEILECLH GIVING_METHOD_EXACT = 1;
	public const EADPEILECLH GIVING_METHOD_GROUP = 2;
	public const EADPEILECLH GIVING_METHOD_VAGUE_GROUP = 3;
	public const EADPEILECLH GIVING_METHOD_ANY_NO_FINISH = 4;
}
public enum BMDBDGCEIEF
{
	// Fields
	public const BMDBDGCEIEF TAB_NONE = 0;
	public const BMDBDGCEIEF TAB_WEAPON = 1;
	public const BMDBDGCEIEF TAB_EQUIP = 2;
	public const BMDBDGCEIEF TAB_AVATAR = 3;
	public const BMDBDGCEIEF TAB_FOOD = 4;
	public const BMDBDGCEIEF TAB_MATERIAL = 5;
	public const BMDBDGCEIEF TAB_QUEST = 6;
	public const BMDBDGCEIEF TAB_CONSUME = 7;
	public const BMDBDGCEIEF TAB_WIDGET = 8;
	public const BMDBDGCEIEF TAB_HOMEWORLD = 9;
}
public enum COHNDIIGOBO
{
	// Fields
	public const COHNDIIGOBO GIVING_TYPE_NONE = 0;
	public const COHNDIIGOBO GIVING_TYPE_QUEST = 1;
	public const COHNDIIGOBO GIVING_TYPE_GADGET = 2;
}
public enum LMEGIGEFLDM
{
	// Fields
	public const LMEGIGEFLDM PLAYER_LEVEL = 0;
	public const LMEGIGEFLDM ANY_AVATAR_LEVEL = 1;
	public const LMEGIGEFLDM GET_NEW_ITEM = 2;
	public const LMEGIGEFLDM OPENSTATE_CHANGE = 3;
	public const LMEGIGEFLDM HAS_AVATAR_NUM = 4;
	public const LMEGIGEFLDM PERSONALLINE_KEY = 5;
	public const LMEGIGEFLDM CLIMATE_TYPE_CHANGE = 6;
	public const LMEGIGEFLDM WORLDPLAYER_UPDATE = 7;
	public const LMEGIGEFLDM PUSHTIPS_NOTIFY_FINISH = 8;
	public const LMEGIGEFLDM NEW_PUSHTIPS = 9;
}
public enum NGKMMPONNPN
{
	// Fields
	public const NGKMMPONNPN PLATFORM_IOS = 0;
	public const NGKMMPONNPN PLATFORM_ANDROID = 1;
	public const NGKMMPONNPN PLATFORM_PC = 2;
	public const NGKMMPONNPN PLATFORM_PS4 = 3;
}
public enum JHHAKLALNHA
{
	// Fields
	public const JHHAKLALNHA H5_ACTIVITY_COND_NONE = 0;
	public const JHHAKLALNHA H5_ACTIVITY_COND_PLAYER_LEVEL = 1;
	public const JHHAKLALNHA H5_ACTIVITY_COND_REGISTER_TIME_GREAT_EQUAL = 2;
	public const JHHAKLALNHA H5_ACTIVITY_COND_DAY_COUNT_GREAT_EQUAL = 3;
}
public enum MAHDEKBFHNB
{
	// Fields
	public const MAHDEKBFHNB QUEST_GUIDE_SHOW_COND_NONE = 0;
	public const MAHDEKBFHNB QUEST_GUIDE_SHOW_COND_AREA_UNLOCKED = 1;
	public const MAHDEKBFHNB QUEST_GUIDE_SHOW_COND_PREQUEST_FINISHED = 2;
	public const MAHDEKBFHNB QUEST_GUIDE_SHOW_COND_LEVEL_GT_OR_EQ = 3;
}
public enum OFOLDLAKMKL
{
	// Fields
	public const OFOLDLAKMKL Interior = 0;
	public const OFOLDLAKMKL Exterior = 1;
	public const OFOLDLAKMKL Interior_Room = 2;
	public const OFOLDLAKMKL Interior_Hall = 3;
	public const OFOLDLAKMKL SkyBox = 4;
}
public enum FPFCLLPBPMO
{
	// Fields
	public const FPFCLLPBPMO NormalFurnitrue = 0;
	public const FPFCLLPBPMO BlockDependent = 1;
	public const FPFCLLPBPMO FarmField = 2;
	public const FPFCLLPBPMO TeleportPoint = 3;
	public const FPFCLLPBPMO Fishpond = 4;
	public const FPFCLLPBPMO NPC = 5;
	public const FPFCLLPBPMO Apartment = 6;
	public const FPFCLLPBPMO FurnitureSuite = 7;
	public const FPFCLLPBPMO Paimon = 8;
	public const FPFCLLPBPMO Fish = 9;
	public const FPFCLLPBPMO CustomBaseFurnitrue = 10;
	public const FPFCLLPBPMO CustomNodeFurnitrue = 11;
	public const FPFCLLPBPMO VirtualFurnitrue = 12;
	public const FPFCLLPBPMO GroupFurnitrue = 13;
	public const FPFCLLPBPMO CoopPictureFrame = 14;
	public const FPFCLLPBPMO ChangeBgmFurniture = 15;
	public const FPFCLLPBPMO ServerGadget = 16;
	public const FPFCLLPBPMO Fishtank = 17;
}
public enum DLDFANIMOFI
{
	// Fields
	public const DLDFANIMOFI Ground = 0;
	public const DLDFANIMOFI Wall = 1;
	public const DLDFANIMOFI Ceil = 2;
	public const DLDFANIMOFI StackObjPlane = 3;
	public const DLDFANIMOFI Door = 4;
	public const DLDFANIMOFI Chandelier = 5;
	public const DLDFANIMOFI Floor = 6;
	public const DLDFANIMOFI WallBody = 7;
	public const DLDFANIMOFI Carpet = 8;
	public const DLDFANIMOFI LegoRockery = 9;
	public const DLDFANIMOFI Stair = 10;
	public const DLDFANIMOFI NPC = 11;
	public const DLDFANIMOFI Animal = 12;
	public const DLDFANIMOFI Apartment = 13;
	public const DLDFANIMOFI FurnitureSuite = 14;
	public const DLDFANIMOFI Road = 15;
	public const DLDFANIMOFI Terrain = 16;
}
public enum IPICAMNFGBE
{
	// Fields
	public const IPICAMNFGBE GROUP_RECORD_TYPE_NONE = 0;
	public const IPICAMNFGBE GROUP_RECORD_TYPE_RACING = 1;
	public const IPICAMNFGBE GROUP_RECORD_TYPE_BALLOON = 2;
	public const IPICAMNFGBE GROUP_RECORD_TYPE_STAKE = 3;
	public const IPICAMNFGBE GROUP_RECORD_TYPE_SEEK = 4;
}
public enum EIKNFAEGGDP
{
	// Fields
	public const EIKNFAEGGDP HOMEWORLD_LIMIT_SHOP_COND_TYPE_NONE = 0;
	public const EIKNFAEGGDP HOMEWORLD_LIMIT_SHOP_COND_TYPE_HOME_LEVEL = 1;
	public const EIKNFAEGGDP HOMEWORLD_LIMIT_SHOP_COND_TYPE_QUEST_FINISH = 2;
}
public enum FPPFFJIBIMP
{
	// Fields
	public const FPPFFJIBIMP InteriorArea = 0;
	public const FPPFFJIBIMP ExteriorArea = 1;
}
public enum DJGAFJGJLOD
{
	// Fields
	public const DJGAFJGJLOD HOME_AVATAR_EVENT_NONE = 0;
	public const DJGAFJGJLOD HOME_AVATAR_REWARD_EVENT = 1;
	public const DJGAFJGJLOD HOME_AVATAR_SUMMON_EVENT = 2;
}
public enum FKCFEAKFPMB
{
	// Fields
	public const FKCFEAKFPMB HOME_AVATAR_COND_NONE = 0;
	public const FKCFEAKFPMB HOME_AVATAR_COND_FETTER_LEVEL = 1;
	public const FKCFEAKFPMB HOME_AVATAR_COND_EXP_LEVEL = 2;
}
public enum DKENPHNPGNL
{
	// Fields
	public const DKENPHNPGNL HOME_FIELD_NONE = 0;
	public const DKENPHNPGNL HOME_FIELD_DRY = 1;
	public const DKENPHNPGNL HOME_FIELD_FLOWER = 2;
	public const DKENPHNPGNL HOME_FIELD_WATER = 3;
}
public enum EKCHCKPFLEF
{
	// Fields
	public const EKCHCKPFLEF NONE = 0;
	public const EKCHCKPFLEF FURNITURE = 1;
	public const EKCHCKPFLEF ACTIVITY_FLOWER = 2;
	public const EKCHCKPFLEF ACTIVITY_SNOWMAN = 3;
	public const EKCHCKPFLEF ACTIVITY_IRODORI_FLOWER = 4;
	public const EKCHCKPFLEF ACTICITY_ISLAND_MOUNTAIN = 5;
	public const EKCHCKPFLEF ACTIVITY_GRAVEN_INNOCENCE_CARVE = 6;
	public const EKCHCKPFLEF ACTIVITY_VINTAGE_BOOTH = 7;
}
public enum JHDJABJCMAK
{
	// Fields
	public const JHDJABJCMAK HOME_WORLD_WOOD_REFRESH_NONE = 0;
	public const JHDJABJCMAK HOME_WORLD_WOOD_REFRESH_WEEKLY = 1;
}
public enum MOLIOAPGFIG
{
	// Fields
	public const MOLIOAPGFIG HUNTING_DIFFICULTY_EASY = 0;
	public const MOLIOAPGFIG HUNTING_DIFFICULTY_MEDIUM = 1;
	public const MOLIOAPGFIG HUNTING_DIFFICULTY_HARD = 2;
}
public enum EPLOPGCMILE
{
	// Fields
	public const EPLOPGCMILE HUNTING_POS_NONE = 0;
	public const EPLOPGCMILE HUNTING_POS_GROUND = 1;
	public const EPLOPGCMILE HUNTING_POS_SHOAL_WATER = 2;
	public const EPLOPGCMILE HUNTING_POS_SNOW_MOUNTAIN = 3;
}
public enum NMIMOEHBNGH
{
	// Fields
	public const NMIMOEHBNGH HUNTING_CLUE_ITERACT = 0;
	public const NMIMOEHBNGH HUNTING_CLUE_MONSTER = 1;
	public const NMIMOEHBNGH HUNTING_CLUE_GATHER = 2;
	public const NMIMOEHBNGH HUNTING_CLUE_FINAL = 3;
}
public enum AONFEPOGEFK
{
	// Fields
	public const AONFEPOGEFK HUNTING_GROUP_TYPE_NONE = 0;
	public const AONFEPOGEFK HUNTING_GROUP_TYPE_CLUE = 1;
	public const AONFEPOGEFK HUNTING_GROUP_TYPE_ASSOCIATED = 2;
}
public enum OINLAOPBHFE
{
	// Fields
	public const OINLAOPBHFE HUNTING_REFRESH_COND_NONE = 0;
	public const OINLAOPBHFE HUNTING_REFRESH_COND_TIME = 1;
	public const OINLAOPBHFE HUNTING_REFRESH_COND_WEATHER = 2;
}
public enum BFBHLLNCACD
{
	// Fields
	public const BFBHLLNCACD HUNTING_FINISH_TYPE_NONE = 0;
	public const BFBHLLNCACD HUNTING_FINISH_TYPE_ALL = 1;
	public const BFBHLLNCACD HUNTING_FINISH_TYPE_TARGET_MONSTER = 2;
}
public enum GFGDOFJKACP
{
	// Fields
	public const GFGDOFJKACP INFERENCE_ACTION_NONE = 0;
	public const GFGDOFJKACP INFERENCE_ACTION_UNLOCK_WORD = 1;
}
public enum HHJEFKNLHOK
{
	// Fields
	public const HHJEFKNLHOK INVESTIGATION_ADVENTURE = 0;
	public const HHJEFKNLHOK INVESTIGATION_HOMEWORLD = 1;
	public const HHJEFKNLHOK INVESTIGATION_EDCATION = 2;
	public const HHJEFKNLHOK INVESTIGATION_GCG = 3;
	public const HHJEFKNLHOK INVESTIGATION_MAIN_QUEST = 4;
}
public enum FJOIECHKBHB
{
	// Fields
	public const FJOIECHKBHB AfterUnlock = 0;
	public const FJOIECHKBHB NerverCreate = 1;
	public const FJOIECHKBHB ExtraConditions = 2;
}
public enum EAHAIILBDJG
{
	// Fields
	public const EAHAIILBDJG All = 0;
	public const EAHAIILBDJG Common = 1;
	public const EAHAIILBDJG Elite = 2;
	public const EAHAIILBDJG Boss = 3;
	public const EAHAIILBDJG EnumCount = 4;
}
public enum NHNKEIAHBJB
{
	// Fields
	public const NHNKEIAHBJB Invalid = 0;
	public const NHNKEIAHBJB PlayerLevelGE = 1;
}
public enum OHKFFDBFOLM
{
	// Fields
	public const OHKFFDBFOLM ITEM_LIMIT_REFRESH_NONE = 0;
	public const OHKFFDBFOLM ITEM_LIMIT_REFRESH_DAILY = 1;
	public const OHKFFDBFOLM ITEM_LIMIT_REFRESH_MONTHLY = 2;
	public const OHKFFDBFOLM ITEM_LIMIT_REFRESH_PERSISTENT = 3;
	public const OHKFFDBFOLM ITEM_LIMIT_REFRESH_WEEKLY = 4;
}
public enum OMALBGEPBCG
{
	// Fields
	public const OMALBGEPBCG OUTPUT_CONTROL_NONE = 0;
	public const OMALBGEPBCG OUTPUT_CONTROL_DROP = 1;
	public const OMALBGEPBCG OUTPUT_CONTROL_REWARD = 2;
	public const OMALBGEPBCG OUTPUT_CONTROL_OTHER = 3;
}
public enum NPPPIOLNBHA
{
	// Fields
	public const NPPPIOLNBHA LIMIT_CONST_VALUE_DAY_BONUS_COUNT = 1;
	public const NPPPIOLNBHA LIMIT_CONST_VALUE_BONUS_OUTPUT_SWITCH_ONE = 2;
	public const NPPPIOLNBHA LIMIT_CONST_VALUE_BONUS_OUTPUT_SWITCH_TWO = 3;
}
public enum FEMKMPOPGAO
{
	// Fields
	public const FEMKMPOPGAO BONUS_SOURCE_NONE = 0;
	public const FEMKMPOPGAO BONUS_SOURCE_REUNION = 1;
	public const FEMKMPOPGAO BONUS_SOURCE_OP_ACTIVITY = 2;
}
public enum AMMODGKFFLF
{
	// Fields
	public const AMMODGKFFLF LIMIT_REGION_TYPE_NONE = 0;
	public const AMMODGKFFLF LIMIT_REGION_TYPE_BIGWORLD = 1;
	public const AMMODGKFFLF LIMIT_REGION_TYPE_ACTIVITY = 2;
	public const AMMODGKFFLF LIMIT_REGION_TYPE_HOMEWORLD = 3;
}
public enum PDHALGAIGLC
{
	// Fields
	public const PDHALGAIGLC LOADING_AREA_NONE = 0;
	public const PDHALGAIGLC LOADING_AREA_CITY = 1;
	public const PDHALGAIGLC LOADING_AREA_OUTDOOR = 2;
}
public enum IOBOENCFEOH
{
	// Fields
	public const IOBOENCFEOH SITUATION_TYPE_NONE = 0;
	public const IOBOENCFEOH SITUATION_TYPE_COMMON_TRANSPORT = 1;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_QUEST_DUNGEON = 2;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_DAILY_DUNGEON = 3;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_TOWER = 4;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_ROOM = 5;
	public const IOBOENCFEOH SITUATION_TYPE_LOGIN = 6;
	public const IOBOENCFEOH SITUATION_TYPE_LOGOUT = 7;
	public const IOBOENCFEOH SITUATION_TYPE_REVIVE = 8;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_HOMEWORLD = 9;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_ISLAND = 10;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_GCG_NORMAL = 11;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_GCG_CATPUB = 12;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_GCG_PVE = 13;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_GCG_AI = 14;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_GCG_PVP = 15;
	public const IOBOENCFEOH SITUATION_TYPE_ENTER_GCG_FESTIVAL = 16;
}
public enum BIGDBBOAPBJ
{
	// Fields
	public const BIGDBBOAPBJ LOC_DEFAULT = 0;
	public const BIGDBBOAPBJ LOC_IMAGE = 1;
	public const BIGDBBOAPBJ LOC_TEXT = 2;
	public const BIGDBBOAPBJ LOC_SUBTITLE = 3;
	public const BIGDBBOAPBJ LOC_TROPHY_SET_ICON = 4;
}
public enum HCOPKFPBEDE
{
	// Fields
	public const HCOPKFPBEDE EXCEL_MAIL_NONE = 0;
	public const HCOPKFPBEDE EXCEL_MAIL_TOWER_DAILY = 1;
	public const HCOPKFPBEDE EXCEL_MAIL_TOWER_MONTHLY = 2;
	public const HCOPKFPBEDE EXCEL_MAIL_TOWER_OVERFLOW_FIRST_PASS = 3;
}
public enum BEAFGNMCKKI
{
	// Fields
	public const BEAFGNMCKKI MATCH_LIMIT_TYPE_NONE = 0;
	public const BEAFGNMCKKI MATCH_LIMIT_TYPE_MAP_UNLOCK = 1;
	public const BEAFGNMCKKI MATCH_LIMIT_TYPE_QUEST_FINISH = 2;
}
public enum DNNGPGECGAB
{
	// Fields
	public const DNNGPGECGAB MATCH_SUB_TYPE_NONE = 0;
	public const DNNGPGECGAB MATCH_SUB_TYPE_HIDE = 1;
	public const DNNGPGECGAB MATCH_SUB_TYPE_BOUNCE_CONJURING = 2;
	public const DNNGPGECGAB MATCH_SUB_TYPE_ISLAND_PARTY = 3;
	public const DNNGPGECGAB MATCH_SUB_TYPE_CHAR_AMUSEMENT = 4;
	public const DNNGPGECGAB MATCH_SUB_TYPE_BRICK_BREAKER = 5;
	public const DNNGPGECGAB MATCH_SUB_TYPE_LAN_V3_BOAT_GAME_MULTI = 6;
	public const DNNGPGECGAB MATCH_SUB_TYPE_PACMAN = 7;
}
public enum GGLDMDCJKNO
{
	// Fields
	public const GGLDMDCJKNO FOOD_QUALITY_NONE = 0;
	public const GGLDMDCJKNO FOOD_QUALITY_STRANGE = 1;
	public const GGLDMDCJKNO FOOD_QUALITY_ORDINARY = 2;
	public const GGLDMDCJKNO FOOD_QUALITY_DELICIOUS = 3;
}
public enum NPOFOBGKFHA
{
	// Fields
	public const NPOFOBGKFHA ITEM_USE_NONE = 0;
	public const NPOFOBGKFHA ITEM_USE_ACCEPT_QUEST = 1;
	public const NPOFOBGKFHA ITEM_USE_TRIGGER_ABILITY = 2;
	public const NPOFOBGKFHA ITEM_USE_GAIN_AVATAR = 3;
	public const NPOFOBGKFHA ITEM_USE_ADD_EXP = 4;
	public const NPOFOBGKFHA ITEM_USE_RELIVE_AVATAR = 5;
	public const NPOFOBGKFHA ITEM_USE_ADD_BIG_TALENT_POINT = 6;
	public const NPOFOBGKFHA ITEM_USE_ADD_PERSIST_STAMINA = 7;
	public const NPOFOBGKFHA ITEM_USE_ADD_TEMPORARY_STAMINA = 8;
	public const NPOFOBGKFHA ITEM_USE_ADD_CUR_STAMINA = 9;
	public const NPOFOBGKFHA ITEM_USE_ADD_CUR_HP = 10;
	public const NPOFOBGKFHA ITEM_USE_ADD_ELEM_ENERGY = 11;
	public const NPOFOBGKFHA ITEM_USE_ADD_ALL_ENERGY = 12;
	public const NPOFOBGKFHA ITEM_USE_ADD_DUNGEON_COND_TIME = 13;
	public const NPOFOBGKFHA ITEM_USE_ADD_WEAPON_EXP = 14;
	public const NPOFOBGKFHA ITEM_USE_ADD_SERVER_BUFF = 15;
	public const NPOFOBGKFHA ITEM_USE_DEL_SERVER_BUFF = 16;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_COOK_RECIPE = 17;
	public const NPOFOBGKFHA ITEM_USE_OPEN_RANDOM_CHEST = 20;
	public const NPOFOBGKFHA ITEM_USE_MAKE_GADGET = 24;
	public const NPOFOBGKFHA ITEM_USE_ADD_ITEM = 25;
	public const NPOFOBGKFHA ITEM_USE_GRANT_SELECT_REWARD = 26;
	public const NPOFOBGKFHA ITEM_USE_ADD_SELECT_ITEM = 27;
	public const NPOFOBGKFHA ITEM_USE_GAIN_FLYCLOAK = 28;
	public const NPOFOBGKFHA ITEM_USE_GAIN_NAME_CARD = 29;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_PAID_BATTLE_PASS_NORMAL = 30;
	public const NPOFOBGKFHA ITEM_USE_GAIN_CARD_PRODUCT = 31;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_FORGE = 32;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_COMBINE = 33;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_CODEX = 34;
	public const NPOFOBGKFHA ITEM_USE_CHEST_SELECT_ITEM = 35;
	public const NPOFOBGKFHA ITEM_USE_GAIN_RESIN_CARD_PRODUCT = 36;
	public const NPOFOBGKFHA ITEM_USE_ADD_RELIQUARY_EXP = 37;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_FURNITURE_FORMULA = 38;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_FURNITURE_SUITE = 39;
	public const NPOFOBGKFHA ITEM_USE_ADD_CHANNELLER_SLAB_BUFF = 40;
	public const NPOFOBGKFHA ITEM_USE_GAIN_COSTUME = 41;
	public const NPOFOBGKFHA ITEM_USE_ADD_TREASURE_MAP_BONUS_REGION_FRAGMENT = 42;
	public const NPOFOBGKFHA ITEM_USE_COMBINE_ITEM = 43;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_HOME_MODULE = 44;
	public const NPOFOBGKFHA ITEM_USE_UNLOCK_HOME_BGM = 45;
	public const NPOFOBGKFHA ITEM_USE_ADD_REGIONAL_PLAY_VAR = 46;
	public const NPOFOBGKFHA ITEM_USE_ADD_AVATAR_EXTRA_PROPERTY = 47;
	public const NPOFOBGKFHA ITEM_USE_GAIN_GCG_CARD = 48;
	public const NPOFOBGKFHA ITEM_USE_GAIN_GCG_CARD_FACE = 49;
	public const NPOFOBGKFHA ITEM_USE_GAIN_GCG_CARD_BACK = 50;
	public const NPOFOBGKFHA ITEM_USE_GAIN_GCG_CARD_FIELD = 51;
	public const NPOFOBGKFHA ITEM_USE_OPEN_RENAME_DIALOG = 52;
}
public enum DNIBAJBNLGD
{
	// Fields
	public const DNIBAJBNLGD ITEM_USE_TARGET_NONE = 0;
	public const DNIBAJBNLGD ITEM_USE_TARGET_CUR_AVATAR = 1;
	public const DNIBAJBNLGD ITEM_USE_TARGET_CUR_TEAM = 2;
	public const DNIBAJBNLGD ITEM_USE_TARGET_SPECIFY_AVATAR = 3;
	public const DNIBAJBNLGD ITEM_USE_TARGET_SPECIFY_ALIVE_AVATAR = 4;
	public const DNIBAJBNLGD ITEM_USE_TARGET_SPECIFY_DEAD_AVATAR = 5;
	public const DNIBAJBNLGD ITEM_USE_TARGET_PLAYER_AVATAR = 6;
}
public enum LFIENCIKIMH
{
	// Fields
	public const LFIENCIKIMH Book = 0;
	public const LFIENCIKIMH Video = 1;
	public const LFIENCIKIMH Letter = 2;
}
public enum GCDFIKDNHEE
{
	// Fields
	public const GCDFIKDNHEE DOCUMENT_SPLIT_TYPE_BY_PARAGRAPH = 0;
	public const GCDFIKDNHEE DOCUMENT_SPLIT_TYPE_BY_LINE = 1;
}
public enum PJCKNFJLNAJ
{
	// Fields
	public const PJCKNFJLNAJ JUMP_NONE = 0;
	public const PJCKNFJLNAJ JUMP_INVESTIGATION = 1;
	public const PJCKNFJLNAJ JUMP_MALL = 2;
}
public enum OEKHDBHJJGF
{
	// Fields
	public const OEKHDBHJJGF CountDown = 1;
	public const OEKHDBHJJGF DateTime = 2;
	public const OEKHDBHJJGF DelayWeekCountDown = 3;
}
public enum INGIGFDOLKD
{
	// Fields
	public const INGIGFDOLKD TAG_NONE = 0;
	public const INGIGFDOLKD TAG_FIRE = 1;
	public const INGIGFDOLKD TAG_TEST_ONE = 2;
	public const INGIGFDOLKD TAG_TEST_TWO = 3;
	public const INGIGFDOLKD TAG_SCOIN = 4;
	public const INGIGFDOLKD TAG_AVATAR_EXP = 5;
	public const INGIGFDOLKD TAG_WEAPON_EXP = 6;
	public const INGIGFDOLKD TAG_AVATAR_PROMOTE = 7;
	public const INGIGFDOLKD TAG_WEAPON_PROMOTE = 8;
	public const INGIGFDOLKD TAG_SKILL_BOOK = 9;
}
public enum CJNEGBFLALE
{
	// Fields
	public const CJNEGBFLALE NORMAL = 0;
	public const CJNEGBFLALE ELITE = 1;
	public const CJNEGBFLALE BOSS = 2;
}
public enum FGENNDGCGOC
{
	// Fields
	public const FGENNDGCGOC MONSTER_RARITY_NONE = 0;
	public const FGENNDGCGOC MONSTER_RARITY_SMALL_MONSTER = 1;
	public const FGENNDGCGOC MONSTER_RARITY_ELITE_MONSTER = 2;
	public const FGENNDGCGOC MONSTER_RARITY_BOSS_MONSTER = 3;
	public const FGENNDGCGOC MONSTER_RARITY_BIG_BOSS_MONSTER = 4;
	public const FGENNDGCGOC MONSTER_RARITY_SMALL_ENV_ANIMAL = 5;
}
public enum CCIGBHPNLNP
{
	// Fields
	public const CCIGBHPNLNP MONSTER_POLY_DROP_NONE = 0;
	public const CCIGBHPNLNP MONSTER_POLY_DROP_GV = 1;
}
public enum DNELOIKJJPN
{
	// Fields
	public const DNELOIKJJPN MP_PLAY_NONE = 0;
	public const DNELOIKJJPN MP_PLAY_CRUCIBLE = 1;
	public const DNELOIKJJPN MP_PLAY_ASTER = 2;
	public const DNELOIKJJPN MP_PLAY_DRAGON_SPINE = 3;
	public const DNELOIKJJPN MP_PLAY_WATER_SPRITE = 4;
	public const DNELOIKJJPN MP_PLAY_WINTER_CAMP = 5;
}
public enum IGIMBGGLENE
{
	// Fields
	public const IGIMBGGLENE MP_PLAY_SETTLE_NONE = 0;
	public const IGIMBGGLENE MP_PLAY_SETTLE_OLD = 1;
	public const IGIMBGGLENE MP_PLAY_SETTLE_CARD = 2;
}
public enum HKLDODIKFLL
{
	// Fields
	public const HKLDODIKFLL MP_PLAY_SHOW_NORMAL = 0;
	public const HKLDODIKFLL MP_PLAY_SHOW_NO_RESIN = 1;
	public const HKLDODIKFLL MP_PLAY_SHOW_TWO_MATERIAL = 2;
}
public enum MPBKGFOGEHG
{
	// Fields
	public const MPBKGFOGEHG MP_PLAY_SETTLE_TYPE_NONE = 0;
	public const MPBKGFOGEHG MP_PLAY_SETTLE_TYPE_WATCHER_FINISH = 1;
	public const MPBKGFOGEHG MP_PLAY_SETTLE_TYPE_WATCHER_PROGRESS = 2;
	public const MPBKGFOGEHG MP_PLAY_SETTLE_TYPE_MONSTER_TAKE_DEMAGE = 3;
	public const MPBKGFOGEHG MP_PLAY_SETTLE_TYPE_MONSTER_KILL_NUM = 4;
	public const MPBKGFOGEHG MP_PLAY_SETTLE_TYPE_MONSTER_KILLER = 5;
}
public enum BDONJCHJKAC
{
	// Fields
	public const BDONJCHJKAC MP_PLAY_SETTLE_SYNC_TYPE_NONE = 0;
	public const BDONJCHJKAC MP_PLAY_SETTLE_SYNC_TYPE_WATCHER_PROGRESS = 1;
	public const BDONJCHJKAC MP_PLAY_SETTLE_SYNC_TYPE_MP_GROUP_VARIABLE = 2;
	public const BDONJCHJKAC MP_PLAY_SETTLE_SYNC_TYPE_STATISTIC_VALUE = 3;
}
public enum MoleMole.Config.NewActivityType
{
	// Fields
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_GENERAL = 0;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SEA_LAMP = 1;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_CRUCIBLE = 2;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SALESMAN = 3;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_TRIAL_AVATAR = 4;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SIGNIN = 5;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_BONUS = 6;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_NEWBEEBONUS = 7;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_PERSONAL_LIINE = 8;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_DELIVERY = 9;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_FLIGHT = 10;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_ASTER = 1100;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_DRAGONSPINE = 1200;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_REUNION = 1201;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_EFFIGY = 1202;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_TOWER_RESET = 1203;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_TREASURE_MAP = 1204;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_TEMP = 99;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SALESMAN_MP = 1205;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_BLESSING = 1300;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_EXPEDITION = 1301;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SEA_LAMP_NEW = 1302;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_OPERATIONS_BONUS = 1401;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MONSTER_BANNER_DRAKE_PRIMO_ROCK = 1501;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_FLEUR_FAIR = 1400;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_ARENA_CHALLENGE = 1402;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_WATER_SPIRIT_CHALLENGE = 1403;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SIGNIN_COMPANION = 1404;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_COOP = 1405;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_CHANNELER_SLAB = 1502;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MISTTRIAL = 1503;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_HIDEANDSEEK = 1504;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_FIND_HILICHURL = 1505;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_ICE = 1506;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_HOMEWORLD = 1507;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_H5 = 1508;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SUMMER_TIME = 1600;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_BUOYANT_COMBAT = 1601;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_ECHO_SHELL = 1602;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_BOUNCE_CONJURING = 1603;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_DAOQI_ADVERTISEMENT = 1604;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_BLITZ_RUSH = 2001;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_CHESS = 2002;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_FIRE = 2003;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MONSTER_BANNER_PERPETUAL = 2004;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_PERSONAL_LIINE_2 = 2005;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_GENERAL_BANNER = 2100;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_LUNA_RITE = 2101;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SUMO = 2102;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MOONFIN_TRIAL = 2103;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MONSTER_BANNER_EFFIGY_WATER = 2104;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MONSTER_BANNER_RAIJIN = 2105;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_PLANT_FLOWER = 2200;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_ROGUELIKE_DUNGEON = 2201;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MUSIC_GAME = 2202;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_DIG = 2203;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MOONFIN_BANNER = 2204;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_WINTER_CAMP = 2301;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_HACHI = 2302;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_POTION = 2400;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_TANUKI_TRAVEL = 2401;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SEA_LAMP_2_4 = 2402;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MICHIAE_MATSURI = 2501;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_BARTENDER = 2502;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_UGC = 2503;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_IRODORI = 2600;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_CRYSTAL_LINK = 2601;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SPICE = 2602;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_PHOTO = 2603;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_LUMINANCE_STONE_CHALLENGE = 2702;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_GACHA = 2703;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_ROGUE_DIARY = 2704;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SUMMER_TIME_2_8 = 2801;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_GEAR = 2802;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_ISLAND_PARTY = 2803;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_GRAVEN_INNOCENCE = 3000;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_INSTABLE_SPRAY = 3001;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_MUQADAS_POTION = 3002;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_TREASURE_SEELIE = 3003;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_WIND_FIELD = 3101;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_ROCK_BOARD_EXPLORE = 3102;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_VINTAGE = 3103;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_FUNGUS_FIGHTER = 3201;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_CHAR_AMUSEMENT = 3202;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_EFFIGY_CHALLENGE_V2 = 3203;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_BRICK_BREAKER = 3300;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_COIN_COLLECT = 3301;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_DUEL_HEART = 3400;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SEA_LAMP_3_4 = 3401;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_ELECTROHERCULES_BATTLE = 3402;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_TEAM_CHAIN = 3403;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_GCG_FESTIVAL = 3404;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SANDY_LAND_BANNER = 3405;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_FLEURFAIR_V2 = 3500;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_FUNGUS_FIGHTER_V2 = 3501;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SANDWORM_CANNON = 3600;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_AKA_FES = 3601;
	public const MoleMole.Config.NewActivityType NEW_ACTIVITY_SORUSH_TRIAL = 3602;
}
public enum MoleMole.Config.NewActivityCond
{
	// Fields
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_NONE = 0;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_TIME_GREATER = 1;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_TIME_LESS = 2;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_PLAYER_LEVEL_GREATER = 3;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_QUEST_FINISH = 4;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_TALK = 5;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_CREATE_NPC = 6;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_NOT_FINISH_TALK = 7;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_SALESMAN_CAN_DELIVER = 8;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_SALESMAN_CAN_GET_REWARD = 9;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_ASTER_MID_CAMP_REFRESHABLE = 10;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_WATCHER = 11;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_DAYS_GREAT_EQUAL = 12;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_DAYS_LESS = 13;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_PLAYER_LEVEL_GREAT_EQUAL = 14;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_SCENE_MP_PLAY_ACTIVATED = 15;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_SEA_LAMP_POPULARIT = 16;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_SEA_LAMP_PHASE = 17;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_MECHANICUS_OPEN = 18;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_REGION_SEARCH_LOGIC = 19;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_REGION_SEARCH = 20;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_WATER_SPIRIT_PHASE = 21;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_FIND_HILICHURL_LEVEL_EQUAL = 22;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_FIND_HILICHURL_LEVEL_LESS = 23;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ONEOFF_DUNGEON_IN_STAGE = 24;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ANY_ONEOFF_DUNGEON = 25;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_SEPCIFIED_ACTIVITY_END = 26;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_UNLOCKED_ALL_LISTED_SCENE_POINTS = 27;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_TREASURE_MAP_BONUS_SPOT_GOT_ANY_FRAGMENT = 28;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_ITEM_COUNT_GREATER = 29;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_GREATER = 30;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_LESS = 31;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_QUEST_GLOBAL_VAR_EQUAL = 32;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_DIG_ACTIVITY = 33;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_GROUP_BUNDLE_FINISHED = 34;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_PLANT_FLOWER_CAN_DELIVER = 35;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_LUNA_RITE_ATMOSPHERE = 36;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_HACHI_STAGE = 37;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_ANY_STAGE_ALL_CAMP = 38;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_CHANNELLER_SLAB_APPOINTED_STAGE_ALL_CAMP = 39;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_HACHI_FINISH_STEALTH_STAGE_EQUAL = 40;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_HACHI_FINISH_BATTLE_STAGE_EQUAL = 41;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_SALVAGE_STAGE = 42;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_BARTENDER_LEVEL = 43;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_POTION_ANY_LEVEL = 44;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_CUSTOM_DUNGEON_OFFICIAL = 45;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_QUEST_FINISH_ALLOW_QUICK_OPEN = 46;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_PHOTO_POS_ID = 47;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_MUSIC_GAME_ALL_LEVEL = 48;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_CURRENT_LUMINANCE_STONE_CHALLENGE_STAGE = 49;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_LUMINANCE_STONE_CHALLENGE_FINAL_GALLERY_COMPLETE = 50;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_OFFERING_LEVEL_GREAT_EQUAL = 51;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_LUMINANCE_STONE_CHALLENGE_STAGE_GREAT_EQUAL = 52;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_ANY_ARENA_CHALLENGE_LEVEL = 53;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_GACHA_CAN_CREATE_ROBOT = 54;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_ANY_INSTABLE_SPRAY_CHALLENGE_STAGE = 55;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_TREASURE_SEELIE_FINISH_REGION = 56;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_SEEK_PRESENT_STAGE = 57;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_ROCK_BOARD_EXPLORE_STAGE = 58;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND = 59;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_VINTAGE_MARKET_COIN_A = 60;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_VINTAGE_STORE_ROUND_SETTLE = 61;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FUNGUS_FIGHTER_FINISH_CAMP = 62;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_EFFIGY_CHALLENGE_V2_FINISH_LEVEL_DIFFICULTY = 63;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_BRICK_BREAKER_STAGE_LEVEL_FINISH = 64;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_DUEL_HEART_FINISH_LEVEL = 65;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_ELECTROHERCULES_BATTLE_FINISH_ALL_STAGE = 66;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_SEA_LAMP_V3_SHADOW_LEVEL = 67;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_SEA_LAMP_V3_CAMP_STAGE = 68;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_PACMAN_LEVEL = 69;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_ANY_FUNGUS_FIGHTER_V2_LEVEL = 70;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_FUNGUS_FIGHTER_V2_LEVEL = 71;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_FINISH_SANDWORM_CANNON_LEVEL = 72;
	public const MoleMole.Config.NewActivityCond NEW_ACTIVITY_COND_AKA_FES_ARCHAEOLOGY_FINISH_ALL_STAGE = 73;
}
public enum MoleMole.Config.NewActivitySaleType
{
	// Fields
	public const MoleMole.Config.NewActivitySaleType NEW_ACTIVITY_SALE_TYPE_NONE = 0;
	public const MoleMole.Config.NewActivitySaleType NEW_ACTIVITY_SALE_TYPE_WEAPON_UPGRADE = 1;
}
public enum HNMJLPBJBGF
{
	// Fields
	public const HNMJLPBJBGF None = 0;
	public const HNMJLPBJBGF Sneak = 1;
	public const HNMJLPBJBGF Icon = 2;
}
public enum IPAIGJHIMPL
{
	// Fields
	public const IPAIGJHIMPL OFFERING_ACTION_NONE = 0;
	public const IPAIGJHIMPL OFFERING_ACTION_OPEN_ROUTINE = 1;
	public const IPAIGJHIMPL OFFERING_ACTION_CLOSE_ROUTINE = 2;
	public const IPAIGJHIMPL OFFERING_ACTION_NOTIFY_GROUP = 3;
	public const IPAIGJHIMPL OFFERING_ACTION_SET_GADGET_CHAIN_LEVEL = 4;
	public const IPAIGJHIMPL OFFERING_ACTION_SET_LUMEN_STONE_LEVEL = 5;
}
public enum KOOMLIBFLFB
{
	// Fields
	public const KOOMLIBFLFB OFFERING_MAX_LEVEL_LIMIT_NONE = 0;
	public const KOOMLIBFLFB OFFERING_MAX_LEVEL_LIMIT_NORMAL = 1;
	public const KOOMLIBFLFB OFFERING_MAX_LEVEL_LIMIT_MICHIAE = 2;
}
public enum DACCGELBBDA
{
	// Fields
	public const DACCGELBBDA TYPE_NONE = 0;
	public const DACCGELBBDA TYPE_DAILY = 1;
	public const DACCGELBBDA TYPE_SUM = 2;
}
public enum BFOJEIEABCL
{
	// Fields
	public const BFOJEIEABCL SOURCE_TYPE_NONE = 0;
	public const BFOJEIEABCL SOURCE_TYPE_BLOSSOM = 1;
	public const BFOJEIEABCL SOURCE_TYPE_DUNGEON = 2;
}
public enum BPHINJNCJPA
{
	// Fields
	public const BPHINJNCJPA TrackNone = 0;
	public const BPHINJNCJPA TrackByCity = 1;
}
public enum JDMDPPFEFAD
{
	// Fields
	public const JDMDPPFEFAD OPEN_STATE_COND_NONE = 0;
	public const JDMDPPFEFAD OPEN_STATE_COND_PLAYER_LEVEL = 1;
	public const JDMDPPFEFAD OPEN_STATE_COND_QUEST = 2;
	public const JDMDPPFEFAD OPEN_STATE_COND_PARENT_QUEST = 3;
	public const JDMDPPFEFAD OPEN_STATE_CITY_REPUTATION_LEVEL = 4;
	public const JDMDPPFEFAD OPEN_STATE_OFFERING_LEVEL = 5;
	public const JDMDPPFEFAD OPEN_STATE_COND_GCG_LEVEL = 6;
}
public enum GGNKHCEGBOP
{
	// Fields
	public const GGNKHCEGBOP OVERFLOW_TRANSFORM_NONE = 0;
	public const GGNKHCEGBOP OVERFLOW_TRANSFORM_PLAYER_EXP = 1;
}
public enum FDEGDOCCAJL
{
	// Fields
	public const FDEGDOCCAJL LegendQuest = 0;
	public const FDEGDOCCAJL NoLegendQuest = 1;
}
public enum GNFEHEGCBFG
{
	// Fields
	public const GNFEHEGCBFG PHOTOGRAPH_TASK_TYPE_NORMAL = 0;
	public const GNFEHEGCBFG PHOTOGRAPH_TASK_TYPE_INTERACTION = 1;
}
public enum IKFGGCFPGMD
{
	// Fields
	public const IKFGGCFPGMD progress = 0;
	public const IKFGGCFPGMD openEnded = 1;
	public const IKFGGCFPGMD competitive = 2;
	public const IKFGGCFPGMD challenge = 3;
}
public enum LIGFJJPIAHF
{
	// Fields
	public const LIGFJJPIAHF QTE_TYPE_NONE = 0;
	public const LIGFJJPIAHF QTE_TYPE_ANY_STEP_FAIL_TO_FAIL = 1;
	public const LIGFJJPIAHF QTE_TYPE_NEVER_FAIL = 2;
}
public enum FDDJHAJPDOA
{
	// Fields
	public const FDDJHAJPDOA QTE_ACTION_NONE = 0;
	public const FDDJHAJPDOA QTE_ACTION_FINISH_QUEST = 1;
	public const FDDJHAJPDOA QTE_ACTION_FAIL_QUEST = 2;
}
public enum GCKABEDHNOK
{
	// Fields
	public const GCKABEDHNOK SPECIAL_SHOW_NONE = 0;
	public const GCKABEDHNOK SPECIAL_SHOW_FINISH = 1;
	public const GCKABEDHNOK SPECIAL_SHOW_GLOBAL_VALUE_EQUAL_TO = 2;
}
public enum CBNHKKJDKIP
{
	// Fields
	public const CBNHKKJDKIP RAND_TASK_QUEST = 0;
	public const CBNHKKJDKIP RAND_TASK_SCENE = 1;
}
public enum APCEACCGKHF
{
	// Fields
	public const APCEACCGKHF REFRESH_NONE = 0;
	public const APCEACCGKHF REFRESH_INTERVAL = 1;
	public const APCEACCGKHF REFRESH_DAILY = 2;
	public const APCEACCGKHF REFRESH_WEEKlY = 3;
	public const APCEACCGKHF REFRESH_DAYBEGIN_INTERVAL = 4;
	public const APCEACCGKHF REFRESH_DAY_FOUR_INTERVAL = 5;
}
public enum GIMPBAOBKOC
{
	// Fields
	public const GIMPBAOBKOC REFRESHINDEX_MONSTER = 0;
	public const GIMPBAOBKOC REFRESHINDEX_GADGET = 1;
}
public enum MoleMole.Config.ReliquaryMainAffixName
{
	// Fields
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_NONE = 0;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_TOUGH = 1;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_STRONG = 2;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_RUTHLESS = 3;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_FATAL = 4;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_GLORY = 5;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_EMINENCE = 6;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_EXULTATION = 7;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_CRUEL = 8;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_HOLINESS = 9;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_FIERCE = 10;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_WISDOM = 11;
	public const MoleMole.Config.ReliquaryMainAffixName Reliquary_Main_Affix_CONCENTRATION = 12;
}
public enum LNNKHIHFMNF
{
	// Fields
	public const LNNKHIHFMNF NONE = 0;
	public const LNNKHIHFMNF TALK = 1;
	public const LNNKHIHFMNF BUBBLE = 2;
}
public enum APLOHNPMBIK
{
	// Fields
	public const APLOHNPMBIK Normal = 0;
	public const APLOHNPMBIK Banner = 1;
	public const APLOHNPMBIK InfoTextDialog = 2;
	public const APLOHNPMBIK EventPromptDown = 3;
	public const APLOHNPMBIK WhiteMessage = 4;
}
public enum GOFGFOBDNKM
{
	// Fields
	public const GOFGFOBDNKM Normal = 0;
	public const GOFGFOBDNKM MessageDialog = 1;
	public const GOFGFOBDNKM DialogBox = 2;
	public const GOFGFOBDNKM MessagePushPageFirstTime = 3;
	public const GOFGFOBDNKM WhiteMessage = 4;
}
public enum DDKLINDFOKD
{
	// Fields
	public const DDKLINDFOKD SERVER_MESSAGE_SHOW_TYPE_NONE = 0;
	public const DDKLINDFOKD SERVER_MESSAGE_SHOW_TYPE_MESSAGE = 1;
	public const DDKLINDFOKD SERVER_MESSAGE_SHOW_TYPE_INFO_MESSAGE = 2;
}
public enum BEMIDIBEAML
{
	// Fields
	public const BEMIDIBEAML AVATAR_RENAME_TYPE_NONE = 0;
	public const BEMIDIBEAML AVATAR_RENAME_TYPE_WANDERER = 1;
}
public enum CLGFLEIAJEK
{
	// Fields
	public const CLGFLEIAJEK KEYWORD_MATCH_TYPE_PERFECT = 0;
	public const CLGFLEIAJEK KEYWORD_MATCH_TYPE_IGNORECASE = 1;
	public const CLGFLEIAJEK KEYWORD_MATCH_TYPE_FIRSTCHAR_IGNORECASE = 2;
}
public enum GBNHGNLMNJA
{
	// Fields
	public const GBNHGNLMNJA TMP_VALUE_KEY_TYPE_NONE = 0;
	public const GBNHGNLMNJA TMP_VALUE_KEY_TYPE_WANDERER_TMP_NAME = 1;
}
public enum FIDOLJIKCOE
{
	// Fields
	public const FIDOLJIKCOE REPUTATION_ENTRANCE_NONE = 0;
	public const FIDOLJIKCOE REPUTATION_ENTRANCE_QUEST = 1;
	public const FIDOLJIKCOE REPUTATION_ENTRANCE_REQUEST = 2;
	public const FIDOLJIKCOE REPUTATION_ENTRANCE_EXPLORE = 3;
	public const FIDOLJIKCOE REPUTATION_ENTRANCE_HUNTER = 4;
}
public enum HOCLCKNNNFH
{
	// Fields
	public const HOCLCKNNNFH REPUTATION_ENTRANCE_COND_NONE = 0;
	public const HOCLCKNNNFH REPUTATION_ENTRANCE_COND_REPUTATION_LEVEL = 1;
	public const HOCLCKNNNFH REPUTATION_ENTRANCE_COND_PLAYER_LEVEL = 2;
	public const HOCLCKNNNFH REPUTATION_ENTRANCE_COND_QUEST = 3;
}
public enum DILBFMALBKD
{
	// Fields
	public const DILBFMALBKD REUNION_PRIVILEGE_TYPE_NONE = 0;
	public const DILBFMALBKD REUNION_PRIVILEGE_TYPE_DUNGEON = 1;
	public const DILBFMALBKD REUNION_PRIVILEGE_TYPE_BLOSSOM = 2;
}
public enum MHAECFNGLBC
{
	// Fields
	public const MHAECFNGLBC REUNION_GUIDE_OP_TYPE_NONE = 0;
	public const MHAECFNGLBC REUNION_GUIDE_OP_TYPE_AND = 1;
	public const MHAECFNGLBC REUNION_GUIDE_OP_TYPE_OR = 2;
	public const MHAECFNGLBC REUNION_GUIDE_OP_TYPE_NOT = 3;
}
public enum DHKKKMFJAIH
{
	// Fields
	public const DHKKKMFJAIH REUNION_GUIDE_OPEN_TYPE_NONE = 0;
	public const DHKKKMFJAIH REUNION_GUIDE_OPEN_TYPE_ADV_HAS_UNFINISH_QUEST = 1;
	public const DHKKKMFJAIH REUNION_GUIDE_OPEN_TYPE_ADV_HAS_UNFINISH_WATCHER = 2;
	public const DHKKKMFJAIH REUNION_GUIDE_OPEN_TYPE_ADV_HAS_AVAILABLE_REWARD = 3;
	public const DHKKKMFJAIH REUNION_GUIDE_OPEN_TYPE_PLAYER_LEVEL_GEQ = 4;
	public const DHKKKMFJAIH REUNION_GUIDE_OPEN_TYPE_PREQUEST_FINISH = 5;
}
public enum FPJBEBDOAKB
{
	// Fields
	public const FPJBEBDOAKB REUNION_JUMP_NONE = 0;
	public const FPJBEBDOAKB REUNION_JUMP_WEBVIEW = 1;
	public const FPJBEBDOAKB REUNION_JUMP_INVESTIGATION_QUEST = 2;
	public const FPJBEBDOAKB REUNION_JUMP_INVESTIGATION_EDUCATION = 3;
	public const FPJBEBDOAKB REUNION_JUMP_HOME = 4;
	public const FPJBEBDOAKB REUNION_JUMP_GCG = 5;
}
public enum EHADCFBIMKA
{
	// Fields
	public const EHADCFBIMKA REUNION_RED_POINT_NONE = 0;
	public const EHADCFBIMKA REUNION_RED_POINT_SHOW = 1;
	public const EHADCFBIMKA REUNION_RED_POINT_HIDE = 2;
}
public enum PBKAAJEGILD
{
	// Fields
	public const PBKAAJEGILD None = 0;
	public const PBKAAJEGILD MPPlay = 1;
}
public enum HNAPHMBEILI
{
	// Fields
	public const HNAPHMBEILI ROUTINE_FINISH_NONE = 0;
	public const HNAPHMBEILI ROUTINE_FINISH_KILL_MONSTER = 1;
	public const HNAPHMBEILI ROUTINE_FINISH_GATHER = 2;
	public const HNAPHMBEILI ROUTINE_CHALLENGE_FINISH = 3;
}
public enum IOJLKOFFCMO
{
	// Fields
	public const IOJLKOFFCMO ROUTINE_COND_NONE = 0;
	public const IOJLKOFFCMO ROUTINE_COND_QUEST_FINISH = 1;
}
public enum BHDGCHPGOHK
{
	// Fields
	public const BHDGCHPGOHK ROUTINE_ACTION_NONE = 0;
}
public enum DGLLOALDDFO
{
	// Fields
	public const DGLLOALDDFO WORLD_NONE = 0;
	public const DGLLOALDDFO WORLD_PLAYER = 1;
	public const DGLLOALDDFO WORLD_HOME = 2;
}
public enum DMEKGDMBHCP
{
	// Fields
	public const DMEKGDMBHCP SCENE_MP_NONE = 0;
	public const DMEKGDMBHCP SCENE_MP_SINGLE_PLAYER_SINGLE_MODE = 1;
}
public enum PNHGGGFNEDP
{
	// Fields
	public const PNHGGGFNEDP NAVMESH_MODE_DEFAULT = 0;
	public const PNHGGGFNEDP NAVMESH_MODE_POLYGON = 1;
	public const PNHGGGFNEDP NAVMESH_MODE_BOX = 2;
}
public enum MoleMole.Config.SceneTagCondType
{
	// Fields
	public const MoleMole.Config.SceneTagCondType SCENE_TAG_COND_TYPE_NONE = 0;
	public const MoleMole.Config.SceneTagCondType SCENE_TAG_COND_TYPE_SPECIFIC_ACTIVITY_OPEN = 1;
	public const MoleMole.Config.SceneTagCondType SCENE_TAG_COND_TYPE_QUEST_GLOBAL_VAR_EQUAL = 2;
	public const MoleMole.Config.SceneTagCondType SCENE_TAG_COND_TYPE_ACTIVITY_CONTENT_OPEN = 4;
	public const MoleMole.Config.SceneTagCondType SCENE_TAG_COND_TYPE_QUEST_FINISH = 5;
}
public enum MoleMole.Config.ShopType
{
	// Fields
	public const MoleMole.Config.ShopType SHOP_TYPE_NONE = 0;
	public const MoleMole.Config.ShopType SHOP_TYPE_RECOMMEND = 900;
	public const MoleMole.Config.ShopType SHOP_TYPE_HCOIN = 901;
	public const MoleMole.Config.ShopType SHOP_TYPE_PACKAGE = 902;
	public const MoleMole.Config.ShopType SHOP_TYPE_MCOIN = 903;
	public const MoleMole.Config.ShopType SHOP_TYPE_PAIMON = 1001;
	public const MoleMole.Config.ShopType SHOP_TYPE_CITY = 1002;
	public const MoleMole.Config.ShopType SHOP_TYPE_BLACKSMITH = 1003;
	public const MoleMole.Config.ShopType SHOP_TYPE_GROCERY = 1004;
	public const MoleMole.Config.ShopType SHOP_TYPE_FOOD = 1005;
	public const MoleMole.Config.ShopType SHOP_TYPE_SEA_LAMP = 1006;
	public const MoleMole.Config.ShopType SHOP_TYPE_VIRTUAL_SHOP = 1007;
	public const MoleMole.Config.ShopType SHOP_TYPE_LIYUE_GROCERY = 1008;
	public const MoleMole.Config.ShopType SHOP_TYPE_LIYUE_SOUVENIR = 1009;
	public const MoleMole.Config.ShopType SHOP_TYPE_LIYUE_RESTAURANT = 1010;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Flora = 1011;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Charles = 1012;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Shiliu = 1013;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Schulz = 1014;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Brook = 1015;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Hopkins = 1016;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Draff = 1017;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Chloris = 1018;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Licai = 1019;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Yueshu = 1020;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Gui = 1021;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Gao = 1022;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Sun = 1023;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Qiming = 1024;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Zhangshun = 1025;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Chen = 1026;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_ErNiang = 1027;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Shitou = 1028;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Jifang = 1029;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Zhu = 1030;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Bai = 1031;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Kai = 1032;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Linglang = 1033;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_VerrGoldet = 1034;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Zhou = 1035;
	public const MoleMole.Config.ShopType SHOP_TYPE_TASK_Ekaterina = 1036;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_ASTER = 1037;
	public const MoleMole.Config.ShopType SHOP_TYPE_TASK_Tartaglia = 1038;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Harris = 1039;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_DRAGON_SPINE = 1040;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_TREASURE_MAP = 1041;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Yinian = 1042;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_SEA_LAMP = 1043;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_FLEUR_FAIR = 1044;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Changshun = 1045;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Bolai = 1046;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Ashanpo = 1047;
	public const MoleMole.Config.ShopType SHOP_TYPE_HOME = 1048;
	public const MoleMole.Config.ShopType SHOP_TYPE_HOME_LIMIT = 1049;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_MasterLu = 1050;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Goth = 1051;
	public const MoleMole.Config.ShopType SHOP_TYPE_COSTUME = 1052;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Obata = 1053;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Qiuyue = 1054;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Ryouko = 1055;
	public const MoleMole.Config.ShopType SHOP_TYPE_INAZUMA_GROCERY = 1056;
	public const MoleMole.Config.ShopType SHOP_TYPE_INAZUMA_SOUVENIR = 1057;
	public const MoleMole.Config.ShopType SHOP_TYPE_INAZUMA_RESTAURANT = 1058;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Kuroda = 1059;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_KiminamiAnna = 1060;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Tomoki = 1061;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Karpillia = 1062;
	public const MoleMole.Config.ShopType SHOP_TYPE_BLACKSMITH_INAZUMA = 1063;
	public const MoleMole.Config.ShopType SHOP_TYPE_FISH = 1064;
	public const MoleMole.Config.ShopType SHOP_TYPE_FISH_LIYUE = 1065;
	public const MoleMole.Config.ShopType SHOP_TYPE_FISH_INAZUMA = 1066;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Kiyoko = 1067;
	public const MoleMole.Config.ShopType SHOP_TYPE_EXPIRED_WIDGET_MENGDE = 1068;
	public const MoleMole.Config.ShopType SHOP_TYPE_CAPTURE_ANIMAL_SHOP = 1069;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_YamashiroKenta = 1070;
	public const MoleMole.Config.ShopType SHOP_TYPE_FISH_SUMERU = 1071;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Pam = 1072;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Lambad = 1073;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Hamawi = 1074;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Khalid = 1075;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Ahangar = 1076;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Afshin = 1077;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Jut = 1078;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Butrus = 1079;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Jahangir = 1080;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Qiuwei = 1081;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Babak = 1082;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Rama = 1083;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Ashpazi = 1084;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Aramani = 1085;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Aravinay = 1086;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Enteka = 1087;
	public const MoleMole.Config.ShopType SHOP_TYPE_NPC_Azalai = 1088;
	public const MoleMole.Config.ShopType SHOP_TYPE_EXPIRED_WIDGET_INAZUMA = 1089;
	public const MoleMole.Config.ShopType SHOP_TYPE_GCG_CARD = 2000;
	public const MoleMole.Config.ShopType SHOP_TYPE_GCG_CARD_FACE = 2001;
	public const MoleMole.Config.ShopType SHOP_TYPE_GCG_APPEARANCE = 2002;
	public const MoleMole.Config.ShopType SHOP_TYPE_GCG_EXCHANGE = 2003;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_CHANNELLER_SLAB = 15001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_SUMMER_TIME = 16001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_BOUNCE_CONJURING = 16002;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_BLITZ_RUSH = 20001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_CHESS = 20002;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_ROGUELIKE_DUNGEON = 20003;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_WINTER_CAMP = 20004;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_LANTERN_RITE = 20005;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_ROGUE_DIARY = 27001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_SUMMER_TIME_V2 = 28001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_GRAVEN_INNOCENCE = 30001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_TREASURE_SEELIE = 30002;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_VINTAGE_ANGEL_S_SHARE = 31001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_FUNGUS_FIGHTER = 32001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_EFFIGY_V2 = 32002;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_BRICK_BREAKER = 33001;
	public const MoleMole.Config.ShopType SHOP_TYPE_ACTIVITY_FLEURFAIR_V2 = 35001;
}
public enum LGAHNGHDHMB
{
	// Fields
	public const LGAHNGHDHMB SHOP_REFRESH_NONE = 0;
	public const LGAHNGHDHMB SHOP_REFRESH_MONTHLY = 1;
	public const LGAHNGHDHMB SHOP_REFRESH_WEEKLY = 2;
	public const LGAHNGHDHMB SHOP_REFRESH_DAILY = 3;
}
public enum ALPJMALELPA
{
	// Fields
	public const ALPJMALELPA SHOP_PRECONDITION_NONE = 0;
	public const ALPJMALELPA SHOP_PRECONDITION_SPECIFY = 1;
	public const ALPJMALELPA SHOP_PRECONDITION_REST = 2;
	public const ALPJMALELPA SHOP_PRECONDITION_SHEET_REST = 3;
	public const ALPJMALELPA SHOP_PRECONDITION_SHEET_TEASURE_MAP_REGION = 4;
	public const ALPJMALELPA SHOP_PRECONDITION_HOME_LEVEL = 5;
	public const ALPJMALELPA SHOP_PRECONDITION_QUEST_FINISH = 6;
	public const ALPJMALELPA SHOP_PRECONDITION_SHEET_FLEUR_FAIR_WATCHER_FINISH = 7;
	public const ALPJMALELPA SHOP_PRECONDITION_QUEST_FINISH_ALL = 8;
	public const ALPJMALELPA SHOP_PRECONDITION_QUEST_FINISH_ANY = 9;
	public const ALPJMALELPA SHOP_PRECONDITION_GCG_LEVEL = 10;
	public const ALPJMALELPA SHOP_PRECONDITION_GCG_CARD_PROFICIENCY = 11;
	public const ALPJMALELPA SHOP_PRECONDITION_GCG_HAS_CARD = 12;
	public const ALPJMALELPA SHOP_PRECONDITION_GCGTC_NLEVEL_FINISHED = 13;
	public const ALPJMALELPA SHOP_PRECONDITION_GCGTC_HLEVEL_FINISHED = 14;
	public const ALPJMALELPA SHOP_PRECONDITION_GCGBC_NLEVEL_FINISHED = 15;
	public const ALPJMALELPA SHOP_PRECONDITION_GCGBC_HLEVEL_FINISHED = 16;
	public const ALPJMALELPA SHOP_PRECONDITION_DONE_TEASURE_SEELIE_REGION = 17;
	public const ALPJMALELPA SHOP_PRECONDITION_GCG_LEVEL_CHALLENGE_FINISHED = 18;
}
public enum JEPELMNPHMD
{
	// Fields
	public const JEPELMNPHMD SHOPMALL_RECOMMEND_COND_TYPE_NONE = 0;
	public const JEPELMNPHMD SHOPMALL_RECOMMEND_COND_PLAYER_LEVEL_GE = 1;
	public const JEPELMNPHMD SHOPMALL_RECOMMEND_COND_TIME_BEGIN = 2;
	public const JEPELMNPHMD SHOPMALL_RECOMMEND_COND_TIME_END = 3;
}
public enum FBCCFNMOFEJ
{
	// Fields
	public const FBCCFNMOFEJ ENTRANCE_NORMAL = 0;
	public const FBCCFNMOFEJ ENTRANCE_RECHARGE = 1;
	public const FBCCFNMOFEJ ENTRANCE_TAB = 2;
}
public enum ALHJDAINEHH
{
	// Fields
	public const ALHJDAINEHH PRODUCT_TYPE_NONE = 0;
	public const ALHJDAINEHH PRODUCT_TYPE_HCOIN = 1;
	public const ALHJDAINEHH PRODUCT_TYPE_CARD = 2;
	public const ALHJDAINEHH PRODUCT_TYPE_PACKAGE = 3;
	public const ALHJDAINEHH PRODUCT_TYPE_PLAY = 4;
	public const ALHJDAINEHH PRODUCT_TYPE_GOOGLE_GIFT_CARD = 5;
	public const ALHJDAINEHH PRODUCT_TYPE_CONCERT = 6;
	public const ALHJDAINEHH PRODUCT_TYPE_APPLE_GIFT_CARD = 7;
	public const ALHJDAINEHH PRODUCT_TYPE_PSN_COMPENSATION = 8;
}
public enum MOBOGLCDFJA
{
	// Fields
	public const MOBOGLCDFJA RECOMMEND_ONE = 0;
	public const MOBOGLCDFJA RECOMMEND_COL = 1;
	public const MOBOGLCDFJA RECOMMEND_ITEM = 2;
	public const MOBOGLCDFJA RECOMMEND_JUMP = 3;
	public const MOBOGLCDFJA RECOMMEND_PACKAGE = 4;
}
public enum LNAAOLFFEKM
{
	// Fields
	public const LNAAOLFFEKM SHOP_RECOMMEND_TAG_TYPE_NONE = 0;
	public const LNAAOLFFEKM SHOP_RECOMMEND_TAG_TYPE_LIMITTIME = 1;
	public const LNAAOLFFEKM SHOP_RECOMMEND_TAG_TYPE_DISCOUNT = 2;
	public const LNAAOLFFEKM SHOP_RECOMMEND_TAG_TYPE_NEW = 3;
}
public enum HEJIHBIMEDP
{
	// Fields
	public const HEJIHBIMEDP CARD_PRODUCT_TYPE_INVALID = 0;
	public const HEJIHBIMEDP CARD_PRODUCT_TYPE_HCOIN = 1;
	public const HEJIHBIMEDP CARD_PRODUCT_TYPE_RESIN = 2;
}
public enum AIDLINDEOGB
{
	// Fields
	public const AIDLINDEOGB PRODUCT_PLAY_TYPE_NONE = 0;
	public const AIDLINDEOGB PRODUCT_PLAY_TYPE_BATTLE_PASS_NORMAL = 1;
	public const AIDLINDEOGB PRODUCT_PLAY_TYPE_BATTLE_PASS_EXTRA = 2;
	public const AIDLINDEOGB PRODUCT_PLAY_TYPE_BATTLE_PASS_UPGRADE = 3;
}
public enum GHIGPFLCIAG
{
	// Fields
	public const GHIGPFLCIAG SIGN_IN_COND_NONE = 0;
	public const GHIGPFLCIAG SIGN_IN_COND_PLAYER_LEVEL = 1;
	public const GHIGPFLCIAG SIGN_IN_COND_FINISH_QUEST = 2;
	public const GHIGPFLCIAG SIGN_IN_COND_FINISH_PARENT_QUEST = 3;
	public const GHIGPFLCIAG SIGN_IN_COND_AVERAGE_AVATAR_LEVEL = 4;
	public const GHIGPFLCIAG SIGN_IN_COND_MAX_AVATAR_LEVEL = 5;
	public const GHIGPFLCIAG SIGN_IN_COND_AVATAR_NUM = 6;
}
public enum HKKNCMKPCGN
{
	// Fields
	public const HKKNCMKPCGN BONUS_ACTIVITY_STATE_NONE = 0;
	public const HKKNCMKPCGN BONUS_ACTIVITY_STATE_UNSTARTED = 1;
	public const HKKNCMKPCGN BONUS_ACTIVITY_STATE_UNFINISHED = 2;
	public const HKKNCMKPCGN BONUS_ACTIVITY_STATE_UNREWARDED = 3;
	public const HKKNCMKPCGN BONUS_ACTIVITY_STATE_REWARDED = 4;
}
public enum LEKCOHHNKFP
{
	// Fields
	public const LEKCOHHNKFP BONUS_COMMON = 0;
	public const LEKCOHHNKFP BONUS_XIANGLING = 1;
	public const LEKCOHHNKFP BONUS_BABALA = 2;
	public const LEKCOHHNKFP BONUS_KELAI = 3;
}
public enum BNKNKMGLAFN
{
	// Fields
	public const BNKNKMGLAFN STRENGTHEN_POINT_NONE = 0;
	public const BNKNKMGLAFN STRENGTHEN_POINT_AVATAR = 1;
	public const BNKNKMGLAFN STRENGTHEN_POINT_WEAPON = 2;
	public const BNKNKMGLAFN STRENGTHEN_POINT_RELIQUARY = 3;
	public const BNKNKMGLAFN STRENGTHEN_POINT_TALENT = 4;
}
public enum BNOIFMPLPPD
{
	// Fields
	public const BNOIFMPLPPD DUNGEON_TYPE_NONE = 0;
	public const BNOIFMPLPPD DUNGEON_TYPE_BOSS = 1;
	public const BNOIFMPLPPD DUNGEON_TYPE_BREAK = 2;
	public const BNOIFMPLPPD DUNGEON_TYPE_NORMAL = 3;
	public const BNOIFMPLPPD DUNGEON_TYPE_DAILY = 4;
	public const BNOIFMPLPPD DUNGEON_TYPE_TOWER = 5;
	public const BNOIFMPLPPD DUNGEON_TYPE_EFFIGY = 6;
}
public enum LBLNEIGFAPE
{
	// Fields
	public const LBLNEIGFAPE TEAM_RESONANCE_COND_NONE = 0;
	public const LBLNEIGFAPE TEAM_RESONANCE_COND_ALL_DIFFERENT = 1;
}
public enum BDAEAGDBBJJ
{
	// Fields
	public const BDAEAGDBBJJ TEXT_SHOW_NONE = 0;
}
public enum OLHJKIKIBJB
{
	// Fields
	public const OLHJKIKIBJB TEXT_PARAM_NONE = 0;
	public const OLHJKIKIBJB TEXT_PARAM_AVATAR_NAME = 1;
	public const OLHJKIKIBJB TEXT_PARAM_ROUTINE_TYPE = 2;
}
public enum HFHNEHMCNIA
{
	// Fields
	public const HFHNEHMCNIA TOWER_COND_NONE = 0;
	public const HFHNEHMCNIA TOWER_COND_FINISH_TIME_LESS_THAN = 1;
	public const HFHNEHMCNIA TOWER_COND_LEFT_HP_GREATER_THAN = 2;
	public const HFHNEHMCNIA TOWER_COND_CHALLENGE_LEFT_TIME_MORE_THAN = 3;
}
public enum OGFLDPGFNAI
{
	// Fields
	public const OGFLDPGFNAI TOWER_BUFF_LASTING_NONE = 0;
	public const OGFLDPGFNAI TOWER_BUFF_LASTING_FLOOR = 1;
	public const OGFLDPGFNAI TOWER_BUFF_LASTING_IMMEDIATE = 2;
	public const OGFLDPGFNAI TOWER_BUFF_LASTING_LEVEL = 3;
}
public enum PLIABGMIEOF
{
	// Fields
	public const PLIABGMIEOF MECHANICUS_CARD_NONE = 0;
	public const PLIABGMIEOF MECHANICUS_CARD_BUFF = 1;
	public const PLIABGMIEOF MECHANICUS_CARD_CURSE = 2;
	public const PLIABGMIEOF MECHANICUS_CARD_CHALLENGE = 3;
}
public enum AGBCIBNBALG
{
	// Fields
	public const AGBCIBNBALG MECHANICUS_CARD_TARGET_NONE = 0;
	public const AGBCIBNBALG MECHANICUS_CARD_TARGET_ALL = 1;
	public const AGBCIBNBALG MECHANICUS_CARD_TARGET_GADGETS = 2;
}
public enum FAKPHKGGOJH
{
	// Fields
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_NONE = 0;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_SET_SGV = 1;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_MOD_COST = 2;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_MOD_REFUND = 3;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_SET_HOME_HP = 4;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_ADD_HOME_HP = 5;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_ADD_KILL_POINTS = 6;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_MOD_KILL_POINTS = 7;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_ADD_GEAR_NUM = 8;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_KILL_GEARS = 9;
	public const FAKPHKGGOJH MECHANICUS_CARD_EFFECT_GRANT_POINTS = 10;
	public const FAKPHKGGOJH MECHANICUS_CARD_NOTIFY_LUA = 11;
	public const FAKPHKGGOJH MECHANICUS_PASSIVE_AURA_BONUS_POINTS = 12;
	public const FAKPHKGGOJH MECHANICUS_PASSIVE_AURA_SGV = 13;
}
public enum IFMIHKCPICA
{
	// Fields
	public const IFMIHKCPICA TREE_TYPE_BIRCH = 1;
	public const IFMIHKCPICA TREE_TYPE_MAPLE = 2;
	public const IFMIHKCPICA TREE_TYPE_PINE = 3;
	public const IFMIHKCPICA TREE_TYPE_POPULUS_EUPHRATICA = 4;
	public const IFMIHKCPICA TREE_TYPE_BAMBOO = 5;
	public const IFMIHKCPICA TREE_TYPE_ENERGY_WOOD = 6;
	public const IFMIHKCPICA TREE_TYPE_CYPRESS = 7;
	public const IFMIHKCPICA TREE_TYPE_FIRTREE = 8;
	public const IFMIHKCPICA TREE_TYPE_CERASUS = 9;
	public const IFMIHKCPICA TREE_TYPE_ACER = 10;
	public const IFMIHKCPICA TREE_TYPE_CRYPTOMERIA = 11;
	public const IFMIHKCPICA TREE_TYPE_OTOGI = 12;
	public const IFMIHKCPICA TREE_TYPE_FICUS = 13;
	public const IFMIHKCPICA TREE_TYPE_MELIA = 14;
	public const IFMIHKCPICA TREE_TYPE_MARATTIA = 15;
	public const IFMIHKCPICA TREE_TYPE_TAMARIX = 16;
	public const IFMIHKCPICA TREE_TYPE_SYLVESTRIS = 17;
}
public enum BEKCMIAGAKD
{
	// Fields
	public const BEKCMIAGAKD TRIAL_AVATAR_TEMPLATE_PLACEHOLDER = 0;
}
public enum DCAKEDABAJN
{
	// Fields
	public const DCAKEDABAJN TUT_DEFAULT = 0;
	public const DCAKEDABAJN TUT_FULL_SCREEN = 1;
}
public enum IKINCCMABBB
{
	// Fields
	public const IKINCCMABBB UI_INTERACT_TYPE_NORMAL = 0;
}
public enum JCCFKGDPBJG
{
	// Fields
	public const JCCFKGDPBJG None = 0;
	public const JCCFKGDPBJG Point = 1;
	public const JCCFKGDPBJG Slider = 2;
}
public enum FGFHBNCEMDF
{
	// Fields
	public const FGFHBNCEMDF AVATAR_FILTER_NONE = 0;
	public const FGFHBNCEMDF AVATAR_FILTER_AVATAR_ID = 1;
	public const FGFHBNCEMDF AVATAR_FILTER_WEAPON_TYPE = 2;
	public const FGFHBNCEMDF AVATAR_FILTER_ELEMENT_TYPE = 3;
}
public enum AMODCIIEKNH
{
	// Fields
	public const AMODCIIEKNH PREDICATE_NONE = 0;
	public const AMODCIIEKNH PREDICATE_QUEST_FINISH = 1;
	public const AMODCIIEKNH PREDICATE_CURRENT_AVATAR = 2;
	public const AMODCIIEKNH PREDICATE_GCG_LEVEL = 3;
}
public enum NGGAEBCJMFM
{
	// Fields
	public const NGGAEBCJMFM PUSH_TIPS_NONE = 0;
	public const NGGAEBCJMFM PUSH_TIPS_TUTORIAL = 1;
	public const NGGAEBCJMFM PUSH_TIPS_MONSTER = 2;
}
public enum GEBEFHFBCNC
{
	// Fields
	public const GEBEFHFBCNC CODEX_NONE = 0;
	public const GEBEFHFBCNC CODEX_ELEMENT = 1;
	public const GEBEFHFBCNC CODEX_ENEMY = 2;
	public const GEBEFHFBCNC CODEX_SYSTEM = 3;
	public const GEBEFHFBCNC CODEX_ADVENTURE = 4;
	public const GEBEFHFBCNC CODEX_ARANARA = 998;
	public const GEBEFHFBCNC CODEX_UNRECORDED = 999;
}
public enum BPOKEPAECNL
{
	// Fields
	public const BPOKEPAECNL WEAPON_MATERIAL_NONE = 0;
}
public enum CGIGPBLEPCG
{
	// Fields
	public const CGIGPBLEPCG WEAPON_ENHANCE_TYPE_ENABLE = 0;
	public const CGIGPBLEPCG WEAPON_ENHANCE_TYPE_DISABLED = 1;
}
public enum DPPEOJOODJB
{
	// Fields
	public const DPPEOJOODJB WIDGET_CAMERA_ACTION_NONE = 0;
	public const DPPEOJOODJB WIDGET_CAMERA_ACTION_NOTIFY_SERVER = 1;
}
public enum NDKFPJPHDBL
{
	// Fields
	public const NDKFPJPHDBL VEHICLE_LIMIT_NONE = 0;
	public const NDKFPJPHDBL VEHICLE_LIMIT_ONLY_VEHICLE = 1;
	public const NDKFPJPHDBL VEHICLE_LIMIT_NOT_VEHICLE = 2;
}
public enum HEBHNMBDGFL
{
	// Fields
	public const HEBHNMBDGFL WIDGET_ACTIVE_EXTRA_NONE = 0;
	public const HEBHNMBDGFL WIDGET_ACTIVE_EXTRA_IN_SORUSH = 1;
}
public enum FFNLOALHCJM
{
	// Fields
	public const FFNLOALHCJM LEVEL_NONE = 0;
	public const FFNLOALHCJM LEVEL_1 = 1;
	public const FFNLOALHCJM LEVEL_2 = 2;
	public const FFNLOALHCJM LEVEL_3 = 3;
	public const FFNLOALHCJM LEVEL_PLAY = 10;
}
public enum ENPELLGBAFB
{
	// Fields
	public const ENPELLGBAFB AREA_TERRAIN_NONE = 0;
	public const ENPELLGBAFB AREA_TERRAIN_CITY = 1;
	public const ENPELLGBAFB AREA_TERRAIN_OUTDOOR = 2;
}
public enum OMIEBDACHCG
{
	// Fields
	public const OMIEBDACHCG MistClose = 0;
	public const OMIEBDACHCG MistOpen = 1;
}
public enum NPFKPJKLGIE
{
	// Fields
	public const NPFKPJKLGIE MAP_AREA_TYPE_DEFAULT = 0;
	public const NPFKPJKLGIE MAP_AREA_TYPE_EROSION = 1;
	public const NPFKPJKLGIE MAP_AREA_TYPE_LEVEL_TAG = 2;
}
public enum PBCCNIHOLFD
{
	// Fields
	public const PBCCNIHOLFD Map = 0;
	public const PBCCNIHOLFD SubArea = 1;
}
public enum CNCPKOFHIKC
{
	// Fields
	public const CNCPKOFHIKC Default = 0;
	public const CNCPKOFHIKC Quest = 1;
	public const CNCPKOFHIKC MapArea = 2;
	public const CNCPKOFHIKC ErosionArea = 3;
}
public enum DDPAABDLNOG
{
	// Fields
	public const DDPAABDLNOG Default = 0;
	public const DDPAABDLNOG Open = 1;
	public const DDPAABDLNOG Close = 2;
	public const DDPAABDLNOG SwitchName = 3;
}
public enum EJGODFFMANK
{
	// Fields
	public const EJGODFFMANK EXPLORE_EVENT_NONE = 0;
	public const EJGODFFMANK EXPLORE_EVENT_UNLOCK_POINT = 1;
	public const EJGODFFMANK EXPLORE_EVENT_OPEN_CHEST = 2;
	public const EJGODFFMANK EXPLORE_EVENT_CLEAR_GROUP_MONSTER = 3;
	public const EJGODFFMANK EXPLORE_EVENT_ITEM_ADD = 4;
	public const EJGODFFMANK EXPLORE_EVENT_ENTER_FORCE = 5;
	public const EJGODFFMANK EXPLORE_EVENT_OPEN_CHEST_BY_GADGET = 6;
	public const EJGODFFMANK EXPLORE_EVENT_GATHER = 7;
}
public enum NCINIAHDLIO
{
	// Fields
	public const NCINIAHDLIO WORLD_AREA_ACTION_NONE = 0;
	public const NCINIAHDLIO WORLD_AREA_ACTION_REWARD = 1;
	public const NCINIAHDLIO WORLD_AREA_ACTION_IMPROVE_STAMINA = 2;
	public const NCINIAHDLIO WORLD_AREA_ACTION_UNLOCK_FORCE = 3;
	public const NCINIAHDLIO WORLD_AREA_ACTION_UNLOCK_DUNGEON_ENTRANCE = 4;
	public const NCINIAHDLIO WORLD_AREA_ACTION_ACTIVATE_ITEM = 5;
	public const NCINIAHDLIO WORLD_AREA_ACTION_UNLOCK_DYNAMIC_HARD = 6;
	public const NCINIAHDLIO WORLD_AREA_ACTION_UNLOCK_AIR_PORTAL = 7;
	public const NCINIAHDLIO WORLD_AREA_ACTION_NOTIFY_GROUP = 8;
}
public enum JNOOPAFLIGK
{
	// Fields
	public const JNOOPAFLIGK BigWorld = 0;
	public const JNOOPAFLIGK HomeWorld = 1;
	public const JNOOPAFLIGK Islands = 2;
	public const JNOOPAFLIGK Abyssalisle = 3;
	public const JNOOPAFLIGK MichiaeMatsuri = 4;
	public const JNOOPAFLIGK TheChasm = 5;
	public const JNOOPAFLIGK DreamIsland = 6;
	public const JNOOPAFLIGK MirrorWorld = 7;
	public const JNOOPAFLIGK CattailTavern = 8;
}
public enum OKGMNHBGHJD
{
	// Fields
	public const OKGMNHBGHJD NEVER_TOKEN = 0;
	public const OKGMNHBGHJD FRAME_DELAY_TOKEN = 1;
	public const OKGMNHBGHJD FRAME_CANCEL_TOKEN = 2;
}
public enum FBMFFLAIFME
{
	// Fields
	public const FBMFFLAIFME SOURCE_INVALID = -1;
	public const FBMFFLAIFME SOURCE_HIT = 0;
	public const FBMFFLAIFME ELEMENT_REACTION = 1;
	public const FBMFFLAIFME LOW_EFFECT_IN_TOKEN_QUEUE = 2;
	public const FBMFFLAIFME SOURCE_COUNT = 3;
}
public enum AJMLNMJOEFP
{
	// Fields
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_INVALID = -1;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_FIRE_EFFECT = 0;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_ATTACH_EFFECT = 1;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_APPLY_MODIFIER = 2;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_APPLY_LEVEL_MODIFIER = 3;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_AUDIO = 4;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_TRIGGER_ATTACK_EVENT = 5;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_SEND_EFFECT_TRIGGER = 6;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_INTERNAL_FIRE_EFFECT_GOD = 7;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_INTERNAL_FIRE_EFFECT_NORMAL = 8;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_INTERNAL_FIRE_EFFECT_LOW = 9;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_INTERNAL_ATTACH_EFFECT_GOD = 10;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_INTERNAL_ATTACH_EFFECT_NORMAL = 11;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_INTERNAL_ATTACH_EFFECT_LOW = 12;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_CREATE_ENTITY_SYNC = 13;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_CREATE_ENTITY_ASYNC = 14;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_UI_SPAWN = 15;
	public const AJMLNMJOEFP ENTITY_TOKEN_ACTION_TYPE_COUNT = 16;
}
public enum JIMHPNJIOIP
{
	// Fields
	public const JIMHPNJIOIP Replace = 0;
	public const JIMHPNJIOIP Add = 1;
}
public enum HIMPICDHMGA
{
	// Fields
	public const HIMPICDHMGA None = 0;
	public const HIMPICDHMGA WitchTimeDurationScaledByEvadedAttack = 1;
	public const HIMPICDHMGA InfiniteDuration = 2;
}
public enum CJLDBKDAKGJ
{
	// Fields
	public const CJLDBKDAKGJ None = 0;
	public const CJLDBKDAKGJ Priority = 1;
	public const CJLDBKDAKGJ DurabilityAsc = 2;
	public const CJLDBKDAKGJ DurabilityDes = 3;
	public const CJLDBKDAKGJ All = 4;
}
public enum AFDBDEOHIDG
{
	// Fields
	public const AFDBDEOHIDG PreferTargetToInput = 0;
	public const AFDBDEOHIDG OnlyInput = 1;
	public const AFDBDEOHIDG OnlyTarget = 2;
	public const AFDBDEOHIDG PreferTargetToCamera = 3;
	public const AFDBDEOHIDG OnlyCamera = 4;
}
public enum DIKKMKEBENM
{
	// Fields
	public const DIKKMKEBENM Add = 0;
	public const DIKKMKEBENM Set = 1;
}
public enum JMGCGLOJAGB
{
	// Fields
	public const JMGCGLOJAGB None = 0;
	public const JMGCGLOJAGB Floor = 1;
	public const JMGCGLOJAGB Ceil = 2;
	public const JMGCGLOJAGB Round = 3;
}
public enum GPAPAMMAJGG
{
	// Fields
	public const GPAPAMMAJGG None = 0;
	public const GPAPAMMAJGG ElementLevelCo = 1;
	public const GPAPAMMAJGG PlayerElementLevelCo = 2;
	public const GPAPAMMAJGG PlayerShieldLevelCo = 3;
	public const GPAPAMMAJGG PlayerElementLevelCoWithMastery = 4;
}
public enum POJGOEPLMHB
{
	// Fields
	public const POJGOEPLMHB Center = 0;
}
public enum BLBBFHNGHDM
{
	// Fields
	public const BLBBFHNGHDM Default = 0;
	public const BLBBFHNGHDM Scene = 1;
	public const BLBBFHNGHDM BulletHit = 2;
}
public enum KJILNONECNA
{
	// Fields
	public const KJILNONECNA Caster = 0;
	public const KJILNONECNA Self = 1;
}
public enum HNGOEPILPEO
{
	// Fields
	public const HNGOEPILPEO XiaoUlt = 0;
	public const HNGOEPILPEO KleeMineExplode = 1;
	public const HNGOEPILPEO GearSpring = 2;
	public const HNGOEPILPEO DungeonJump = 3;
	public const HNGOEPILPEO IttoGangPlank = 4;
	public const HNGOEPILPEO Trampoline = 5;
	public const HNGOEPILPEO ChallengeSuperJump = 6;
	public const HNGOEPILPEO MaxValue = 7;
}
public enum NOFJJCLEJJG.LKOIFDHMJJL
{
	// Fields
	public const NOFJJCLEJJG.LKOIFDHMJJL Normal = 0;
	public const NOFJJCLEJJG.LKOIFDHMJJL ForceLocal = 1;
	public const NOFJJCLEJJG.LKOIFDHMJJL ForceSynced = 2;
}
public enum HLCJFGKJJDE
{
	// Fields
	public const HLCJFGKJJDE None = 0;
	public const HLCJFGKJJDE Normal = 1;
	public const HLCJFGKJJDE Disappear = 2;
}
public enum CBENDHHCLKL
{
	// Fields
	public const CBENDHHCLKL BlinkHitSceneTestByStraightLine = 0;
	public const CBENDHHCLKL BlinkHitSceneTestByThreeSegments = 1;
}
public enum FKDCPCDDNEF
{
	// Fields
	public const FKDCPCDDNEF LevelControl = 0;
	public const FKDCPCDDNEF BigWorldOnly = 1;
	public const FKDCPCDDNEF ForceDrop = 2;
}
public enum HGLLOEKAJMH
{
	// Fields
	public const HGLLOEKAJMH WindEffect = 0;
}
public enum HBBCEGCONML
{
	// Fields
	public const HBBCEGCONML Start = 0;
	public const HBBCEGCONML Success = 1;
	public const HBBCEGCONML Interrupt = 2;
}
public enum LOHICPCIAOK
{
	// Fields
	public const LOHICPCIAOK None = 0;
	public const LOHICPCIAOK NormalAttack = 1;
	public const LOHICPCIAOK Skill = 2;
	public const LOHICPCIAOK UltimateSkill = 3;
	public const LOHICPCIAOK Count = 4;
}
public enum MCDKCPIHPHA
{
	// Fields
	public const MCDKCPIHPHA Gadget = 0;
	public const MCDKCPIHPHA OwnerGadegt = 1;
	public const MCDKCPIHPHA FromGroup = 2;
	public const MCDKCPIHPHA OwnerFromGroup = 3;
	public const MCDKCPIHPHA SpecificGroup = 4;
	public const MCDKCPIHPHA CurScenePlay = 5;
	public const MCDKCPIHPHA CurChallengeGroup = 6;
	public const MCDKCPIHPHA CurGalleryControlGroup = 7;
	public const MCDKCPIHPHA CurRogueBossGroup = 8;
	public const MCDKCPIHPHA AbilityGroupSourceGroup = 9;
}
public enum DPHBCMOKOIH
{
	// Fields
	public const DPHBCMOKOIH ElementArt = 0;
	public const DPHBCMOKOIH ElementBurst = 1;
	public const DPHBCMOKOIH HPBar = 2;
	public const DPHBCMOKOIH StaminaBar = 3;
}
public enum GHHDKNDKFKO
{
	// Fields
	public const GHHDKNDKFKO Consumed = 0;
	public const GHHDKNDKFKO Remaining = 1;
}
public enum KDLKEKPCMAI
{
	// Fields
	public const KDLKEKPCMAI None = 0;
	public const KDLKEKPCMAI QteStart = 1;
	public const KDLKEKPCMAI QteTrigger = 2;
	public const KDLKEKPCMAI RequestQuit = 3;
	public const KDLKEKPCMAI CastAnchorPoint = 4;
	public const KDLKEKPCMAI SelectBait = 5;
	public const KDLKEKPCMAI Pull = 6;
	public const KDLKEKPCMAI NotifyBait = 7;
}
public enum LJHFIFGEANP
{
	// Fields
	public const LJHFIFGEANP Mushroom = 0;
	public const LJHFIFGEANP Fire = 1;
	public const LJHFIFGEANP Electric = 2;
	public const LJHFIFGEANP MushroomVariation = 3;
}
public enum CFJGJKHNLIA
{
	// Fields
	public const CFJGJKHNLIA CurTeam = 0;
	public const CFJGJKHNLIA BigTeam = 1;
}
public enum BPFHLBCFNGF
{
	// Fields
	public const BPFHLBCFNGF exploration = 0;
	public const BPFHLBCFNGF excavation = 1;
}
public enum FLNPHIMHNCK
{
	// Fields
	public const FLNPHIMHNCK Max = 0;
	public const FLNPHIMHNCK Min = 1;
}
public enum DJEFONBCJJF
{
	// Fields
	public const DJEFONBCJJF GalleryTime = 0;
}
public enum HGGMGGDDHOC
{
	// Fields
	public const HGGMGGDDHOC ByStep = 0;
	public const HGGMGGDDHOC ByFrame = 1;
}
public enum AHLJBKJOJLB
{
	// Fields
	public const AHLJBKJOJLB Normal = 0;
	public const AHLJBKJOJLB Amplify = 1;
	public const AHLJBKJOJLB Critical = 2;
}
public enum GBPNFNOPKEJ
{
	// Fields
	public const GBPNFNOPKEJ Self = 0;
	public const GBPNFNOPKEJ Caster = 1;
	public const GBPNFNOPKEJ Target = 2;
	public const GBPNFNOPKEJ SelfAttackTarget = 3;
	public const GBPNFNOPKEJ Other = 4;
	public const GBPNFNOPKEJ Applier = 5;
	public const GBPNFNOPKEJ Owner = 6;
	public const GBPNFNOPKEJ CurTeamAvatars = 7;
	public const GBPNFNOPKEJ CurLocalAvatar = 8;
	public const GBPNFNOPKEJ OriginOwner = 9;
	public const GBPNFNOPKEJ Team = 10;
	public const GBPNFNOPKEJ TargetOwner = 11;
	public const GBPNFNOPKEJ TargetOriginOwner = 12;
	public const GBPNFNOPKEJ AllPlayerAvatars = 13;
	public const GBPNFNOPKEJ AllTeams = 14;
	public const GBPNFNOPKEJ RemoteTeams = 15;
	public const GBPNFNOPKEJ TargetTeam = 16;
	public const GBPNFNOPKEJ CasterOwner = 17;
	public const GBPNFNOPKEJ CasterOriginOwner = 18;
	public const GBPNFNOPKEJ MPLevel = 19;
	public const GBPNFNOPKEJ Vehicle = 20;
	public const GBPNFNOPKEJ PropOwner = 21;
	public const GBPNFNOPKEJ ApplierOriginOnwer = 22;
	public const GBPNFNOPKEJ TargetTeamWithAvatarGadget = 23;
	public const GBPNFNOPKEJ SelfAttackActiveTarget = 24;
}
public enum FFICGCEJMHM
{
	// Fields
	public const FFICGCEJMHM Greater = 0;
	public const FFICGCEJMHM GreaterOrEqual = 1;
	public const FFICGCEJMHM Equal = 2;
	public const FFICGCEJMHM Lesser = 3;
	public const FFICGCEJMHM LesserOrEqual = 4;
}
public enum HNEHIDBJLCG
{
	// Fields
	public const HNEHIDBJLCG None = 0;
	public const HNEHIDBJLCG Allied = 1;
	public const HNEHIDBJLCG Enemy = 2;
	public const HNEHIDBJLCG All = 3;
}
public enum PGDKKJCKPBM
{
	// Fields
	public const PGDKKJCKPBM Entity = 0;
	public const PGDKKJCKPBM Actor = 1;
}
public enum GDGAAHMEMBP
{
	// Fields
	public const GDGAAHMEMBP Top = 0;
	public const GDGAAHMEMBP Sum = 1;
	public const GDGAAHMEMBP Multiplied = 2;
	public const GDGAAHMEMBP OneMinusMultiplied = 3;
	public const GDGAAHMEMBP Max = 4;
}
public enum LIDCMEJDFDA
{
	// Fields
	public const LIDCMEJDFDA Default = 0;
	public const LIDCMEJDFDA Reversed = 1;
	public const LIDCMEJDFDA Nearest = 2;
	public const LIDCMEJDFDA Random = 3;
	public const LIDCMEJDFDA HigherScore = 4;
	public const LIDCMEJDFDA LowHpRatio = 5;
	public const LIDCMEJDFDA HigherScoreByParam = 6;
}
public enum HBMKBAKJFAD
{
	// Fields
	public const HBMKBAKJFAD AND = 0;
	public const HBMKBAKJFAD OR = 1;
	public const HBMKBAKJFAD NOT = 2;
	public const HBMKBAKJFAD XOR = 3;
}
public enum HLGOAOJGCCK
{
	// Fields
	public const HLGOAOJGCCK AVATAR = 0;
	public const HLGOAOJGCCK LEVEL = 1;
}
public enum CHINKFCEJNG
{
	// Fields
	public const CHINKFCEJNG Base = 0;
	public const CHINKFCEJNG AvatarCommon = 4;
	public const CHINKFCEJNG AvatarSpecial = 5;
	public const CHINKFCEJNG Playmode = 101;
	public const CHINKFCEJNG Quest = 102;
	public const CHINKFCEJNG PlaymodeExtra1 = 1001;
	public const CHINKFCEJNG PlaymodeExtra2 = 1002;
	public const CHINKFCEJNG PlaymodeExtra3 = 1003;
}
public enum DGBCHEPDFMN
{
	// Fields
	public const DGBCHEPDFMN ElectroherculesBattle = 0;
	public const DGBCHEPDFMN VehicleSkillController = 1;
}
public enum ALMJAOIAKGK
{
	// Fields
	public const ALMJAOIAKGK Action1 = 0;
	public const ALMJAOIAKGK Action2 = 1;
	public const ALMJAOIAKGK Action3 = 2;
	public const ALMJAOIAKGK Action4 = 3;
	public const ALMJAOIAKGK Action5 = 4;
	public const ALMJAOIAKGK Action6 = 5;
	public const ALMJAOIAKGK Action7 = 6;
	public const ALMJAOIAKGK Action8 = 7;
	public const ALMJAOIAKGK Action9 = 8;
	public const ALMJAOIAKGK Action10 = 9;
	public const ALMJAOIAKGK Count = 10;
}
public enum BIHBIFJLMCP
{
	// Fields
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_NONE = 0;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_CHALLENGE = 1;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_QUEST = 2;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_ACTIVITY = 3;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_HUNTING = 4;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_WATCHER = 5;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_AVATAR_SKILL_DEPOT = 6;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_GALLERY = 7;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_WIDGET = 8;
	public const BIHBIFJLMCP ABILITY_GROUP_SOURCE_FISHING = 9;
}
public enum KHDPIKMAJJI
{
	// Fields
	public const KHDPIKMAJJI ABILITY_GROUP_TARGET_NONE = 0;
	public const KHDPIKMAJJI ABILITY_GROUP_TARGET_AVATAR = 1;
	public const KHDPIKMAJJI ABILITY_GROUP_TARGET_TEAM = 2;
}
public enum AGPGPLFDCBA
{
	// Fields
	public const AGPGPLFDCBA Both = 0;
	public const AGPGPLFDCBA Current = 1;
	public const AGPGPLFDCBA OffStage = 2;
}
public enum DBNLBGGGPPD.PFLNELHBGKN
{
	// Fields
	public const DBNLBGGGPPD.PFLNELHBGKN Mute = 0;
	public const DBNLBGGGPPD.PFLNELHBGKN AuthorityOnly = 1;
	public const DBNLBGGGPPD.PFLNELHBGKN Verbatim = 2;
	public const DBNLBGGGPPD.PFLNELHBGKN Custom = 3;
}
public enum DBNLBGGGPPD.BKCPFIFDFPD
{
	// Fields
	public const DBNLBGGGPPD.BKCPFIFDFPD AuthorityOnly = 0;
	public const DBNLBGGGPPD.BKCPFIFDFPD Verbatim = 1;
}
public enum PODHOCDGAIG
{
	// Fields
	public const PODHOCDGAIG None = 0;
	public const PODHOCDGAIG HP = 1;
	public const PODHOCDGAIG ExpGain = 2;
	public const PODHOCDGAIG ChestOpen = 3;
	public const PODHOCDGAIG QuestFinish = 4;
	public const PODHOCDGAIG PickItem = 5;
	public const PODHOCDGAIG HPUp = 6;
	public const PODHOCDGAIG HPDown = 7;
	public const PODHOCDGAIG EnergyDonwBySkill = 8;
	public const PODHOCDGAIG SkillReady = 9;
	public const PODHOCDGAIG Energy = 10;
	public const PODHOCDGAIG UnlockAnchorPoint = 11;
	public const PODHOCDGAIG UnlockGoddess = 12;
	public const PODHOCDGAIG InteractFlowerAndTreeReward = 13;
	public const PODHOCDGAIG GatherItem = 14;
}
public enum KPPBNIEEMMB
{
	// Fields
	public const KPPBNIEEMMB AttackTarget = 0;
	public const KPPBNIEEMMB AwakeTarget = 1;
	public const KPPBNIEEMMB BuddyTarget = 2;
}
public enum KBFFJHPLJFP
{
	// Fields
	public const KBFFJHPLJFP Idle = 0;
	public const KBFFJHPLJFP ResetGlobalValue = 1;
}
public enum BJNKBIGFBHA
{
	// Fields
	public const BJNKBIGFBHA RegisterOnce = 0;
	public const BJNKBIGFBHA RegisterAlways = 1;
}
public enum JGILEPEJGMM
{
	// Fields
	public const JGILEPEJGMM FollowOwnner = 0;
	public const JGILEPEJGMM SizeByTime = 1;
}
public enum NBNLDNIEAFI
{
	// Fields
	public const NBNLDNIEAFI Area = 0;
	public const NBNLDNIEAFI Weather = 1;
	public const NBNLDNIEAFI Skill = 2;
}
public enum PLGGLDHMONO
{
	// Fields
	public const PLGGLDHMONO None = 0;
	public const PLGGLDHMONO HasAttackLanded = 1;
	public const PLGGLDHMONO RejectAll = 255;
}
public enum MIDEIDFMEOJ
{
	// Fields
	public const MIDEIDFMEOJ Max = 0;
	public const MIDEIDFMEOJ Min = 1;
	public const MIDEIDFMEOJ Sum = 2;
}
public enum HIFEGEBAMDB
{
	// Fields
	public const HIFEGEBAMDB OnlyOriginOwner = 0;
	public const HIFEGEBAMDB OnlySubOwner = 1;
	public const HIFEGEBAMDB BothOwner = 2;
}
public enum DLNEIKAMPPG
{
	// Fields
	public const DLNEIKAMPPG Caster = 0;
	public const DLNEIKAMPPG PropOwner = 1;
	public const DLNEIKAMPPG CrystalSeedOwner = 2;
}
public enum PNIBEOKEMOI
{
	// Fields
	public const PNIBEOKEMOI TeamShield = 0;
	public const PNIBEOKEMOI CrystalSeedShield = 1;
	public const PNIBEOKEMOI EliteShield = 2;
}
public enum KFPKCOFFLJC
{
	// Fields
	public const KFPKCOFFLJC Enviro = 0;
	public const KFPKCOFFLJC FixCampID = 1;
	public const KFPKCOFFLJC OwnerCamp = 2;
}
public enum KPKKGFNHBGB
{
	// Fields
	public const KPKKGFNHBGB ElementReaction = 0;
	public const KPKKGFNHBGB ElementReactionByWater = 1;
	public const KPKKGFNHBGB ElementReactionByGrass = 2;
	public const KPKKGFNHBGB ElementReactionByBush = 3;
	public const KPKKGFNHBGB AttackLanded = 4;
	public const KPKKGFNHBGB DoSkillSuccNomalAttack = 5;
	public const KPKKGFNHBGB DoSkillSuccElementalArt = 6;
	public const KPKKGFNHBGB DoSkillSuccElementalBurst = 7;
	public const KPKKGFNHBGB ElementShieldAdd = 8;
	public const KPKKGFNHBGB GlobalSubShieldAdd = 9;
	public const KPKKGFNHBGB ListenAbilityAction = 10;
	public const KPKKGFNHBGB LocalAvatarHPChange = 11;
	public const KPKKGFNHBGB GetFirstWindBullet = 12;
	public const KPKKGFNHBGB GetSecondWindBullet = 13;
	public const KPKKGFNHBGB SpawnWindFieldByWindBullet = 14;
	public const KPKKGFNHBGB AvatarStateIdChange = 15;
	public const KPKKGFNHBGB AvatarWeaponElementOverride = 16;
	public const KPKKGFNHBGB ListenAbilityStageAction = 17;
}
public enum LDAPANOEJAH
{
	// Fields
	public const LDAPANOEJAH None = 0;
	public const LDAPANOEJAH LocalAvatar = 1;
	public const LDAPANOEJAH Team = 2;
}
public enum FNLKJPJCBHI
{
	// Fields
	public const FNLKJPJCBHI None = 0;
	public const FNLKJPJCBHI Climate = 1;
	public const FNLKJPJCBHI Other = 2;
	public const FNLKJPJCBHI All = 3;
}
public enum HGCGKKKNHIO
{
	// Fields
	public const HGCGKKKNHIO None = 0;
	public const HGCGKKKNHIO Rise = 1;
	public const HGCGKKKNHIO Fade = 2;
	public const HGCGKKKNHIO All = 3;
}
public enum GJNGOKOFBAM
{
	// Fields
	public const GJNGOKOFBAM Dash = 0;
}
public enum HOBPOOJONMA
{
	// Fields
	public const HOBPOOJONMA Default = 0;
	public const HOBPOOJONMA ShowEffect = 1;
}
public enum OBMMNBBOFMH
{
	// Fields
	public const OBMMNBBOFMH Default = 0;
	public const OBMMNBBOFMH Gallary = 1;
	public const OBMMNBBOFMH Mixin = 2;
}
public enum EHMDOCFNGKM
{
	// Fields
	public const EHMDOCFNGKM FollowPet = 10;
	public const EHMDOCFNGKM ThemePlay = 50;
	public const EHMDOCFNGKM QuestEvent = 80;
	public const EHMDOCFNGKM ActivityEvent = 90;
	public const EHMDOCFNGKM QuestBlank = 100;
}
public enum NMMFHLJENCF
{
	// Fields
	public const NMMFHLJENCF OneByOne = 0;
	public const NMMFHLJENCF FirstFinishDelete = 1;
	public const NMMFHLJENCF AllFinishDelete = 2;
}
public enum KPPKDNCNOGO
{
	// Fields
	public const KPPKDNCNOGO HPMaxPercent = 0;
	public const KPPKDNCNOGO HPCurPercent = 1;
	public const KPPKDNCNOGO DamageConstant = 2;
}
public enum LHAODMJKCAL
{
	// Fields
	public const LHAODMJKCAL HPMaxPercent = 0;
}
public enum LELDCDMIGLG
{
	// Fields
	public const LELDCDMIGLG Entity = 0;
	public const LELDCDMIGLG LevelPlay = 1;
	public const LELDCDMIGLG Num = 2;
}
public enum GCHEAJMPDND
{
	// Fields
	public const GCHEAJMPDND Up = 0;
	public const GCHEAJMPDND Down = 1;
	public const GCHEAJMPDND Left = 2;
	public const GCHEAJMPDND Right = 3;
	public const GCHEAJMPDND Front = 4;
	public const GCHEAJMPDND Back = 5;
}
public enum PHCIBLNJAKH
{
	// Fields
	public const PHCIBLNJAKH Climable = 0;
	public const PHCIBLNJAKH Airwall = 1;
	public const PHCIBLNJAKH AirwallNS = 2;
	public const PHCIBLNJAKH AirwallPTNS = 3;
}
public enum OICFBNAPDJD
{
	// Fields
	public const OICFBNAPDJD None = 0;
	public const OICFBNAPDJD OpenPage = 1;
	public const OICFBNAPDJD ClosePage = 2;
	public const OICFBNAPDJD v3_0_RobotControl_ButtonDown = 3;
	public const OICFBNAPDJD v3_1_RobotControl_FireBullet = 4;
	public const OICFBNAPDJD FireBullet_FromCamera = 5;
}
public enum EPKFFOBICLO
{
	// Fields
	public const EPKFFOBICLO Avatar = 0;
	public const EPKFFOBICLO Gadget = 1;
}
public enum LEKIHIKMIHN
{
	// Fields
	public const LEKIHIKMIHN Normal = 0;
	public const LEKIHIKMIHN Normal_Reverse = 1;
	public const LEKIHIKMIHN Stamina = 2;
	public const LEKIHIKMIHN Line = 3;
	public const LEKIHIKMIHN All = 4;
}
public enum KPALKNKPMDD
{
	// Fields
	public const KPALKNKPMDD Equal = 0;
	public const KPALKNKPMDD Greater = 1;
	public const KPALKNKPMDD Less = 2;
}
public enum MFPFGOFBBGF
{
	// Fields
	public const MFPFGOFBBGF Idle = 0;
	public const MFPFGOFBBGF ToExplode = 1;
	public const MFPFGOFBBGF Falling = 2;
	public const MFPFGOFBBGF Cleared = 3;
}
public enum KFCKOLFFEIB
{
	// Fields
	public const KFCKOLFFEIB None = 0;
	public const KFCKOLFFEIB Attack = 1;
	public const KFCKOLFFEIB Explode = 2;
	public const KFCKOLFFEIB Cleared = 3;
}
public enum FBMFCDGNLDD
{
	// Fields
	public const FBMFCDGNLDD AllEnter = 0;
	public const FBMFCDGNLDD AllInScope = 1;
	public const FBMFCDGNLDD OneInScope = 2;
}
public enum INEDHLKIMDE
{
	// Fields
	public const INEDHLKIMDE ElfView = 1;
}
public enum FFBPDBMPDJH
{
	// Fields
	public const FFBPDBMPDJH Default = 0;
	public const FFBPDBMPDJH Mixin = 1;
	public const FFBPDBMPDJH Count = 2;
}
public enum JMNIJGJKCLA
{
	// Fields
	public const JMNIJGJKCLA None = 0;
	public const JMNIJGJKCLA InteePanel = 1;
	public const JMNIJGJKCLA Count = 2;
}
public enum DMGOCGJNKGG
{
	// Fields
	public const DMGOCGJNKGG Fungus = 0;
	public const DMGOCGJNKGG Tower = 1;
}
public enum BMOLEDFMFFM
{
	// Fields
	public const BMOLEDFMFFM DehyaDungeon = 0;
}
public enum EJPDBJHLHOD
{
	// Fields
	public const EJPDBJHLHOD Gallery = 0;
}
public enum JDJFJFFHKNG
{
	// Fields
	public const JDJFJFFHKNG Owner = 0;
	public const JDJFJFFHKNG Level = 1;
}
public enum KKNGBFMFBMC
{
	// Fields
	public const KKNGBFMFBMC Refresh = 0;
	public const KKNGBFMFBMC Unique = 1;
	public const KKNGBFMFBMC Prolong = 2;
	public const KKNGBFMFBMC RefreshAndAddDurability = 3;
	public const KKNGBFMFBMC Multiple = 4;
	public const KKNGBFMFBMC MultipleRefresh = 5;
	public const KKNGBFMFBMC MultipleRefreshNoRemove = 6;
	public const KKNGBFMFBMC MultipleAllRefresh = 7;
	public const KKNGBFMFBMC GlobalUnique = 8;
	public const KKNGBFMFBMC Overlap = 9;
	public const KKNGBFMFBMC RefreshUniqueDurability = 10;
	public const KKNGBFMFBMC OverlapRefreshDuration = 11;
}
public enum FCFCEFPBBKO
{
	// Fields
	public const FCFCEFPBBKO Greater = 0;
	public const FCFCEFPBBKO Smaller = 1;
}
public enum HHIDJEHGJMI.BDDKMEGMBMH
{
	// Fields
	public const HHIDJEHGJMI.BDDKMEGMBMH NormallySynced = 0;
	public const HHIDJEHGJMI.BDDKMEGMBMH MuteRemoteAuthorityOnly = 1;
}
public enum ODFJEHAHHAA
{
	// Fields
	public const ODFJEHAHHAA Equal = 0;
	public const ODFJEHAHHAA MoreThan = 1;
	public const ODFJEHAHHAA LessAndEqual = 2;
	public const ODFJEHAHHAA Between = 3;
	public const ODFJEHAHHAA MoreThanAndEqual = 4;
	public const ODFJEHAHHAA NoneOrEqual = 5;
}
public enum APIELDGHPCK
{
	// Fields
	public const APIELDGHPCK Normal = 0;
	public const APIELDGHPCK Burning = 1;
	public const APIELDGHPCK Burned = 2;
	public const APIELDGHPCK Cut = 3;
	public const APIELDGHPCK Frozen = 4;
	public const APIELDGHPCK Melt = 5;
}
public enum LDAEMFPJPPI
{
	// Fields
	public const LDAEMFPJPPI Invalid = 0;
	public const LDAEMFPJPPI Grass = 1;
	public const LDAEMFPJPPI Dirt = 2;
	public const LDAEMFPJPPI Rock = 3;
	public const LDAEMFPJPPI Snow = 4;
	public const LDAEMFPJPPI Water = 5;
	public const LDAEMFPJPPI Tile = 6;
	public const LDAEMFPJPPI Sand = 7;
	public const LDAEMFPJPPI Wood = 8;
	public const LDAEMFPJPPI Iron = 9;
	public const LDAEMFPJPPI Tree = 10;
	public const LDAEMFPJPPI Ice = 11;
	public const LDAEMFPJPPI Marble = 12;
	public const LDAEMFPJPPI Carpet = 13;
	public const LDAEMFPJPPI WoodLog = 14;
	public const LDAEMFPJPPI Cloud = 15;
	public const LDAEMFPJPPI Coin = 16;
	public const LDAEMFPJPPI SnowRock = 17;
	public const LDAEMFPJPPI ElectricWater = 18;
	public const LDAEMFPJPPI Sakura = 19;
	public const LDAEMFPJPPI BlackMud = 20;
	public const LDAEMFPJPPI TransparentBrick = 21;
	public const LDAEMFPJPPI Desert = 22;
}
public enum FJDBFCHJAJH
{
	// Fields
	public const FJDBFCHJAJH XZ = 0;
	public const FJDBFCHJAJH Y = 1;
	public const FJDBFCHJAJH XYZ = 2;
}
public enum AKNNADEIFIK
{
	// Fields
	public const AKNNADEIFIK GroundOnly = 0;
	public const AKNNADEIFIK WaterOnly = 1;
	public const AKNNADEIFIK Both = 2;
}
public enum KOKABLKOJCD
{
	// Fields
	public const KOKABLKOJCD HPRatio = 0;
}
public enum IAJAOIIJDKB
{
	// Fields
	public const IAJAOIIJDKB EliteShield = 0;
	public const IAJAOIIJDKB ElementShield = 1;
	public const IAJAOIIJDKB GlobalShield = 2;
	public const IAJAOIIJDKB All = 3;
}
public enum GINFJJKMELH
{
	// Fields
	public const GINFJJKMELH City = 0;
	public const GINFJJKMELH FirstArea = 1;
	public const GINFJJKMELH SecondArea = 2;
}
public enum MLIFLKFDFOG
{
	// Fields
	public const MLIFLKFDFOG None = 0;
	public const MLIFLKFDFOG SpecialGathering = 1;
}
public enum IHCMNBIKEAK
{
	// Fields
	public const IHCMNBIKEAK And = 0;
	public const IHCMNBIKEAK Or = 1;
	public const IHCMNBIKEAK Not = 2;
}
public enum DHBEJEHKOKJ
{
	// Fields
	public const DHBEJEHKOKJ Inside = 0;
	public const DHBEJEHKOKJ Outside = 1;
}
public enum EHGBKPODPFC
{
	// Fields
	public const EHGBKPODPFC TriggerAntiFire = 0;
	public const EHGBKPODPFC TriggerBurning = 1;
	public const EHGBKPODPFC TriggerExplode = 2;
	public const EHGBKPODPFC TriggerSuperconductor = 3;
	public const EHGBKPODPFC TriggerMelt = 4;
	public const EHGBKPODPFC TriggerSteam = 5;
	public const EHGBKPODPFC TriggerFreeze = 6;
	public const EHGBKPODPFC TriggerFrozen = 7;
	public const EHGBKPODPFC TriggerElectricAdd = 8;
	public const EHGBKPODPFC TriggerVehicleMuteIce = 9;
	public const EHGBKPODPFC COUNT = 10;
}
public enum LFADJNPIPKC
{
	// Fields
	public const LFADJNPIPKC None = 0;
	public const LFADJNPIPKC WorldTypeBegin = 1;
	public const LFADJNPIPKC WorldGrass = 2;
	public const LFADJNPIPKC WorldWater = 3;
	public const LFADJNPIPKC WorldElectricWater = 4;
	public const LFADJNPIPKC WorldTypeEnd = 5;
	public const LFADJNPIPKC COUNT = 6;
}
public enum BOKMHFKOHMB
{
	// Fields
	public const BOKMHFKOHMB ACT_INT = 0;
	public const BOKMHFKOHMB ACT_UINT = 1;
	public const BOKMHFKOHMB ACT_BOOLEAN = 2;
	public const BOKMHFKOHMB ACT_FLOAT = 3;
	public const BOKMHFKOHMB ACT_STRING = 4;
	public const BOKMHFKOHMB ACT_VECTOR3 = 5;
}
public enum MHMPFMOJLDO
{
	// Fields
	public const MHMPFMOJLDO ACT_ADD = 0;
	public const MHMPFMOJLDO ACT_SUB = 1;
	public const MHMPFMOJLDO ACT_MUL = 2;
	public const MHMPFMOJLDO ACT_DIV = 3;
	public const MHMPFMOJLDO ACT_MOD = 4;
}
public enum MNHKBKJAECP
{
	// Fields
	public const MNHKBKJAECP ACT_EQUAL = 1;
	public const MNHKBKJAECP ACT_NOT_EQUAL = 2;
	public const MNHKBKJAECP ACT_LESS = 3;
	public const MNHKBKJAECP ACT_LESS_EQUAL = 4;
	public const MNHKBKJAECP ACT_GREATER = 5;
	public const MNHKBKJAECP ACT_GREATER_EQUAL = 6;
}
public enum AFINGCCMLFP
{
	// Fields
	public const AFINGCCMLFP ACT_BT_INVALID = 0;
	public const AFINGCCMLFP ACT_BT_SUCCESS = 1;
	public const AFINGCCMLFP ACT_BT_FAILURE = 2;
	public const AFINGCCMLFP ACT_BT_RUNNING = 3;
}
public enum FLEDADBCDCG
{
	// Fields
	public const FLEDADBCDCG ACT_PRECOND_PHASE_ENTER = 0;
	public const FLEDADBCDCG ACT_PRECOND_PHASE_UPDATE = 1;
	public const FLEDADBCDCG ACT_PRECOND_PHASE_BOTH = 2;
}
public enum LBKFOHNFGDC
{
	// Fields
	public const LBKFOHNFGDC ACT_EFFECTOR_PHASE_SUCCESS = 0;
	public const LBKFOHNFGDC ACT_EFFECTOR_PHASE_FAILURE = 1;
	public const LBKFOHNFGDC ACT_EFFECTOR_PHASE_BOTH = 2;
}
public enum FHLPFHKBHPL
{
	// Fields
	public const FHLPFHKBHPL ACT_FAIL_ON_ONE = 0;
	public const FHLPFHKBHPL ACT_FAIL_ON_ALL = 1;
}
public enum ODADKPPEHED
{
	// Fields
	public const ODADKPPEHED ACT_SUCCEED_ON_ONE = 0;
	public const ODADKPPEHED ACT_SUCCEED_ON_ALL = 1;
}
public enum PNDBAOPAIPI
{
	// Fields
	public const PNDBAOPAIPI ACT_EXIT_NONE = 0;
	public const PNDBAOPAIPI ACT_EXIT_ABORT_RUNNING_SIBLINGS = 1;
}
public enum FPKBBJHOHMG
{
	// Fields
	public const FPKBBJHOHMG ACT_CHILD_FINISH_ONCE = 0;
	public const FPKBBJHOHMG ACT_CHILD_FINISH_LOOP = 1;
}
public enum OCNFFPNLGAG
{
	// Fields
	public const OCNFFPNLGAG ACT_TM_TRANSFER = 0;
	public const OCNFFPNLGAG ACT_TM_RETURN = 1;
}
public enum OEFFDKEDNFM
{
	// Fields
	public const OEFFDKEDNFM ACT_RESET_ON_INVALID = 0;
	public const OEFFDKEDNFM ACT_RESET_ON_TREE_ENTER = 1;
	public const OEFFDKEDNFM ACT_RESET_ON_TASK_ENTER = 2;
	public const OEFFDKEDNFM ACT_RESET_ON_BOTH = 3;
}
public enum IGFIPEHJOKL
{
	// Fields
	public const IGFIPEHJOKL STORYBOARD_CATEGORY_TEST = 0;
	public const IGFIPEHJOKL STORYBOARD_CATEGORY_QUEST = 1;
}
public enum NBBNAACDOLP
{
	// Fields
	public const NBBNAACDOLP STORY_TASK_WALK = 1;
	public const NBBNAACDOLP STORY_TASK_RUN = 2;
	public const NBBNAACDOLP STORY_TASK_FLOATING = 3;
}
public enum ACCNMHBALGK
{
	// Fields
	public const ACCNMHBALGK Invalid = 0;
	public const ACCNMHBALGK Circle = 1;
	public const ACCNMHBALGK Exclamation = 2;
}
public enum DEIIDBAAMLC
{
	// Fields
	public const DEIIDBAAMLC THREAT = 0;
	public const DEIIDBAAMLC MASTER = 1;
	public const DEIIDBAAMLC SERVANT = 2;
	public const DEIIDBAAMLC OWNER = 3;
	public const DEIIDBAAMLC CHILDREN = 4;
	public const DEIIDBAAMLC BUDDY = 5;
	public const DEIIDBAAMLC NERVE_TARGET = 6;
	public const DEIIDBAAMLC AWAKE_TARGET = 7;
	public const DEIIDBAAMLC COMMAND = 8;
	public const DEIIDBAAMLC POINT = 9;
}
public enum KHPIOLNBANJ
{
	// Fields
	public const KHPIOLNBANJ THREAT = 0;
	public const KHPIOLNBANJ MASTER = 1;
	public const KHPIOLNBANJ SERVANT = 2;
	public const KHPIOLNBANJ OWNER = 3;
	public const KHPIOLNBANJ CHILDREN = 4;
	public const KHPIOLNBANJ BUDDY = 5;
	public const KHPIOLNBANJ NERVE_TARGET = 6;
	public const KHPIOLNBANJ AWAKE_TARGET = 7;
	public const KHPIOLNBANJ SELF = 8;
	public const KHPIOLNBANJ TARGET = 9;
	public const KHPIOLNBANJ AI_SKILL_TARGET_COUNT = 10;
}
public enum BIPPFGHANNL
{
	// Fields
	public const BIPPFGHANNL HIT = 0;
	public const BIPPFGHANNL FEAR = 1;
	public const BIPPFGHANNL HIT_BUDDY = 2;
	public const BIPPFGHANNL HIDING = 3;
	public const BIPPFGHANNL ASLEEP = 4;
	public const BIPPFGHANNL AWAKE = 5;
	public const BIPPFGHANNL WEATHER_BAD = 6;
	public const BIPPFGHANNL WEATHER_CLEARSKY = 7;
	public const BIPPFGHANNL WEATHER_CLOUDY = 8;
	public const BIPPFGHANNL WEATHER_FOGGY = 9;
	public const BIPPFGHANNL WEATHER_RAIN = 10;
	public const BIPPFGHANNL WEATHER_SNOW = 11;
	public const BIPPFGHANNL WEATHER_STORM = 12;
	public const BIPPFGHANNL WEATHER_DESERT = 13;
	public const BIPPFGHANNL SURROUND = 14;
	public const BIPPFGHANNL HUNGRY = 15;
	public const BIPPFGHANNL BLOCK_AVATAR_LANDING = 16;
	public const BIPPFGHANNL PREACH = 17;
	public const BIPPFGHANNL SUPERVISE = 18;
	public const BIPPFGHANNL TRAIN = 19;
	public const BIPPFGHANNL DANCE = 20;
	public const BIPPFGHANNL MAKE = 21;
	public const BIPPFGHANNL BUILD = 22;
	public const BIPPFGHANNL SEARCH = 23;
	public const BIPPFGHANNL SIT = 24;
	public const BIPPFGHANNL THREAT = 25;
	public const BIPPFGHANNL INVALID = 26;
}
public enum LPEDHLNPPBN
{
	// Fields
	public const LPEDHLNPPBN Land = 0;
	public const LPEDHLNPPBN Amphibious = 1;
	public const LPEDHLNPPBN Water = 2;
	public const LPEDHLNPPBN AirLandAmphibious = 3;
	public const LPEDHLNPPBN Air = 4;
}
public enum HPOOGPCMNDM
{
	// Fields
	public const HPOOGPCMNDM Straight = 0;
	public const HPOOGPCMNDM Snakelike = 1;
}
public enum GLPLGEKJJAC
{
	// Fields
	public const GLPLGEKJJAC General = 0;
	public const GLPLGEKJJAC Cicin = 1;
	public const GLPLGEKJJAC Animal = 2;
	public const GLPLGEKJJAC Dahaka = 3;
	public const GLPLGEKJJAC Animal_Homeworld = 4;
	public const GLPLGEKJJAC Animal_Fishable = 5;
	public const GLPLGEKJJAC Animal_Ray = 6;
	public const GLPLGEKJJAC PlayerAuto = 100;
}
public enum PKEAKMGNIAO
{
	// Fields
	public const PKEAKMGNIAO Default = 0;
	public const PKEAKMGNIAO P1 = 1;
	public const PKEAKMGNIAO P2 = 2;
	public const PKEAKMGNIAO P3 = 3;
	public const PKEAKMGNIAO P4 = 4;
	public const PKEAKMGNIAO P5 = 5;
}
public enum FLIJDGJHGGC
{
	// Fields
	public const FLIJDGJHGGC UNCLASSIFIED = 0;
	public const FLIJDGJHGGC FIGHTER = 1;
	public const FLIJDGJHGGC MAGE = 2;
	public const FLIJDGJHGGC SUP = 3;
	public const FLIJDGJHGGC COMBATROLE_COUNT = 4;
}
public enum KJPKBPCNOFB
{
	// Fields
	public const KJPKBPCNOFB Free = 0;
	public const KJPKBPCNOFB Combat = 1;
	public const KJPKBPCNOFB OnAware = 2;
	public const KJPKBPCNOFB OnAlert = 3;
	public const KJPKBPCNOFB OnNerve = 4;
	public const KJPKBPCNOFB ActionPoint = 5;
	public const KJPKBPCNOFB CombatBuddy = 6;
}
public enum IAEEEFNGEPE
{
	// Fields
	public const IAEEEFNGEPE Unclassified = 0;
	public const IAEEEFNGEPE MeleeAttack = 1;
	public const IAEEEFNGEPE RangedAttack = 2;
}
public enum CLECMMKOEJH
{
	// Fields
	public const CLECMMKOEJH None = 0;
	public const CLECMMKOEJH Monitor = 1;
	public const CLECMMKOEJH Responser = 2;
	public const CLECMMKOEJH TriggerResponser = 3;
}
public enum PEHKNPNNPPF
{
	// Fields
	public const PEHKNPNNPPF RangeDefault = 0;
	public const PEHKNPNNPPF RangeXZ_Y = 1;
}
public enum EIHJCHPIKCH
{
	// Fields
	public const EIHJCHPIKCH Best = 0;
	public const EIHJCHPIKCH Npc = 1;
	public const EIHJCHPIKCH Monster = 2;
	public const EIHJCHPIKCH MinorAnimal = 3;
	public const EIHJCHPIKCH MonsterVista = 4;
	public const EIHJCHPIKCH Count = 5;
}
public enum IKLDEJHDOEF
{
	// Fields
	public const IKLDEJHDOEF None = 0;
	public const IKLDEJHDOEF Bartender = 1;
	public const IKLDEJHDOEF Count = 2;
}
public enum DIHAAPFCPHP
{
	// Fields
	public const DIHAAPFCPHP None = 0;
	public const DIHAAPFCPHP UseEntity = 1;
	public const DIHAAPFCPHP UseTarget = 2;
}
public enum PHNMHEFEABG
{
	// Fields
	public const PHNMHEFEABG OnlyHitBox = 0;
	public const PHNMHEFEABG OnlyHitScene = 1;
	public const PHNMHEFEABG OnlyHitMassiveEntity = 2;
	public const PHNMHEFEABG Both = 3;
}
public enum IADMNNFKPLK
{
	// Fields
	public const IADMNNFKPLK CenterToSide = 0;
	public const IADMNNFKPLK Clockwise = 1;
	public const IADMNNFKPLK Counterclockwise = 2;
}
public enum LJJOGFGIFLD
{
	// Fields
	public const LJJOGFGIFLD None = 0;
	public const LJJOGFGIFLD CenterToSide = 1;
}
public enum HIABKNJKPFK
{
	// Fields
	public const HIABKNJKPFK AllEntities = 0;
	public const HIABKNJKPFK OnlyWater = 1;
	public const HIABKNJKPFK OnlyGrass = 2;
	public const HIABKNJKPFK OnlyGrassAndWater = 3;
	public const HIABKNJKPFK IgnoreSceneProp = 4;
}
public enum NCFJEBBHAEL
{
	// Fields
	public const NCFJEBBHAEL SingleSource = 0;
	public const NCFJEBBHAEL MultiSources = 1;
	public const NCFJEBBHAEL MultiDirections = 2;
}
public enum HMHCMFPGNKJ
{
	// Fields
	public const HMHCMFPGNKJ LINEAR = 0;
	public const HMHCMFPGNKJ QUADRATIC = 1;
	public const HMHCMFPGNKJ CUBIC = 2;
}
public enum EMLIPOGFHAM
{
	// Fields
	public const EMLIPOGFHAM AUDIO_LOGIC_TYPE_OR = 0;
	public const EMLIPOGFHAM AUDIO_LOGIC_TYPE_AND = 1;
	public const EMLIPOGFHAM AUDIO_LOGIC_TYPE_OR_NOT = 2;
	public const EMLIPOGFHAM AUDIO_LOGIC_TYPE_AND_NOT = 3;
}
public enum PKKFHPJCHJJ
{
	// Fields
	public const PKKFHPJCHJJ None = 0;
	public const PKKFHPJCHJJ Linear = 1;
	public const PKKFHPJCHJJ Angular = 2;
	public const PKKFHPJCHJJ Both = 3;
}
public enum FMDBIDIBCIH
{
	// Fields
	public const FMDBIDIBCIH MultiSources = 0;
	public const FMDBIDIBCIH MultiDirections = 1;
}
public enum FFEOEBFPJMM
{
	// Fields
	public const FFEOEBFPJMM LISTENER_CUSTOM_TYPE_NONE = 0;
	public const FFEOEBFPJMM LISTENER_CUSTOM_TYPE_FUNGUS_V2 = 1;
}
public enum BKCBLGGFHME
{
	// Fields
	public const BKCBLGGFHME Global = 0;
	public const BKCBLGGFHME Local = 1;
}
public enum EKFDPJDPAPA
{
	// Fields
	public const EKFDPJDPAPA Caster = 0;
	public const EKFDPJDPAPA Receiver = 1;
	public const EKFDPJDPAPA FreeAgent = 2;
	public const EKFDPJDPAPA Effect = 3;
}
public enum NKNCKNJHALL
{
	// Fields
	public const NKNCKNJHALL First = 0;
	public const NKNCKNJHALL Third = 1;
	public const NKNCKNJHALL Npc = 2;
	public const NKNCKNJHALL Card = 3;
}
public enum ACCFCLIBFEE
{
	// Fields
	public const ACCFCLIBFEE TwoDimensional = 0;
	public const ACCFCLIBFEE ThreeDimensional = 1;
	public const ACCFCLIBFEE TutorialSpecial = 2;
	public const ACCFCLIBFEE ThreeDimensionalPassby = 3;
	public const ACCFCLIBFEE InnerMonologue = 4;
}
public enum CBKDBIHLKFH
{
	// Fields
	public const CBKDBIHLKFH Enter = 1;
	public const CBKDBIHLKFH EnterAndStay = 3;
}
public enum IBIIJOKAGIB
{
	// Fields
	public const IBIIJOKAGIB KeepRotX = 0;
	public const IBIIJOKAGIB KeepRotXy = 1;
}
public enum JFDMDHOPGHN
{
	// Fields
	public const JFDMDHOPGHN FixedPoint = 0;
	public const JFDMDHOPGHN MidPoint = 1;
}
public enum NOGOMKFDJNA
{
	// Fields
	public const NOGOMKFDJNA Normal = 0;
	public const NOGOMKFDJNA Cold = 1;
	public const NOGOMKFDJNA Hot = 2;
	public const NOGOMKFDJNA ColdMonster = 3;
	public const NOGOMKFDJNA HotMonster = 4;
	public const NOGOMKFDJNA SeaMist = 5;
	public const NOGOMKFDJNA HeroCourse = 6;
	public const NOGOMKFDJNA SeaMistSurrounding = 7;
	public const NOGOMKFDJNA TatariRegion = 8;
	public const NOGOMKFDJNA TransClimate = 9;
	public const NOGOMKFDJNA SeiraiStorm = 10;
	public const NOGOMKFDJNA TsurumiMist = 11;
	public const NOGOMKFDJNA TsurumiThunder = 12;
	public const NOGOMKFDJNA TsurumiRegionalMist = 13;
	public const NOGOMKFDJNA Count = 14;
}
public enum NFDNLGDEBEC
{
	// Fields
	public const NFDNLGDEBEC TextCenter = 1;
	public const NFDNLGDEBEC TextLeft = 2;
	public const NFDNLGDEBEC TextRight = 3;
	public const NFDNLGDEBEC SingleDialog = 4;
	public const NFDNLGDEBEC MultiDialog = 5;
	public const NFDNLGDEBEC SingleDialogGender = 6;
	public const NFDNLGDEBEC MultiDialogGender = 7;
}
public enum ABBJOBAFONG
{
	// Fields
	public const ABBJOBAFONG ChapterTitle = 1;
	public const ABBJOBAFONG ChapterNum = 2;
	public const ABBJOBAFONG MainQuestTitle = 3;
	public const ABBJOBAFONG MainQuestDesp = 4;
	public const ABBJOBAFONG SubQuestTitle = 5;
	public const ABBJOBAFONG IPCustomizedWhole = 6;
	public const ABBJOBAFONG IPCustomizedPartial = 7;
	public const ABBJOBAFONG DialogNormal = 8;
	public const ABBJOBAFONG DialogBranch = 9;
	public const ABBJOBAFONG SpeakerKnown = 10;
	public const ABBJOBAFONG SpeakerUnknown = 11;
	public const ABBJOBAFONG SpeakerPlayer = 12;
	public const ABBJOBAFONG Aside = 13;
	public const ABBJOBAFONG Narratage = 14;
}
public enum NNCEPBPFNJF
{
	// Fields
	public const NNCEPBPFNJF Dialog = 0;
	public const NNCEPBPFNJF Reminder = 1;
}
public enum IFGFNLGDELG
{
	// Fields
	public const IFGFNLGDELG None = 0;
	public const IFGFNLGDELG TalkFinished = 1;
	public const IFGFNLGDELG TalkNotFinished = 2;
}
public enum JKCHCODPBCP
{
	// Fields
	public const JKCHCODPBCP Default = 0;
	public const JKCHCODPBCP Slash = 1;
	public const JKCHCODPBCP Blunt = 2;
	public const JKCHCODPBCP Pierce = 3;
	public const JKCHCODPBCP Spear = 4;
	public const JKCHCODPBCP None = 5;
}
public enum ECJOBFJDMFD
{
	// Fields
	public const ECJOBFJDMFD None = 0;
	public const ECJOBFJDMFD Melee = 1;
	public const ECJOBFJDMFD Range = 2;
	public const ECJOBFJDMFD Default = 3;
}
public enum COMELHADKIN
{
	// Fields
	public const COMELHADKIN Mute = 0;
	public const COMELHADKIN Shake = 1;
	public const COMELHADKIN Light = 2;
	public const COMELHADKIN Heavy = 3;
	public const COMELHADKIN Air = 4;
}
public enum KKEKIBABDGD
{
	// Fields
	public const KKEKIBABDGD ByAttacker = 0;
	public const KKEKIBABDGD ByHitDirection = 1;
	public const KKEKIBABDGD ByTangent = 2;
	public const KKEKIBABDGD ByOriginOwner = 3;
	public const KKEKIBABDGD ByHitDirectionInverse = 4;
	public const KKEKIBABDGD ByAttackerForward = 5;
	public const KKEKIBABDGD ByAttackerInverse = 6;
}
public enum IJJEEKICJIB
{
	// Fields
	public const IJJEEKICJIB None = 0;
	public const IJJEEKICJIB Owner = 1;
	public const IJJEEKICJIB OriginOwner = 2;
}
public enum OJHDNDAKKNM
{
	// Fields
	public const OJHDNDAKKNM OriginOwner = 0;
	public const OJHDNDAKKNM Owner = 1;
	public const OJHDNDAKKNM None = 2;
}
public enum OOBDHEHMIAK
{
	// Fields
	public const OOBDHEHMIAK HP = 0;
	public const OOBDHEHMIAK ATTACK = 1;
	public const OOBDHEHMIAK DEFENSE = 2;
	public const OOBDHEHMIAK WEIGHT = 3;
	public const OOBDHEHMIAK ENDURE = 4;
	public const OOBDHEHMIAK LEVEL = 5;
	public const OOBDHEHMIAK ELEMENTADDHURT = 6;
	public const OOBDHEHMIAK DEFENSEIGNORE = 7;
}
public enum LBPCCDCKCOK
{
	// Fields
	public const LBPCCDCKCOK None = 0;
	public const LBPCCDCKCOK DungeonLevel = 1;
	public const LBPCCDCKCOK WorldLevel = 2;
	public const LBPCCDCKCOK Creator = 3;
}
public enum KMDBOJICNJN
{
	// Fields
	public const KMDBOJICNJN None = 0;
	public const KMDBOJICNJN MovieCanvas = 1;
}
public enum IENDJMMJAPF
{
	// Fields
	public const IENDJMMJAPF Volume = 0;
	public const IENDJMMJAPF Edge = 1;
	public const IENDJMMJAPF Shell = 2;
}
public enum FLLMBMCPJFL
{
	// Fields
	public const FLLMBMCPJFL Normal = 0;
	public const FLLMBMCPJFL Character = 1;
}
public enum LBMLCOJJMHB
{
	// Fields
	public const LBMLCOJJMHB Normal = 0;
	public const LBMLCOJJMHB Big = 1;
	public const LBMLCOJJMHB Grand = 2;
	public const LBMLCOJJMHB Small = 3;
}
public enum LAILMAHHJEK
{
	// Fields
	public const LAILMAHHJEK General = 0;
	public const LAILMAHHJEK Miracle = 1;
	public const LAILMAHHJEK Cook = 2;
	public const LAILMAHHJEK BrickBreaker = 3;
	public const LAILMAHHJEK LanV3BoatGame = 4;
	public const LAILMAHHJEK AkaFesArchaeology = 5;
	public const LAILMAHHJEK LocalAvatarSlideIcon = 6;
}
public enum KKLNKBNPLEM
{
	// Fields
	public const KKLNKBNPLEM Ability = 0;
	public const KKLNKBNPLEM AI = 1;
	public const KKLNKBNPLEM AvatarAI = 2;
	public const KKLNKBNPLEM AvatarAINoCombat = 3;
	public const KKLNKBNPLEM Combat = 4;
	public const KKLNKBNPLEM GadgetCombat = 5;
	public const KKLNKBNPLEM BulletCombat = 6;
	public const KKLNKBNPLEM GadgetCollidedCombat = 7;
	public const KKLNKBNPLEM ScenePropCombat = 8;
	public const KKLNKBNPLEM SceneGrassWaterCombat = 9;
	public const KKLNKBNPLEM CharacterCombat = 10;
	public const KKLNKBNPLEM AvatarCombat = 11;
	public const KKLNKBNPLEM MonsterCombat = 12;
	public const KKLNKBNPLEM HasEquip = 13;
	public const KKLNKBNPLEM HasAvatarEquip = 14;
	public const KKLNKBNPLEM HasMonsterEquip = 15;
	public const KKLNKBNPLEM Level = 16;
	public const KKLNKBNPLEM Paimon = 17;
	public const KKLNKBNPLEM SceneProp = 18;
	public const KKLNKBNPLEM Team = 19;
	public const KKLNKBNPLEM HasEmotion = 20;
	public const KKLNKBNPLEM HasBillboard = 21;
	public const KKLNKBNPLEM HasCollision = 22;
	public const KKLNKBNPLEM HasEmojiBubble = 23;
	public const KKLNKBNPLEM HasFaceAnimation = 24;
	public const KKLNKBNPLEM HasMove = 25;
	public const KKLNKBNPLEM HasBulletMove = 26;
	public const KKLNKBNPLEM HasHumanoidMove = 27;
	public const KKLNKBNPLEM HasNonHumanoidMove = 28;
	public const KKLNKBNPLEM HasAnimatorMove = 29;
	public const KKLNKBNPLEM HasNPCMove = 30;
	public const KKLNKBNPLEM HasSimpleMove = 31;
	public const KKLNKBNPLEM HasRigidBodyMove = 32;
}
public enum FKHHMDJOEBG
{
	// Fields
	public const FKHHMDJOEBG PLAY_MODE_ALL = 0;
	public const FKHHMDJOEBG PLAY_MODE_SINGLE = 1;
	public const FKHHMDJOEBG PLAY_MODE_MULTIPLE = 2;
	public const FKHHMDJOEBG PLAY_MODE_HOST = 3;
	public const FKHHMDJOEBG PLAY_MODE_GUEST = 4;
}
public enum BLBEPFKPGOL
{
	// Fields
	public const BLBEPFKPGOL LOGIC_NONE = 0;
	public const BLBEPFKPGOL LOGIC_AND = 1;
	public const BLBEPFKPGOL LOGIC_OR = 2;
	public const BLBEPFKPGOL LOGIC_NOT = 3;
	public const BLBEPFKPGOL LOGIC_A_AND_ETCOR = 4;
	public const BLBEPFKPGOL LOGIC_A_AND_B_AND_ETCOR = 5;
	public const BLBEPFKPGOL LOGIC_A_OR_ETCAND = 6;
	public const BLBEPFKPGOL LOGIC_A_OR_B_OR_ETCAND = 7;
	public const BLBEPFKPGOL LOGIC_A_AND_B_OR_ETCAND = 8;
}
public enum NFAPDLKEOAF
{
	// Fields
	public const NFAPDLKEOAF BAN_GROUP_INVALID = 0;
	public const NFAPDLKEOAF BAN_GROUP_COMMON = 1;
	public const NFAPDLKEOAF BAN_GROUP_TRANSPORT_ONLY = 2;
	public const NFAPDLKEOAF BAN_GROUP_TRANSPORT_MAP = 3;
	public const NFAPDLKEOAF BAN_GROUP_TRANSPOR_GOTO_SCENE = 4;
}
public enum EFDFOEIEABD
{
	// Fields
	public const EFDFOEIEABD BAN_INVALID = 0;
	public const EFDFOEIEABD BAN_TRANSPORT = 1;
	public const EFDFOEIEABD BAN_GOTO_SCENE = 2;
	public const EFDFOEIEABD BAN_NPC_INTERACTION = 3;
	public const EFDFOEIEABD BAN_GOTO_MULTIPLAYER = 4;
}
public enum OAEBPLCKOPG
{
	// Fields
	public const OAEBPLCKOPG Less = 0;
	public const OAEBPLCKOPG Equal = 1;
	public const OAEBPLCKOPG Greater = 2;
	public const OAEBPLCKOPG LessOrEqual = 3;
	public const OAEBPLCKOPG GreaterOrEqual = 4;
}
public enum CLOHKGEBFPI
{
	// Fields
	public const CLOHKGEBFPI NONE = 0;
	public const CLOHKGEBFPI AVATAR_MALE = 1;
	public const CLOHKGEBFPI AVATAR_LADY = 2;
	public const CLOHKGEBFPI AVATAR_BOY = 3;
	public const CLOHKGEBFPI AVATAR_GIRL = 4;
	public const CLOHKGEBFPI AVATAR_LOLI = 5;
	public const CLOHKGEBFPI AVATAR_PAIMON = 6;
	public const CLOHKGEBFPI NPC_MALE = 7;
	public const CLOHKGEBFPI NPC_FEMALE = 8;
	public const CLOHKGEBFPI NPC_MUSCLEMAN = 9;
	public const CLOHKGEBFPI NPC_ELDER = 10;
	public const CLOHKGEBFPI NPC_CHILD = 11;
	public const CLOHKGEBFPI Barbara = 12;
	public const CLOHKGEBFPI Bennett = 13;
	public const CLOHKGEBFPI Chongyun = 14;
	public const CLOHKGEBFPI Noel = 15;
	public const CLOHKGEBFPI Diona = 16;
	public const CLOHKGEBFPI Sayu = 17;
	public const CLOHKGEBFPI Tohma = 18;
	public const CLOHKGEBFPI Beidou = 19;
	public const CLOHKGEBFPI Gorou = 20;
	public const CLOHKGEBFPI Ningguang = 21;
	public const CLOHKGEBFPI Collei = 22;
}
public enum HHKAGCDKGJJ
{
	// Fields
	public const HHKAGCDKGJJ NPC_SPECIAL_NONE = 0;
	public const HHKAGCDKGJJ NPC_SPECIAL_ARANARA = 1;
}
public enum DMBMHEINDJC
{
	// Fields
	public const DMBMHEINDJC FEATURE_TAG_NONE = 0;
	public const DMBMHEINDJC FEATURE_TAG_AVATAR = 1;
	public const DMBMHEINDJC FEATURE_TAG_HUMAN = 2;
	public const DMBMHEINDJC FEATURE_TAG_ARANARA = 3;
	public const DMBMHEINDJC FEATURE_TAG_MONSTER = 4;
	public const DMBMHEINDJC FEATURE_TAG_ANIMAL = 5;
	public const DMBMHEINDJC FEATURE_TAG_NAHIDA_INTER = 6;
	public const DMBMHEINDJC FEATURE_TAG_PARI = 7;
}
public enum BCLLEBOIFOK
{
	// Fields
	public const BCLLEBOIFOK COMBAT_END_NONE = 0;
	public const BCLLEBOIFOK COMBAT_END_TOWER_HALF_LEVEL_END = 1;
	public const BCLLEBOIFOK COMBAT_END_TOWER_LEVEL_END = 2;
	public const BCLLEBOIFOK COMBAT_END_DUNGEON_SETTLE = 3;
	public const BCLLEBOIFOK COMBAT_END_CRYSTAL_LINK_HALF_LEVEL_END = 4;
	public const BCLLEBOIFOK COMBAT_END_TEAMCHAIN_ROOM_END = 5;
	public const BCLLEBOIFOK COMBAT_END_COUNT = 6;
}
public enum CIFICMJJDID
{
	// Fields
	public const CIFICMJJDID None = 0;
	public const CIFICMJJDID Corruption = 1;
}
public enum GDAKNDIMKJE
{
	// Fields
	public const GDAKNDIMKJE COOP_COND_NONE = 0;
	public const GDAKNDIMKJE COOP_COND_TEMPERAMENT_COMPARE = 1;
	public const GDAKNDIMKJE COOP_COND_CONFIDENCE_COMPARE = 2;
	public const GDAKNDIMKJE COOP_COND_ENDING_FINISH = 3;
	public const GDAKNDIMKJE COOP_COND_QUEST_FINISH = 4;
	public const GDAKNDIMKJE COOP_COND_ITEM_NUM_COMPARE = 5;
	public const GDAKNDIMKJE COOP_COND_PLAYER_LEVEL_COMPARE = 6;
	public const GDAKNDIMKJE COOP_COND_FETTER_COMPARE = 7;
	public const GDAKNDIMKJE COOP_COND_TEMP_VALUE_COMPARE = 8;
	public const GDAKNDIMKJE COOP_COND_QUEST_STATE_EQUAL = 9;
	public const GDAKNDIMKJE COOP_COND_QUEST_GLOBAL_VALUE_COMPARE = 10;
	public const GDAKNDIMKJE COOP_COND_INFERENCE_CONCLUSION_FINISH = 11;
}
public enum GEEIHCDHABO
{
	// Fields
	public const GEEIHCDHABO COOP_TEMPERAMENT_1 = 1;
	public const GEEIHCDHABO COOP_TEMPERAMENT_2 = 2;
	public const GEEIHCDHABO COOP_TEMPERAMENT_3 = 3;
	public const GEEIHCDHABO COOP_TEMPERAMENT_4 = 4;
}
public enum DPIJIGNOAOI
{
	// Fields
	public const DPIJIGNOAOI COOP_ACTION_NONE = 0;
	public const DPIJIGNOAOI COOP_ACTION_TEMPERAMENT_ADD = 1;
	public const DPIJIGNOAOI COOP_ACTION_TEMPERAMENT_MINUS = 2;
	public const DPIJIGNOAOI COOP_ACTION_CONFIDENCE_ADD = 3;
	public const DPIJIGNOAOI COOP_ACTION_CONFIDENCE_MINUS = 4;
	public const DPIJIGNOAOI COOP_ACTION_TEMP_VALUE_SET = 5;
	public const DPIJIGNOAOI COOP_ACTION_SELECT_TEMPERAMENT_SET = 6;
	public const DPIJIGNOAOI COOP_ACTION_TEMP_VALUE_ADD = 7;
	public const DPIJIGNOAOI COOP_ACTION_TEMP_VALUE_MINUS = 8;
}
public enum DBPKEJGLLGO
{
	// Fields
	public const DBPKEJGLLGO COOP_NODE_NONE = 0;
	public const DBPKEJGLLGO COOP_NODE_TALK = 1;
	public const DBPKEJGLLGO COOP_NODE_SELECT = 2;
	public const DBPKEJGLLGO COOP_NODE_COND = 3;
	public const DBPKEJGLLGO COOP_NODE_ACTION = 4;
	public const DBPKEJGLLGO COOP_NODE_END = 5;
}
public enum NOBJKGIOHID
{
	// Fields
	public const NOBJKGIOHID INCLUSIVE = 0;
	public const NOBJKGIOHID EXCLUSIVE = 1;
}
public enum KEHDHDMJGOD
{
	// Fields
	public const KEHDHDMJGOD INCLUSIVE = 0;
	public const KEHDHDMJGOD EXCLUSIVE = 1;
}
public enum EDJIONCBBDP
{
	// Fields
	public const EDJIONCBBDP Low = 0;
	public const EDJIONCBBDP Middle = 1;
	public const EDJIONCBBDP High = 2;
}
public enum FNJJLDLINMN
{
	// Fields
	public const FNJJLDLINMN VerticalCoordinate = 0;
	public const FNJJLDLINMN VerticalSurface = 1;
}
public enum DBPFJFCNAJD
{
	// Fields
	public const DBPFJFCNAJD Down = 0;
	public const DBPFJFCNAJD Back = 1;
}
public enum CutsceneType
{
	// Fields
	public const CutsceneType NONE = 0;
	public const CutsceneType TIME_LINE_ASSET = 1;
	public const CutsceneType TIME_LINE_PREFAB = 2;
	public const CutsceneType TIME_LINE_SCENE = 3;
	public const CutsceneType Other = 4;
}
public enum CutsceneInitPosType
{
	// Fields
	public const CutsceneInitPosType FREE = 0;
	public const CutsceneInitPosType RELATIVE_TO_LOCAL_AVATAR = 1;
	public const CutsceneInitPosType RELATIVE_TO_INTEE = 2;
	public const CutsceneInitPosType Other = 3;
	public const CutsceneInitPosType RELATIVE_TO_LOCAL_AVATAR_WITH_ROTATION = 4;
	public const CutsceneInitPosType RELATIVE_TO_ENTITY_WITH_ROTATION = 5;
}
public enum GAPAHHJFCJF
{
	// Fields
	public const GAPAHHJFCJF CUTSCENE = 0;
	public const GAPAHHJFCJF VIDEO = 1;
	public const GAPAHHJFCJF Other = 2;
}
public enum DHENHOJFPMI
{
	// Fields
	public const DHENHOJFPMI PLAY_AUDIO = 1;
	public const DHENHOJFPMI SHOW_OR_HIDE_NAME_CARD_DIALOG = 2;
}
public enum EJNCDLHHBBJ
{
	// Fields
	public const EJNCDLHHBBJ TriggerOnce = 0;
	public const EJNCDLHHBBJ TriggerNoRepeat = 1;
	public const EJNCDLHHBBJ TriggerAlways = 2;
}
public enum OENOIMJLHGE
{
	// Fields
	public const OENOIMJLHGE TriggerOnce = 0;
	public const OENOIMJLHGE TriggerNoRepeat = 1;
	public const OENOIMJLHGE TriggerAlways = 2;
}
public enum DNHGKNFHOPE
{
	// Fields
	public const DNHGKNFHOPE Center = 0;
	public const DNHGKNFHOPE CustomVector = 1;
	public const DNHGKNFHOPE HitVector = 2;
}
public enum AMHHBOBMLPD
{
	// Fields
	public const AMHHBOBMLPD Always = 0;
	public const AMHHBOBMLPD Once = 1;
}
public enum TargetType
{
	// Fields
	public const TargetType None = 0;
	public const TargetType Alliance = 1;
	public const TargetType Enemy = 2;
	public const TargetType Self = 3;
	public const TargetType SelfCamp = 4;
	public const TargetType All = 5;
	public const TargetType AllExceptSelf = 6;
	public const TargetType AllianceIncludeSelf = 7;
}
public enum TimerLimitType
{
	// Fields
	public const TimerLimitType Finite = 0;
	public const TimerLimitType Infinite = 1;
}
public enum MDEKIGIDDFG
{
	// Fields
	public const MDEKIGIDDFG None = 0;
	public const MDEKIGIDDFG DummyThrowSpeed = 1;
}
public enum CJAFHHFKPAJ
{
	// Fields
	public const CJAFHHFKPAJ InvalidPoint = 0;
	public const CJAFHHFKPAJ SleepPoint = 1;
	public const CJAFHHFKPAJ SitPoint = 2;
	public const CJAFHHFKPAJ LandingPoint = 3;
	public const CJAFHHFKPAJ ExtractionPoint = 4;
	public const CJAFHHFKPAJ DvalinSpecialPoint = 5;
	public const CJAFHHFKPAJ LupiColosseumPoint = 6;
	public const CJAFHHFKPAJ DancingPoint = 7;
	public const CJAFHHFKPAJ MakingPoint = 8;
	public const CJAFHHFKPAJ BuildingPoint = 9;
	public const CJAFHHFKPAJ SearchPoint = 10;
	public const CJAFHHFKPAJ SupervisePoint = 11;
	public const CJAFHHFKPAJ ThreatPoint = 12;
	public const CJAFHHFKPAJ PreachPoint = 13;
	public const CJAFHHFKPAJ SurroundPoint = 14;
	public const CJAFHHFKPAJ TrainingPoint = 15;
	public const CJAFHHFKPAJ MoleHolePoint = 16;
	public const CJAFHHFKPAJ AureaePoint = 17;
	public const CJAFHHFKPAJ StandbyPoint = 18;
	public const CJAFHHFKPAJ SitOnChairPoint = 19;
	public const CJAFHHFKPAJ PrayPoint = 20;
	public const CJAFHHFKPAJ GuardPoint = 21;
	public const CJAFHHFKPAJ ForgePoint = 22;
	public const CJAFHHFKPAJ FishingPoint = 23;
	public const CJAFHHFKPAJ KidPlayPoint = 24;
	public const CJAFHHFKPAJ DrinkingPoint = 25;
	public const CJAFHHFKPAJ MultiTalkPoint = 26;
	public const CJAFHHFKPAJ MultiTalkPrimPoint = 27;
	public const CJAFHHFKPAJ ShopOwnerPoint = 28;
	public const CJAFHHFKPAJ FeedingPoint = 29;
	public const CJAFHHFKPAJ WateringPoint = 30;
	public const CJAFHHFKPAJ SweepingPoint = 31;
	public const CJAFHHFKPAJ ShelterPoint = 32;
	public const CJAFHHFKPAJ HidingPoint = 33;
	public const CJAFHHFKPAJ OceanidMovePoint = 34;
	public const CJAFHHFKPAJ AfraidPoint = 35;
	public const CJAFHHFKPAJ InvestigatePoint = 36;
	public const CJAFHHFKPAJ OperationPoint = 37;
	public const CJAFHHFKPAJ ArrangePoint = 38;
	public const CJAFHHFKPAJ SplashPoint = 39;
	public const CJAFHHFKPAJ RepairPoint = 40;
	public const CJAFHHFKPAJ PerformingPoint = 41;
	public const CJAFHHFKPAJ CatFeedPoint = 42;
	public const CJAFHHFKPAJ DogFeedPoint = 43;
	public const CJAFHHFKPAJ TanukiTargetPoint = 44;
	public const CJAFHHFKPAJ DrakeDeepSeaSwimPoint = 45;
	public const CJAFHHFKPAJ MiningPoint = 46;
	public const CJAFHHFKPAJ PacManBlinkPoint = 47;
	public const CJAFHHFKPAJ PacManMeleeChargePoint = 48;
	public const CJAFHHFKPAJ Sorushtrial_HidingPoint = 49;
	public const CJAFHHFKPAJ Sorushtrial_DancePoint = 50;
	public const CJAFHHFKPAJ Sorushtrial_SitPoint = 51;
}
public enum OMBNOKBHCBE
{
	// Fields
	public const OMBNOKBHCBE None = 0;
	public const OMBNOKBHCBE CharacterFrozen = 1;
	public const OMBNOKBHCBE CharacterPetrifaction = 2;
	public const OMBNOKBHCBE CharacterDie = 3;
	public const OMBNOKBHCBE CharacterBurningToAshes = 4;
	public const OMBNOKBHCBE CharacterDissolve = 5;
	public const OMBNOKBHCBE GadgetFrozen = 6;
	public const OMBNOKBHCBE GadgetPetrifaction = 7;
	public const OMBNOKBHCBE GadgetDie = 8;
	public const OMBNOKBHCBE AvatarDie = 9;
	public const OMBNOKBHCBE MonsterEquipDie = 10;
	public const OMBNOKBHCBE MonsterDie = 11;
	public const OMBNOKBHCBE CharacterClip = 12;
	public const OMBNOKBHCBE CharacterAlphaBlend = 13;
	public const OMBNOKBHCBE EremiteSandDie = 14;
	public const OMBNOKBHCBE EremiteEquipDie = 15;
	public const OMBNOKBHCBE MonsterInvisible = 16;
	public const OMBNOKBHCBE MonolithInvisible = 17;
	public const OMBNOKBHCBE WeedBurnDie = 18;
}
public enum BJKFBPOKNEL
{
	// Fields
	public const BJKFBPOKNEL PlusHitFlash = 0;
	public const BJKFBPOKNEL PlusEmission = 1;
	public const BJKFBPOKNEL PlusSkillEmission = 2;
	public const BJKFBPOKNEL PlusOuterGlow = 3;
}
public enum NJPJNDKMAKO
{
	// Fields
	public const NJPJNDKMAKO None = 0;
	public const NJPJNDKMAKO Character = 1;
	public const NJPJNDKMAKO Gadget = 2;
}
public enum FJJKNNOABBN
{
	// Fields
	public const FJJKNNOABBN Alive = 0;
	public const FJJKNNOABBN Normal = 1;
	public const FJJKNNOABBN Drowned = 2;
	public const FJJKNNOABBN InAir = 3;
	public const FJJKNNOABBN Retreat = 4;
	public const FJJKNNOABBN Fall = 5;
}
public enum DHLFJBJEKED
{
	// Fields
	public const DHLFJBJEKED None = 0;
	public const DHLFJBJEKED FrozenToDeath = 1;
	public const DHLFJBJEKED BurningToAshes = 2;
	public const DHLFJBJEKED DieFall = 3;
	public const DHLFJBJEKED DieDrawn = 4;
	public const DHLFJBJEKED DieAbyss = 5;
	public const DHLFJBJEKED Broken = 6;
	public const DHLFJBJEKED PetrifiedToDeath = 7;
}
public enum BADHPBNLCMI
{
	// Fields
	public const BADHPBNLCMI All = 0;
	public const BADHPBNLCMI Body = 1;
	public const BADHPBNLCMI Hair = 2;
	public const BADHPBNLCMI Face = 3;
	public const BADHPBNLCMI Weapon = 4;
	public const BADHPBNLCMI Arm = 5;
	public const BADHPBNLCMI InValid = 999;
}
public enum PLGCPDCCNJH
{
	// Fields
	public const PLGCPDCCNJH Day = 0;
	public const PLGCPDCCNJH Night = 1;
}
public enum FNABCEGCIHB
{
	// Fields
	public const FNABCEGCIHB Target = 0;
	public const FNABCEGCIHB Self = 1;
	public const FNABCEGCIHB Caster = 2;
	public const FNABCEGCIHB Applier = 3;
}
public enum KLOBCGADFNK
{
	// Fields
	public const KLOBCGADFNK Free = 0;
	public const KLOBCGADFNK Horizontal = 1;
	public const KLOBCGADFNK Vertical = 2;
}
public enum AMPDDFNEKOC
{
	// Fields
	public const AMPDDFNEKOC DefendArea = 0;
	public const AMPDDFNEKOC SensingArea = 1;
}
public enum CLBIOFAPANO
{
	// Fields
	public const CLBIOFAPANO DEFAULT = 0;
	public const CLBIOFAPANO QUEST = 1;
	public const CLBIOFAPANO GADGET = 2;
	public const CLBIOFAPANO TASK = 3;
}
public enum NADMBHLPKIN
{
	// Fields
	public const NADMBHLPKIN EaseInQuad = 0;
	public const NADMBHLPKIN EaseOutQuad = 1;
	public const NADMBHLPKIN EaseInOutQuad = 2;
	public const NADMBHLPKIN EaseInCubic = 3;
	public const NADMBHLPKIN EaseOutCubic = 4;
	public const NADMBHLPKIN EaseInOutCubic = 5;
	public const NADMBHLPKIN EaseInQuart = 6;
	public const NADMBHLPKIN EaseOutQuart = 7;
	public const NADMBHLPKIN EaseInOutQuart = 8;
	public const NADMBHLPKIN EaseInQuint = 9;
	public const NADMBHLPKIN EaseOutQuint = 10;
	public const NADMBHLPKIN EaseInOutQuint = 11;
	public const NADMBHLPKIN EaseInSine = 12;
	public const NADMBHLPKIN EaseOutSine = 13;
	public const NADMBHLPKIN EaseInOutSine = 14;
	public const NADMBHLPKIN EaseInExpo = 15;
	public const NADMBHLPKIN EaseOutExpo = 16;
	public const NADMBHLPKIN EaseInOutExpo = 17;
	public const NADMBHLPKIN EaseInCirc = 18;
	public const NADMBHLPKIN EaseOutCirc = 19;
	public const NADMBHLPKIN EaseInOutCirc = 20;
	public const NADMBHLPKIN Linear = 21;
	public const NADMBHLPKIN Spring = 22;
	public const NADMBHLPKIN EaseInBounce = 23;
	public const NADMBHLPKIN EaseOutBounce = 24;
	public const NADMBHLPKIN EaseInOutBounce = 25;
	public const NADMBHLPKIN EaseInBack = 26;
	public const NADMBHLPKIN EaseOutBack = 27;
	public const NADMBHLPKIN EaseInOutBack = 28;
	public const NADMBHLPKIN EaseInElastic = 29;
	public const NADMBHLPKIN EaseOutElastic = 30;
	public const NADMBHLPKIN EaseInOutElastic = 31;
}
public enum LDJKCGNOPAJ
{
	// Fields
	public const LDJKCGNOPAJ VisionNone = 0;
	public const LDJKCGNOPAJ VisionMeet = 1;
	public const LDJKCGNOPAJ VisionReborn = 2;
	public const LDJKCGNOPAJ VisionReplace = 3;
	public const LDJKCGNOPAJ VisionWaypointReborn = 4;
	public const LDJKCGNOPAJ VisionMiss = 5;
	public const LDJKCGNOPAJ VisionDie = 6;
	public const LDJKCGNOPAJ VisionGatherEscape = 7;
	public const LDJKCGNOPAJ VisionRefresh = 8;
	public const LDJKCGNOPAJ VisionTransport = 9;
	public const LDJKCGNOPAJ VisionReplaceDie = 10;
}
public enum OENDGKGFIHA
{
	// Fields
	public const OENDGKGFIHA Auto = 0;
	public const OENDGKGFIHA Elite = 1;
	public const OENDGKGFIHA Boss = 2;
	public const OENDGKGFIHA Friendly = 3;
	public const OENDGKGFIHA ElementCharge = 4;
	public const OENDGKGFIHA BossCompress = 5;
}
public enum LCIEDLDOGOH
{
	// Fields
	public const LCIEDLDOGOH None = 0;
	public const LCIEDLDOGOH Take = 1;
	public const LCIEDLDOGOH Put = 2;
}
public enum IJDFCKMADNB
{
	// Fields
	public const IJDFCKMADNB None = 0;
	public const IJDFCKMADNB SwordOneHand = 1;
	public const IJDFCKMADNB CrossBow = 2;
	public const IJDFCKMADNB SmallShield = 3;
	public const IJDFCKMADNB Spear = 4;
	public const IJDFCKMADNB Catalyst = 5;
	public const IJDFCKMADNB Bow = 6;
	public const IJDFCKMADNB Claymore = 7;
	public const IJDFCKMADNB Pole = 8;
}
public enum EJCFPIAOEHE
{
	// Fields
	public const EJCFPIAOEHE Normal = 0;
	public const EJCFPIAOEHE Head = 1;
	public const EJCFPIAOEHE Weakness1 = 2;
	public const EJCFPIAOEHE Weakness2 = 3;
	public const EJCFPIAOEHE Weakness3 = 4;
	public const EJCFPIAOEHE Weakness4 = 5;
}
public enum AOCEOGJANED
{
	// Fields
	public const AOCEOGJANED Default = 0;
	public const AOCEOGJANED Fire = 1;
	public const AOCEOGJANED Water = 2;
	public const AOCEOGJANED Ice = 3;
	public const AOCEOGJANED Wind = 4;
	public const AOCEOGJANED Electric = 5;
	public const AOCEOGJANED Simple = 6;
	public const AOCEOGJANED Supporter = 7;
	public const AOCEOGJANED Builder = 8;
	public const AOCEOGJANED Mine = 9;
	public const AOCEOGJANED Gate = 10;
}
public enum FBJEBLCIGJO
{
	// Fields
	public const FBJEBLCIGJO None = 0;
	public const FBJEBLCIGJO Ground = 1;
	public const FBJEBLCIGJO Prop = 2;
	public const FBJEBLCIGJO Airflow = 3;
	public const FBJEBLCIGJO Spike = 4;
	public const FBJEBLCIGJO WindCircle = 5;
	public const FBJEBLCIGJO Bubble = 6;
}
public enum FPGMIEOEPGK
{
	// Fields
	public const FPGMIEOEPGK DownToGroundOnlyInAir = 0;
	public const FPGMIEOEPGK DownToGroundAndWaterOnlyInAir = 1;
	public const FPGMIEOEPGK DownToGroundOnlyInWater = 2;
}
public enum HIMEHOEOIMP
{
	// Fields
	public const HIMEHOEOIMP ElementReaction = 0;
	public const HIMEHOEOIMP AbilityState = 1;
}
public enum OAIAEOFKEIB
{
	// Fields
	public const OAIAEOFKEIB None = 0;
	public const OAIAEOFKEIB Explode = 1;
	public const OAIAEOFKEIB Stream = 2;
	public const OAIAEOFKEIB Burning = 3;
	public const OAIAEOFKEIB Burned = 4;
	public const OAIAEOFKEIB Wet = 5;
	public const OAIAEOFKEIB Overgrow = 6;
	public const OAIAEOFKEIB Melt = 7;
	public const OAIAEOFKEIB Freeze = 8;
	public const OAIAEOFKEIB AntiFire = 9;
	public const OAIAEOFKEIB Rock = 10;
	public const OAIAEOFKEIB SlowDown = 11;
	public const OAIAEOFKEIB Shock = 12;
	public const OAIAEOFKEIB Wind = 13;
	public const OAIAEOFKEIB Electric = 14;
	public const OAIAEOFKEIB Fire = 15;
	public const OAIAEOFKEIB Superconductor = 16;
	public const OAIAEOFKEIB SwirlFire = 17;
	public const OAIAEOFKEIB SwirlWater = 18;
	public const OAIAEOFKEIB SwirlElectric = 19;
	public const OAIAEOFKEIB SwirlIce = 20;
	public const OAIAEOFKEIB SwirlFireAccu = 21;
	public const OAIAEOFKEIB SwirlWaterAccu = 22;
	public const OAIAEOFKEIB SwirlElectricAccu = 23;
	public const OAIAEOFKEIB SwirlIceAccu = 24;
	public const OAIAEOFKEIB StickRock = 25;
	public const OAIAEOFKEIB StickWater = 26;
	public const OAIAEOFKEIB CrystallizeFire = 27;
	public const OAIAEOFKEIB CrystallizeWater = 28;
	public const OAIAEOFKEIB CrystallizeElectric = 29;
	public const OAIAEOFKEIB CrystallizeIce = 30;
	public const OAIAEOFKEIB FrozenBroken = 31;
	public const OAIAEOFKEIB StickGrass = 32;
	public const OAIAEOFKEIB Overdose = 33;
	public const OAIAEOFKEIB OverdoseElectric = 34;
	public const OAIAEOFKEIB OverdoseGrass = 35;
	public const OAIAEOFKEIB OvergrowMushroomFire = 36;
	public const OAIAEOFKEIB OvergrowMushroomElectric = 37;
}
public enum JBFAGKHFKGP
{
	// Fields
	public const JBFAGKHFKGP None = 0;
	public const JBFAGKHFKGP BeingHit = 1;
	public const JBFAGKHFKGP ModifierAdd = 2;
	public const JBFAGKHFKGP ModifierRemove = 3;
}
public enum DMCNIPMEKFG
{
	// Fields
	public const DMCNIPMEKFG None = 0;
	public const DMCNIPMEKFG Fire = 1;
	public const DMCNIPMEKFG Water = 2;
	public const DMCNIPMEKFG Grass = 3;
	public const DMCNIPMEKFG Electric = 4;
	public const DMCNIPMEKFG Ice = 5;
	public const DMCNIPMEKFG Frozen = 6;
	public const DMCNIPMEKFG Wind = 7;
	public const DMCNIPMEKFG Rock = 8;
	public const DMCNIPMEKFG AntiFire = 9;
	public const DMCNIPMEKFG VehicleMuteIce = 10;
	public const DMCNIPMEKFG Mushroom = 11;
	public const DMCNIPMEKFG Overdose = 12;
	public const DMCNIPMEKFG Wood = 13;
	public const DMCNIPMEKFG COUNT = 14;
}
public enum LEIONINKPJA
{
	// Fields
	public ulong value__; // 0x10
	public const LEIONINKPJA None = 0;
	public const LEIONINKPJA Invincible = 1;
	public const LEIONINKPJA DenyLockOn = 2;
	public const LEIONINKPJA IsGhostToAllied = 4;
	public const LEIONINKPJA IsGhostToEnemy = 8;
	public const LEIONINKPJA ElementBurning = 16;
	public const LEIONINKPJA ElementWet = 32;
	public const LEIONINKPJA ElementFrozen = 128;
	public const LEIONINKPJA LockHP = 512;
	public const LEIONINKPJA IgnoreTriggerBullet = 1024;
	public const LEIONINKPJA ElementShock = 2048;
	public const LEIONINKPJA Struggle = 4096;
	public const LEIONINKPJA ElementRock = 8192;
	public const LEIONINKPJA ElementIce = 32768;
	public const LEIONINKPJA ElementFreeze = 65536;
	public const LEIONINKPJA AttackUp = 131072;
	public const LEIONINKPJA DefenseUp = 262144;
	public const LEIONINKPJA SpeedUp = 524288;
	public const LEIONINKPJA DefenseDown = 1048576;
	public const LEIONINKPJA SpeedDown = 2097152;
	public const LEIONINKPJA ElementWind = 4194304;
	public const LEIONINKPJA ElementElectric = 8388608;
	public const LEIONINKPJA ElementFire = 16777216;
	public const LEIONINKPJA NoHeal = 33554432;
	public const LEIONINKPJA Limbo = 67108864;
	public const LEIONINKPJA MuteTaunt = 134217728;
	public const LEIONINKPJA ElementPetrifaction = 268435456;
	public const LEIONINKPJA IgnoreAddEnergy = 1073741824;
	public const LEIONINKPJA ElementGrass = 2147483648;
	public const LEIONINKPJA ElementOverdose = 4294967296;
	public const LEIONINKPJA Corruption = 8589934592;
	public const LEIONINKPJA UnlockFrequencyLimit = 17179869184;
	public const LEIONINKPJA ElementDeadTime = 34359738368;
	public const LEIONINKPJA OvergrowVariation = 68719476736;
}
public enum HMEFAANEHKH
{
	// Fields
	public const HMEFAANEHKH Default = 0;
	public const HMEFAANEHKH NormalChest = 1;
	public const HMEFAANEHKH FloraChest = 2;
	public const HMEFAANEHKH MultipleReward = 3;
	public const HMEFAANEHKH SingleReward = 4;
	public const HMEFAANEHKH OwnerOnlyReward = 5;
	public const HMEFAANEHKH GadgetChain = 6;
	public const HMEFAANEHKH WidgetMPSupport = 7;
	public const HMEFAANEHKH PostUIInteractGadgetAction = 8;
	public const HMEFAANEHKH GeneralUIInteract = 9;
}
public enum GNCMOPGPFHJ
{
	// Fields
	public const GNCMOPGPFHJ Default = 0;
	public const GNCMOPGPFHJ RegionalPlay = 1;
}
public enum CCEKPBAKOEL
{
	// Fields
	public const CCEKPBAKOEL NONE = 0;
	public const CCEKPBAKOEL HOST = 1;
	public const CCEKPBAKOEL GUEST = 2;
	public const CCEKPBAKOEL CUSTOM_COOP_FRAME_CHECK = 3;
	public const CCEKPBAKOEL GCG_CHAR_CHALLENGE_NEW = 4;
	public const CCEKPBAKOEL GCG_PVP_ENTRY_NEW = 5;
	public const CCEKPBAKOEL GCG_FESTIVAL_OPEN = 6;
	public const CCEKPBAKOEL GCG_FESTIVAL_ENTRY_NEW = 7;
	public const CCEKPBAKOEL OFFERING_PARI_NEW = 8;
}
public enum FCHMHMOHOGG
{
	// Fields
	public const FCHMHMOHOGG Default = 0;
	public const FCHMHMOHOGG GatherDrop = 1;
	public const FCHMHMOHOGG ChestLocked = 101;
	public const FCHMHMOHOGG ChestOpened = 102;
	public const FCHMHMOHOGG ChestTrap = 103;
	public const FCHMHMOHOGG ChestBramble = 104;
	public const FCHMHMOHOGG ChestFrozen = 105;
	public const FCHMHMOHOGG ChestRock = 106;
	public const FCHMHMOHOGG ExcitedState = 200;
	public const FCHMHMOHOGG GearStart = 201;
	public const FCHMHMOHOGG GearStop = 202;
	public const FCHMHMOHOGG GearAction1 = 203;
	public const FCHMHMOHOGG GearAction2 = 204;
	public const FCHMHMOHOGG DestroyState = 300;
	public const FCHMHMOHOGG CrystalResonate1 = 301;
	public const FCHMHMOHOGG CrystalResonate2 = 302;
	public const FCHMHMOHOGG CrystalExplode = 303;
	public const FCHMHMOHOGG CrystalDrain = 304;
	public const FCHMHMOHOGG StatueActive = 401;
	public const FCHMHMOHOGG Action01 = 901;
	public const FCHMHMOHOGG Action02 = 902;
	public const FCHMHMOHOGG Action03 = 903;
}
public enum IIPGHHHJDIL
{
	// Fields
	public const IIPGHHHJDIL Trigger = 0;
	public const IIPGHHHJDIL Bool = 1;
	public const IIPGHHHJDIL Int = 2;
	public const IIPGHHHJDIL Float = 3;
}
public enum INJEHGPGEGK
{
	// Fields
	public const INJEHGPGEGK None = 0;
	public const INJEHGPGEGK Ray = 1;
	public const INJEHGPGEGK Spray = 2;
	public const INJEHGPGEGK Wall = 3;
}
public enum BDAEJKPPBBO
{
	// Fields
	public const BDAEJKPPBBO Circle = 0;
	public const BDAEJKPPBBO Bar = 1;
}
public enum OAKBNGJNLJK
{
	// Fields
	public const OAKBNGJNLJK None = 0;
	public const OAKBNGJNLJK Monster = 1;
	public const OAKBNGJNLJK Auto = 2;
	public const OAKBNGJNLJK Select = 3;
	public const OAKBNGJNLJK Attract = 4;
	public const OAKBNGJNLJK AutoSelect = 5;
	public const OAKBNGJNLJK GroupAuto = 6;
}
public enum BGELLPKCFOL
{
	// Fields
	public const BGELLPKCFOL None = 0;
	public const BGELLPKCFOL Vehicle = 1;
}
public enum DJIFHHPLFBA
{
	// Fields
	public const DJIFHHPLFBA None = 0;
	public const DJIFHHPLFBA AllVehicle = 1;
	public const DJIFHHPLFBA Sorush = 2;
}
public enum AOOONBHKAEE
{
	// Fields
	public const AOOONBHKAEE x = 0;
	public const AOOONBHKAEE y = 1;
	public const AOOONBHKAEE z = 2;
}
public enum EIICDIOHEEF
{
	// Fields
	public const EIICDIOHEEF Parent = 0;
	public const EIICDIOHEEF EntityForward = 1;
	public const EIICDIOHEEF NamedTransform = 2;
}
public enum JMNIEAOIAGE
{
	// Fields
	public const JMNIEAOIAGE WorldXZ = 0;
	public const JMNIEAOIAGE ForwardTransLocal = 1;
}
public enum LCGAEJMPLLH
{
	// Fields
	public const LCGAEJMPLLH Stay = 0;
	public const LCGAEJMPLLH ToForwardImmediately = 1;
	public const LCGAEJMPLLH RotateToForward = 2;
}
public enum LCKKIFBKHOC
{
	// Fields
	public const LCKKIFBKHOC AIThreatTarget = 0;
	public const LCKKIFBKHOC ActionSetTarget = 1;
}
public enum CHCGLGDHJGK
{
	// Fields
	public const CHCGLGDHJGK All = 0;
	public const CHCGLGDHJGK None = 1;
}
public enum HKHCFNNCHEM
{
	// Fields
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_BASE = 0;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_AVATAR = 1;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_LEVEL = 2;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_CHARACTER = 3;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_MONSTER = 4;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_GADGET = 5;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_TEAM = 6;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_NPC = 7;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_PREVIEW = 8;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_PLATFORM = 9;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_TIMELINE = 10;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_SCENEPROP = 11;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_MANEKIN = 12;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_VEHICLE = 13;
	public const HKHCFNNCHEM AUDIO_ENTITY_TYPE_PAIMON = 14;
}
public enum JBMNBPPMPPD
{
	// Fields
	public const JBMNBPPMPPD None = 0;
	public const JBMNBPPMPPD Avatar = 1;
	public const JBMNBPPMPPD Monster = 2;
	public const JBMNBPPMPPD Bullet = 3;
	public const JBMNBPPMPPD AttackPhyisicalUnit = 4;
	public const JBMNBPPMPPD AOE = 5;
	public const JBMNBPPMPPD Camera = 6;
	public const JBMNBPPMPPD EnviroArea = 7;
	public const JBMNBPPMPPD Equip = 8;
	public const JBMNBPPMPPD MonsterEquip = 9;
	public const JBMNBPPMPPD Grass = 10;
	public const JBMNBPPMPPD Level = 11;
	public const JBMNBPPMPPD NPC = 12;
	public const JBMNBPPMPPD TransPointFirst = 13;
	public const JBMNBPPMPPD TransPointFirstGadget = 14;
	public const JBMNBPPMPPD TransPointSecond = 15;
	public const JBMNBPPMPPD TransPointSecondGadget = 16;
	public const JBMNBPPMPPD DropItem = 17;
	public const JBMNBPPMPPD Field = 18;
	public const JBMNBPPMPPD Gadget = 19;
	public const JBMNBPPMPPD Water = 20;
	public const JBMNBPPMPPD GatherPoint = 21;
	public const JBMNBPPMPPD GatherObject = 22;
	public const JBMNBPPMPPD AirflowField = 23;
	public const JBMNBPPMPPD SpeedupField = 24;
	public const JBMNBPPMPPD Gear = 25;
	public const JBMNBPPMPPD Chest = 26;
	public const JBMNBPPMPPD EnergyBall = 27;
	public const JBMNBPPMPPD ElemCrystal = 28;
	public const JBMNBPPMPPD Timeline = 29;
	public const JBMNBPPMPPD Worktop = 30;
	public const JBMNBPPMPPD Team = 31;
	public const JBMNBPPMPPD Platform = 32;
	public const JBMNBPPMPPD AmberWind = 33;
	public const JBMNBPPMPPD EnvAnimal = 34;
	public const JBMNBPPMPPD SealGadget = 35;
	public const JBMNBPPMPPD Tree = 36;
	public const JBMNBPPMPPD Bush = 37;
	public const JBMNBPPMPPD QuestGadget = 38;
	public const JBMNBPPMPPD Lightning = 39;
	public const JBMNBPPMPPD RewardPoint = 40;
	public const JBMNBPPMPPD RewardStatue = 41;
	public const JBMNBPPMPPD MPLevel = 42;
	public const JBMNBPPMPPD WindSeed = 43;
	public const JBMNBPPMPPD MpPlayRewardPoint = 44;
	public const JBMNBPPMPPD ViewPoint = 45;
	public const JBMNBPPMPPD RemoteAvatar = 46;
	public const JBMNBPPMPPD GeneralRewardPoint = 47;
	public const JBMNBPPMPPD PlayTeam = 48;
	public const JBMNBPPMPPD OfferingGadget = 49;
	public const JBMNBPPMPPD EyePoint = 50;
	public const JBMNBPPMPPD MiracleRing = 51;
	public const JBMNBPPMPPD Foundation = 52;
	public const JBMNBPPMPPD WidgetGadget = 53;
	public const JBMNBPPMPPD Vehicle = 54;
	public const JBMNBPPMPPD DangerZone = 55;
	public const JBMNBPPMPPD EchoShell = 56;
	public const JBMNBPPMPPD HomeGatherObject = 57;
	public const JBMNBPPMPPD Projector = 58;
	public const JBMNBPPMPPD Screen = 59;
	public const JBMNBPPMPPD CustomTile = 60;
	public const JBMNBPPMPPD FishPool = 61;
	public const JBMNBPPMPPD FishRod = 62;
	public const JBMNBPPMPPD CustomGadget = 63;
	public const JBMNBPPMPPD RoguelikeOperatorGadget = 64;
	public const JBMNBPPMPPD ActivityInteractGadget = 65;
	public const JBMNBPPMPPD BlackMud = 66;
	public const JBMNBPPMPPD SubEquip = 67;
	public const JBMNBPPMPPD UIInteractGadget = 68;
	public const JBMNBPPMPPD NightCrowGadget = 69;
	public const JBMNBPPMPPD Partner = 70;
	public const JBMNBPPMPPD DeshretObeliskGadget = 71;
	public const JBMNBPPMPPD CoinCollectLevelGadget = 72;
	public const JBMNBPPMPPD PlaceHolder = 99;
}
public enum KGFKLMBELJN
{
	// Fields
	public const KGFKLMBELJN None = 0;
	public const KGFKLMBELJN Ship = 1;
	public const KGFKLMBELJN Skiff = 2;
	public const KGFKLMBELJN Sorush = 3;
}
public enum KCMAONIABNA
{
	// Fields
	public const KCMAONIABNA None = 0;
	public const KCMAONIABNA Default = 1;
	public const KCMAONIABNA Avatar_Sword = 2;
	public const KCMAONIABNA Avatar_Pole = 3;
	public const KCMAONIABNA Avatar_Claymore = 4;
	public const KCMAONIABNA Avatar_Bow = 5;
	public const KCMAONIABNA Avatar_Catalyst = 6;
	public const KCMAONIABNA Monster_Minion = 7;
	public const KCMAONIABNA Monster_Grunt_Humanoid = 8;
	public const KCMAONIABNA Monster_Grunt_Other = 9;
	public const KCMAONIABNA Monster_Demiboss_Humanoid = 10;
	public const KCMAONIABNA Monster_Demiboss_Other = 11;
	public const KCMAONIABNA Monster_Boss_Humanoid = 12;
	public const KCMAONIABNA Monster_Boss_Other = 13;
	public const KCMAONIABNA Monster_Slime = 14;
	public const KCMAONIABNA Monster_Tartaglia = 15;
	public const KCMAONIABNA Monster_Shougun = 16;
	public const KCMAONIABNA Monster_Fungus_Battle = 17;
}
public enum IMFNLFHGCJN
{
	// Fields
	public const IMFNLFHGCJN Ability_TauntLevel_1 = 0;
	public const IMFNLFHGCJN Ability_TauntLevel_2 = 1;
	public const IMFNLFHGCJN Ability_TauntLevel_3 = 2;
	public const IMFNLFHGCJN Ability_TauntLevel_4 = 3;
	public const IMFNLFHGCJN Ability_TauntLevel_5 = 4;
	public const IMFNLFHGCJN Ability_TauntLevel_MAX = 10;
	public const IMFNLFHGCJN Monster_TauntLevel_1 = 11;
	public const IMFNLFHGCJN Monster_TauntLevel_2 = 12;
	public const IMFNLFHGCJN Monster_TauntLevel_3 = 13;
	public const IMFNLFHGCJN Monster_TauntLevel_4 = 14;
	public const IMFNLFHGCJN Monster_TauntLevel_5 = 15;
	public const IMFNLFHGCJN Monster_TauntLevel_6 = 16;
	public const IMFNLFHGCJN Monster_TauntLevel_MAX = 20;
}
public enum OGJCCIDJBII
{
	// Fields
	public const OGJCCIDJBII ENVIRONMENT_NONE = 0;
	public const OGJCCIDJBII ENVIRONMENT_GENERAL = 1;
	public const OGJCCIDJBII ENVIRONMENT_GRASS = 2;
	public const OGJCCIDJBII ENVIRONMENT_RIVERSIDE = 3;
	public const OGJCCIDJBII ENVIRONMENT_MOUNTAIN = 4;
	public const OGJCCIDJBII ENVIRONMENT_CRAB = 5;
	public const OGJCCIDJBII ENVIRONMENT_BUTTERFLY = 6;
	public const OGJCCIDJBII ENVIRONMENT_GRASSSHOPPER = 7;
	public const OGJCCIDJBII ENVIRONMENT_BUSH = 8;
	public const OGJCCIDJBII ENVIRONMENT_FIREFLY = 9;
	public const OGJCCIDJBII ENVIRONMENT_WOODS = 10;
	public const OGJCCIDJBII ENVIRONMENT_BUTTERFLY_INAZUMA_HIGH = 11;
	public const OGJCCIDJBII ENVIRONMENT_BUTTERFLY_INAZUMA_LOW = 12;
	public const OGJCCIDJBII ENVIRONMENT_FIREFLY_INAZUMA = 13;
	public const OGJCCIDJBII ENVIRONMENT_CRAB_INAZUMA = 14;
	public const OGJCCIDJBII ENVIRONMENT_LIZARD_INAZUMA = 15;
}
public enum HNDDKAHCLEK
{
	// Fields
	public const HNDDKAHCLEK RAND_TASK_CONTENT_NONE = 0;
	public const HNDDKAHCLEK RAND_TASK_CONTENT_CLEANUP = 1;
	public const HNDDKAHCLEK RAND_TASK_CONTENT_RESCUE = 2;
	public const HNDDKAHCLEK RAND_TASK_CONTENT_GUARD = 3;
	public const HNDDKAHCLEK RAND_TASK_CONTENT_ATTACK = 4;
	public const HNDDKAHCLEK RAND_TASK_CONTENT_INVESTIGATE = 5;
	public const HNDDKAHCLEK RAND_TASK_CONTENT_PAY = 6;
	public const HNDDKAHCLEK RAND_TASK_CONTENT_DUNGEON = 7;
	public const HNDDKAHCLEK RAND_TASK_CONTENT_TALL = 8;
}
public enum EBCGPNMFFCH
{
	// Fields
	public const EBCGPNMFFCH SCENE_NONE = 0;
	public const EBCGPNMFFCH SCENE_WORLD = 1;
	public const EBCGPNMFFCH SCENE_DUNGEON = 2;
	public const EBCGPNMFFCH SCENE_ROOM = 3;
	public const EBCGPNMFFCH SCENE_HOME_WORLD = 4;
	public const EBCGPNMFFCH SCENE_HOME_ROOM = 5;
	public const EBCGPNMFFCH SCENE_ACTIVITY = 6;
}
public enum FONKKBLGJEK
{
	// Fields
	public const FONKKBLGJEK SCENE_SUB_TYPE_NONE = 0;
	public const FONKKBLGJEK SCENE_SUB_TYPE_PERSISTENT_DUNGEON = 1;
}
public enum CLMPACMFKHP
{
	// Fields
	public const CLMPACMFKHP DUNGEON_SUB_TYPE_NONE = 0;
	public const CLMPACMFKHP DUNGEON_SUB_TYPE_MIRROR_BIGWORLD = 1;
}
public enum NNFPLPHMIBG
{
	// Fields
	public const NNFPLPHMIBG Invalid = 0;
	public const NNFPLPHMIBG WeatherMonologue = 1;
	public const NNFPLPHMIBG Dialog = 2;
	public const NNFPLPHMIBG DungeonReminder = 3;
	public const NNFPLPHMIBG AnimatorEvent = 4;
	public const NNFPLPHMIBG Fetter = 5;
	public const NNFPLPHMIBG Gacha = 6;
	public const NNFPLPHMIBG JoinTeam = 7;
	public const NNFPLPHMIBG Card = 8;
}
public enum BNMCBIKBCPA
{
	// Fields
	public const BNMCBIKBCPA all = 0;
	public const BNMCBIKBCPA allNoTessellation = 1;
	public const BNMCBIKBCPA PCNoTessellation = 2;
	public const BNMCBIKBCPA pc = 3;
	public const BNMCBIKBCPA android = 4;
	public const BNMCBIKBCPA ios = 5;
	public const BNMCBIKBCPA ps4 = 6;
}
public enum JMCNOGDMIMH
{
	// Fields
	public const JMCNOGDMIMH Spore = 0;
	public const JMCNOGDMIMH Glow = 1;
	public const JMCNOGDMIMH PortalSeal = 2;
	public const JMCNOGDMIMH Wisdom03WaterRipple = 3;
}
public enum JLEMKALABAK
{
	// Fields
	public const JLEMKALABAK OnlyHighSpeed = 0;
	public const JLEMKALABAK Always = 1;
	public const JLEMKALABAK Never = 2;
}
public enum CKCHMNOBDFC
{
	// Fields
	public const CKCHMNOBDFC First = 0;
	public const CKCHMNOBDFC Loop = 1;
	public const CKCHMNOBDFC None = 2;
}
public enum JECNKDELFGE
{
	// Fields
	public const JECNKDELFGE Actor = 1;
	public const JECNKDELFGE MainTarget = 3;
	public const JECNKDELFGE SubTarget = 4;
	public const JECNKDELFGE ContextTarget = 5;
	public const JECNKDELFGE AllTarget = 6;
}
public enum DOJCMKGEKIC
{
	// Fields
	public const DOJCMKGEKIC DontCare = 0;
	public const DOJCMKGEKIC ActorSameCamp = 1;
	public const DOJCMKGEKIC ActorOppoCamp = 2;
}
public enum KENDMINLEFD
{
	// Fields
	public const KENDMINLEFD Equal = 1;
	public const KENDMINLEFD NotEqual = 2;
	public const KENDMINLEFD GreaterThan = 3;
	public const KENDMINLEFD LessThan = 4;
	public const KENDMINLEFD GreaterEqual = 5;
	public const KENDMINLEFD LessEqual = 6;
}
public enum BNMEANJEACC
{
	// Fields
	public const BNMEANJEACC CharacterCenter = 1;
	public const BNMEANJEACC AssistCenter = 2;
	public const BNMEANJEACC SummonCenter = 3;
}
public enum BOLKCKNFKKG
{
	// Fields
	public const BOLKCKNFKKG DoNotAdjust = 0;
	public const BOLKCKNFKKG HorizontalAxisFlip = 1;
	public const BOLKCKNFKKG CenterRotateFlip = 2;
}
public enum KONGFHANLDC
{
	// Fields
	public const KONGFHANLDC Normal = 1;
	public const KONGFHANLDC SpecialA = 2;
	public const KONGFHANLDC SpecialB = 3;
}
public enum AINHHIJHIFK
{
	// Fields
	public const AINHHIJHIFK Default = 1;
	public const AINHHIJHIFK OnHit = 2;
	public const AINHHIJHIFK OnMoveFinish = 3;
}
public enum MoleMole.Config.GcgCardType
{
	// Fields
	public const MoleMole.Config.GcgCardType GCG_CARD_INVALID = 0;
	public const MoleMole.Config.GcgCardType GCG_CARD_CHARACTER = 1;
	public const MoleMole.Config.GcgCardType GCG_CARD_MODIFY = 2;
	public const MoleMole.Config.GcgCardType GCG_CARD_SUMMON = 3;
	public const MoleMole.Config.GcgCardType GCG_CARD_STATE = 4;
	public const MoleMole.Config.GcgCardType GCG_CARD_EVENT = 5;
	public const MoleMole.Config.GcgCardType GCG_CARD_ASSIST = 6;
	public const MoleMole.Config.GcgCardType GCG_CARD_ONSTAGE = 7;
	public const MoleMole.Config.GcgCardType GCG_CARD_RULE = 8;
}
public enum MoleMole.Config.GcgTag
{
	// Fields
	public const MoleMole.Config.GcgTag GCG_TAG_NONE = 0;
	public const MoleMole.Config.GcgTag GCG_TAG_UNIQUE = 1;
	public const MoleMole.Config.GcgTag GCG_TAG_SLOWLY = 2;
	public const MoleMole.Config.GcgTag GCG_TAG_WEAPON = 3;
	public const MoleMole.Config.GcgTag GCG_TAG_ARTIFACT = 4;
	public const MoleMole.Config.GcgTag GCG_TAG_FORBIDDEN_ATTACK = 5;
	public const MoleMole.Config.GcgTag GCG_TAG_TALENT = 6;
	public const MoleMole.Config.GcgTag GCG_TAG_SKILL = 8;
	public const MoleMole.Config.GcgTag GCG_TAG_SHEILD = 10;
	public const MoleMole.Config.GcgTag GCG_TAG_FOOD = 101;
	public const MoleMole.Config.GcgTag GCG_TAG_ITEM = 102;
	public const MoleMole.Config.GcgTag GCG_TAG_ALLY = 103;
	public const MoleMole.Config.GcgTag GCG_TAG_PLACE = 104;
	public const MoleMole.Config.GcgTag GCG_TAG_RESONANCE = 105;
	public const MoleMole.Config.GcgTag GCG_TAG_WEAPON_NONE = 200;
	public const MoleMole.Config.GcgTag GCG_TAG_WEAPON_SWORD = 201;
	public const MoleMole.Config.GcgTag GCG_TAG_WEAPON_CATALYST = 202;
	public const MoleMole.Config.GcgTag GCG_TAG_WEAPON_CLAYMORE = 203;
	public const MoleMole.Config.GcgTag GCG_TAG_WEAPON_BOW = 204;
	public const MoleMole.Config.GcgTag GCG_TAG_WEAPON_POLE = 205;
	public const MoleMole.Config.GcgTag GCG_TAG_ELEMENT_NONE = 300;
	public const MoleMole.Config.GcgTag GCG_TAG_ELEMENT_CRYO = 301;
	public const MoleMole.Config.GcgTag GCG_TAG_ELEMENT_HYDRO = 302;
	public const MoleMole.Config.GcgTag GCG_TAG_ELEMENT_PYRO = 303;
	public const MoleMole.Config.GcgTag GCG_TAG_ELEMENT_ELECTRO = 304;
	public const MoleMole.Config.GcgTag GCG_TAG_ELEMENT_GEO = 305;
	public const MoleMole.Config.GcgTag GCG_TAG_ELEMENT_DENDRO = 306;
	public const MoleMole.Config.GcgTag GCG_TAG_ELEMENT_ANEMO = 307;
	public const MoleMole.Config.GcgTag GCG_TAG_NATION_MONDSTADT = 401;
	public const MoleMole.Config.GcgTag GCG_TAG_NATION_LIYUE = 402;
	public const MoleMole.Config.GcgTag GCG_TAG_NATION_INAZUMA = 403;
	public const MoleMole.Config.GcgTag GCG_TAG_NATION_SUMERU = 404;
	public const MoleMole.Config.GcgTag GCG_TAG_NATION_FONTAINE = 405;
	public const MoleMole.Config.GcgTag GCG_TAG_NATION_NATLAN = 406;
	public const MoleMole.Config.GcgTag GCG_TAG_NATION_SNEZHNAYA = 407;
	public const MoleMole.Config.GcgTag GCG_TAG_NATION_KHAENRIAH = 408;
	public const MoleMole.Config.GcgTag GCG_TAG_CAMP_FATUI = 501;
	public const MoleMole.Config.GcgTag GCG_TAG_CAMP_HILICHURL = 502;
	public const MoleMole.Config.GcgTag GCG_TAG_CAMP_MONSTER = 503;
	public const MoleMole.Config.GcgTag GCG_TAG_CAMP_KAIRAGI = 504;
	public const MoleMole.Config.GcgTag GCG_TAG_DENDRO_PRODUCE = 601;
	public const MoleMole.Config.GcgTag GCG_TAG_IMMUNE_FREEZING = 701;
	public const MoleMole.Config.GcgTag GCG_TAG_IMMUNE_CONTROL = 702;
}
public enum MoleMole.Config.GcgToken
{
	// Fields
	public const MoleMole.Config.GcgToken GCG_TOKEN_NONE = 0;
	public const MoleMole.Config.GcgToken GCG_TOKEN_HP = 1;
	public const MoleMole.Config.GcgToken GCG_TOKEN_MAX_HP = 2;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ATK = 3;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ENERGY = 4;
	public const MoleMole.Config.GcgToken GCG_TOKEN_MAX_ENERGY = 5;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ROUND_COUNT = 6;
	public const MoleMole.Config.GcgToken GCG_TOKEN_SHIELD = 7;
	public const MoleMole.Config.GcgToken GCG_TOKEN_LIFE = 8;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ATTACH_CRYO = 9;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ATTACH_HYDRO = 10;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ATTACH_PYRO = 11;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ATTACH_ELECTRO = 12;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ATTACH_GEO = 13;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ATTACH_DENDRO = 14;
	public const MoleMole.Config.GcgToken GCG_TOKEN_ATTACH_ANEMO = 15;
	public const MoleMole.Config.GcgToken GCG_TOKEN_COUNTER = 16;
	public const MoleMole.Config.GcgToken GCG_TOKEN_SET_DAMAGE_ELEMENT = 17;
}
public enum ENALFIHDPGK
{
	// Fields
	public const ENALFIHDPGK DAMAGE_ELEMENT_ANY = 0;
	public const ENALFIHDPGK DAMAGE_ELEMENT_PHYSIC = 1;
	public const ENALFIHDPGK DAMAGE_ELEMENT_CRYO = 2;
	public const ENALFIHDPGK DAMAGE_ELEMENT_HYDRO = 3;
	public const ENALFIHDPGK DAMAGE_ELEMENT_PYRO = 4;
	public const ENALFIHDPGK DAMAGE_ELEMENT_ELECTRO = 5;
	public const ENALFIHDPGK DAMAGE_ELEMENT_GEO = 6;
	public const ENALFIHDPGK DAMAGE_ELEMENT_DENDRO = 7;
	public const ENALFIHDPGK DAMAGE_ELEMENT_ANEMO = 8;
	public const ENALFIHDPGK DAMAGE_ELEMENT_EXCEPT_PHYSIC = 9;
	public const ENALFIHDPGK DAMAGE_ELEMENT_SET_DAMAGE = 10;
}
public enum KKLJNENJJHI
{
	// Fields
	public const KKLJNENJJHI GCG_SET_DAMAGE_ELEMENT_NONE = 0;
	public const KKLJNENJJHI GCG_SET_DAMAGE_ELEMENT_CRYO = 1;
	public const KKLJNENJJHI GCG_SET_DAMAGE_ELEMENT_HYDRO = 2;
	public const KKLJNENJJHI GCG_SET_DAMAGE_ELEMENT_PYRO = 3;
	public const KKLJNENJJHI GCG_SET_DAMAGE_ELEMENT_ELECTRO = 4;
	public const KKLJNENJJHI GCG_SET_DAMAGE_ELEMENT_GEO = 5;
	public const KKLJNENJJHI GCG_SET_DAMAGE_ELEMENT_DENDRO = 6;
	public const KKLJNENJJHI GCG_SET_DAMAGE_ELEMENT_ANEMO = 7;
}
public enum JKMKABELLAK
{
	// Fields
	public const JKMKABELLAK GCG_ELEMENT_PHYSIC = 0;
	public const JKMKABELLAK GCG_ELEMENT_CRYO = 1;
	public const JKMKABELLAK GCG_ELEMENT_HYDRO = 2;
	public const JKMKABELLAK GCG_ELEMENT_PYRO = 3;
	public const JKMKABELLAK GCG_ELEMENT_ELECTRO = 4;
	public const JKMKABELLAK GCG_ELEMENT_GEO = 5;
	public const JKMKABELLAK GCG_ELEMENT_DENDRO = 6;
	public const JKMKABELLAK GCG_ELEMENT_ANEMO = 7;
	public const JKMKABELLAK GCG_ELEMENT_ANY = 8;
}
public enum CAGPPMNCCLL
{
	// Fields
	public const CAGPPMNCCLL GCG_SKILL_TAG_NONE = 0;
	public const CAGPPMNCCLL GCG_SKILL_TAG_A = 1;
	public const CAGPPMNCCLL GCG_SKILL_TAG_E = 2;
	public const CAGPPMNCCLL GCG_SKILL_TAG_Q = 3;
	public const CAGPPMNCCLL GCG_SKILL_TAG_PASSIVE = 4;
}
public enum EGJGCBPBMFO
{
	// Fields
	public const EGJGCBPBMFO TL = 0;
	public const EGJGCBPBMFO T = 1;
	public const EGJGCBPBMFO TR = 2;
	public const EGJGCBPBMFO L = 3;
	public const EGJGCBPBMFO R = 4;
	public const EGJGCBPBMFO BL = 5;
	public const EGJGCBPBMFO B = 6;
	public const EGJGCBPBMFO BR = 7;
	public const EGJGCBPBMFO M = 8;
}
public enum PNKJNLKAKLK
{
	// Fields
	public const PNKJNLKAKLK GcgPhaseInvalid = 0;
	public const PNKJNLKAKLK GcgPhaseBegin = 1;
	public const PNKJNLKAKLK GcgPhaseUpdate = 2;
	public const PNKJNLKAKLK GcgPhaseChange = 3;
	public const PNKJNLKAKLK GcgPhaseEnd = 4;
	public const PNKJNLKAKLK GcgPhaseChangePre = 5;
}
public enum NKLOCNGPCOG
{
	// Fields
	public const NKLOCNGPCOG GcgPhaseInvalid = 0;
	public const NKLOCNGPCOG GcgPhaseStart = 1;
	public const NKLOCNGPCOG GcgPhaseDraw = 2;
	public const NKLOCNGPCOG GcgPhaseOnStage = 3;
	public const NKLOCNGPCOG GcgPhaseDice = 4;
	public const NKLOCNGPCOG GcgPhaseMain = 5;
	public const NKLOCNGPCOG GcgPhaseEnd = 6;
	public const NKLOCNGPCOG GcgPhaseDie = 7;
	public const NKLOCNGPCOG GcgPhaseFin = 8;
	public const NKLOCNGPCOG GcgPhasePreMain = 9;
	public const NKLOCNGPCOG GcgPhaseReroll = 10;
}
public enum AFAOCPACLFB
{
	// Fields
	public const AFAOCPACLFB DiceRollFinishPerform = 1;
	public const AFAOCPACLFB ChangeOnStage = 2;
	public const AFAOCPACLFB RoundStart = 3;
	public const AFAOCPACLFB SelfCardShowToHand = 4;
	public const AFAOCPACLFB SelfCardDeckToShow = 5;
}
public enum GEKJDCFKEPL
{
	// Fields
	public const GEKJDCFKEPL CharacterSkill = 1;
	public const GEKJDCFKEPL UseHandCard = 2;
	public const GEKJDCFKEPL Reboot = 3;
	public const GEKJDCFKEPL ChangeOnStageCharacter = 4;
}
public enum CPMIMIMBKBM
{
	// Fields
	public const CPMIMIMBKBM BtnSelectChar = 1;
	public const CPMIMIMBKBM BtnOK = 2;
	public const CPMIMIMBKBM BtnSkill = 3;
	public const CPMIMIMBKBM BtnPass = 4;
	public const CPMIMIMBKBM BtnPassConfirm = 5;
	public const CPMIMIMBKBM TogSwitch = 6;
	public const CPMIMIMBKBM SkillCost = 7;
	public const CPMIMIMBKBM PlayerIcon = 8;
	public const CPMIMIMBKBM FoldDiceArea = 10;
	public const CPMIMIMBKBM UnFoldDiceArea = 11;
	public const CPMIMIMBKBM FoldDice = 13;
	public const CPMIMIMBKBM UnFoldDice = 14;
	public const CPMIMIMBKBM BtnIntention = 15;
	public const CPMIMIMBKBM FoldDiceAreaNumber = 16;
	public const CPMIMIMBKBM UseHandHintRegion = 17;
	public const CPMIMIMBKBM RebootHintRegion = 18;
	public const CPMIMIMBKBM BtnConfirmPS4 = 19;
	public const CPMIMIMBKBM AdriftBtnLeftPS4 = 20;
	public const CPMIMIMBKBM AdriftBtnRightPS4 = 21;
	public const CPMIMIMBKBM AdriftBtnUpPS4 = 22;
	public const CPMIMIMBKBM AdriftBtnDownPS4 = 23;
	public const CPMIMIMBKBM DetailPanelSkill = 101;
	public const CPMIMIMBKBM DetailPanelBuff = 102;
	public const CPMIMIMBKBM DetailPanelDesc = 103;
	public const CPMIMIMBKBM DetailPanelSkillCost = 104;
	public const CPMIMIMBKBM DetailPanelIntention = 105;
}
public enum HCMHKPCBOLG
{
	// Fields
	public const HCMHKPCBOLG GcgZoneInvalid = 0;
	public const HCMHKPCBOLG GcgZoneHand = 1;
	public const HCMHKPCBOLG GcgZoneCharacter = 2;
	public const HCMHKPCBOLG GcgZoneModify = 3;
	public const HCMHKPCBOLG GcgZoneSummon = 4;
	public const HCMHKPCBOLG GcgZoneAssist = 5;
	public const HCMHKPCBOLG GcgZoneOnstage = 6;
}
public enum OIEILNGNHFJ
{
	// Fields
	public const OIEILNGNHFJ Entire = 0;
	public const OIEILNGNHFJ HP = 1;
	public const OIEILNGNHFJ Energy = 2;
}
public enum JDGNFGNEIHH
{
	// Fields
	public const JDGNFGNEIHH Expand = 0;
	public const JDGNFGNEIHH Hide = 1;
	public const JDGNFGNEIHH OutSight = 2;
}
public enum LFNPAODNFLB
{
	// Fields
	public const LFNPAODNFLB RoundTips = 0;
	public const LFNPAODNFLB CommonTips = 1;
}
public enum GDOLPMIKILH
{
	// Fields
	public const GDOLPMIKILH CHARACTER_ONSTAGE = 0;
	public const GDOLPMIKILH CHARACTER_NEAR_BACKSTAGE = 1;
	public const GDOLPMIKILH CHARACTER_ALL_BACKSTAGE = 2;
	public const GDOLPMIKILH CHARACTER_ALL = 3;
	public const GDOLPMIKILH CHARACTER_BACKSTAGE_HURT_MAX = 7;
	public const GDOLPMIKILH CHARACTER_HURT_MAX = 8;
	public const GDOLPMIKILH CHARACTER_TRIGGER_SOURCE_CHARACTER = 9;
	public const GDOLPMIKILH CHARACTER_TRIGGER_TARGET_CHARACTER = 10;
	public const GDOLPMIKILH CHARACTER_TARGET_NEAR = 11;
	public const GDOLPMIKILH CHARACTER_TARGET_OTHERS = 12;
	public const GDOLPMIKILH CHARACTER_ALL_NOT_CHARGED = 13;
	public const GDOLPMIKILH CHARACTER_MODIFIED = 14;
	public const GDOLPMIKILH CHARACTER_THIS_CARD = 15;
	public const GDOLPMIKILH CHARACTER_CONFIG_CHOOSE = 16;
	public const GDOLPMIKILH CHARACTER_MODIFIED_OTHERS = 17;
}
public enum ELMJFADLNJF
{
	// Fields
	public const ELMJFADLNJF EFFECT_DICE_ANY = 0;
	public const ELMJFADLNJF EFFECT_DICE_CRYO = 1;
	public const ELMJFADLNJF EFFECT_DICE_HYDRO = 2;
	public const ELMJFADLNJF EFFECT_DICE_PYRO = 3;
	public const ELMJFADLNJF EFFECT_DICE_ELECTRO = 4;
	public const ELMJFADLNJF EFFECT_DICE_GEO = 5;
	public const ELMJFADLNJF EFFECT_DICE_DENDRO = 6;
	public const ELMJFADLNJF EFFECT_DICE_ANEMO = 7;
	public const ELMJFADLNJF EFFECT_DICE_SAME_ONSTAGE = 8;
	public const ELMJFADLNJF EFFECT_DICE_SAME_MODIFIED = 10;
	public const ELMJFADLNJF EFFECT_DICE_DIFF_ALL_CHARACTER = 11;
	public const ELMJFADLNJF EFFECT_DICE_NEXT_BACKSTAGE_CHARACTER = 12;
}
public enum PACFAKMJPOD
{
	// Fields
	public const PACFAKMJPOD EFFECT_GEN_DICE_EXCEPT_ANY = 0;
}
public enum MNDLNDHHLGA
{
	// Fields
	public const MNDLNDHHLGA CAMP_BOTH = 0;
	public const MNDLNDHHLGA CAMP_FRIENDLY = 1;
	public const MNDLNDHHLGA CAMP_ENEMY = 2;
	public const MNDLNDHHLGA CAMP_NONE = 3;
}
public enum ONJAFNNJMGE
{
	// Fields
	public const ONJAFNNJMGE SELECT_ONSTAGE_BEFORE = 0;
	public const ONJAFNNJMGE SELECT_ONSTAGE_NEXT = 1;
	public const ONJAFNNJMGE SELECT_ONSTAGE_CONFIG_CHOOSE = 2;
	public const ONJAFNNJMGE SELECT_CAMP_ENEMY_ONSTAGE_IDX = 3;
	public const ONJAFNNJMGE SELECT_ONSTAGE_MODIFIED = 4;
}
public enum IMAKBFHPHLK
{
	// Fields
	public const IMAKBFHPHLK CREATE_POSITION_ONSTAGE = 0;
	public const IMAKBFHPHLK CREATE_POSITION_HAND = 1;
}
public enum FDIPNELFIOG
{
	// Fields
	public const FDIPNELFIOG CHOOSE_ALL = 0;
	public const FDIPNELFIOG CHOOSE_OBJECT = 1;
	public const FDIPNELFIOG CHOOSE_CUR = 2;
	public const FDIPNELFIOG CHOOSE_FIRST = 3;
	public const FDIPNELFIOG CHOOSE_LEAST_SHOW_TOKEN_VALUE = 4;
}
public enum KKEFFJOCODM
{
	// Fields
	public const KKEFFJOCODM POSITION_ONSTAGE = 0;
	public const KKEFFJOCODM POSITION_BACKSTAGE = 1;
}
public enum NGABFMIKILI
{
	// Fields
	public const NGABFMIKILI GCG_COST_INVALID = 0;
	public const NGABFMIKILI GCG_COST_ENERGY = 1;
	public const NGABFMIKILI GCG_COST_DICE_SAME = 3;
	public const NGABFMIKILI GCG_COST_DICE_VOID = 5;
	public const NGABFMIKILI GCG_COST_DICE_PAIMON = 6;
	public const NGABFMIKILI GCG_COST_DICE_CRYO = 11;
	public const NGABFMIKILI GCG_COST_DICE_HYDRO = 12;
	public const NGABFMIKILI GCG_COST_DICE_PYRO = 13;
	public const NGABFMIKILI GCG_COST_DICE_ELECTRO = 14;
	public const NGABFMIKILI GCG_COST_DICE_GEO = 15;
	public const NGABFMIKILI GCG_COST_DICE_DENDRO = 16;
	public const NGABFMIKILI GCG_COST_DICE_ANEMO = 17;
}
public enum GHJCCBDGFOJ
{
	// Fields
	public const GHJCCBDGFOJ FRIENDLY = 0;
	public const GHJCCBDGFOJ ENEMY = 1;
	public const GHJCCBDGFOJ ALL = 2;
}
public enum COHPOJGGMDL
{
	// Fields
	public const COHPOJGGMDL GCG_PARITY_ODD = 0;
	public const COHPOJGGMDL GCG_PARITY_EVEN = 1;
}
public enum CMFNIDGFLJB
{
	// Fields
	public const CMFNIDGFLJB Damage = 0;
	public const CMFNIDGFLJB Element = 1;
	public const CMFNIDGFLJB IndirectDamage = 2;
	public const CMFNIDGFLJB EffectNum = 4;
	public const CMFNIDGFLJB Heal = 5;
	public const CMFNIDGFLJB TokenType = 6;
}
public enum MJOHJGMAEHK
{
	// Fields
	public const MJOHJGMAEHK OPEATER_ADD = 0;
	public const MJOHJGMAEHK OPEATER_ASSIGN = 1;
	public const MJOHJGMAEHK OPEATER_MINUS = 2;
}
public enum BIJBPKHIIMJ
{
	// Fields
	public const BIJBPKHIIMJ Round = 0;
	public const BIJBPKHIIMJ WorkTimesToDiscard = 2;
	public const BIJBPKHIIMJ Game = 3;
	public const BIJBPKHIIMJ BindToToken = 4;
}
public enum JFMLNOOCMDG
{
	// Fields
	public const JFMLNOOCMDG AND = 0;
	public const JFMLNOOCMDG OR = 1;
	public const JFMLNOOCMDG LARGE = 2;
	public const JFMLNOOCMDG LARGE_EQUAL = 3;
	public const JFMLNOOCMDG EQUAL = 4;
	public const JFMLNOOCMDG LESS_EQUAL = 5;
	public const JFMLNOOCMDG LESS = 6;
	public const JFMLNOOCMDG NOT_EQUAL = 7;
}
public enum IDEHCGEJMEO
{
	// Fields
	public const IDEHCGEJMEO LARGE = 0;
	public const IDEHCGEJMEO LARGE_EQUAL = 1;
	public const IDEHCGEJMEO EQUAL = 2;
	public const IDEHCGEJMEO LESS_EQUAL = 3;
	public const IDEHCGEJMEO LESS = 4;
	public const IDEHCGEJMEO NOT_EQUAL = 5;
}
public enum GAFCIIDDBJM
{
	// Fields
	public const GAFCIIDDBJM EFFECT_AREA_HAND = 0;
	public const GAFCIIDDBJM EFFECT_AREA_ONSTAGE = 1;
	public const GAFCIIDDBJM EFFECT_AREA_SUMMON = 2;
	public const GAFCIIDDBJM EFFECT_AREA_CHARACTER = 3;
	public const GAFCIIDDBJM EFFECT_AREA_ASSIST = 4;
}
public enum BPGKLBNKPAG
{
	// Fields
	public const BPGKLBNKPAG REFRESH_OPEATER_RESET = 0;
	public const BPGKLBNKPAG REFRESH_OPEATER_ADD_SHOW_TOKEN = 1;
}
public enum LOJCHBDIBOG
{
	// Fields
	public const LOJCHBDIBOG SKILL_SPECIAL_COND_NONE = 0;
	public const LOJCHBDIBOG SKILL_SPECIAL_COND_HAS_USE = 1;
}
public enum ACMLCEFKPKH
{
	// Fields
	public const ACMLCEFKPKH GCG_TRIGGER_INVALID = 0;
	public const ACMLCEFKPKH GCG_TRIGGER_DURATION = 1;
	public const ACMLCEFKPKH GCG_TRIGGER_PHASE_DICE_REROLL_BEFORE = 4;
	public const ACMLCEFKPKH GCG_TRIGGER_PHASE_DICE_REROLL_POST = 5;
	public const ACMLCEFKPKH GCG_TRIGGER_PHASE_ONSTAGE_PHASE_START = 6;
	public const ACMLCEFKPKH GCG_TRIGGER_PHASE_ONSTAGE_SELECT_ACTION_BEFORE = 7;
	public const ACMLCEFKPKH GCG_TRIGGER_PHASE_ONSTAGE_SETTLE_POST = 9;
	public const ACMLCEFKPKH GCG_TRIGGER_PHASE_END_DRAW_BEFORE = 10;
	public const ACMLCEFKPKH GCG_TRIGGER_PHASE_END_DRAW_POST = 11;
	public const ACMLCEFKPKH GCG_TRIGGER_ACTION_POST = 15;
	public const ACMLCEFKPKH GCG_TRIGGER_ACTION_PAY_CARD_POST = 17;
	public const ACMLCEFKPKH GCG_TRIGGER_ACTION_CHANGE_CHARACTER_POST = 19;
	public const ACMLCEFKPKH GCG_TRIGGER_ACTION_REBOOT_POST = 21;
	public const ACMLCEFKPKH GCG_TRIGGER_ACTION_PASS_POST = 23;
	public const ACMLCEFKPKH GCG_TRIGGER_ON_USE = 25;
	public const ACMLCEFKPKH GCG_TRIGGER_ON_CARD_DIE = 26;
	public const ACMLCEFKPKH GCG_TRIGGER_ON_ADD_CHARACTER = 27;
	public const ACMLCEFKPKH GCG_TRIGGER_ON_BEING_DAMAGE = 28;
}
public enum PCLHHJHKGDC
{
	// Fields
	public const PCLHHJHKGDC NONE = 0;
	public const PCLHHJHKGDC MIN_DISTANCE = 1;
}
public enum ICOCLPDFJCG
{
	// Fields
	public const ICOCLPDFJCG VeryLow = 0;
	public const ICOCLPDFJCG Low = 1;
	public const ICOCLPDFJCG Medium = 2;
	public const ICOCLPDFJCG High = 3;
	public const ICOCLPDFJCG VeryHigh = 4;
}
public enum NJKIGHLOIPB
{
	// Fields
	public const NJKIGHLOIPB VeryLow = 1;
	public const NJKIGHLOIPB Low = 2;
	public const NJKIGHLOIPB Middle = 3;
	public const NJKIGHLOIPB High = 4;
	public const NJKIGHLOIPB VeryHigh = 5;
	public const NJKIGHLOIPB UltraHigh = 6;
	public const NJKIGHLOIPB Num = 8;
}
public enum IMFDPOJHDKN
{
	// Fields
	public const IMFDPOJHDKN VeryLow = 1;
	public const IMFDPOJHDKN Low = 2;
	public const IMFDPOJHDKN Middle = 3;
	public const IMFDPOJHDKN High = 4;
	public const IMFDPOJHDKN VeryHigh = 5;
	public const IMFDPOJHDKN Num = 6;
}
public enum HMONNFGCOGC
{
	// Fields
	public const HMONNFGCOGC None = 0;
	public const HMONNFGCOGC MSAA2x = 1;
	public const HMONNFGCOGC LineHalf = 2;
}
public enum KCFBHFNKBNG
{
	// Fields
	public const KCFBHFNKBNG Low = 0;
	public const KCFBHFNKBNG High = 1;
	public const KCFBHFNKBNG VeryHigh = 2;
}
public enum EODHJFEBDGA
{
	// Fields
	public const EODHJFEBDGA None = 0;
	public const EODHJFEBDGA SMAA = 3;
	public const EODHJFEBDGA TAA = 4;
	public const EODHJFEBDGA FSR2 = 5;
}
public enum AGHCFIJFHHI
{
	// Fields
	public const AGHCFIJFHHI TAALow = 0;
	public const AGHCFIJFHHI TAAHigh = 1;
}
public enum COAPMMBNAIH
{
	// Fields
	public const COAPMMBNAIH Low = 0;
	public const COAPMMBNAIH Medium = 1;
	public const COAPMMBNAIH High = 2;
	public const COAPMMBNAIH Ultra = 3;
}
public enum JPPDILGDAAL
{
	// Fields
	public const JPPDILGDAAL Disable = 0;
	public const JPPDILGDAAL SSAO = 1;
	public const JPPDILGDAAL HBAO = 2;
}
public enum CNIFDOONONI
{
	// Fields
	public const CNIFDOONONI Invalid = 0;
	public const CNIFDOONONI TargetFrameRate = 1;
	public const CNIFDOONONI RenderResolution = 2;
	public const CNIFDOONONI ShadowQuality = 3;
	public const CNIFDOONONI PostprocessEffect = 4;
	public const CNIFDOONONI ParticleEffect = 5;
	public const CNIFDOONONI ComprehensiveQuality = 6;
	public const CNIFDOONONI VSync = 7;
	public const CNIFDOONONI AntiAliasing = 8;
	public const CNIFDOONONI VolumetricFog = 9;
	public const CNIFDOONONI Reflection = 10;
	public const CNIFDOONONI MotionBlur = 11;
	public const CNIFDOONONI Bloom = 12;
	public const CNIFDOONONI CrowdDensity = 13;
	public const CNIFDOONONI ObsoleteOnlineEffect = 14;
	public const CNIFDOONONI ScreenSubsurfaceScattering = 15;
	public const CNIFDOONONI OnlineEffect = 16;
	public const CNIFDOONONI AnisotropicFiltering = 17;
	public const CNIFDOONONI VolatileSetting = 18;
}
public enum APEEOPCCKBO
{
	// Fields
	public const APEEOPCCKBO Grade = 0;
	public const APEEOPCCKBO Literally = 1;
	public const APEEOPCCKBO TextMap = 2;
}
public enum KCAOBDDJFDM
{
	// Fields
	public const KCAOBDDJFDM Low = 0;
	public const KCAOBDDJFDM Medium = 1;
	public const KCAOBDDJFDM High = 2;
	public const KCAOBDDJFDM VeryHigh = 3;
}
public enum OMEMOGKCOIA
{
	// Fields
	public const OMEMOGKCOIA None = 0;
	public const OMEMOGKCOIA Num_Ascend = 1;
	public const OMEMOGKCOIA Num_Descend = 2;
}
public enum GHAHKOAPFOH
{
	// Fields
	public const GHAHKOAPFOH Default = 0;
	public const GHAHKOAPFOH Topmost = 1;
	public const GHAHKOAPFOH High = 2;
	public const GHAHKOAPFOH Middle = 3;
	public const GHAHKOAPFOH Low = 4;
	public const GHAHKOAPFOH VeryLow = 5;
	public const GHAHKOAPFOH Off = 6;
}
public enum BMNNDEBADAD
{
	// Fields
	public const BMNNDEBADAD Default = 0;
	public const BMNNDEBADAD VeryLow = 1;
	public const BMNNDEBADAD Low = 2;
	public const BMNNDEBADAD Medium = 3;
	public const BMNNDEBADAD High = 4;
	public const BMNNDEBADAD VeryHigh = 5;
}
public enum EADIMCHJMOP
{
	// Fields
	public const EADIMCHJMOP ExtremeLow = 0;
	public const EADIMCHJMOP Low = 1;
	public const EADIMCHJMOP Middle = 2;
	public const EADIMCHJMOP High = 3;
}
public enum OCICIJOHEGN
{
	// Fields
	public const OCICIJOHEGN Low = 0;
	public const OCICIJOHEGN Middle = 1;
	public const OCICIJOHEGN High = 2;
	public const OCICIJOHEGN Invalid = 3;
}
public enum GDGCBOJJACG
{
	// Fields
	public const GDGCBOJJACG Min = 0;
	public const GDGCBOJJACG Low = 1;
	public const GDGCBOJJACG Middle = 2;
	public const GDGCBOJJACG High = 4;
	public const GDGCBOJJACG Max = 10;
}
public enum NNGOEGOBBNH
{
	// Fields
	public const NNGOEGOBBNH None = 0;
	public const NNGOEGOBBNH Monster = 1;
	public const NNGOEGOBBNH NPC = 2;
	public const NNGOEGOBBNH Gadget = 3;
	public const NNGOEGOBBNH Trigger = 4;
}
public enum MoleMole.Config.OpenStateType
{
	// Fields
	public const MoleMole.Config.OpenStateType OPEN_STATE_NONE = 0;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PAIMON = 1;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PAIMON_NAVIGATION = 2;
	public const MoleMole.Config.OpenStateType OPEN_STATE_AVATAR_PROMOTE = 3;
	public const MoleMole.Config.OpenStateType OPEN_STATE_AVATAR_TALENT = 4;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_PROMOTE = 5;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_AWAKEN = 6;
	public const MoleMole.Config.OpenStateType OPEN_STATE_QUEST_REMIND = 7;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GAME_GUIDE = 8;
	public const MoleMole.Config.OpenStateType OPEN_STATE_COOK = 9;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_UPGRADE = 10;
	public const MoleMole.Config.OpenStateType OPEN_STATE_RELIQUARY_UPGRADE = 11;
	public const MoleMole.Config.OpenStateType OPEN_STATE_RELIQUARY_PROMOTE = 12;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_PROMOTE_GUIDE = 13;
	public const MoleMole.Config.OpenStateType OPEN_STATE_WEAPON_CHANGE_GUIDE = 14;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PLAYER_LVUP_GUIDE = 15;
	public const MoleMole.Config.OpenStateType OPEN_STATE_FRESHMAN_GUIDE = 16;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SKIP_FRESHMAN_GUIDE = 17;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MOVE_CAMERA = 18;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SCALE_CAMERA = 19;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_KEYBOARD = 20;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MOVE = 21;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_JUMP = 22;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SPRINT = 23;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MAP = 24;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ATTACK = 25;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FLY = 26;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_TALENT = 27;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_RELIC = 28;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_RELIC_PROM = 29;
	public const MoleMole.Config.OpenStateType OPEN_STATE_COMBINE = 30;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GACHA = 31;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_GACHA = 32;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_TEAM = 33;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PROUD = 34;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AVATAR_PROMOTE = 35;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ADVENTURE_CARD = 36;
	public const MoleMole.Config.OpenStateType OPEN_STATE_FORGE = 37;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BAG = 38;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ADVENTURE_DAILYTASK = 40;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ADVENTURE_DUNGEON = 41;
	public const MoleMole.Config.OpenStateType OPEN_STATE_MULTIPLAYER = 49;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MOUSEPC = 50;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MULTIPLAYER = 51;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_DUNGEONREWARD = 52;
	public const MoleMole.Config.OpenStateType OPEN_STATE_AVATAR_FASHION = 54;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_KSLQUEST = 56;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PERSONAL_LINE = 57;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PERSONAL_LINE = 58;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_APPEARANCE = 59;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PROCESS = 60;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PERSONAL_LINE_KEY = 61;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_WIDGET = 62;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ACTIVITY_SKILL_ASTER = 63;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_COLDCLIMATE = 64;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_EXITMULTIPLAYER = 66;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_BUILD = 67;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_REBUILD = 68;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_CARD = 69;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_MONSTER = 70;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_MISSION_CHECK = 71;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_BUILD_SELECT = 72;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_CHALLENGE_START = 73;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CONVERT = 74;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_THEATREMACHANICUS_MULTIPLAYER = 75;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_COOP_TASK = 76;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_HOMEWORLD_ADEPTIABODE = 77;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_HOMEWORLD_DEPLOY = 78;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_EQUIP = 79;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_MP_SOLUTION = 80;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_POWER = 81;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_HIDEANDSEEK_SKILL = 82;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_HOMEWORLD_MAPLIST = 83;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_RELICRESOLVE = 84;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_GGUIDE = 85;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_GGUIDE_HINT = 86;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_EQUIP_V2 = 87;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_MP_SOLUTION_V2 = 88;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHANNELLERSLAB_POWER_V2 = 89;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_QUICK_TEAMMEMBERCHANGE = 90;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_PAIMON = 1001;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_CITY = 1002;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_BLACKSMITH = 1003;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_GROCERY = 1004;
	public const MoleMole.Config.OpenStateType OPEN_STATE_SHOP_TYPE_FOOD = 1005;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SUMO_TEAM_SKILL = 1411;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FISH_RECIPE = 1412;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHESS_MISSION_CHECK = 2001;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHESS_BUILD = 2002;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHESS_WIND_TOWER_CIRCLE = 2003;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CHESS_CARD_SELECT = 2004;
	public const MoleMole.Config.OpenStateType OPEN_STATE_PAIMON_LVINFO = 2100;
	public const MoleMole.Config.OpenStateType OPEN_STATE_TELEPORT_HUD = 2101;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MAP_UNLOCK = 2102;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_PAIMON_LVINFO = 2103;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AMBORTRANSPORT = 2104;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FLY_SECOND = 2105;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_KAEYA_CLUE = 2106;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ROGUE_MAP = 2205;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ROGUE_RUNE = 2206;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BARTENDER_FORMULA = 2210;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BARTENDER_MIX = 2211;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BARTENDER_CUP = 2212;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_POTION_CONFIGURE = 2401;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_LANV2_FIREWORK = 2402;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CRYSTALLINK_BUFF = 2601;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V3_REAL_TIME_EDIT = 2701;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V3_TIMELINE_EDIT = 2702;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V3_SETTING = 2703;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ROBOTGACHA = 2704;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FRAGILE_RESIN = 2800;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_ACTIVITY_SKILL_MUQADAS = 3006;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUQADAS = 3007;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_WINDFIELD_SKILL = 3100;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_VINTAGE_MARKET_UPGRADE = 3101;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_VINTAGE_MARKET_SKILL = 3102;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_VINTAGE_MARKET_STAFF = 3103;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTER_1 = 3201;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTER_2 = 3202;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTER_3 = 3203;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_BRICKBREAKER_SKILL = 3312;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MISTTRIAL_MAP = 3313;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MISTTRIAL_GAME_TIPS = 3314;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_LANV3_SHADOW = 3400;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V4_REAL_TIME_EDIT = 3501;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V4_TIMELINE_EDIT = 3502;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_MUSIC_GAME_V4_SETTING = 3503;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_CRYSTALLINK_BUFF_V2 = 3504;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTERV2_CODEX = 3505;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_FUNGUSFIGHTERV2_CODEX_ENTRY = 3506;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ARCHITECT = 3601;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ASTROLABE_ROTATE = 3611;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ASTROLABE_ROTATE_PS = 3612;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ASTROLABE_HEIGHT = 3613;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_AKAFES_ASTROLABE_HEIGHT_PS = 3614;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SORUSHTRIAL_HITMAN_1 = 3615;
	public const MoleMole.Config.OpenStateType OPEN_STATE_GUIDE_SORUSHTRIAL_PHOTOMATCH_1 = 3616;
}
public enum PJLJLLHAGKL
{
	// Fields
	public const PJLJLLHAGKL Normal = 0;
	public const PJLJLLHAGKL EquipPromote = 1;
	public const PJLJLLHAGKL RelicPromote = 2;
	public const PJLJLLHAGKL TalentInfo = 3;
	public const PJLJLLHAGKL RelicInfo = 4;
	public const PJLJLLHAGKL WeaponInfo = 5;
	public const PJLJLLHAGKL SkillInfo = 6;
	public const PJLJLLHAGKL WeaponSelect = 7;
	public const PJLJLLHAGKL RelicSelect = 8;
	public const PJLJLLHAGKL TheatreMechanicusBuilding = 9;
	public const PJLJLLHAGKL TheatreMechanicusRebuilding = 10;
}
public enum IODBCCPILBC
{
	// Fields
	public const IODBCCPILBC Equal = 0;
	public const IODBCCPILBC Greater = 1;
	public const IODBCCPILBC Less = 2;
	public const IODBCCPILBC GreaterEqual = 3;
	public const IODBCCPILBC LessEqual = 4;
}
public enum DOHOFAMKDMJ
{
	// Fields
	public const DOHOFAMKDMJ All = 0;
	public const DOHOFAMKDMJ Host = 1;
	public const DOHOFAMKDMJ Guest = 2;
}
public enum MFAIOLAMFME
{
	// Fields
	public const MFAIOLAMFME None = 0;
	public const MFAIOLAMFME MusicGameV3Button = 1;
	public const MFAIOLAMFME MusicGameV3Slider = 2;
	public const MFAIOLAMFME RewardAddResin = 3;
	public const MFAIOLAMFME VintageMarketSlider = 4;
	public const MFAIOLAMFME HerculesBattle = 5;
	public const MFAIOLAMFME LanV3Shadow = 6;
	public const MFAIOLAMFME SorushTrialHitman = 7;
	public const MFAIOLAMFME SorushTrialPhotomatch = 8;
}
public enum CLDOHHPJCMO
{
	// Fields
	public const CLDOHHPJCMO Normal = 0;
	public const CLDOHHPJCMO Move = 1;
	public const CLDOHHPJCMO CanFly = 2;
	public const CLDOHHPJCMO Fly = 3;
	public const CLDOHHPJCMO TryToMove = 4;
	public const CLDOHHPJCMO CanPromote = 5;
	public const CLDOHHPJCMO CanUpGrade = 6;
}
public enum NDJNLIKPGGJ
{
	// Fields
	public const NDJNLIKPGGJ Click = 0;
	public const NDJNLIKPGGJ PressDown = 1;
	public const NDJNLIKPGGJ Charge = 2;
	public const NDJNLIKPGGJ Toggle = 3;
	public const NDJNLIKPGGJ LongPress = 4;
}
public enum MPCCGIAODKG
{
	// Fields
	public const MPCCGIAODKG AutoEnd = 0;
	public const MPCCGIAODKG End = 1;
	public const MPCCGIAODKG Begin = 2;
	public const MPCCGIAODKG Click = 3;
	public const MPCCGIAODKG Lasted = 4;
}
public enum KCNCLBHJEKO
{
	// Fields
	public const KCNCLBHJEKO Normal = 0;
	public const KCNCLBHJEKO Slot = 1;
	public const KCNCLBHJEKO CharacterAvatarBtn = 2;
	public const KCNCLBHJEKO CharacterFuncBtn = 3;
	public const KCNCLBHJEKO CharacterAvatarBtnByLevel = 4;
	public const KCNCLBHJEKO Button = 5;
	public const KCNCLBHJEKO TabItem = 6;
	public const KCNCLBHJEKO SynthesisListItem = 7;
	public const KCNCLBHJEKO QuestSelectItem = 8;
	public const KCNCLBHJEKO DynUIItem = 9;
	public const KCNCLBHJEKO GridScroller = 10;
	public const KCNCLBHJEKO SimpleList = 11;
	public const KCNCLBHJEKO CenterVirtualDial = 12;
}
public enum KLIPBHJIKAF
{
	// Fields
	public const KLIPBHJIKAF Normal = 0;
	public const KLIPBHJIKAF Weapon = 1;
	public const KLIPBHJIKAF Relic = 2;
	public const KLIPBHJIKAF Any = 3;
	public const KLIPBHJIKAF Material = 4;
}
public enum EDHGIMOGDLI
{
	// Fields
	public const EDHGIMOGDLI Move = 0;
	public const EDHGIMOGDLI Scale = 1;
}
public enum HEDAPFELFJF
{
	// Fields
	public const HEDAPFELFJF Move = 0;
	public const HEDAPFELFJF Attack = 1;
}
public enum FAIPGBONEEJ
{
	// Fields
	public const FAIPGBONEEJ Normal = 0;
	public const FAIPGBONEEJ InTeam = 1;
}
public enum JHOMABFEKAK
{
	// Fields
	public const JHOMABFEKAK ID = 0;
	public const JHOMABFEKAK Level = 1;
}
public enum HHDIDAAKMNM
{
	// Fields
	public const HHDIDAAKMNM NONE = 0;
	public const HHDIDAAKMNM TASK = 1;
	public const HHDIDAAKMNM QUEST = 2;
}
public enum BIKOJKKJLMH
{
	// Fields
	public const BIKOJKKJLMH NONE = 0;
	public const BIKOJKKJLMH OPEN = 1;
	public const BIKOJKKJLMH CLOSE = 2;
}
public enum KIIFIMLIOBJ
{
	// Fields
	public const KIIFIMLIOBJ None = 0;
	public const KIIFIMLIOBJ iOS = 1;
	public const KIIFIMLIOBJ Standalone = 2;
	public const KIIFIMLIOBJ Android = 3;
	public const KIIFIMLIOBJ PS4 = 4;
	public const KIIFIMLIOBJ Switch = 5;
}
public enum JAKIJLOJKEM
{
	// Fields
	public const JAKIJLOJKEM All = 0;
	public const JAKIJLOJKEM NotDungeon = 1;
	public const JAKIJLOJKEM OnlyBigWorld = 2;
}
public enum CCJFNOIDLHI
{
	// Fields
	public const CCJFNOIDLHI PressDown = 0;
	public const CCJFNOIDLHI Click = 1;
	public const CCJFNOIDLHI Charge = 2;
}
public enum POIHNIEGLDC
{
	// Fields
	public const POIHNIEGLDC Input = 0;
	public const POIHNIEGLDC Switch = 1;
}
public enum AKLOJJNHJAO
{
	// Fields
	public const AKLOJJNHJAO Touch = 0;
	public const AKLOJJNHJAO Mouse = 1;
	public const AKLOJJNHJAO Joypad = 2;
}
public enum NDHELOJDDGC
{
	// Fields
	public const NDHELOJDDGC FreeRotationXY = 0;
	public const NDHELOJDDGC FreeRotationZ = 1;
	public const NDHELOJDDGC Switch = 2;
}
public enum ALKOHNAEBKO
{
	// Fields
	public const ALKOHNAEBKO Normal = 0;
	public const ALKOHNAEBKO Red = 1;
	public const ALKOHNAEBKO Blink = 2;
	public const ALKOHNAEBKO Bubble = 3;
}
public enum KLGPEOGDADI
{
	// Fields
	public const KLGPEOGDADI Normal = 0;
	public const KLGPEOGDADI Black = 1;
	public const KLGPEOGDADI Transparent = 2;
}
public enum KHMIOJFOAOA
{
	// Fields
	public const KHMIOJFOAOA TL = 0;
	public const KHMIOJFOAOA T = 1;
	public const KHMIOJFOAOA TR = 2;
	public const KHMIOJFOAOA L = 3;
	public const KHMIOJFOAOA R = 4;
	public const KHMIOJFOAOA BL = 5;
	public const KHMIOJFOAOA B = 6;
	public const KHMIOJFOAOA BR = 7;
}
public enum PHAFOCEBNBA
{
	// Fields
	public const PHAFOCEBNBA Common = 0;
}
public enum AHFGJHEGIJA
{
	// Fields
	public const AHFGJHEGIJA BagPageScrollTab = 0;
}
public enum KMOMIEPJDCM
{
	// Fields
	public const KMOMIEPJDCM Desert = 0;
}
public enum HJFJDPNCPEH
{
	// Fields
	public const HJFJDPNCPEH Wall = 0;
	public const HJFJDPNCPEH Floor = 1;
	public const HJFJDPNCPEH Ceil = 2;
	public const HJFJDPNCPEH Chandelier = 3;
	public const HJFJDPNCPEH Door = 4;
	public const HJFJDPNCPEH Stair = 5;
	public const HJFJDPNCPEH Invalid = 6;
}
public enum InterPriorityType
{
	// Fields
	public const InterPriorityType OVERRIDE = 0;
	public const InterPriorityType INSERT = 1;
	public const InterPriorityType ADDITIVE = 2;
	public const InterPriorityType FREE_TO_DO = 3;
}
public enum InteractionType
{
	// Fields
	public const InteractionType NONE = 0;
	public const InteractionType DIALOG = 1;
	public const InteractionType DIALOG_NEXT = 2;
	public const InteractionType DIALOG_FINISH = 3;
	public const InteractionType DIALOG_SELECT = 4;
	public const InteractionType BODY_LANG = 5;
	public const InteractionType STEER_TO = 6;
	public const InteractionType LOOK_AT = 7;
	public const InteractionType LOOK_AT_EYECTRL = 8;
	public const InteractionType CAMERA_MOVE = 9;
	public const InteractionType SOUND = 10;
	public const InteractionType CUTSCENE = 11;
	public const InteractionType SHOP_EXCHANGE = 12;
	public const InteractionType GADGET_TOUCH = 13;
	public const InteractionType EMO_SYNC = 14;
	public const InteractionType UI_TRIGGER = 15;
	public const InteractionType EMOTION = 16;
	public const InteractionType VISIBLE = 17;
	public const InteractionType LUA_ACTION = 18;
	public const InteractionType BLACK_SCREEN = 19;
	public const InteractionType GODDESS = 20;
	public const InteractionType SHOW_MESSAGE = 21;
	public const InteractionType CAMERA_FOCUS = 22;
	public const InteractionType DIALOG_CLEAR = 23;
	public const InteractionType AUDIO_PLAY = 24;
	public const InteractionType VIDEO_PLAY = 25;
	public const InteractionType CAMERA_DOF = 26;
	public const InteractionType MOVE_TO = 27;
	public const InteractionType REQUEST_MSG = 28;
	public const InteractionType CAMERA_SHAKE = 29;
	public const InteractionType EMOJI_BUBBLE = 30;
	public const InteractionType TIME_PROTECT = 31;
	public const InteractionType SIMPLE_BLACK_SCREEN = 32;
	public const InteractionType SIMPLE_UI_SHOW = 33;
	public const InteractionType OPEN_BLOSSOM_MARK = 34;
	public const InteractionType SPEECH_BUBBLE = 35;
	public const InteractionType EMOTION_TEMPLATE = 36;
	public const InteractionType SIT_OR_STAND = 37;
	public const InteractionType PLAY_EFFECT = 38;
	public const InteractionType TELEPORT_TO = 39;
	public const InteractionType FIRST_SIGHT = 40;
	public const InteractionType SET_ANIMATOR = 41;
	public const InteractionType PLAY_POST_EFFECT = 42;
	public const InteractionType PLAY_FRAME_FACE_ANIMATION = 43;
	public const InteractionType HIDE_WIDGET_PET = 44;
	public const InteractionType LOCAL_GADGET_OP = 45;
	public const InteractionType PLAY_UI_EFFECT = 46;
	public const InteractionType SET_PLAYER_NPC_ENERGY_TYPE = 47;
	public const InteractionType CHANGE_NPC_MAT = 48;
	public const InteractionType SET_NPC_FLOATING_HEIGHT = 49;
	public const InteractionType SET_NPC_ARM = 50;
	public const InteractionType SPECIAL_ELEMENT_VIEW = 51;
	public const InteractionType BAN_SELF_GLOBAL_VALUE = 52;
	public const InteractionType SET_MODEL_TRANSFORM = 53;
	public const InteractionType CAMERA_SPLINE = 54;
	public const InteractionType SPAWN_ATTACH = 55;
	public const InteractionType CHANGE_TIME = 56;
	public const InteractionType CLOSE_GPU_CULLING = 57;
	public const InteractionType SHOW_BG_PIC = 58;
	public const InteractionType SET_NPC_MAT_PROP_VALUE = 59;
	public const InteractionType ATTACH_OPERATE = 60;
	public const InteractionType CAMERA_POST_PROCESS = 61;
	public const InteractionType CAMERA_FOCUS_NEW = 62;
	public const InteractionType SET_ANIMATOR_SPEED = 63;
	public const InteractionType CAMERA_ORBIT_ENTITY = 64;
	public const InteractionType SKIP_GROUP = 65;
	public const InteractionType STREAM_HOT_SPOT = 66;
	public const InteractionType NEW_CAMERA_SHAKE = 67;
	public const InteractionType PART_ANIM_CONTROL = 68;
	public const InteractionType ADAPTIVE_SOUND = 69;
	public const InteractionType Other = 70;
}
public enum AnimatorParamType2
{
	// Fields
	public const AnimatorParamType2 Trigger = 0;
	public const AnimatorParamType2 Bool = 1;
	public const AnimatorParamType2 Int = 2;
	public const AnimatorParamType2 Float = 3;
}
public enum DialogType
{
	// Fields
	public const DialogType LOCK_FRAME = 0;
	public const DialogType BUBBLE = 1;
	public const DialogType NARRATION = 2;
	public const DialogType Other = 3;
}
public enum DialogSteerType
{
	// Fields
	public const DialogSteerType FREE = 0;
	public const DialogSteerType ABSOLUTE = 1;
	public const DialogSteerType TO_LOCAL_AVATAR = 2;
	public const DialogSteerType RETURN = 3;
	public const DialogSteerType TO_LOCAL_AVATAR_ADVANCED = 4;
	public const DialogSteerType LOOK_AT_ONLY = 5;
	public const DialogSteerType TO_TARGET = 6;
	public const DialogSteerType TO_TARGET_ADVANCED = 7;
	public const DialogSteerType FOLLOW_CAMERA = 8;
	public const DialogSteerType Other = 9;
}
public enum StoryCameraPosType
{
	// Fields
	public const StoryCameraPosType ABSOLUTE = 0;
	public const StoryCameraPosType RELATIVE_TO_INTEE = 1;
	public const StoryCameraPosType RELATIVE_TO_INTER = 2;
	public const StoryCameraPosType RELATIVE_POS_TO_INTEE = 3;
	public const StoryCameraPosType RELATIVE_POS_TO_INTER = 4;
	public const StoryCameraPosType EXIT = 5;
	public const StoryCameraPosType RELATIVE_TO_INTEE_ONLY = 6;
	public const StoryCameraPosType RELATIVE_TO_INTER_ONLY = 7;
	public const StoryCameraPosType RELATIVE_TO_TARGET_ENTITY = 8;
	public const StoryCameraPosType RELATIVE_TO_MULTI_TARGET_ENTITY = 9;
	public const StoryCameraPosType Other = 10;
}
public enum FocusCameraPosType
{
	// Fields
	public const FocusCameraPosType ABSOLUTE = 0;
	public const FocusCameraPosType TARGET_NPC = 1;
}
public enum StoryCameraTargetType
{
	// Fields
	public const StoryCameraTargetType ABSOLUTE = 0;
	public const StoryCameraTargetType TO_INTEE = 1;
	public const StoryCameraTargetType TO_INTER = 2;
	public const StoryCameraTargetType TO_MID = 3;
	public const StoryCameraTargetType RELATIVE_TO_INTER = 4;
	public const StoryCameraTargetType RELATIVE_TO_TARGET_ENTITY = 5;
	public const StoryCameraTargetType RELATIVE_TO_INTEE_FORWARD = 6;
	public const StoryCameraTargetType RELATIVE_TO_INTER_FORWARD = 7;
	public const StoryCameraTargetType RELATIVE_TO_MULTI_TARGET_ENTITY = 8;
	public const StoryCameraTargetType RELATIVE_TO_INTEE = 9;
	public const StoryCameraTargetType Other = 10;
}
public enum InterCameraShakeType
{
	// Fields
	public const InterCameraShakeType DEFAULT = 0;
	public const InterCameraShakeType RANDOM = 1;
	public const InterCameraShakeType INFINITE_RANDOM = 2;
	public const InterCameraShakeType CLOSE = 3;
}
public enum InterNewCameraShakeType
{
	// Fields
	public const InterNewCameraShakeType ROTATION = 0;
	public const InterNewCameraShakeType POSITION = 1;
	public const InterNewCameraShakeType INFINITE_ROTATION = 2;
	public const InterNewCameraShakeType INFINITE_POSITION = 3;
	public const InterNewCameraShakeType CLOSE = 4;
}
public enum BlackScreenType
{
	// Fields
	public const BlackScreenType TO_KEEP_FROM_BLACK = 0;
	public const BlackScreenType TO_BLACK = 1;
	public const BlackScreenType FROM_BLACK = 2;
	public const BlackScreenType BLEND_OUT = 3;
	public const BlackScreenType KEEP_BLACK = 4;
}
public enum EmoBackType
{
	// Fields
	public const EmoBackType NONE = 0;
	public const EmoBackType WITHOUT_BLINK = 1;
	public const EmoBackType WITH_BLINK = 2;
}
public enum MoveToType
{
	// Fields
	public const MoveToType NONE = 0;
	public const MoveToType WALK = 1;
	public const MoveToType RUN = 2;
	public const MoveToType NONEACCURATE = 3;
	public const MoveToType DIRECT = 4;
}
public enum MoveToDirectionType
{
	// Fields
	public const MoveToDirectionType FORWARD = 0;
	public const MoveToDirectionType BACKWARD = 1;
	public const MoveToDirectionType LEFT = 2;
	public const MoveToDirectionType RIGHT = 3;
}
public enum StandDirection
{
	// Fields
	public const StandDirection LEFT = 0;
	public const StandDirection FRONT = 1;
	public const StandDirection RIGHT = 2;
}
public enum RemoveActorType
{
	// Fields
	public const RemoveActorType NONE = 0;
	public const RemoveActorType REMOVE = 1;
	public const RemoveActorType REMOVE_WITH_DISAPPEAR = 2;
	public const RemoveActorType NEW_REMOVE = 3;
	public const RemoveActorType NEW_REMOVE_WITH_DISAPPEAR = 4;
}
public enum LookAtTargetType
{
	// Fields
	public const LookAtTargetType NPC = 0;
	public const LookAtTargetType CAMERA = 1;
	public const LookAtTargetType NONE = 2;
}
public enum FrameFaceAnimationPlayType
{
	// Fields
	public const FrameFaceAnimationPlayType LOOP = 0;
	public const FrameFaceAnimationPlayType NORMAL = 1;
	public const FrameFaceAnimationPlayType CLAMP = 2;
}
public enum VegetationInteractType
{
	// Fields
	public const VegetationInteractType DISPLACEMENT = 0;
	public const VegetationInteractType CUT_GRASS = 1;
	public const VegetationInteractType NONE = 2;
}
public enum ActorBornRelativePosType
{
	// Fields
	public const ActorBornRelativePosType AVATAR = 0;
	public const ActorBornRelativePosType MAIN_INTEE = 1;
	public const ActorBornRelativePosType NPC = 2;
	public const ActorBornRelativePosType AVATAR_NEW = 3;
}
public enum ActorBornRelativePosCheckType
{
	// Fields
	public const ActorBornRelativePosCheckType INTEE_GROUND = 0;
	public const ActorBornRelativePosCheckType AVATAR_GROUND = 1;
}
public enum InterActionTargetType
{
	// Fields
	public const InterActionTargetType NONE = 0;
	public const InterActionTargetType VEHICLE_SKIFF = 1;
	public const InterActionTargetType ACTION_AVATAR = 2;
}
public enum InterActionMatPropType
{
	// Fields
	public const InterActionMatPropType FLOAT = 0;
	public const InterActionMatPropType TEXTURE = 1;
	public const InterActionMatPropType BOOL = 2;
	public const InterActionMatPropType COLOR = 3;
}
public enum TeleportPosSelectType
{
	// Fields
	public const TeleportPosSelectType NONE = 0;
	public const TeleportPosSelectType GCG_PLAYER = 1;
}
public enum LocalGadgetCmdExeType
{
	// Fields
	public const LocalGadgetCmdExeType LOCALGADGET_CMD_INSTANT = 0;
}
public enum InterCameraPostProcessType
{
	// Fields
	public const InterCameraPostProcessType NONE = 0;
	public const InterCameraPostProcessType MOTION_BLUR = 1;
}
public enum EEJDPNKCCEB
{
	// Fields
	public const EEJDPNKCCEB Invalid = 0;
	public const EEJDPNKCCEB EN = 1033;
	public const EEJDPNKCCEB FR = 1036;
	public const EEJDPNKCCEB DE = 1031;
}
public enum EPJJHDONIFF
{
	// Fields
	public const EPJJHDONIFF All = 0;
	public const EPJJHDONIFF Gameplay = 1;
	public const EPJJHDONIFF Menu = 2;
	public const EPJJHDONIFF MusicGame = 3;
}
public enum KDCNJAOHNBI
{
	// Fields
	public const KDCNJAOHNBI None = 0;
	public const KDCNJAOHNBI Backspace = 8;
	public const KDCNJAOHNBI Tab = 9;
	public const KDCNJAOHNBI Clear = 12;
	public const KDCNJAOHNBI Return = 13;
	public const KDCNJAOHNBI Pause = 19;
	public const KDCNJAOHNBI Escape = 27;
	public const KDCNJAOHNBI Space = 32;
	public const KDCNJAOHNBI Exclaim = 33;
	public const KDCNJAOHNBI DoubleQuote = 34;
	public const KDCNJAOHNBI Hash = 35;
	public const KDCNJAOHNBI Dollar = 36;
	public const KDCNJAOHNBI Ampersand = 38;
	public const KDCNJAOHNBI Quote = 39;
	public const KDCNJAOHNBI LeftParen = 40;
	public const KDCNJAOHNBI RightParen = 41;
	public const KDCNJAOHNBI Asterisk = 42;
	public const KDCNJAOHNBI Plus = 43;
	public const KDCNJAOHNBI Comma = 44;
	public const KDCNJAOHNBI Minus = 45;
	public const KDCNJAOHNBI Period = 46;
	public const KDCNJAOHNBI Slash = 47;
	public const KDCNJAOHNBI Alpha0 = 48;
	public const KDCNJAOHNBI Alpha1 = 49;
	public const KDCNJAOHNBI Alpha2 = 50;
	public const KDCNJAOHNBI Alpha3 = 51;
	public const KDCNJAOHNBI Alpha4 = 52;
	public const KDCNJAOHNBI Alpha5 = 53;
	public const KDCNJAOHNBI Alpha6 = 54;
	public const KDCNJAOHNBI Alpha7 = 55;
	public const KDCNJAOHNBI Alpha8 = 56;
	public const KDCNJAOHNBI Alpha9 = 57;
	public const KDCNJAOHNBI Colon = 58;
	public const KDCNJAOHNBI Semicolon = 59;
	public const KDCNJAOHNBI Less = 60;
	public const KDCNJAOHNBI Equals = 61;
	public const KDCNJAOHNBI Greater = 62;
	public const KDCNJAOHNBI Question = 63;
	public const KDCNJAOHNBI At = 64;
	public const KDCNJAOHNBI LeftBracket = 91;
	public const KDCNJAOHNBI Backslash = 92;
	public const KDCNJAOHNBI RightBracket = 93;
	public const KDCNJAOHNBI Caret = 94;
	public const KDCNJAOHNBI Underscore = 95;
	public const KDCNJAOHNBI BackQuote = 96;
	public const KDCNJAOHNBI A = 97;
	public const KDCNJAOHNBI B = 98;
	public const KDCNJAOHNBI C = 99;
	public const KDCNJAOHNBI D = 100;
	public const KDCNJAOHNBI E = 101;
	public const KDCNJAOHNBI F = 102;
	public const KDCNJAOHNBI G = 103;
	public const KDCNJAOHNBI H = 104;
	public const KDCNJAOHNBI I = 105;
	public const KDCNJAOHNBI J = 106;
	public const KDCNJAOHNBI K = 107;
	public const KDCNJAOHNBI L = 108;
	public const KDCNJAOHNBI M = 109;
	public const KDCNJAOHNBI N = 110;
	public const KDCNJAOHNBI O = 111;
	public const KDCNJAOHNBI P = 112;
	public const KDCNJAOHNBI Q = 113;
	public const KDCNJAOHNBI R = 114;
	public const KDCNJAOHNBI S = 115;
	public const KDCNJAOHNBI T = 116;
	public const KDCNJAOHNBI U = 117;
	public const KDCNJAOHNBI V = 118;
	public const KDCNJAOHNBI W = 119;
	public const KDCNJAOHNBI X = 120;
	public const KDCNJAOHNBI Y = 121;
	public const KDCNJAOHNBI Z = 122;
	public const KDCNJAOHNBI Delete = 127;
	public const KDCNJAOHNBI Keypad0 = 256;
	public const KDCNJAOHNBI Keypad1 = 257;
	public const KDCNJAOHNBI Keypad2 = 258;
	public const KDCNJAOHNBI Keypad3 = 259;
	public const KDCNJAOHNBI Keypad4 = 260;
	public const KDCNJAOHNBI Keypad5 = 261;
	public const KDCNJAOHNBI Keypad6 = 262;
	public const KDCNJAOHNBI Keypad7 = 263;
	public const KDCNJAOHNBI Keypad8 = 264;
	public const KDCNJAOHNBI Keypad9 = 265;
	public const KDCNJAOHNBI KeypadPeriod = 266;
	public const KDCNJAOHNBI KeypadDivide = 267;
	public const KDCNJAOHNBI KeypadMultiply = 268;
	public const KDCNJAOHNBI KeypadMinus = 269;
	public const KDCNJAOHNBI KeypadPlus = 270;
	public const KDCNJAOHNBI KeypadEnter = 271;
	public const KDCNJAOHNBI KeypadEquals = 272;
	public const KDCNJAOHNBI UpArrow = 273;
	public const KDCNJAOHNBI DownArrow = 274;
	public const KDCNJAOHNBI RightArrow = 275;
	public const KDCNJAOHNBI LeftArrow = 276;
	public const KDCNJAOHNBI Insert = 277;
	public const KDCNJAOHNBI Home = 278;
	public const KDCNJAOHNBI End = 279;
	public const KDCNJAOHNBI PageUp = 280;
	public const KDCNJAOHNBI PageDown = 281;
	public const KDCNJAOHNBI F1 = 282;
	public const KDCNJAOHNBI F2 = 283;
	public const KDCNJAOHNBI F3 = 284;
	public const KDCNJAOHNBI F4 = 285;
	public const KDCNJAOHNBI F5 = 286;
	public const KDCNJAOHNBI F6 = 287;
	public const KDCNJAOHNBI F7 = 288;
	public const KDCNJAOHNBI F8 = 289;
	public const KDCNJAOHNBI F9 = 290;
	public const KDCNJAOHNBI F10 = 291;
	public const KDCNJAOHNBI F11 = 292;
	public const KDCNJAOHNBI F12 = 293;
	public const KDCNJAOHNBI F13 = 294;
	public const KDCNJAOHNBI F14 = 295;
	public const KDCNJAOHNBI F15 = 296;
	public const KDCNJAOHNBI Numlock = 300;
	public const KDCNJAOHNBI CapsLock = 301;
	public const KDCNJAOHNBI ScrollLock = 302;
	public const KDCNJAOHNBI RightShift = 303;
	public const KDCNJAOHNBI LeftShift = 304;
	public const KDCNJAOHNBI RightControl = 305;
	public const KDCNJAOHNBI LeftControl = 306;
	public const KDCNJAOHNBI RightAlt = 307;
	public const KDCNJAOHNBI LeftAlt = 308;
	public const KDCNJAOHNBI RightCommand = 309;
	public const KDCNJAOHNBI LeftCommand = 310;
	public const KDCNJAOHNBI LeftWindows = 311;
	public const KDCNJAOHNBI RightWindows = 312;
	public const KDCNJAOHNBI AltGr = 313;
	public const KDCNJAOHNBI Help = 315;
	public const KDCNJAOHNBI Print = 316;
	public const KDCNJAOHNBI SysReq = 317;
	public const KDCNJAOHNBI Break = 318;
	public const KDCNJAOHNBI Menu = 319;
	public const KDCNJAOHNBI Mouse0 = 323;
	public const KDCNJAOHNBI Mouse1 = 324;
	public const KDCNJAOHNBI Mouse2 = 325;
	public const KDCNJAOHNBI Mouse3 = 326;
	public const KDCNJAOHNBI Mouse4 = 327;
	public const KDCNJAOHNBI Mouse5 = 328;
	public const KDCNJAOHNBI Mouse6 = 329;
	public const KDCNJAOHNBI JoystickButton0 = 330;
	public const KDCNJAOHNBI JoystickButton1 = 331;
	public const KDCNJAOHNBI JoystickButton2 = 332;
	public const KDCNJAOHNBI JoystickButton3 = 333;
	public const KDCNJAOHNBI JoystickButton4 = 334;
	public const KDCNJAOHNBI JoystickButton5 = 335;
	public const KDCNJAOHNBI JoystickButton6 = 336;
	public const KDCNJAOHNBI JoystickButton7 = 337;
	public const KDCNJAOHNBI JoystickButton8 = 338;
	public const KDCNJAOHNBI JoystickButton9 = 339;
	public const KDCNJAOHNBI JoystickButton10 = 340;
	public const KDCNJAOHNBI JoystickButton11 = 341;
	public const KDCNJAOHNBI JoystickButton12 = 342;
	public const KDCNJAOHNBI JoystickButton13 = 343;
	public const KDCNJAOHNBI JoystickButton14 = 344;
	public const KDCNJAOHNBI JoystickButton15 = 345;
	public const KDCNJAOHNBI JoystickButton16 = 346;
	public const KDCNJAOHNBI JoystickButton17 = 347;
	public const KDCNJAOHNBI JoystickButton18 = 348;
	public const KDCNJAOHNBI JoystickButton19 = 349;
	public const KDCNJAOHNBI Joystick1Button0 = 350;
	public const KDCNJAOHNBI Joystick1Button1 = 351;
	public const KDCNJAOHNBI Joystick1Button2 = 352;
	public const KDCNJAOHNBI Joystick1Button3 = 353;
	public const KDCNJAOHNBI Joystick1Button4 = 354;
	public const KDCNJAOHNBI Joystick1Button5 = 355;
	public const KDCNJAOHNBI Joystick1Button6 = 356;
	public const KDCNJAOHNBI Joystick1Button7 = 357;
	public const KDCNJAOHNBI Joystick1Button8 = 358;
	public const KDCNJAOHNBI Joystick1Button9 = 359;
	public const KDCNJAOHNBI Joystick1Button10 = 360;
	public const KDCNJAOHNBI Joystick1Button11 = 361;
	public const KDCNJAOHNBI Joystick1Button12 = 362;
	public const KDCNJAOHNBI Joystick1Button13 = 363;
	public const KDCNJAOHNBI Joystick1Button14 = 364;
	public const KDCNJAOHNBI Joystick1Button15 = 365;
	public const KDCNJAOHNBI Joystick1Button16 = 366;
	public const KDCNJAOHNBI Joystick1Button17 = 367;
	public const KDCNJAOHNBI Joystick1Button18 = 368;
	public const KDCNJAOHNBI Joystick1Button19 = 369;
	public const KDCNJAOHNBI Joystick2Button0 = 370;
	public const KDCNJAOHNBI Joystick2Button1 = 371;
	public const KDCNJAOHNBI Joystick2Button2 = 372;
	public const KDCNJAOHNBI Joystick2Button3 = 373;
	public const KDCNJAOHNBI Joystick2Button4 = 374;
	public const KDCNJAOHNBI Joystick2Button5 = 375;
	public const KDCNJAOHNBI Joystick2Button6 = 376;
	public const KDCNJAOHNBI Joystick2Button7 = 377;
	public const KDCNJAOHNBI Joystick2Button8 = 378;
	public const KDCNJAOHNBI Joystick2Button9 = 379;
	public const KDCNJAOHNBI Joystick2Button10 = 380;
	public const KDCNJAOHNBI Joystick2Button11 = 381;
	public const KDCNJAOHNBI Joystick2Button12 = 382;
	public const KDCNJAOHNBI Joystick2Button13 = 383;
	public const KDCNJAOHNBI Joystick2Button14 = 384;
	public const KDCNJAOHNBI Joystick2Button15 = 385;
	public const KDCNJAOHNBI Joystick2Button16 = 386;
	public const KDCNJAOHNBI Joystick2Button17 = 387;
	public const KDCNJAOHNBI Joystick2Button18 = 388;
	public const KDCNJAOHNBI Joystick2Button19 = 389;
	public const KDCNJAOHNBI Joystick3Button0 = 390;
	public const KDCNJAOHNBI Joystick3Button1 = 391;
	public const KDCNJAOHNBI Joystick3Button2 = 392;
	public const KDCNJAOHNBI Joystick3Button3 = 393;
	public const KDCNJAOHNBI Joystick3Button4 = 394;
	public const KDCNJAOHNBI Joystick3Button5 = 395;
	public const KDCNJAOHNBI Joystick3Button6 = 396;
	public const KDCNJAOHNBI Joystick3Button7 = 397;
	public const KDCNJAOHNBI Joystick3Button8 = 398;
	public const KDCNJAOHNBI Joystick3Button9 = 399;
	public const KDCNJAOHNBI Joystick3Button10 = 400;
	public const KDCNJAOHNBI Joystick3Button11 = 401;
	public const KDCNJAOHNBI Joystick3Button12 = 402;
	public const KDCNJAOHNBI Joystick3Button13 = 403;
	public const KDCNJAOHNBI Joystick3Button14 = 404;
	public const KDCNJAOHNBI Joystick3Button15 = 405;
	public const KDCNJAOHNBI Joystick3Button16 = 406;
	public const KDCNJAOHNBI Joystick3Button17 = 407;
	public const KDCNJAOHNBI Joystick3Button18 = 408;
	public const KDCNJAOHNBI Joystick3Button19 = 409;
	public const KDCNJAOHNBI Joystick4Button0 = 410;
	public const KDCNJAOHNBI Joystick4Button1 = 411;
	public const KDCNJAOHNBI Joystick4Button2 = 412;
	public const KDCNJAOHNBI Joystick4Button3 = 413;
	public const KDCNJAOHNBI Joystick4Button4 = 414;
	public const KDCNJAOHNBI Joystick4Button5 = 415;
	public const KDCNJAOHNBI Joystick4Button6 = 416;
	public const KDCNJAOHNBI Joystick4Button7 = 417;
	public const KDCNJAOHNBI Joystick4Button8 = 418;
	public const KDCNJAOHNBI Joystick4Button9 = 419;
	public const KDCNJAOHNBI Joystick4Button10 = 420;
	public const KDCNJAOHNBI Joystick4Button11 = 421;
	public const KDCNJAOHNBI Joystick4Button12 = 422;
	public const KDCNJAOHNBI Joystick4Button13 = 423;
	public const KDCNJAOHNBI Joystick4Button14 = 424;
	public const KDCNJAOHNBI Joystick4Button15 = 425;
	public const KDCNJAOHNBI Joystick4Button16 = 426;
	public const KDCNJAOHNBI Joystick4Button17 = 427;
	public const KDCNJAOHNBI Joystick4Button18 = 428;
	public const KDCNJAOHNBI Joystick4Button19 = 429;
	public const KDCNJAOHNBI Joystick5Button0 = 430;
	public const KDCNJAOHNBI Joystick5Button1 = 431;
	public const KDCNJAOHNBI Joystick5Button2 = 432;
	public const KDCNJAOHNBI Joystick5Button3 = 433;
	public const KDCNJAOHNBI Joystick5Button4 = 434;
	public const KDCNJAOHNBI Joystick5Button5 = 435;
	public const KDCNJAOHNBI Joystick5Button6 = 436;
	public const KDCNJAOHNBI Joystick5Button7 = 437;
	public const KDCNJAOHNBI Joystick5Button8 = 438;
	public const KDCNJAOHNBI Joystick5Button9 = 439;
	public const KDCNJAOHNBI Joystick5Button10 = 440;
	public const KDCNJAOHNBI Joystick5Button11 = 441;
	public const KDCNJAOHNBI Joystick5Button12 = 442;
	public const KDCNJAOHNBI Joystick5Button13 = 443;
	public const KDCNJAOHNBI Joystick5Button14 = 444;
	public const KDCNJAOHNBI Joystick5Button15 = 445;
	public const KDCNJAOHNBI Joystick5Button16 = 446;
	public const KDCNJAOHNBI Joystick5Button17 = 447;
	public const KDCNJAOHNBI Joystick5Button18 = 448;
	public const KDCNJAOHNBI Joystick5Button19 = 449;
	public const KDCNJAOHNBI Joystick6Button0 = 450;
	public const KDCNJAOHNBI Joystick6Button1 = 451;
	public const KDCNJAOHNBI Joystick6Button2 = 452;
	public const KDCNJAOHNBI Joystick6Button3 = 453;
	public const KDCNJAOHNBI Joystick6Button4 = 454;
	public const KDCNJAOHNBI Joystick6Button5 = 455;
	public const KDCNJAOHNBI Joystick6Button6 = 456;
	public const KDCNJAOHNBI Joystick6Button7 = 457;
	public const KDCNJAOHNBI Joystick6Button8 = 458;
	public const KDCNJAOHNBI Joystick6Button9 = 459;
	public const KDCNJAOHNBI Joystick6Button10 = 460;
	public const KDCNJAOHNBI Joystick6Button11 = 461;
	public const KDCNJAOHNBI Joystick6Button12 = 462;
	public const KDCNJAOHNBI Joystick6Button13 = 463;
	public const KDCNJAOHNBI Joystick6Button14 = 464;
	public const KDCNJAOHNBI Joystick6Button15 = 465;
	public const KDCNJAOHNBI Joystick6Button16 = 466;
	public const KDCNJAOHNBI Joystick6Button17 = 467;
	public const KDCNJAOHNBI Joystick6Button18 = 468;
	public const KDCNJAOHNBI Joystick6Button19 = 469;
	public const KDCNJAOHNBI Joystick7Button0 = 470;
	public const KDCNJAOHNBI Joystick7Button1 = 471;
	public const KDCNJAOHNBI Joystick7Button2 = 472;
	public const KDCNJAOHNBI Joystick7Button3 = 473;
	public const KDCNJAOHNBI Joystick7Button4 = 474;
	public const KDCNJAOHNBI Joystick7Button5 = 475;
	public const KDCNJAOHNBI Joystick7Button6 = 476;
	public const KDCNJAOHNBI Joystick7Button7 = 477;
	public const KDCNJAOHNBI Joystick7Button8 = 478;
	public const KDCNJAOHNBI Joystick7Button9 = 479;
	public const KDCNJAOHNBI Joystick7Button10 = 480;
	public const KDCNJAOHNBI Joystick7Button11 = 481;
	public const KDCNJAOHNBI Joystick7Button12 = 482;
	public const KDCNJAOHNBI Joystick7Button13 = 483;
	public const KDCNJAOHNBI Joystick7Button14 = 484;
	public const KDCNJAOHNBI Joystick7Button15 = 485;
	public const KDCNJAOHNBI Joystick7Button16 = 486;
	public const KDCNJAOHNBI Joystick7Button17 = 487;
	public const KDCNJAOHNBI Joystick7Button18 = 488;
	public const KDCNJAOHNBI Joystick7Button19 = 489;
	public const KDCNJAOHNBI Joystick8Button0 = 490;
	public const KDCNJAOHNBI Joystick8Button1 = 491;
	public const KDCNJAOHNBI Joystick8Button2 = 492;
	public const KDCNJAOHNBI Joystick8Button3 = 493;
	public const KDCNJAOHNBI Joystick8Button4 = 494;
	public const KDCNJAOHNBI Joystick8Button5 = 495;
	public const KDCNJAOHNBI Joystick8Button6 = 496;
	public const KDCNJAOHNBI Joystick8Button7 = 497;
	public const KDCNJAOHNBI Joystick8Button8 = 498;
	public const KDCNJAOHNBI Joystick8Button9 = 499;
	public const KDCNJAOHNBI Joystick8Button10 = 500;
	public const KDCNJAOHNBI Joystick8Button11 = 501;
	public const KDCNJAOHNBI Joystick8Button12 = 502;
	public const KDCNJAOHNBI Joystick8Button13 = 503;
	public const KDCNJAOHNBI Joystick8Button14 = 504;
	public const KDCNJAOHNBI Joystick8Button15 = 505;
	public const KDCNJAOHNBI Joystick8Button16 = 506;
	public const KDCNJAOHNBI Joystick8Button17 = 507;
	public const KDCNJAOHNBI Joystick8Button18 = 508;
	public const KDCNJAOHNBI Joystick8Button19 = 509;
}
public enum EJPFMNGHJLF
{
	// Fields
	public const EJPFMNGHJLF LANGUAGE_NONE = 0;
	public const EJPFMNGHJLF LANGUAGE_EN = 1;
	public const EJPFMNGHJLF LANGUAGE_SC = 2;
	public const EJPFMNGHJLF LANGUAGE_TC = 3;
	public const EJPFMNGHJLF LANGUAGE_FR = 4;
	public const EJPFMNGHJLF LANGUAGE_DE = 5;
	public const EJPFMNGHJLF LANGUAGE_ES = 6;
	public const EJPFMNGHJLF LANGUAGE_PT = 7;
	public const EJPFMNGHJLF LANGUAGE_RU = 8;
	public const EJPFMNGHJLF LANGUAGE_JP = 9;
	public const EJPFMNGHJLF LANGUAGE_KR = 10;
	public const EJPFMNGHJLF LANGUAGE_TH = 11;
	public const EJPFMNGHJLF LANGUAGE_VN = 12;
	public const EJPFMNGHJLF LANGUAGE_ID = 13;
	public const EJPFMNGHJLF LANGUAGE_TR = 14;
	public const EJPFMNGHJLF LANGUAGE_IT = 15;
}
public enum OCJAPGHGONE
{
	// Fields
	public const OCJAPGHGONE Chinese = 0;
	public const OCJAPGHGONE English = 1;
	public const OCJAPGHGONE Japanese = 2;
	public const OCJAPGHGONE Korean = 3;
}
public enum CurveActionType
{
	// Fields
	public const CurveActionType ReachEvent = 0;
	public const CurveActionType MovingInterval = 1;
}
public enum CurveType
{
	// Fields
	public const CurveType BezierCurve = 0;
	public const CurveType Helix = 1;
}
public enum HMGELBMCKOP
{
	// Fields
	public const HMGELBMCKOP None = 0;
	public const HMGELBMCKOP OnCreate = 1;
	public const HMGELBMCKOP OnUnlock = 2;
}
public enum GAHGBJKOEJN
{
	// Fields
	public const GAHGBJKOEJN None = 0;
	public const GAHGBJKOEJN Normal = 1;
	public const GAHGBJKOEJN AllShow = 2;
}
public enum NPBKNLKECMI
{
	// Fields
	public const NPBKNLKECMI None = 0;
	public const NPBKNLKECMI CameraLook = 1;
	public const NPBKNLKECMI Cutscene = 2;
}
public enum AIKNEFOKMDM
{
	// Fields
	public const AIKNEFOKMDM None = 0;
	public const AIKNEFOKMDM ToAvatar = 1;
	public const AIKNEFOKMDM RemainingDistance = 2;
}
public enum GALFLGHNKOA
{
	// Fields
	public const GALFLGHNKOA And = 0;
	public const GALFLGHNKOA Or = 1;
}
public enum FJAJAEHEALC
{
	// Fields
	public const FJAJAEHEALC Plain = 0;
	public const FJAJAEHEALC Forest = 1;
	public const FJAJAEHEALC Hill = 2;
	public const FJAJAEHEALC Water = 3;
	public const FJAJAEHEALC Mountain = 4;
}
public enum RouteType
{
	// Fields
	public const RouteType OneWay = 0;
	public const RouteType Reciprocate = 1;
	public const RouteType Loop = 2;
}
public enum RotType
{
	// Fields
	public const RotType ROT_NONE = 0;
	public const RotType ROT_ANGLE = 1;
	public const RotType ROT_ROUND = 2;
}
public enum RotAngleType
{
	// Fields
	public const RotAngleType ROT_ANGLE_X = 0;
	public const RotAngleType ROT_ANGLE_Y = 1;
	public const RotAngleType ROT_ANGLE_Z = 2;
}
public enum OHANKOIHAKG
{
	// Fields
	public const OHANKOIHAKG None = 0;
	public const OHANKOIHAKG Prereach = 1;
	public const OHANKOIHAKG Reach = 2;
}
public enum ActorType
{
	// Fields
	public const ActorType INVALID = 0;
	public const ActorType BASE_ENTITY = 1;
	public const ActorType NPC_ACTOR = 2;
	public const ActorType QUEST_ACTOR = 3;
	public const ActorType GLOBAL_ACTOR = 4;
	public const ActorType GADGET_ACTOR = 5;
	public const ActorType SUB_GLOBAL_ACTOR = 6;
	public const ActorType CUTSCENE_ACTOR = 7;
	public const ActorType INTERACTION_ACTOR = 8;
	public const ActorType NPCGLOBAL_ACTOR = 9;
}
public enum TaskID
{
	// Fields
	public const TaskID MOVE_TASK_ID = 0;
	public const TaskID NARRATOR_TASK_ID = 1;
	public const TaskID LOCK_TASK_ID = 2;
	public const TaskID THREAD_TASK_ID = 3;
	public const TaskID TRANSMIT_BTN_ID = 4;
	public const TaskID FORCE_WALK_ID = 5;
	public const TaskID STEER_TO_AUTONOMY_ID = 6;
	public const TaskID HOME_TASK_ID = 7;
	public const TaskID SAFE_CIRCLE = 8;
	public const TaskID NPC_FOLLOW_PLAYER_ID = 9;
	public const TaskID NPC_RUN_AWAY_ID = 10;
	public const TaskID DIST_TO_PLAYER_ID = 11;
	public const TaskID QUEST_LIMIT_REGION_ID = 12;
	public const TaskID CARD_SUMMON_TASK_ID = 13;
	public const TaskID WARNING_TASK_ID = 14;
}
public enum InterTimingType
{
	// Fields
	public const InterTimingType ENTER = 0;
	public const InterTimingType BTN = 1;
	public const InterTimingType EXIT = 2;
}
public enum ActorEvtTargetType
{
	// Fields
	public const ActorEvtTargetType SINGLE = 0;
	public const ActorEvtTargetType ALL = 1;
}
public enum WeatherType
{
	// Fields
	public const WeatherType ClearSky = 0;
	public const WeatherType Cloudy = 1;
	public const WeatherType Foggy = 2;
	public const WeatherType Rain = 3;
	public const WeatherType Snow = 4;
	public const WeatherType Storm = 5;
}
public enum LuaTaskType
{
	// Fields
	public const LuaTaskType NORMAL = 0;
	public const LuaTaskType MOVE = 1;
	public const LuaTaskType THREAT = 2;
	public const LuaTaskType FREE_STYLE = 3;
	public const LuaTaskType LIMIT_REGION = 4;
	public const LuaTaskType BTN_TRANS = 5;
	public const LuaTaskType STEER = 6;
	public const LuaTaskType SPEECH_BUBBLE = 7;
	public const LuaTaskType FORCE_WALK = 8;
	public const LuaTaskType HOME = 9;
	public const LuaTaskType SAFE_CIRCLE = 10;
	public const LuaTaskType NPC_FOLLOW_PLAYER = 11;
	public const LuaTaskType NPC_RUN_AWAY = 12;
	public const LuaTaskType DIST_TO_PLAYER = 13;
	public const LuaTaskType QUEST_LIMIT_REGION = 14;
	public const LuaTaskType CARD_SUMMON = 15;
}
public enum OBJDDOGGGKJ
{
	// Fields
	public const OBJDDOGGGKJ ING = 0;
	public const OBJDDOGGGKJ WAITING = 1;
	public const OBJDDOGGGKJ TRANS = 2;
	public const OBJDDOGGGKJ PRE_FAILED = 3;
	public const OBJDDOGGGKJ FAILED = 4;
	public const OBJDDOGGGKJ SUCCESS = 5;
}
public enum CJLMDFBKDAD
{
	// Fields
	public const CJLMDFBKDAD ING = 0;
	public const CJLMDFBKDAD PAUSING = 1;
}
public enum FDJAKHBPLCB
{
	// Fields
	public const FDJAKHBPLCB INVALID = -1;
	public const FDJAKHBPLCB ACCEPTED = 0;
	public const FDJAKHBPLCB UPDATED = 1;
	public const FDJAKHBPLCB FINISHED = 2;
	public const FDJAKHBPLCB FAILED = 3;
}
public enum LLFEOJJCDHH
{
	// Fields
	public const LLFEOJJCDHH EULER = 0;
	public const LLFEOJJCDHH EULER_XZ = 1;
}
public enum ENKCMMPBHHN
{
	// Fields
	public const ENKCMMPBHHN LUA_LOGIC_AND = 0;
	public const ENKCMMPBHHN LUA_LOGIC_OR = 1;
}
public enum KFIMLHNKDGK
{
	// Fields
	public const KFIMLHNKDGK Default = 0;
	public const KFIMLHNKDGK TransPoint = 1;
	public const KFIMLHNKDGK Quest = 2;
	public const KFIMLHNKDGK Custom = 3;
	public const KFIMLHNKDGK LocalAvatar = 4;
	public const KFIMLHNKDGK Companion = 5;
	public const KFIMLHNKDGK Monster = 6;
	public const KFIMLHNKDGK NearHint = 8;
	public const KFIMLHNKDGK ScenePoint = 9;
	public const KFIMLHNKDGK Task = 10;
	public const KFIMLHNKDGK Boss = 11;
	public const KFIMLHNKDGK Talk = 12;
	public const KFIMLHNKDGK PacketAnchor = 13;
	public const KFIMLHNKDGK Widget = 14;
	public const KFIMLHNKDGK FlightChallenge = 15;
	public const KFIMLHNKDGK Hunting = 16;
	public const KFIMLHNKDGK Routine = 17;
	public const KFIMLHNKDGK ActivitySearchRegion = 18;
	public const KFIMLHNKDGK GalleryChallenge = 19;
	public const KFIMLHNKDGK HomeworldDynamic = 20;
	public const KFIMLHNKDGK SignalPoint = 21;
	public const KFIMLHNKDGK Vehicle = 22;
	public const KFIMLHNKDGK HomeworldFurnitureSuite = 23;
	public const KFIMLHNKDGK Activity = 24;
	public const KFIMLHNKDGK HomeworldFarmField = 25;
	public const KFIMLHNKDGK Offering = 26;
	public const KFIMLHNKDGK QuestAcception = 27;
	public const KFIMLHNKDGK DeshretObeliskChest = 28;
	public const KFIMLHNKDGK POIIndicatorMark = 29;
	public const KFIMLHNKDGK GcgNpc = 30;
	public const KFIMLHNKDGK GadgetMark = 31;
	public const KFIMLHNKDGK QuestAvatarNpc = 32;
	public const KFIMLHNKDGK OfferingRadar = 33;
}
public enum MoleMole.Config.MarkIconType
{
	// Fields
	public const MoleMole.Config.MarkIconType Default = 0;
	public const MoleMole.Config.MarkIconType MarkChurch = 1;
	public const MoleMole.Config.MarkIconType MarkKnights = 2;
	public const MoleMole.Config.MarkIconType MarkPub = 3;
	public const MoleMole.Config.MarkIconType MarkSouvenir = 4;
	public const MoleMole.Config.MarkIconType MarkRestaurant = 5;
	public const MoleMole.Config.MarkIconType MarkGeneralCargo = 6;
	public const MoleMole.Config.MarkIconType MarkBlacksmith = 7;
	public const MoleMole.Config.MarkIconType MarkTeamArranger = 8;
	public const MoleMole.Config.MarkIconType MarkDailyTask = 9;
	public const MoleMole.Config.MarkIconType MarkRandomTask = 10;
	public const MoleMole.Config.MarkIconType MarkAdventurers = 11;
	public const MoleMole.Config.MarkIconType MarkAlchemy = 12;
	public const MoleMole.Config.MarkIconType MarkSeaLampGiving = 13;
	public const MoleMole.Config.MarkIconType MarkInvestigationMonster = 14;
	public const MoleMole.Config.MarkIconType MarkBlacksmith_liyue = 15;
	public const MoleMole.Config.MarkIconType MarkSouvenir_liyue = 16;
	public const MoleMole.Config.MarkIconType MarkRestaurant_liyue = 17;
	public const MoleMole.Config.MarkIconType MarkReputation = 18;
	public const MoleMole.Config.MarkIconType MarkReputation_liyue = 19;
	public const MoleMole.Config.MarkIconType MarkReputation_Inazuma = 20;
	public const MoleMole.Config.MarkIconType MarkBlacksmith_Inazuma = 21;
	public const MoleMole.Config.MarkIconType MarkSouvenir_Inazuma = 22;
	public const MoleMole.Config.MarkIconType MarkRestaurant_Inazuma = 23;
	public const MoleMole.Config.MarkIconType MarkGroupLink = 24;
	public const MoleMole.Config.MarkIconType MarkFish = 25;
	public const MoleMole.Config.MarkIconType MarkFish_liyue = 26;
	public const MoleMole.Config.MarkIconType MarkFish_Inazuma = 27;
	public const MoleMole.Config.MarkIconType MarkGroupLink_Area = 28;
	public const MoleMole.Config.MarkIconType MarkGcgPub = 29;
	public const MoleMole.Config.MarkIconType MarkTransPoint = 100;
	public const MoleMole.Config.MarkIconType MarkTransPointLocked = 101;
	public const MoleMole.Config.MarkIconType MarkPortal = 102;
	public const MoleMole.Config.MarkIconType MarkDungeonEntry = 103;
	public const MoleMole.Config.MarkIconType MarkDungeonEntryLocked = 104;
	public const MoleMole.Config.MarkIconType MarkWeeklyDungeonEntry = 105;
	public const MoleMole.Config.MarkIconType MarkWeeklyDungeonEntryLocked = 106;
	public const MoleMole.Config.MarkIconType MarkDailyDungeonEntry = 107;
	public const MoleMole.Config.MarkIconType MarkDailyDungeonEntryLocked = 108;
	public const MoleMole.Config.MarkIconType MarkTowerDungeonEntry = 109;
	public const MoleMole.Config.MarkIconType MarkTowerDungeonEntryLocked = 110;
	public const MoleMole.Config.MarkIconType MarkDailyDungeonEntryToBeExplored = 111;
	public const MoleMole.Config.MarkIconType MarkTowerDungeonEntryToBeExplored = 112;
	public const MoleMole.Config.MarkIconType MarkEffigyDungeonEntry = 113;
	public const MoleMole.Config.MarkIconType MarkEffigyDungeonEntryLocked = 114;
	public const MoleMole.Config.MarkIconType MarkFleurFairDungeonEntry = 115;
	public const MoleMole.Config.MarkIconType MarkBlitzRushDungeonEntry = 116;
	public const MoleMole.Config.MarkIconType MarkHachiDungeonEntry = 117;
	public const MoleMole.Config.MarkIconType MarkMiniEldritchDungeonEntry = 118;
	public const MoleMole.Config.MarkIconType MarkGoddessLocked = 199;
	public const MoleMole.Config.MarkIconType MarkGoddessUnlocked = 204;
	public const MoleMole.Config.MarkIconType MarkPacketAnchor = 205;
	public const MoleMole.Config.MarkIconType MarkQuest = 300;
	public const MoleMole.Config.MarkIconType MarkDangerousQuest = 301;
	public const MoleMole.Config.MarkIconType MarkQuestArea = 302;
	public const MoleMole.Config.MarkIconType MarkDangerousQuestArea = 303;
	public const MoleMole.Config.MarkIconType MarkCustom = 400;
	public const MoleMole.Config.MarkIconType MarkCustomBoss = 402;
	public const MoleMole.Config.MarkIconType MarkCustomBox = 403;
	public const MoleMole.Config.MarkIconType MarkCustomCollect = 404;
	public const MoleMole.Config.MarkIconType MarkCustomCooking = 405;
	public const MoleMole.Config.MarkIconType MarkCustomMainTask = 407;
	public const MoleMole.Config.MarkIconType MarkCustomMonster = 408;
	public const MoleMole.Config.MarkIconType MarkCustomSlime = 411;
	public const MoleMole.Config.MarkIconType MarkCustomTrap = 412;
	public const MoleMole.Config.MarkIconType MarkCustomWind = 413;
	public const MoleMole.Config.MarkIconType MarkCustomFish = 414;
	public const MoleMole.Config.MarkIconType MarkLocalAvatar = 500;
	public const MoleMole.Config.MarkIconType MarkPlayer1 = 501;
	public const MoleMole.Config.MarkIconType MarkPlayer2 = 502;
	public const MoleMole.Config.MarkIconType MarkPlayer3 = 503;
	public const MoleMole.Config.MarkIconType MarkPlayer4 = 504;
	public const MoleMole.Config.MarkIconType MarkBoredMonster = 505;
	public const MoleMole.Config.MarkIconType MarkRadarHint = 506;
	public const MoleMole.Config.MarkIconType MarkActivity = 507;
	public const MoleMole.Config.MarkIconType MarkTalk = 508;
	public const MoleMole.Config.MarkIconType MarkMiscsMarvs = 509;
	public const MoleMole.Config.MarkIconType MarkActivityAsterLittle = 510;
	public const MoleMole.Config.MarkIconType MarkActivityAsterMiddle = 511;
	public const MoleMole.Config.MarkIconType MarkRadarHintArea = 512;
	public const MoleMole.Config.MarkIconType MarkActivityAsterlarge = 513;
	public const MoleMole.Config.MarkIconType MarkHuntingArea = 514;
	public const MoleMole.Config.MarkIconType MarkActivityAsterMiddleNPC = 515;
	public const MoleMole.Config.MarkIconType MarkWidgetSeverDetectorArea = 516;
	public const MoleMole.Config.MarkIconType MarkActivityFlightChallengePoint = 517;
	public const MoleMole.Config.MarkIconType MarkElderTree = 518;
	public const MoleMole.Config.MarkIconType MarkElderTreeEvent = 519;
	public const MoleMole.Config.MarkIconType MarkWidgetTreasureMapArea = 520;
	public const MoleMole.Config.MarkIconType MarkActivityTreasureMapNPC = 521;
	public const MoleMole.Config.MarkIconType MarkActivityDragonSpineBoss = 522;
	public const MoleMole.Config.MarkIconType MarkActivityBlessing = 523;
	public const MoleMole.Config.MarkIconType MarkActivityMonsterBannerDrakePrimoRock = 524;
	public const MoleMole.Config.MarkIconType MarkActivityExpeditionChallengeArea = 525;
	public const MoleMole.Config.MarkIconType MarkMechanicisNPC = 526;
	public const MoleMole.Config.MarkIconType MarkActivityWaterSpriteExploreArea = 527;
	public const MoleMole.Config.MarkIconType MarkActivityArenaChallenge = 528;
	public const MoleMole.Config.MarkIconType MarkActivityFleurFairFall = 529;
	public const MoleMole.Config.MarkIconType MarkActivityFleurFairBalloon = 530;
	public const MoleMole.Config.MarkIconType MarkActivityWaterSpriteBoss = 531;
	public const MoleMole.Config.MarkIconType MarkActivitySummerTimeRace = 532;
	public const MoleMole.Config.MarkIconType MarkActivityRegionSearch = 600;
	public const MoleMole.Config.MarkIconType MarkGalleryChallenge = 601;
	public const MoleMole.Config.MarkIconType MarkActivityFleurFairNPC = 602;
	public const MoleMole.Config.MarkIconType MarkChannellerSlabCampLow = 603;
	public const MoleMole.Config.MarkIconType MarkChannellerSlabCampMiddle = 604;
	public const MoleMole.Config.MarkIconType MarkChannellerSlabCampHigh = 605;
	public const MoleMole.Config.MarkIconType MarkChannellerSlabOneOffDungeon = 606;
	public const MoleMole.Config.MarkIconType MarkChannellerSlabLoopDungeon = 607;
	public const MoleMole.Config.MarkIconType MarkChannellerSlabNPC = 608;
	public const MoleMole.Config.MarkIconType MarkActivityMiniTomoHiliWeiArea = 609;
	public const MoleMole.Config.MarkIconType MarkActivityHideAndSeekNPC = 610;
	public const MoleMole.Config.MarkIconType MarkHomeworldDjinn = 611;
	public const MoleMole.Config.MarkIconType MarkHomeworldDjinnWeekend = 612;
	public const MoleMole.Config.MarkIconType MarkHomeworldMainHouse = 613;
	public const MoleMole.Config.MarkIconType MarkHideAndSeekHunter = 614;
	public const MoleMole.Config.MarkIconType MarkActivityBuoyantCombatPoint = 615;
	public const MoleMole.Config.MarkIconType MarkActivityBounceConjuring = 616;
	public const MoleMole.Config.MarkIconType MarkHomeworldNpc = 617;
	public const MoleMole.Config.MarkIconType MarkSummerIsleSignalPoint = 620;
	public const MoleMole.Config.MarkIconType MarkVehicleSummonPoint = 621;
	public const MoleMole.Config.MarkIconType MarkVehicleSummonPointLocked = 622;
	public const MoleMole.Config.MarkIconType MarkBounceConjuringNPC = 625;
	public const MoleMole.Config.MarkIconType MarkVehicleSkiff = 626;
	public const MoleMole.Config.MarkIconType MarkHomeworldFurnitureSuite = 630;
	public const MoleMole.Config.MarkIconType MarkHomeworldTransPoint = 631;
	public const MoleMole.Config.MarkIconType MarkHomeworldSafePoint = 632;
	public const MoleMole.Config.MarkIconType MarkHomeworldFarmField1 = 633;
	public const MoleMole.Config.MarkIconType MarkHomeworldFarmField2 = 634;
	public const MoleMole.Config.MarkIconType MarkHomeworldFarmField3 = 635;
	public const MoleMole.Config.MarkIconType MarkActivityTreasureMapChallenge = 700;
	public const MoleMole.Config.MarkIconType MarkActivityBlitzRushParkour = 701;
	public const MoleMole.Config.MarkIconType MarkActivityPerpetualNPC = 705;
	public const MoleMole.Config.MarkIconType MarkOraionokamiTree = 710;
	public const MoleMole.Config.MarkIconType MarkSumoDungeon = 711;
	public const MoleMole.Config.MarkIconType MarkMoonfinTrialChallenge = 712;
	public const MoleMole.Config.MarkIconType MarkMoonfinTrialFinal = 713;
	public const MoleMole.Config.MarkIconType MarkLunaRiteExploreArea = 720;
	public const MoleMole.Config.MarkIconType MarkLunaRiteNPC = 721;
	public const MoleMole.Config.MarkIconType MarkLunaRiteCrystal = 722;
	public const MoleMole.Config.MarkIconType MarkLunaRiteChest = 723;
	public const MoleMole.Config.MarkIconType MarkRoguelike = 730;
	public const MoleMole.Config.MarkIconType MarkBugyowu = 800;
	public const MoleMole.Config.MarkIconType MarkChashitsu = 801;
	public const MoleMole.Config.MarkIconType MarkHomeworldPaimon = 802;
	public const MoleMole.Config.MarkIconType MarkMusicGameNPC = 803;
	public const MoleMole.Config.MarkIconType MarkGrowFlowersNPC = 804;
	public const MoleMole.Config.MarkIconType MarkHachiStealthChallenge = 805;
	public const MoleMole.Config.MarkIconType MarkHachiBattleChallenge = 806;
	public const MoleMole.Config.MarkIconType MarkWinterCampSnowman = 810;
	public const MoleMole.Config.MarkIconType MarkActivityWinterCampBoss = 811;
	public const MoleMole.Config.MarkIconType MarkAnimalCaptureShop = 820;
	public const MoleMole.Config.MarkIconType MarkAlcorTransmit = 821;
	public const MoleMole.Config.MarkIconType MarkQunyugeTransmit = 822;
	public const MoleMole.Config.MarkIconType MarkAshanpoNPC = 830;
	public const MoleMole.Config.MarkIconType MarkPotionDungeonEntry = 840;
	public const MoleMole.Config.MarkIconType MarkProjectionGameEntry = 850;
	public const MoleMole.Config.MarkIconType MarkLanternRiteShipSummonPoint = 860;
	public const MoleMole.Config.MarkIconType MarkLanternRiteShipSummonPointLocked = 861;
	public const MoleMole.Config.MarkIconType MarkMichiaeOffering = 870;
	public const MoleMole.Config.MarkIconType MarkBartenderNPC = 871;
	public const MoleMole.Config.MarkIconType MarkMichiaeChest = 872;
	public const MoleMole.Config.MarkIconType MarkMichiaeChallenge = 873;
	public const MoleMole.Config.MarkIconType MarkCustomLevel = 874;
	public const MoleMole.Config.MarkIconType MarkLuminanceStoneNPC = 2601;
	public const MoleMole.Config.MarkIconType MarkCrystalLink = 2602;
	public const MoleMole.Config.MarkIconType MarkQuestAcception = 2603;
	public const MoleMole.Config.MarkIconType MarkIrodoriFlowerNPC = 2610;
	public const MoleMole.Config.MarkIconType MarkIrodoriPhotoNPC = 2611;
	public const MoleMole.Config.MarkIconType MarkIrodoriMasterNPC = 2612;
	public const MoleMole.Config.MarkIconType MarkIrodoriChessNPC = 2613;
	public const MoleMole.Config.MarkIconType MarkMusicGameV3NPC = 2701;
	public const MoleMole.Config.MarkIconType MarkActivityGachaNPC = 2702;
	public const MoleMole.Config.MarkIconType MarkRogueDiary = 2703;
	public const MoleMole.Config.MarkIconType MarkCocoonSpace = 2704;
	public const MoleMole.Config.MarkIconType MarkIslandPartyNPC = 2801;
	public const MoleMole.Config.MarkIconType MarkSummerTimeV2WanyeDungeonEntry = 2802;
	public const MoleMole.Config.MarkIconType MarkSummerTimeV2XinyanDungeonEntry = 2803;
	public const MoleMole.Config.MarkIconType MarkSummerTimeV2FeixieerDungeonEntry = 2804;
	public const MoleMole.Config.MarkIconType MarkSummerTimeV2MonaDungeonEntry = 2805;
	public const MoleMole.Config.MarkIconType MarkSummerTimeV2BoatSummonPoint = 2806;
	public const MoleMole.Config.MarkIconType MarkGearGameEntry = 2807;
	public const MoleMole.Config.MarkIconType MarkEchoShellV2 = 2808;
	public const MoleMole.Config.MarkIconType MarkArenaChallengeV3 = 2809;
	public const MoleMole.Config.MarkIconType MarkReputation_Sumeru = 3001;
	public const MoleMole.Config.MarkIconType MarkBlacksmith_Sumeru = 3002;
	public const MoleMole.Config.MarkIconType MarkSouvenir_Sumeru = 3003;
	public const MoleMole.Config.MarkIconType MarkRestaurant_Sumeru = 3004;
	public const MoleMole.Config.MarkIconType MarkGravenInnocenceCarveNPC = 3005;
	public const MoleMole.Config.MarkIconType MarkTreasureHuntExploration = 3006;
	public const MoleMole.Config.MarkIconType MarkTreasureHuntExcavation = 3007;
	public const MoleMole.Config.MarkIconType MarkInstableSprayDungeonEntry = 3008;
	public const MoleMole.Config.MarkIconType MarkMuqadasPotionDungeonEntry = 3009;
	public const MoleMole.Config.MarkIconType MarkDeshretObeliskChest = 3010;
	public const MoleMole.Config.MarkIconType MarkVanasaraTree = 3011;
	public const MoleMole.Config.MarkIconType MarkLibrary_Sumeru = 3012;
	public const MoleMole.Config.MarkIconType MarkCafe_Sumeru = 3013;
	public const MoleMole.Config.MarkIconType MarkTemple_Sumeru = 3014;
	public const MoleMole.Config.MarkIconType MarkTalkMainWQ = 3015;
	public const MoleMole.Config.MarkIconType MarkFish_Sumeru = 3016;
	public const MoleMole.Config.MarkIconType MarkWindFieldEntry = 3101;
	public const MoleMole.Config.MarkIconType MarkVintageHuntingStageOneNPC = 3102;
	public const MoleMole.Config.MarkIconType MarkVintageHuntingStageTwoNPC = 3103;
	public const MoleMole.Config.MarkIconType MarkVintageHuntingStageThreeNPC = 3104;
	public const MoleMole.Config.MarkIconType MarkVintageMarketDeliverNPC = 3105;
	public const MoleMole.Config.MarkIconType MarkVintageMarketBarginNPC = 3106;
	public const MoleMole.Config.MarkIconType MarkVintageMarketStore = 3107;
	public const MoleMole.Config.MarkIconType MarkPOIIndicator = 3108;
	public const MoleMole.Config.MarkIconType MarkFungusFighterCultivateNPC = 3201;
	public const MoleMole.Config.MarkIconType MarkEffigyV2 = 3202;
	public const MoleMole.Config.MarkIconType MarkFungusFighterTrainingDungeonEntry = 3203;
	public const MoleMole.Config.MarkIconType MarkFungusFighterPlotDungeonEntry = 3204;
	public const MoleMole.Config.MarkIconType MarkGcgNpcNormal = 3301;
	public const MoleMole.Config.MarkIconType MarkGcgNpcFinish = 3302;
	public const MoleMole.Config.MarkIconType MarkGcgNpcLock = 3303;
	public const MoleMole.Config.MarkIconType MarkGcgWeek = 3304;
	public const MoleMole.Config.MarkIconType MarkGcgCat = 3305;
	public const MoleMole.Config.MarkIconType MarkGcgBoard = 3306;
	public const MoleMole.Config.MarkIconType MarkGcgNpcClear = 3307;
	public const MoleMole.Config.MarkIconType MarkBrickBreakerWorld = 3308;
	public const MoleMole.Config.MarkIconType MarkBrickBreakerDungeon = 3309;
	public const MoleMole.Config.MarkIconType MarkDuelHeart = 3401;
	public const MoleMole.Config.MarkIconType MarkLanV3BoatGameNPC = 3402;
	public const MoleMole.Config.MarkIconType MarkTeamChain = 3403;
	public const MoleMole.Config.MarkIconType MarkElectroHerculesBattle = 3404;
	public const MoleMole.Config.MarkIconType MarkLanV3ShadowGameNPC = 3405;
	public const MoleMole.Config.MarkIconType MarkFakeGoddessUnlocked = 3501;
	public const MoleMole.Config.MarkIconType MarkFleurFairV2Pacman = 3504;
	public const MoleMole.Config.MarkIconType MarkFungusV2EntryNPC = 3505;
	public const MoleMole.Config.MarkIconType MarkVehicleSorush = 3601;
	public const MoleMole.Config.MarkIconType GadgetRegionYellowArea = 3602;
	public const MoleMole.Config.MarkIconType GadgetRegionBlueArea = 3603;
	public const MoleMole.Config.MarkIconType GadgetRegionRedArea = 3604;
	public const MoleMole.Config.MarkIconType MarkQuestAvatarNpc = 3605;
	public const MoleMole.Config.MarkIconType MarkOfferingRadarHintArea = 3606;
	public const MoleMole.Config.MarkIconType MarkOfferingPariLake = 3607;
	public const MoleMole.Config.MarkIconType MarkSandWormCannonNPCStage1 = 3608;
	public const MoleMole.Config.MarkIconType MarkSandWormCannonNPCStage2 = 3609;
	public const MoleMole.Config.MarkIconType MarkSandWormCannonNPCStage3 = 3610;
	public const MoleMole.Config.MarkIconType MarkSandWormCannonNPCStage4 = 3611;
	public const MoleMole.Config.MarkIconType MarkSandWormCannonNPCStage5 = 3612;
	public const MoleMole.Config.MarkIconType MarkAkaFesPotionDungeonEntry = 3613;
	public const MoleMole.Config.MarkIconType MarkAkaFesReasoningNPC = 3614;
	public const MoleMole.Config.MarkIconType MarkAkaFesAstrolabeNPC = 3615;
	public const MoleMole.Config.MarkIconType MarkAkaFesArchitectNPC = 3616;
	public const MoleMole.Config.MarkIconType MarkAkaFesRhythmNPC = 3617;
}
public enum BIPFAAKIJOG
{
	// Fields
	public const BIPFAAKIJOG None = 0;
	public const BIPFAAKIJOG LocalPlayer = 1;
	public const BIPFAAKIJOG OtherPlayer = 2;
	public const BIPFAAKIJOG QuestMain = 3;
	public const BIPFAAKIJOG QuestBranch = 4;
	public const BIPFAAKIJOG Radar = 5;
	public const BIPFAAKIJOG TransportGoddess = 6;
	public const BIPFAAKIJOG Dungeon = 7;
	public const BIPFAAKIJOG QuestEvent = 8;
	public const BIPFAAKIJOG QuestActivity = 9;
	public const BIPFAAKIJOG QuestWorld = 10;
	public const BIPFAAKIJOG QuestRandom = 11;
	public const BIPFAAKIJOG Ore = 12;
	public const BIPFAAKIJOG Activity = 13;
	public const BIPFAAKIJOG Custom = 14;
	public const BIPFAAKIJOG Monster = 15;
	public const BIPFAAKIJOG TransportOther = 16;
	public const BIPFAAKIJOG NpcAdventure = 17;
	public const BIPFAAKIJOG NpcActivity = 18;
	public const BIPFAAKIJOG Area = 19;
	public const BIPFAAKIJOG Default = 20;
	public const BIPFAAKIJOG NpcOther = 21;
	public const BIPFAAKIJOG Vehicle = 22;
	public const BIPFAAKIJOG QuestAcception = 23;
	public const BIPFAAKIJOG HomeworldMainHouse = 1001;
	public const BIPFAAKIJOG HomeworldFarmField = 1002;
	public const BIPFAAKIJOG HomeworldFurnitureSuite = 1003;
	public const BIPFAAKIJOG HomeworldDjinn = 1004;
	public const BIPFAAKIJOG HomeworldNpc = 1005;
	public const BIPFAAKIJOG HomeworldTransPoint = 1006;
	public const BIPFAAKIJOG HomeworldSafePoint = 1007;
}
public enum KEDOICPIAGO
{
	// Fields
	public const KEDOICPIAGO NONE = 0;
	public const KEDOICPIAGO ALWAYS = 1;
	public const KEDOICPIAGO AROUND = 2;
	public const KEDOICPIAGO CONDITION_ONLY = 3;
	public const KEDOICPIAGO OTHER = 4;
}
public enum IIDFMIHPGAB
{
	// Fields
	public const IIDFMIHPGAB NONE = 0;
	public const IIDFMIHPGAB MAP_MARK_NORMAL = 1;
	public const IIDFMIHPGAB MAP_MARK_LOCAL_AVATAR = 2;
	public const IIDFMIHPGAB MAP_MARK_LOCAL_SIGHT = 3;
	public const IIDFMIHPGAB MAP_MARK_SOUTH = 4;
	public const IIDFMIHPGAB MAP_MARK_MINI_OTHER = 5;
	public const IIDFMIHPGAB MAP_MARK_CUSTOM = 6;
	public const IIDFMIHPGAB OTHER = 7;
}
public enum ALJGAHFJOEG
{
	// Fields
	public const ALJGAHFJOEG RedCircle = 0;
	public const ALJGAHFJOEG BlueCircle = 1;
	public const ALJGAHFJOEG OTHER = 2;
}
public enum HGMIEFLCCIH
{
	// Fields
	public const HGMIEFLCCIH NORMAL = 0;
	public const HGMIEFLCCIH FIRST = 1;
	public const HGMIEFLCCIH LAST = 2;
}
public enum DKFIHCILHNK
{
	// Fields
	public const DKFIHCILHNK None = 0;
	public const DKFIHCILHNK Invisible = 1;
	public const DKFIHCILHNK Around = 2;
	public const DKFIHCILHNK Always = 3;
}
public enum JKIENHAJPHC
{
	// Fields
	public const JKIENHAJPHC None = 0;
	public const JKIENHAJPHC Boss = 1;
	public const JKIENHAJPHC Character = 2;
	public const JKIENHAJPHC Paimon = 3;
	public const JKIENHAJPHC QuestAvatarNpc = 4;
}
public enum PCDEJDLPBFF
{
	// Fields
	public const PCDEJDLPBFF Default = 0;
	public const PCDEJDLPBFF Teleport = 1;
	public const PCDEJDLPBFF Trace = 2;
}
public enum FAIIJMFFALA
{
	// Fields
	public const FAIIJMFFALA RetreatType = 0;
	public const FAIIJMFFALA RetreatAirType = 1;
	public const FAIIJMFFALA RushMoveType = 2;
	public const FAIIJMFFALA WindZoneType = 3;
	public const FAIIJMFFALA AirflowType = 4;
	public const FAIIJMFFALA RiseType = 5;
	public const FAIIJMFFALA SpeedupType = 6;
	public const FAIIJMFFALA AirflowAccType = 7;
	public const FAIIJMFFALA InertiaType = 8;
	public const FAIIJMFFALA FixedRushMoveType = 9;
	public const FAIIJMFFALA LightCoreTypeNormal = 10;
	public const FAIIJMFFALA LightCoreTypeAccelerate = 11;
	public const FAIIJMFFALA GorouZoneType = 12;
	public const FAIIJMFFALA UGCDirectedForceType = 13;
	public const FAIIJMFFALA TrampolineForceType = 14;
	public const FAIIJMFFALA GrapplingHookMoveType = 15;
}
public enum LOOJAADLELG
{
	// Fields
	public const LOOJAADLELG Level = 0;
	public const LOOJAADLELG Challenge = 1;
	public const LOOJAADLELG Default = 2;
}
public enum GKBOHHGDCAI
{
	// Fields
	public const GKBOHHGDCAI Linear = 0;
	public const GKBOHHGDCAI Axial = 1;
}
public enum EOFPKLHBDIG
{
	// Fields
	public const EOFPKLHBDIG X = 0;
	public const EOFPKLHBDIG Y = 1;
	public const EOFPKLHBDIG Z = 2;
}
public enum NBCEPDLLCFO
{
	// Fields
	public const NBCEPDLLCFO Loop = 0;
	public const NBCEPDLLCFO Reciprocate = 1;
	public const NBCEPDLLCFO Once = 2;
}
public enum GNNALCJHEJP
{
	// Fields
	public const GNNALCJHEJP ForwardOnly = 0;
	public const GNNALCJHEJP ForwardBackward = 1;
	public const GNNALCJHEJP FourDirection = 2;
	public const GNNALCJHEJP LeftRight = 3;
	public const GNNALCJHEJP AirBlend = 4;
	public const GNNALCJHEJP AirBlend3D = 5;
}
public enum GACGHDOLMIE
{
	// Fields
	public const GACGHDOLMIE NormalHumanoidType = 0;
	public const GACGHDOLMIE StoopType = 1;
	public const GACGHDOLMIE StrongHumanoidType = 2;
	public const GACGHDOLMIE SlimeType = 3;
	public const GACGHDOLMIE OtherType = 99;
}
public enum POOALBJHOEC
{
	// Fields
	public const POOALBJHOEC All = 0;
	public const POOALBJHOEC Walk = 1;
	public const POOALBJHOEC Run = 2;
	public const POOALBJHOEC None = 3;
}
public enum CDDFKHIEBHN
{
	// Fields
	public const CDDFKHIEBHN NoDelay = 0;
	public const CDDFKHIEBHN Normal = 1;
	public const CDDFKHIEBHN Long = 2;
}
public enum PNCAGINLFFG
{
	// Fields
	public const PNCAGINLFFG Stay = 0;
	public const PNCAGINLFFG Keep = 1;
	public const PNCAGINLFFG Destroy = 2;
	public const PNCAGINLFFG StayAndReturn = 3;
}
public enum OIINECPOLPK
{
	// Fields
	public const OIINECPOLPK LocalAvatar = 0;
	public const OIINECPOLPK LocalAvatarSyncedLocation = 1;
	public const OIINECPOLPK LocalAvatarAuthority = 2;
	public const OIINECPOLPK TargetEntity = 3;
	public const OIINECPOLPK GroupGadgetEntity = 4;
	public const OIINECPOLPK GroupMonsterEntity = 5;
	public const OIINECPOLPK NpcEntity = 6;
	public const OIINECPOLPK OriginOwnerLocalAvatar = 7;
}
public enum JIEAEJOAFCJ
{
	// Fields
	public const JIEAEJOAFCJ MoveCollider = 0;
	public const JIEAEJOAFCJ ScenePropCollider = 1;
}
public enum HGJDMGCFOMG
{
	// Fields
	public const HGJDMGCFOMG Normal = 0;
	public const HGJDMGCFOMG Arc = 1;
	public const HGJDMGCFOMG Rot = 2;
}
public enum ICIAKBNGJDD
{
	// Fields
	public uint value__; // 0x10
	public const ICIAKBNGJDD None = 0;
	public const ICIAKBNGJDD Time = 1;
	public const ICIAKBNGJDD SceneId = 2;
	public const ICIAKBNGJDD AreaId = 4;
	public const ICIAKBNGJDD Weather = 8;
	public const ICIAKBNGJDD EnemyCount = 16;
	public const ICIAKBNGJDD EnemyDistance = 32;
	public const ICIAKBNGJDD QuestIdList = 64;
	public const ICIAKBNGJDD LastUserCue = 128;
	public const ICIAKBNGJDD Random = 256;
}
public enum DCBKCIOGNAN
{
	// Fields
	public ulong value__; // 0x10
	public const DCBKCIOGNAN None = 0;
	public const DCBKCIOGNAN StageStart = 1;
	public const DCBKCIOGNAN StageReady = 2;
	public const DCBKCIOGNAN StageFinish = 4;
	public const DCBKCIOGNAN QuestBegin = 8;
	public const DCBKCIOGNAN QuestEnd = 16;
	public const DCBKCIOGNAN CutsceneBegin = 32;
	public const DCBKCIOGNAN CutsceneEnd = 64;
	public const DCBKCIOGNAN CutsceneCustom = 128;
	public const DCBKCIOGNAN DialogBegin = 256;
	public const DCBKCIOGNAN DialogEnd = 512;
	public const DCBKCIOGNAN CombatBegin = 1024;
	public const DCBKCIOGNAN CombatEnd = 2048;
	public const DCBKCIOGNAN TeleportBegin = 4096;
	public const DCBKCIOGNAN TeleportEnd = 8192;
	public const DCBKCIOGNAN AreaChange = 16384;
	public const DCBKCIOGNAN Death = 32768;
	public const DCBKCIOGNAN WeatherChange = 65536;
	public const DCBKCIOGNAN MenuOpen = 131072;
	public const DCBKCIOGNAN MenuClose = 262144;
}
public enum EKHMNDDDKFP
{
	// Fields
	public uint value__; // 0x10
	public const EKHMNDDDKFP Beat = 1;
	public const EKHMNDDDKFP Bar = 2;
	public const EKHMNDDDKFP Grid = 4;
	public const EKHMNDDDKFP Cue = 8;
	public const EKHMNDDDKFP Exit = 16;
	public const EKHMNDDDKFP Time = 32;
	public const EKHMNDDDKFP Stimulus = 64;
}
public enum HHFPJJCAMNP
{
	// Fields
	public const HHFPJJCAMNP Left_Up = 0;
	public const HHFPJJCAMNP Left_Right = 1;
	public const HHFPJJCAMNP Left_Down = 2;
	public const HHFPJJCAMNP Left_Left = 3;
	public const HHFPJJCAMNP Right_Up = 4;
	public const HHFPJJCAMNP Right_Right = 5;
	public const HHFPJJCAMNP Right_Down = 6;
	public const HHFPJJCAMNP Right_Left = 7;
}
public enum IODFKCPCLMO
{
	// Fields
	public const IODFKCPCLMO None = 0;
	public const IODFKCPCLMO Obstacle = 1;
}
public enum NDDNPBHBOEI
{
	// Fields
	public const NDDNPBHBOEI Show = 1;
	public const NDDNPBHBOEI Anger = 2;
	public const NDDNPBHBOEI Domangic = 3;
	public const NDDNPBHBOEI Guide = 4;
	public const NDDNPBHBOEI Hope = 5;
	public const NDDNPBHBOEI Wave = 6;
	public const NDDNPBHBOEI ShowMove = 7;
	public const NDDNPBHBOEI BlowNormal = 8;
	public const NDDNPBHBOEI BlowContinuous = 9;
}
public enum ELDGCGEBGLI
{
	// Fields
	public const ELDGCGEBGLI SelfTick = 1;
	public const ELDGCGEBGLI DevUI = 2;
	public const ELDGCGEBGLI Task = 3;
	public const ELDGCGEBGLI Navigation = 4;
}
public enum AOHAGOEDMEL
{
	// Fields
	public const AOHAGOEDMEL Rectangle = 0;
	public const AOHAGOEDMEL Ellipse = 1;
}
public enum BAMJIDDKJEG
{
	// Fields
	public const BAMJIDDKJEG NormalState = 0;
	public const BAMJIDDKJEG ExcitedState = 1;
	public const BAMJIDDKJEG DestroyState = 2;
}
public enum GENMNKBHBGH
{
	// Fields
	public const GENMNKBHBGH Sprint = 0;
	public const GENMNKBHBGH Jump = 1;
	public const GENMNKBHBGH Slip = 2;
	public const GENMNKBHBGH AttackMode = 3;
	public const GENMNKBHBGH Skill1 = 4;
	public const GENMNKBHBGH Skill2 = 5;
	public const GENMNKBHBGH Skill3 = 6;
	public const GENMNKBHBGH Skill4 = 7;
	public const GENMNKBHBGH Skill5 = 8;
	public const GENMNKBHBGH SkillLeft = 9;
	public const GENMNKBHBGH Squat = 10;
	public const GENMNKBHBGH Roll = 11;
	public const GENMNKBHBGH Charge = 12;
	public const GENMNKBHBGH QuickUse = 13;
	public const GENMNKBHBGH VehicleOff = 14;
	public const GENMNKBHBGH VehicleUp = 15;
	public const GENMNKBHBGH VehicleDown = 16;
}
public enum EBHKBGCNBMF
{
	// Fields
	public const EBHKBGCNBMF SlotAM = 0;
	public const EBHKBGCNBMF Slot1 = 1;
	public const EBHKBGCNBMF Slot2 = 2;
	public const EBHKBGCNBMF Slot3 = 3;
	public const EBHKBGCNBMF Slot4 = 4;
	public const EBHKBGCNBMF Slot5 = 5;
	public const EBHKBGCNBMF SlotLeft = 6;
	public const EBHKBGCNBMF SlotCharge = 7;
	public const EBHKBGCNBMF SlotQuickUse = 8;
	public const EBHKBGCNBMF SlotInvalid = 99;
}
public enum HDGDADANPEP
{
	// Fields
	public const HDGDADANPEP Normal = 0;
	public const HDGDADANPEP Sneak = 1;
	public const HDGDADANPEP DvalinS01FlyState = 2;
	public const HDGDADANPEP Bomber = 3;
	public const HDGDADANPEP FindCat = 4;
	public const HDGDADANPEP WildSneak = 5;
	public const HDGDADANPEP GlidingChallengeState = 6;
	public const HDGDADANPEP LookAtCameraState = 7;
	public const HDGDADANPEP FleurFairFall = 8;
	public const HDGDADANPEP EndoraState = 9;
	public const HDGDADANPEP FleurFairBalloon = 10;
	public const HDGDADANPEP HideAndSeek = 11;
	public const HDGDADANPEP HideAndSeek_Ghost = 12;
	public const HDGDADANPEP Vehicle_Skiff = 13;
	public const HDGDADANPEP BounceConjuring = 14;
	public const HDGDADANPEP ActivityAimState = 15;
	public const HDGDADANPEP ElectricCoreState = 16;
	public const HDGDADANPEP Fishing = 17;
	public const HDGDADANPEP AvatarTransMove = 18;
	public const HDGDADANPEP AvatarTransMove_NoJump = 19;
	public const HDGDADANPEP Tail = 20;
	public const HDGDADANPEP WinterCampRace = 21;
	public const HDGDADANPEP Bartender = 22;
	public const HDGDADANPEP UGCForbidSkill = 23;
	public const HDGDADANPEP Blocking = 24;
	public const HDGDADANPEP BlackMud = 25;
	public const HDGDADANPEP LannaluoState = 26;
	public const HDGDADANPEP GrapplingHook = 27;
	public const HDGDADANPEP BoarHunt = 28;
	public const HDGDADANPEP BoarChuck = 29;
	public const HDGDADANPEP BoarKingChallenge = 30;
	public const HDGDADANPEP FungusFighterBattle = 31;
	public const HDGDADANPEP CharAmuseBaseball = 32;
	public const HDGDADANPEP CharAmuseFootball = 33;
	public const HDGDADANPEP HideAndSeek_GhostV2 = 34;
	public const HDGDADANPEP ActivityBreakout = 35;
	public const HDGDADANPEP HideAndSeek_AliveV2 = 36;
	public const HDGDADANPEP Vehicle_Sorush = 37;
	public const HDGDADANPEP LanternRiteV3Boat = 38;
	public const HDGDADANPEP PacMan = 39;
}
public enum NPLPIMLJACL
{
	// Fields
	public const NPLPIMLJACL CAVE_POINT = 0;
	public const NPLPIMLJACL CAVE_POLYGON = 1;
}
public enum PDONLLMLHMI
{
	// Fields
	public const PDONLLMLHMI NORMAL = 0;
	public const PDONLLMLHMI REGION_ENTRANCE = 1;
	public const PDONLLMLHMI REGION_TRANSPORT = 2;
}
public enum NGAMMMAGDKJ
{
	// Fields
	public const NGAMMMAGDKJ NONE = 0;
	public const NGAMMMAGDKJ INSIDE_POLYGON = 1;
	public const NGAMMMAGDKJ INSIDE_RADIUS = 2;
}
public enum MILINKEEAPM
{
	// Fields
	public const MILINKEEAPM QUEST_STATE = 0;
	public const MILINKEEAPM TRANSPORT_UNLOCKED = 1;
	public const MILINKEEAPM QUEST_GLOBAL_VAR = 2;
	public const MILINKEEAPM QUEST_TRACKING = 3;
}
public enum JPODNJCNEFE
{
	// Fields
	public const JPODNJCNEFE onCreate = 0;
	public const JPODNJCNEFE onCombat = 1;
	public const JPODNJCNEFE onSceneDataNotify = 2;
}
public enum ENFAPPGMODO
{
	// Fields
	public const ENFAPPGMODO QTE_STEP_BUTTON_INPUT_JUMP = 0;
	public const ENFAPPGMODO QTE_STEP_BUTTON_INPUT_LEFT_MOVE = 1;
}
public enum QTEStepCameraPosType
{
	// Fields
	public const QTEStepCameraPosType QTE_CAMERA_POS_NONE = 0;
	public const QTEStepCameraPosType QTE_CAMERA_POS_EXIT = 1;
	public const QTEStepCameraPosType QTE_CAMERA_POS_RELATIVE_TO_AVATAR = 2;
}
public enum QTEStepCameraTargetType
{
	// Fields
	public const QTEStepCameraTargetType QTE_CAMERA_TAR_NONE = 0;
	public const QTEStepCameraTargetType QTE_CAMERA_TAR_RELATIVE_TO_AVATAR = 1;
}
public enum KKIAHCNLFKE
{
	// Fields
	public const KKIAHCNLFKE QTE_STEP_COND_NONE = 0;
	public const KKIAHCNLFKE QTE_STEP_COND_POWER_BAR_VALUE = 1;
	public const KKIAHCNLFKE QTE_STEP_COND_BUTTON_COUNT_DOWN_VALUE = 2;
}
public enum DKJPPHLADDN
{
	// Fields
	public const DKJPPHLADDN QTE_STEP_ACTION_NONE = 0;
	public const DKJPPHLADDN QTE_STEP_ACTION_SUCCESS = 1;
	public const DKJPPHLADDN QTE_STEP_ACTION_FAIL = 2;
	public const DKJPPHLADDN QTE_STEP_ACTION_POWER_BAR_VALUE_CHANGE = 3;
	public const DKJPPHLADDN QTE_STEP_ACTION_POWER_BAR_PRESS_DOWN = 4;
	public const DKJPPHLADDN QTE_STEP_ACTION_AVATAR_SHAKE_HEAD = 5;
	public const DKJPPHLADDN QTE_STEP_ACTION_PLAY_AUDIO = 6;
	public const DKJPPHLADDN QTE_STEP_ACTION_CAMERA_MOVE = 7;
	public const DKJPPHLADDN QTE_STEP_ACTION_EMOTION = 8;
	public const DKJPPHLADDN QTE_STEP_ACTION_CUTSCENE_FAILED_BLACK_SCREEN = 9;
	public const DKJPPHLADDN QTE_STEP_ACTION_CUTSCENE_TIME_SCALE_RESET = 10;
	public const DKJPPHLADDN QTE_STEP_ACTION_CUTSCENE_JUMP_POINT = 11;
}
public enum BOOOKHMOABA
{
	// Fields
	public const BOOOKHMOABA QTE_STEP_BUTTON_STYLE_NORMAL = 0;
	public const BOOOKHMOABA QTE_STEP_BUTTON_STYLE_SINGLE = 1;
	public const BOOOKHMOABA QTE_STEP_BUTTON_STYLE_DIRECT = 2;
}
public enum OFAIGLMFILM
{
	// Fields
	public const OFAIGLMFILM QTE_STEP_BUTTON_SLIDE_DIRECT_UP = 0;
	public const OFAIGLMFILM QTE_STEP_BUTTON_SLIDE_DIRECT_DOWN = 1;
	public const OFAIGLMFILM QTE_STEP_BUTTON_SLIDE_DIRECT_LEFT = 2;
	public const OFAIGLMFILM QTE_STEP_BUTTON_SLIDE_DIRECT_RIGHT = 3;
}
public enum QuestType
{
	// Fields
	public const QuestType AQ = 0;
	public const QuestType FQ = 1;
	public const QuestType LQ = 2;
	public const QuestType EQ = 3;
	public const QuestType DQ = 4;
	public const QuestType IQ = 5;
	public const QuestType VQ = 6;
	public const QuestType WQ = 7;
}
public enum QuestState
{
	// Fields
	public const QuestState QUEST_STATE_NONE = 0;
	public const QuestState QUEST_STATE_UNSTARTED = 1;
	public const QuestState QUEST_STATE_UNFINISHED = 2;
	public const QuestState QUEST_STATE_FINISHED = 3;
	public const QuestState QUEST_STATE_FAILED = 4;
}
public enum ParentQuestState
{
	// Fields
	public const ParentQuestState PARENT_QUEST_STATE_NONE = 0;
	public const ParentQuestState PARENT_QUEST_STATE_FINISHED = 1;
	public const ParentQuestState PARENT_QUEST_STATE_FAILED = 2;
	public const ParentQuestState PARENT_QUEST_STATE_CANCELED = 3;
}
public enum QuestShowType
{
	// Fields
	public const QuestShowType QUEST_SHOW = 0;
	public const QuestShowType QUEST_HIDDEN = 1;
}
public enum IJOGHPHFNCH
{
	// Fields
	public const IJOGHPHFNCH MAINQUEST_TAG_NONE = 0;
	public const IJOGHPHFNCH MAINQUEST_TAG_GUIDE = 1;
	public const IJOGHPHFNCH MAINQUEST_TAG_ACTIVITY = 2;
	public const IJOGHPHFNCH MAINQUEST_TAG_RANK_ZERO_WQ = 3;
	public const IJOGHPHFNCH MAINQUEST_TAG_MAIN_WQ = 4;
}
public enum QuestCondCompareType
{
	// Fields
	public const QuestCondCompareType Equal = 0;
	public const QuestCondCompareType GreaterThan = 1;
	public const QuestCondCompareType LessThan = 2;
}
public enum QuestCondType
{
	// Fields
	public const QuestCondType QUEST_COND_NONE = 0;
	public const QuestCondType QUEST_COND_STATE_EQUAL = 1;
	public const QuestCondType QUEST_COND_STATE_NOT_EQUAL = 2;
	public const QuestCondType QUEST_COND_PACK_HAVE_ITEM = 3;
	public const QuestCondType QUEST_COND_AVATAR_ELEMENT_EQUAL = 4;
	public const QuestCondType QUEST_COND_AVATAR_ELEMENT_NOT_EQUAL = 5;
	public const QuestCondType QUEST_COND_AVATAR_CAN_CHANGE_ELEMENT = 6;
	public const QuestCondType QUEST_COND_CITY_LEVEL_EQUAL_GREATER = 7;
	public const QuestCondType QUEST_COND_ITEM_NUM_LESS_THAN = 8;
	public const QuestCondType QUEST_COND_DAILY_TASK_START = 9;
	public const QuestCondType QUEST_COND_OPEN_STATE_EQUAL = 10;
	public const QuestCondType QUEST_COND_DAILY_TASK_OPEN = 11;
	public const QuestCondType QUEST_COND_DAILY_TASK_REWARD_CAN_GET = 12;
	public const QuestCondType QUEST_COND_DAILY_TASK_REWARD_RECEIVED = 13;
	public const QuestCondType QUEST_COND_PLAYER_LEVEL_REWARD_CAN_GET = 14;
	public const QuestCondType QUEST_COND_EXPLORATION_REWARD_CAN_GET = 15;
	public const QuestCondType QUEST_COND_IS_WORLD_OWNER = 16;
	public const QuestCondType QUEST_COND_PLAYER_LEVEL_EQUAL_GREATER = 17;
	public const QuestCondType QUEST_COND_SCENE_AREA_UNLOCKED = 18;
	public const QuestCondType QUEST_COND_ITEM_GIVING_ACTIVED = 19;
	public const QuestCondType QUEST_COND_ITEM_GIVING_FINISHED = 20;
	public const QuestCondType QUEST_COND_IS_DAYTIME = 21;
	public const QuestCondType QUEST_COND_CURRENT_AVATAR = 22;
	public const QuestCondType QUEST_COND_CURRENT_AREA = 23;
	public const QuestCondType QUEST_COND_QUEST_VAR_EQUAL = 24;
	public const QuestCondType QUEST_COND_QUEST_VAR_GREATER = 25;
	public const QuestCondType QUEST_COND_QUEST_VAR_LESS = 26;
	public const QuestCondType QUEST_COND_FORGE_HAVE_FINISH = 27;
	public const QuestCondType QUEST_COND_DAILY_TASK_IN_PROGRESS = 28;
	public const QuestCondType QUEST_COND_DAILY_TASK_FINISHED = 29;
	public const QuestCondType QUEST_COND_ACTIVITY_COND = 30;
	public const QuestCondType QUEST_COND_ACTIVITY_OPEN = 31;
	public const QuestCondType QUEST_COND_DAILY_TASK_VAR_GT = 32;
	public const QuestCondType QUEST_COND_DAILY_TASK_VAR_EQ = 33;
	public const QuestCondType QUEST_COND_DAILY_TASK_VAR_LT = 34;
	public const QuestCondType QUEST_COND_BARGAIN_ITEM_GT = 35;
	public const QuestCondType QUEST_COND_BARGAIN_ITEM_EQ = 36;
	public const QuestCondType QUEST_COND_BARGAIN_ITEM_LT = 37;
	public const QuestCondType QUEST_COND_COMPLETE_TALK = 38;
	public const QuestCondType QUEST_COND_NOT_HAVE_BLOSSOM_TALK = 39;
	public const QuestCondType QUEST_COND_IS_CUR_BLOSSOM_TALK = 40;
	public const QuestCondType QUEST_COND_QUEST_NOT_RECEIVE = 41;
	public const QuestCondType QUEST_COND_QUEST_SERVER_COND_VALID = 42;
	public const QuestCondType QUEST_COND_ACTIVITY_CLIENT_COND = 43;
	public const QuestCondType QUEST_COND_QUEST_GLOBAL_VAR_EQUAL = 44;
	public const QuestCondType QUEST_COND_QUEST_GLOBAL_VAR_GREATER = 45;
	public const QuestCondType QUEST_COND_QUEST_GLOBAL_VAR_LESS = 46;
	public const QuestCondType QUEST_COND_PERSONAL_LINE_UNLOCK = 47;
	public const QuestCondType QUEST_COND_CITY_REPUTATION_REQUEST = 48;
	public const QuestCondType QUEST_COND_MAIN_COOP_START = 49;
	public const QuestCondType QUEST_COND_MAIN_COOP_ENTER_SAVE_POINT = 50;
	public const QuestCondType QUEST_COND_CITY_REPUTATION_LEVEL = 51;
	public const QuestCondType QUEST_COND_CITY_REPUTATION_UNLOCK = 52;
	public const QuestCondType QUEST_COND_LUA_NOTIFY = 53;
	public const QuestCondType QUEST_COND_CUR_CLIMATE = 54;
	public const QuestCondType QUEST_COND_ACTIVITY_END = 55;
	public const QuestCondType QUEST_COND_COOP_POINT_RUNNING = 56;
	public const QuestCondType QUEST_COND_GADGET_TALK_STATE_EQUAL = 57;
	public const QuestCondType QUEST_COND_AVATAR_FETTER_GT = 58;
	public const QuestCondType QUEST_COND_AVATAR_FETTER_EQ = 59;
	public const QuestCondType QUEST_COND_AVATAR_FETTER_LT = 60;
	public const QuestCondType QUEST_COND_NEW_HOMEWORLD_MOUDLE_UNLOCK = 61;
	public const QuestCondType QUEST_COND_NEW_HOMEWORLD_LEVEL_REWARD = 62;
	public const QuestCondType QUEST_COND_NEW_HOMEWORLD_MAKE_FINISH = 63;
	public const QuestCondType QUEST_COND_HOMEWORLD_NPC_EVENT = 64;
	public const QuestCondType QUEST_COND_TIME_VAR_GT_EQ = 65;
	public const QuestCondType QUEST_COND_TIME_VAR_PASS_DAY = 66;
	public const QuestCondType QUEST_COND_HOMEWORLD_NPC_NEW_TALK = 67;
	public const QuestCondType QUEST_COND_PLAYER_CHOOSE_MALE = 68;
	public const QuestCondType QUEST_COND_HISTORY_GOT_ANY_ITEM = 69;
	public const QuestCondType QUEST_COND_LEARNED_RECIPE = 70;
	public const QuestCondType QUEST_COND_LUNARITE_REGION_UNLOCKED = 71;
	public const QuestCondType QUEST_COND_LUNARITE_HAS_REGION_HINT_COUNT = 72;
	public const QuestCondType QUEST_COND_LUNARITE_COLLECT_FINISH = 73;
	public const QuestCondType QUEST_COND_LUNARITE_MARK_ALL_FINISH = 74;
	public const QuestCondType QUEST_COND_NEW_HOMEWORLD_SHOP_ITEM = 75;
	public const QuestCondType QUEST_COND_SCENE_POINT_UNLOCK = 76;
	public const QuestCondType QUEST_COND_SCENE_LEVEL_TAG_EQ = 77;
	public const QuestCondType QUEST_COND_PLAYER_ENTER_REGION = 78;
	public const QuestCondType QUEST_COND_ACTIVITY_SCHEDULE_OPEN_AND_COND = 79;
	public const QuestCondType QUEST_COND_ARANARA_COLLECTION_STATE_EQ = 80;
	public const QuestCondType QUEST_COND_INFERENCE_FINISH_PAGE_CONCLUSION = 81;
	public const QuestCondType QUEST_COND_SCENE_LEVEL_TAG_VALID = 82;
	public const QuestCondType QUEST_COND_NEW_HOMEWORLD_WOOD_EXCHANGE_UNLOCK = 83;
	public const QuestCondType QUEST_COND_IN_CITY = 84;
	public const QuestCondType QUEST_COND_GCG_EXP_OVERFLOW = 86;
	public const QuestCondType QUEST_COND_GCG_NPC_TYPE = 87;
	public const QuestCondType QUEST_COND_ACTIVITY_NEW_FUNGUS_CAPTURE = 88;
	public const QuestCondType QUEST_COND_GCG_LEVEL_REWARD_CAN_TAKE = 89;
	public const QuestCondType QUEST_COND_GCG_SHOP_NEW_GOODS = 90;
	public const QuestCondType QUEST_COND_GCG_CHALLENGE_NEW_BOSS = 91;
	public const QuestCondType QUEST_COND_GCG_CHALLENGE_NEW_CHAR = 92;
	public const QuestCondType QUEST_COND_GCG_LEVEL_UNLOCKED = 93;
	public const QuestCondType QUEST_COND_GCG_WORLD_CHALLENGE_RESULT = 94;
	public const QuestCondType QUEST_COND_HIT_WANDERER_RENAME_EASTER_EGG = 95;
	public const QuestCondType QUEST_COND_HIT_KEYWORD_EASTER_EGG = 96;
	public const QuestCondType QUEST_COND_GCG_INVITE_TYPE = 97;
	public const QuestCondType QUEST_COND_TMPVALUE_HIT_NICKNAME = 98;
	public const QuestCondType QUEST_COND_PACK_HAVE_ANY_ITEM = 99;
	public const QuestCondType QUEST_COND_OFFERING_PARI_NEW = 100;
	public const QuestCondType QUEST_COND_ACTIVITY_AKA_FES_REASONING_QUEST_NUM = 101;
}
public enum MoleMole.Config.QuestContentType
{
	// Fields
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_NONE = 0;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_KILL_MONSTER = 1;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_COMPLETE_TALK = 2;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_MONSTER_DIE = 3;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_FINISH_PLOT = 4;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_OBTAIN_ITEM = 5;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_TRIGGER_FIRE = 6;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_CLEAR_GROUP_MONSTER = 7;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_NOT_FINISH_PLOT = 8;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ENTER_DUNGEON = 9;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ENTER_MY_WORLD = 10;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_FINISH_DUNGEON = 11;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_DESTROY_GADGET = 12;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_OBTAIN_MATERIAL_WITH_SUBTYPE = 13;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_NICK_NAME = 14;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_WORKTOP_SELECT = 15;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_SEAL_BATTLE_RESULT = 16;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ENTER_ROOM = 17;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_GAME_TIME_TICK = 18;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_FAIL_DUNGEON = 19;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_LUA_NOTIFY = 20;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_TEAM_DEAD = 21;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_COMPLETE_ANY_TALK = 22;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_UNLOCK_TRANS_POINT = 23;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ADD_QUEST_PROGRESS = 24;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_INTERACT_GADGET = 25;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_DAILY_TASK_COMP_FINISH = 26;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_FINISH_ITEM_GIVING = 27;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_SKILL = 107;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_CITY_LEVEL_UP = 109;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_PATTERN_GROUP_CLEAR_MONSTER = 110;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ITEM_LESS_THAN = 111;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_PLAYER_LEVEL_UP = 112;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_DUNGEON_OPEN_STATUE = 113;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_UNLOCK_AREA = 114;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_OPEN_CHEST_WITH_GADGET_ID = 115;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_UNLOCK_TRANS_POINT_WITH_TYPE = 116;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_FINISH_DAILY_DUNGEON = 117;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_FINISH_WEEKLY_DUNGEON = 118;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_QUEST_VAR_EQUAL = 119;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_QUEST_VAR_GREATER = 120;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_QUEST_VAR_LESS = 121;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_OBTAIN_VARIOUS_ITEM = 122;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_FINISH_TOWER_LEVEL = 123;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_BARGAIN_SUCC = 124;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_BARGAIN_FAIL = 125;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ITEM_LESS_THAN_BARGAIN = 126;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ACTIVITY_TRIGGER_FAILED = 127;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_MAIN_COOP_ENTER_SAVE_POINT = 128;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ANY_MANUAL_TRANSPORT = 129;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_USE_ITEM = 130;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_MAIN_COOP_ENTER_ANY_SAVE_POINT = 131;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ENTER_MY_HOME_WORLD = 132;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ENTER_MY_WORLD_SCENE = 133;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_TIME_VAR_GT_EQ = 134;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_TIME_VAR_PASS_DAY = 135;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_QUEST_STATE_EQUAL = 136;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_QUEST_STATE_NOT_EQUAL = 137;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_UNLOCKED_RECIPE = 138;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_NOT_UNLOCKED_RECIPE = 139;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_FISHING_SUCC = 140;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ENTER_ROGUE_DUNGEON = 141;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_USE_WIDGET = 142;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_CAPTURE_SUCC = 143;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_CAPTURE_USE_CAPTURETAG_LIST = 144;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_CAPTURE_USE_MATERIAL_LIST = 145;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ENTER_VEHICLE = 147;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_SCENE_LEVEL_TAG_EQ = 148;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_LEAVE_SCENE = 149;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_LEAVE_SCENE_RANGE = 150;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_IRODORI_FINISH_FLOWER_COMBINATION = 151;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_IRODORI_POETRY_REACH_MIN_PROGRESS = 152;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_IRODORI_POETRY_FINISH_FILL_POETRY = 153;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_ACTIVITY_TRIGGER_UPDATE = 154;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_GADGET_STATE_CHANGE = 155;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_LEAVE_SCENE_RANGE_AND_ROOM = 156;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_GCG_LEVEL_WIN = 157;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_AVATAR_RENAME_COMPLETE = 158;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_GCG_GUIDE_PROGRESS = 159;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_QUEST_GLOBAL_VAR_EQUAL = 160;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_QUEST_GLOBAL_VAR_GREATER = 161;
	public const MoleMole.Config.QuestContentType QUEST_CONTENT_QUEST_GLOBAL_VAR_LESS = 162;
}
public enum QuestGuideType
{
	// Fields
	public const QuestGuideType QUEST_GUIDE_NONE = 0;
	public const QuestGuideType QUEST_GUIDE_LOCATION = 1;
	public const QuestGuideType QUEST_GUIDE_NPC = 2;
	public const QuestGuideType QUEST_GUIDE_GADGET = 3;
	public const QuestGuideType QUEST_GUIDE_SHOW_OR_HIDE_NPC = 4;
	public const QuestGuideType QUEST_GUIDE_DUNGEON_ENTRY = 5;
}
public enum QuestGuideHintType
{
	// Fields
	public const QuestGuideHintType QUEST_GUIDE_HINT_NONE = 0;
	public const QuestGuideHintType QUEST_GUIDE_HINT_READING_DIALOG = 1;
	public const QuestGuideHintType QUEST_GUIDE_HINT_ARANARA_HANDBOOK_RECORD = 2;
	public const QuestGuideHintType QUEST_GUIDE_HINT_DESHRET_MANUAL = 3;
}
public enum QuestFishType
{
	// Fields
	public const QuestFishType QUEST_FISH_NONE = 0;
	public const QuestFishType QUEST_FISH_MATERIAL = 1;
	public const QuestFishType QUEST_FISH_FURNITURE = 2;
}
public enum QuestGuideNPCSelectType
{
	// Fields
	public const QuestGuideNPCSelectType SELECT_NPC_NONE = 0;
	public const QuestGuideNPCSelectType SELECT_NPC_BY_PLAYERMALE = 1;
}
public enum ShowQuestGuideType
{
	// Fields
	public const ShowQuestGuideType QUEST_GUIDE_ITEM_ENABLE = 0;
	public const ShowQuestGuideType QUEST_GUIDE_ITEM_DISABLE = 1;
	public const ShowQuestGuideType QUEST_GUIDE_ITEM_MOVE_HIDE = 2;
}
public enum EDNMBCKMMOE
{
	// Fields
	public const EDNMBCKMMOE QUEST_GUIDE_AUTO_NONE = 0;
	public const EDNMBCKMMOE QUEST_GUIDE_AUTO_ENABLE = 1;
	public const EDNMBCKMMOE QUEST_GUIDE_AUTO_DISABLE = 2;
}
public enum MAMEFAGLDOP
{
	// Fields
	public const MAMEFAGLDOP QUEST_GUIDE_STYLE_NONE = 0;
	public const MAMEFAGLDOP QUEST_GUIDE_STYLE_START = 1;
	public const MAMEFAGLDOP QUEST_GUIDE_STYLE_TARGET = 2;
	public const MAMEFAGLDOP QUEST_GUIDE_STYLE_FINISH = 3;
	public const MAMEFAGLDOP QUEST_GUIDE_STYLE_POINT = 4;
}
public enum DFMJLANPOIP
{
	// Fields
	public const DFMJLANPOIP QUEST_GUIDE_LAYER_NONE = 0;
	public const DFMJLANPOIP QUEST_GUIDE_LAYER_UI = 1;
	public const DFMJLANPOIP QUEST_GUIDE_LAYER_SCENE = 2;
}
public enum QuestExecType
{
	// Fields
	public const QuestExecType QUEST_EXEC_NONE = 0;
	public const QuestExecType QUEST_EXEC_DEL_PACK_ITEM = 1;
	public const QuestExecType QUEST_EXEC_UNLOCK_POINT = 2;
	public const QuestExecType QUEST_EXEC_UNLOCK_AREA = 3;
	public const QuestExecType QUEST_EXEC_UNLOCK_FORCE = 4;
	public const QuestExecType QUEST_EXEC_LOCK_FORCE = 5;
	public const QuestExecType QUEST_EXEC_CHANGE_AVATAR_ELEMET = 6;
	public const QuestExecType QUEST_EXEC_REFRESH_GROUP_MONSTER = 7;
	public const QuestExecType QUEST_EXEC_SET_IS_FLYABLE = 8;
	public const QuestExecType QUEST_EXEC_SET_IS_WEATHER_LOCKED = 9;
	public const QuestExecType QUEST_EXEC_SET_IS_GAME_TIME_LOCKED = 10;
	public const QuestExecType QUEST_EXEC_SET_IS_TRANSFERABLE = 11;
	public const QuestExecType QUEST_EXEC_GRANT_TRIAL_AVATAR = 12;
	public const QuestExecType QUEST_EXEC_OPEN_BORED = 13;
	public const QuestExecType QUEST_EXEC_ROLLBACK_QUEST = 14;
	public const QuestExecType QUEST_EXEC_NOTIFY_GROUP_LUA = 15;
	public const QuestExecType QUEST_EXEC_SET_OPEN_STATE = 16;
	public const QuestExecType QUEST_EXEC_LOCK_POINT = 17;
	public const QuestExecType QUEST_EXEC_DEL_PACK_ITEM_BATCH = 18;
	public const QuestExecType QUEST_EXEC_REFRESH_GROUP_SUITE = 19;
	public const QuestExecType QUEST_EXEC_REMOVE_TRIAL_AVATAR = 20;
	public const QuestExecType QUEST_EXEC_SET_GAME_TIME = 21;
	public const QuestExecType QUEST_EXEC_SET_WEATHER_GADGET = 22;
	public const QuestExecType QUEST_EXEC_ADD_QUEST_PROGRESS = 23;
	public const QuestExecType QUEST_EXEC_NOTIFY_DAILY_TASK = 24;
	public const QuestExecType QUEST_EXEC_CREATE_PATTERN_GROUP = 25;
	public const QuestExecType QUEST_EXEC_REMOVE_PATTERN_GROUP = 26;
	public const QuestExecType QUEST_EXEC_REFRESH_GROUP_SUITE_RANDOM = 27;
	public const QuestExecType QUEST_EXEC_ACTIVE_ITEM_GIVING = 28;
	public const QuestExecType QUEST_EXEC_DEL_ALL_SPECIFIC_PACK_ITEM = 29;
	public const QuestExecType QUEST_EXEC_ROLLBACK_PARENT_QUEST = 30;
	public const QuestExecType QUEST_EXEC_LOCK_AVATAR_TEAM = 31;
	public const QuestExecType QUEST_EXEC_UNLOCK_AVATAR_TEAM = 32;
	public const QuestExecType QUEST_EXEC_UPDATE_PARENT_QUEST_REWARD_INDEX = 33;
	public const QuestExecType QUEST_EXEC_SET_DAILY_TASK_VAR = 34;
	public const QuestExecType QUEST_EXEC_INC_DAILY_TASK_VAR = 35;
	public const QuestExecType QUEST_EXEC_DEC_DAILY_TASK_VAR = 36;
	public const QuestExecType QUEST_EXEC_ACTIVE_ACTIVITY_COND_STATE = 37;
	public const QuestExecType QUEST_EXEC_INACTIVE_ACTIVITY_COND_STATE = 38;
	public const QuestExecType QUEST_EXEC_ADD_CUR_AVATAR_ENERGY = 39;
	public const QuestExecType QUEST_EXEC_START_BARGAIN = 41;
	public const QuestExecType QUEST_EXEC_STOP_BARGAIN = 42;
	public const QuestExecType QUEST_EXEC_SET_QUEST_GLOBAL_VAR = 43;
	public const QuestExecType QUEST_EXEC_INC_QUEST_GLOBAL_VAR = 44;
	public const QuestExecType QUEST_EXEC_DEC_QUEST_GLOBAL_VAR = 45;
	public const QuestExecType QUEST_EXEC_REGISTER_DYNAMIC_GROUP = 46;
	public const QuestExecType QUEST_EXEC_UNREGISTER_DYNAMIC_GROUP = 47;
	public const QuestExecType QUEST_EXEC_SET_QUEST_VAR = 48;
	public const QuestExecType QUEST_EXEC_INC_QUEST_VAR = 49;
	public const QuestExecType QUEST_EXEC_DEC_QUEST_VAR = 50;
	public const QuestExecType QUEST_EXEC_RANDOM_QUEST_VAR = 51;
	public const QuestExecType QUEST_EXEC_ACTIVATE_SCANNING_PIC = 52;
	public const QuestExecType QUEST_EXEC_RELOAD_SCENE_TAG = 53;
	public const QuestExecType QUEST_EXEC_REGISTER_DYNAMIC_GROUP_ONLY = 54;
	public const QuestExecType QUEST_EXEC_CHANGE_SKILL_DEPOT = 55;
	public const QuestExecType QUEST_EXEC_ADD_SCENE_TAG = 56;
	public const QuestExecType QUEST_EXEC_DEL_SCENE_TAG = 57;
	public const QuestExecType QUEST_EXEC_INIT_TIME_VAR = 58;
	public const QuestExecType QUEST_EXEC_CLEAR_TIME_VAR = 59;
	public const QuestExecType QUEST_EXEC_MODIFY_CLIMATE_AREA = 60;
	public const QuestExecType QUEST_EXEC_GRANT_TRIAL_AVATAR_AND_LOCK_TEAM = 61;
	public const QuestExecType QUEST_EXEC_CHANGE_MAP_AREA_STATE = 62;
	public const QuestExecType QUEST_EXEC_DEACTIVE_ITEM_GIVING = 63;
	public const QuestExecType QUEST_EXEC_CHANGE_SCENE_LEVEL_TAG = 64;
	public const QuestExecType QUEST_EXEC_UNLOCK_PLAYER_WORLD_SCENE = 65;
	public const QuestExecType QUEST_EXEC_LOCK_PLAYER_WORLD_SCENE = 66;
	public const QuestExecType QUEST_EXEC_FAIL_MAINCOOP = 67;
	public const QuestExecType QUEST_EXEC_MODIFY_WEATHER_AREA = 68;
	public const QuestExecType QUEST_EXEC_MODIFY_ARANARA_COLLECTION_STATE = 69;
	public const QuestExecType QUEST_EXEC_GRANT_TRIAL_AVATAR_BATCH_AND_LOCK_TEAM = 70;
	public const QuestExecType QUEST_EXEC_REFRESH_WORLD_QUEST_FLOW_GROUP_SUITE = 71;
	public const QuestExecType QUEST_EXEC_HIDE_SCENE_POINT = 72;
	public const QuestExecType QUEST_EXEC_UNHIDE_SCENE_POINT = 73;
	public const QuestExecType QUEST_EXEC_REFRESH_WORLD_QUEST_FLOW_GROUP_SUITE_BUILTIN = 74;
	public const QuestExecType QUEST_EXEC_RANDOM_CLOSED_QUEST_VAR = 75;
	public const QuestExecType QUEST_EXEC_OPTIONAL_REVIVAL_TEAM = 76;
	public const QuestExecType QUEST_EXEC_LOCK_AVATAR_TEAM_V2 = 77;
	public const QuestExecType QUEST_EXEC_UNLOCK_AVATAR_TEAM_V2 = 78;
	public const QuestExecType QUEST_EXEC_GRANT_TRIAL_AVATAR_BATCH_AND_LOCK_TEAM_V2 = 79;
	public const QuestExecType QUEST_EXEC_GRANT_TRIAL_AVATAR_AND_LOCK_TEAM_V2 = 80;
	public const QuestExecType QUEST_EXEC_CLEAR_VEHICLE = 82;
}
public enum TalkExecType
{
	// Fields
	public const TalkExecType TALK_EXEC_NONE = 0;
	public const TalkExecType TALK_EXEC_SET_GADGET_STATE = 1;
	public const TalkExecType TALK_EXEC_SET_GAME_TIME = 2;
	public const TalkExecType TALK_EXEC_NOTIFY_GROUP_LUA = 3;
	public const TalkExecType TALK_EXEC_SET_DAILY_TASK_VAR = 4;
	public const TalkExecType TALK_EXEC_INC_DAILY_TASK_VAR = 5;
	public const TalkExecType TALK_EXEC_DEC_DAILY_TASK_VAR = 6;
	public const TalkExecType TALK_EXEC_SET_QUEST_VAR = 7;
	public const TalkExecType TALK_EXEC_INC_QUEST_VAR = 8;
	public const TalkExecType TALK_EXEC_DEC_QUEST_VAR = 9;
	public const TalkExecType TALK_EXEC_SET_QUEST_GLOBAL_VAR = 10;
	public const TalkExecType TALK_EXEC_INC_QUEST_GLOBAL_VAR = 11;
	public const TalkExecType TALK_EXEC_DEC_QUEST_GLOBAL_VAR = 12;
	public const TalkExecType TALK_EXEC_TRANS_SCENE_DUMMY_POINT = 13;
	public const TalkExecType TALK_EXEC_SAVE_TALK_ID = 14;
}
public enum TalkBeginWay
{
	// Fields
	public const TalkBeginWay TALK_BEGIN_NONE = 0;
	public const TalkBeginWay TALK_BEGIN_AUTO = 1;
	public const TalkBeginWay TALK_BEGIN_MANUAL = 2;
}
public enum TalkHeroType
{
	// Fields
	public const TalkHeroType TALK_HERO_LOCAL = 0;
	public const TalkHeroType TALK_HERO_MAIN = 1;
}
public enum TalkLoadType
{
	// Fields
	public const TalkLoadType TALK_NORMAL_QUEST = 0;
	public const TalkLoadType TALK_BLOSSOM = 1;
	public const TalkLoadType TALK_ACTIVITY = 2;
	public const TalkLoadType TALK_COOP = 3;
	public const TalkLoadType TALK_GADGET = 4;
}
public enum TalkRoleType
{
	// Fields
	public const TalkRoleType TALK_ROLE_NONE = 0;
	public const TalkRoleType TALK_ROLE_NPC = 1;
	public const TalkRoleType TALK_ROLE_PLAYER = 2;
	public const TalkRoleType TALK_ROLE_MATE_AVATAR = 3;
	public const TalkRoleType TALK_ROLE_GADGET = 4;
	public const TalkRoleType TALK_ROLE_BLACK_SCREEN = 5;
	public const TalkRoleType TALK_ROLE_NEED_CLICK_BLACK_SCREEN = 6;
	public const TalkRoleType TALK_ROLE_AVATAR_NPC = 7;
	public const TalkRoleType TALK_ROLE_CONSEQUENT_BLACK_SCREEN = 8;
	public const TalkRoleType TALK_ROLE_CONSEQUENT_NEED_CLICK_BLACK_SCREEN = 9;
}
public enum TalkShowType
{
	// Fields
	public const TalkShowType TALK_SHOW_DEFAULT = 0;
	public const TalkShowType TALK_SHOW_FORCE_SELECT = 1;
}
public enum TalkMarkType
{
	// Fields
	public const TalkMarkType TALK_MARK_NONE = 0;
	public const TalkMarkType TALK_MARK_COMMON = 1;
	public const TalkMarkType TALK_MARK_HIDE = 2;
}
public enum FFPDGGCJIOO
{
	// Fields
	public const FFPDGGCJIOO RQ_FILTER_NONE = 0;
	public const FFPDGGCJIOO RQ_FILTER_PLAYER_POS_RING = 1;
	public const FFPDGGCJIOO RQ_FILTER_NPC = 2;
	public const FFPDGGCJIOO RQ_FILTER_PLAYER_LEVEL = 3;
}
public enum BHDPHIGGABF
{
	// Fields
	public const BHDPHIGGABF OPTIONAL_REVIVAL_TEAM_TYPE_NONE = 0;
	public const BHDPHIGGABF OPTIONAL_REVIVAL_TEAM_TYPE_FULL_HP = 1;
	public const BHDPHIGGABF OPTIONAL_REVIVAL_TEAM_TYPE_FULL_ENERGY = 2;
	public const BHDPHIGGABF OPTIONAL_REVIVAL_TEAM_TYPE_FULL_HP_AND_ENERGY = 3;
}
public enum KLDJEMEBPIG
{
	// Fields
	public const KLDJEMEBPIG QUEST_LOCK_TEAM_AVATAR_NONE = 0;
	public const KLDJEMEBPIG QUEST_LOCK_TEAM_AVATAR_IN_WORLD = 1;
	public const KLDJEMEBPIG QUEST_LOCK_TEAM_AVATAR_IN_DUNGEON = 2;
}
public enum BCNKDPMCAEM
{
	// Fields
	public const BCNKDPMCAEM ResetEmotion = 0;
	public const BCNKDPMCAEM ResetPhoneme = 1;
	public const BCNKDPMCAEM SetEmotion = 2;
	public const BCNKDPMCAEM SetPhoneme = 3;
	public const BCNKDPMCAEM SetEmotionAndPhoneme = 4;
	public const BCNKDPMCAEM Toggle = 5;
	public const BCNKDPMCAEM PlaySequenceSub = 6;
	public const BCNKDPMCAEM PlaySequence = 7;
	public const BCNKDPMCAEM ClearEmotion = 8;
	public const BCNKDPMCAEM ToggleEyeCtrl = 9;
	public const BCNKDPMCAEM ClearSequence = 10;
	public const BCNKDPMCAEM Blink = 11;
}
public enum BDOIOBIFDAG
{
	// Fields
	public const BDOIOBIFDAG Entity = 0;
	public const BDOIOBIFDAG Effect = 1;
	public const BDOIOBIFDAG Massive = 2;
	public const BDOIOBIFDAG Enviro = 3;
}
public enum CIGEGLFFOPJ
{
	// Fields
	public const CIGEGLFFOPJ MichiaeMatsuri = 2500;
	public const CIGEGLFFOPJ LightStone = 2600;
	public const CIGEGLFFOPJ DeathZone = 3000;
}
public enum GHMAKAFCLAF
{
	// Fields
	public const GHMAKAFCLAF MichiaeMatsuriDarkPressure = 2500;
	public const GHMAKAFCLAF MichiaeMatsuriCrystalEnergy = 2501;
	public const GHMAKAFCLAF LightStoneEnergy = 2600;
	public const GHMAKAFCLAF DeathZoneBaseErosion = 3000;
	public const GHMAKAFCLAF DeathZoneExtraErosion = 3001;
}
public enum AGHNEOHJLDH
{
	// Fields
	public const AGHNEOHJLDH REGIONAL_PLAY_MODE_STANDARD = 0;
	public const AGHNEOHJLDH REGIONAL_PLAY_MODE_DELAY = 1;
}
public enum OKBLGLEJNDM
{
	// Fields
	public const OKBLGLEJNDM NORMAL = 0;
	public const OKBLGLEJNDM TOWER = 1;
	public const OKBLGLEJNDM PORTAL = 2;
	public const OKBLGLEJNDM Other = 3;
}
public enum LFEEHFJHLKF
{
	// Fields
	public const LFEEHFJHLKF Normal = 0;
	public const LFEEHFJHLKF OnUnlocked = 1;
	public const LFEEHFJHLKF Never = 2;
}
public enum PLLDMPFFKIA
{
	// Fields
	public const PLLDMPFFKIA Normal = 0;
	public const PLLDMPFFKIA Weekly = 1;
	public const PLLDMPFFKIA Daily = 2;
	public const PLLDMPFFKIA Tower = 3;
	public const PLLDMPFFKIA Effigy = 4;
	public const PLLDMPFFKIA FleurFair = 5;
	public const PLLDMPFFKIA Arena = 6;
	public const PLLDMPFFKIA ChannellerSlabLoop = 7;
	public const PLLDMPFFKIA ChannellerSlabOneOff = 8;
	public const PLLDMPFFKIA BlitzRush = 9;
	public const PLLDMPFFKIA Sumo = 10;
	public const PLLDMPFFKIA Roguelike = 11;
	public const PLLDMPFFKIA ActivityHachi = 12;
	public const PLLDMPFFKIA ActivityPotion = 13;
	public const PLLDMPFFKIA ActivityMiniEldritch = 14;
	public const PLLDMPFFKIA CustomLevel = 15;
	public const PLLDMPFFKIA CrystalLink = 16;
	public const PLLDMPFFKIA RogueDiary = 17;
	public const PLLDMPFFKIA ActivitySummerTimeV2Story = 18;
	public const PLLDMPFFKIA ActivitySummerTimeV2Battle = 19;
	public const PLLDMPFFKIA ActivityMuqadasPotion = 20;
	public const PLLDMPFFKIA ActivityInstableSpray = 21;
	public const PLLDMPFFKIA ActivityWindField = 22;
	public const PLLDMPFFKIA ActivityEffigyV2 = 23;
	public const PLLDMPFFKIA ActivityFungusFighterTraining = 24;
	public const PLLDMPFFKIA ActivityFungusFighterPlot = 25;
	public const PLLDMPFFKIA ActivityBrickBreaker = 26;
	public const PLLDMPFFKIA ActivityTeamChain = 27;
	public const PLLDMPFFKIA ActivityDuelHeart = 28;
	public const PLLDMPFFKIA ActivityAkaFesPotion = 29;
}
public enum APNDOABGAGA
{
	// Fields
	public const APNDOABGAGA Normal = 0;
	public const APNDOABGAGA Mirror = 1;
	public const APNDOABGAGA All = 2;
}
public enum MoleMole.Config.SceneBuildingType
{
	// Fields
	public const MoleMole.Config.SceneBuildingType None = 0;
	public const MoleMole.Config.SceneBuildingType Church = 1;
	public const MoleMole.Config.SceneBuildingType Knights = 2;
	public const MoleMole.Config.SceneBuildingType Pub = 3;
	public const MoleMole.Config.SceneBuildingType Souvenir = 4;
	public const MoleMole.Config.SceneBuildingType Restaurant = 5;
	public const MoleMole.Config.SceneBuildingType GeneralCargo = 6;
	public const MoleMole.Config.SceneBuildingType Blacksmith = 7;
	public const MoleMole.Config.SceneBuildingType TeamArranger = 8;
	public const MoleMole.Config.SceneBuildingType Adventurers = 9;
	public const MoleMole.Config.SceneBuildingType Alchemy = 10;
	public const MoleMole.Config.SceneBuildingType SeaLampGiving = 11;
	public const MoleMole.Config.SceneBuildingType Blacksmith_liyue = 12;
	public const MoleMole.Config.SceneBuildingType Souvenir_liyue = 13;
	public const MoleMole.Config.SceneBuildingType Restaurant_liyue = 14;
	public const MoleMole.Config.SceneBuildingType Reputation = 15;
	public const MoleMole.Config.SceneBuildingType Reputation_liyue = 16;
	public const MoleMole.Config.SceneBuildingType AsterMiddleNPC = 17;
	public const MoleMole.Config.SceneBuildingType ElderTree = 18;
	public const MoleMole.Config.SceneBuildingType MiscsMarvs = 19;
	public const MoleMole.Config.SceneBuildingType TreasureMapNPC = 20;
	public const MoleMole.Config.SceneBuildingType DrakePrimoRockNPC = 21;
	public const MoleMole.Config.SceneBuildingType ActivityBlessingNPC = 22;
	public const MoleMole.Config.SceneBuildingType MechanicusNPC = 23;
	public const MoleMole.Config.SceneBuildingType ActivityArenaChallenge = 24;
	public const MoleMole.Config.SceneBuildingType FleurFairNPC = 25;
	public const MoleMole.Config.SceneBuildingType HideAndSeekNPC = 26;
	public const MoleMole.Config.SceneBuildingType ChannellerSlabNPC = 27;
	public const MoleMole.Config.SceneBuildingType BounceConjuringNPC = 28;
	public const MoleMole.Config.SceneBuildingType Reputation_Inazuma = 29;
	public const MoleMole.Config.SceneBuildingType PerpetualNPC = 30;
	public const MoleMole.Config.SceneBuildingType OraionokamiTree = 31;
	public const MoleMole.Config.SceneBuildingType Restaurant_Inazuma = 32;
	public const MoleMole.Config.SceneBuildingType Blacksmith_Inazuma = 33;
	public const MoleMole.Config.SceneBuildingType Souvenir_Inazuma = 34;
	public const MoleMole.Config.SceneBuildingType Bugyowu = 35;
	public const MoleMole.Config.SceneBuildingType Chashitsu = 36;
	public const MoleMole.Config.SceneBuildingType LunaRiteNPC = 37;
	public const MoleMole.Config.SceneBuildingType Fish = 38;
	public const MoleMole.Config.SceneBuildingType Fish_liyue = 39;
	public const MoleMole.Config.SceneBuildingType Fish_Inazuma = 40;
	public const MoleMole.Config.SceneBuildingType MusicGame_NPC = 41;
	public const MoleMole.Config.SceneBuildingType GrowFlowersNPC = 42;
	public const MoleMole.Config.SceneBuildingType AnimalCaptureShopNPC = 43;
	public const MoleMole.Config.SceneBuildingType AlcorTransmit = 44;
	public const MoleMole.Config.SceneBuildingType AshanpoNPC = 45;
	public const MoleMole.Config.SceneBuildingType ProjectionGameEntry = 46;
	public const MoleMole.Config.SceneBuildingType MichiaeOffering = 47;
	public const MoleMole.Config.SceneBuildingType BartenderNPC = 48;
	public const MoleMole.Config.SceneBuildingType GcgPub = 49;
	public const MoleMole.Config.SceneBuildingType LuminanceStoneNPC = 2601;
	public const MoleMole.Config.SceneBuildingType IrodoriFlowerNPC = 2610;
	public const MoleMole.Config.SceneBuildingType IrodoriPhotoNPC = 2611;
	public const MoleMole.Config.SceneBuildingType IrodoriMasterNPC = 2612;
	public const MoleMole.Config.SceneBuildingType IrodoriChessNPC = 2613;
	public const MoleMole.Config.SceneBuildingType MusicGameV3NPC = 2701;
	public const MoleMole.Config.SceneBuildingType ActivityGachaNPC = 2702;
	public const MoleMole.Config.SceneBuildingType CocoonSpace = 2703;
	public const MoleMole.Config.SceneBuildingType GearGameEntry = 2801;
	public const MoleMole.Config.SceneBuildingType IslandPartyNPC = 2802;
	public const MoleMole.Config.SceneBuildingType Blacksmith_Sumeru = 3001;
	public const MoleMole.Config.SceneBuildingType Souvenir_Sumeru = 3002;
	public const MoleMole.Config.SceneBuildingType Restaurant_Sumeru = 3003;
	public const MoleMole.Config.SceneBuildingType GravenInnocenceCarveNPC = 3004;
	public const MoleMole.Config.SceneBuildingType Reputation_Sumeru = 3005;
	public const MoleMole.Config.SceneBuildingType VanasaraTree = 3006;
	public const MoleMole.Config.SceneBuildingType Library_Sumeru = 3007;
	public const MoleMole.Config.SceneBuildingType Cafe_Sumeru = 3008;
	public const MoleMole.Config.SceneBuildingType Temple_Sumeru = 3009;
	public const MoleMole.Config.SceneBuildingType Fish_Sumeru = 3010;
	public const MoleMole.Config.SceneBuildingType WindFieldEntry = 3101;
	public const MoleMole.Config.SceneBuildingType VintageHuntingStageOneNPC = 3102;
	public const MoleMole.Config.SceneBuildingType VintageHuntingStageTwoNPC = 3103;
	public const MoleMole.Config.SceneBuildingType VintageHuntingStageThreeNPC = 3104;
	public const MoleMole.Config.SceneBuildingType VintageMarketDeliverNPC = 3105;
	public const MoleMole.Config.SceneBuildingType VintageMarketBarginNPC = 3106;
	public const MoleMole.Config.SceneBuildingType VintageMarketStore = 3107;
	public const MoleMole.Config.SceneBuildingType FungusFighterCultivateNPC = 3201;
	public const MoleMole.Config.SceneBuildingType GcgCat = 3301;
	public const MoleMole.Config.SceneBuildingType GcgBoard = 3302;
	public const MoleMole.Config.SceneBuildingType BrickBreakerWorldEntry = 3303;
	public const MoleMole.Config.SceneBuildingType BrickBreakerDungeonEntry = 3304;
	public const MoleMole.Config.SceneBuildingType ElectroHerculesBattle = 3401;
	public const MoleMole.Config.SceneBuildingType LanV3Boatgame = 3402;
	public const MoleMole.Config.SceneBuildingType LanV3ShadowGame = 3403;
	public const MoleMole.Config.SceneBuildingType FakeTower = 3501;
	public const MoleMole.Config.SceneBuildingType FleurFairV2Photo = 3502;
	public const MoleMole.Config.SceneBuildingType FleurFairV2Music = 3503;
	public const MoleMole.Config.SceneBuildingType FleurFairV2Pacman = 3504;
	public const MoleMole.Config.SceneBuildingType FungusV2EntryNPC = 3505;
	public const MoleMole.Config.SceneBuildingType OfferingPariLake = 3601;
	public const MoleMole.Config.SceneBuildingType AkaFesReasoningNPC = 3602;
	public const MoleMole.Config.SceneBuildingType SandWormCannonNPCStage1 = 3603;
	public const MoleMole.Config.SceneBuildingType SandWormCannonNPCStage2 = 3604;
	public const MoleMole.Config.SceneBuildingType SandWormCannonNPCStage3 = 3605;
	public const MoleMole.Config.SceneBuildingType SandWormCannonNPCStage4 = 3606;
	public const MoleMole.Config.SceneBuildingType SandWormCannonNPCStage5 = 3607;
	public const MoleMole.Config.SceneBuildingType AkaFesAstrolabeNPC = 3608;
	public const MoleMole.Config.SceneBuildingType AkaFesArchitectNPC = 3609;
	public const MoleMole.Config.SceneBuildingType AkaFesRhythmNPC = 3610;
}
public enum DLMOIOMHKHC
{
	// Fields
	public const DLMOIOMHKHC None = 0;
	public const DLMOIOMHKHC LanternRiteShip = 1;
}
public enum EIGFAANNKEE
{
	// Fields
	public const EIGFAANNKEE NORMAL = 0;
	public const EIGFAANNKEE ALL = 1;
	public const EIGFAANNKEE Other = 2;
}
public enum IPJOBNFMICI
{
	// Fields
	public const IPJOBNFMICI POLYGON_AREA_TYPE_INSIDE = 0;
	public const IPJOBNFMICI POLYGON_AREA_TYPE_OUTSIDE = 1;
}
public enum AKMLLMENJDI
{
	// Fields
	public const AKMLLMENJDI ZONE_ANIMAL = 1;
	public const AKMLLMENJDI ZONE_RAND_TASK = 2;
	public const AKMLLMENJDI ZONE_RAND_QUEST = 4;
	public const AKMLLMENJDI ZONE_AMBUSH_MONSTER = 8;
}
public enum OOELNLPBPIA
{
	// Fields
	public const OOELNLPBPIA Normal = 0;
	public const OOELNLPBPIA DeathZone = 1;
}
public enum PIADEGIEOLL
{
	// Fields
	public const PIADEGIEOLL DEFAULT_HIGHT = 0;
	public const PIADEGIEOLL DEFAULT_LOWEST = 1;
	public const PIADEGIEOLL PC = 2;
	public const PIADEGIEOLL PS4_HIGH = 3;
	public const PIADEGIEOLL PS4_LOW = 4;
	public const PIADEGIEOLL SWITCH = 5;
	public const PIADEGIEOLL IOS_HIGH = 6;
	public const PIADEGIEOLL IOS_MEDIUM = 7;
	public const PIADEGIEOLL IOS_LOW = 8;
	public const PIADEGIEOLL ANDROID_HIGH = 9;
	public const PIADEGIEOLL ANDROID_MEDIUM = 10;
	public const PIADEGIEOLL ANDROID_LOW = 11;
}
public enum JNMIEIAAFPK
{
	// Fields
	public const JNMIEIAAFPK Default = 0;
	public const JNMIEIAAFPK LOSE = 1;
}
public enum IDLHJOCMOLF
{
	// Fields
	public const IDLHJOCMOLF I_UPDATE = 0;
	public const IDLHJOCMOLF I_LATE_PRE_UPDATE = 1;
	public const IDLHJOCMOLF I_LATE_POST_UPDATE = 2;
	public const IDLHJOCMOLF I_AFTER_RES_TO_UPDATE_END = 3;
	public const IDLHJOCMOLF I_LATE_POST_UPDATE_TO_NEXT_BEFORE_LATE_UPDATE = 4;
	public const IDLHJOCMOLF I_RENDER_TO_NEXT_BEFORE_RES = 5;
	public const IDLHJOCMOLF I_RENDER_TO_NEXT_BEFORE_LATE_UPDATE = 6;
	public const IDLHJOCMOLF I_RENDER_TO_NEXT_BEFORE_NETWORK = 7;
	public const IDLHJOCMOLF I_AFTER_NETWORK_TO_RENDER = 8;
	public const IDLHJOCMOLF I_AFTER_ENTITY_TO_EFFECT_END = 9;
	public const IDLHJOCMOLF I_AFTER_LATE_UPDATE_POST = 10;
	public const IDLHJOCMOLF G_RENDER_TO_NEXT_BEFORE_LATE_UPDATE = 100;
}
public enum GKJFFLIEIAK
{
	// Fields
	public const GKJFFLIEIAK Base = 0;
	public const GKJFFLIEIAK PC = 1;
	public const GKJFFLIEIAK Mobile = 2;
	public const GKJFFLIEIAK PS4Base = 3;
}
public enum ADHFKPOPDBG
{
	// Fields
	public const ADHFKPOPDBG Invalid = 0;
	public const ADHFKPOPDBG MobileBase = 1;
	public const ADHFKPOPDBG MobileHigh = 2;
	public const ADHFKPOPDBG PS4Base = 4;
	public const ADHFKPOPDBG PS4Pro = 8;
	public const ADHFKPOPDBG PCVeryLow = 16;
	public const ADHFKPOPDBG PCLow = 32;
	public const ADHFKPOPDBG PCMiddle = 64;
	public const ADHFKPOPDBG PCHigh = 128;
	public const ADHFKPOPDBG PS5 = 256;
	public const ADHFKPOPDBG UltraHigh = 512;
}
public enum MBIGGJBKHKA
{
	// Fields
	public const MBIGGJBKHKA Object = 0;
	public const MBIGGJBKHKA Layer = 1;
	public const MBIGGJBKHKA Sector = 2;
}
public enum PAKLKCJOHDN
{
	// Fields
	public const PAKLKCJOHDN Normal = 0;
	public const PAKLKCJOHDN City = 1;
	public const PAKLKCJOHDN Navmesh = 2;
}
public enum BDFJBJEIIJC
{
	// Fields
	public const BDFJBJEIIJC Persistence = 0;
	public const BDFJBJEIIJC Terrain = 1;
	public const BDFJBJEIIJC StaticModel = 2;
	public const BDFJBJEIIJC StoneModel = 3;
	public const BDFJBJEIIJC DynamicModel = 4;
	public const BDFJBJEIIJC Navmesh = 5;
	public const BDFJBJEIIJC Collider = 6;
	public const BDFJBJEIIJC VeryHighModel = 7;
	public const BDFJBJEIIJC TerrainGrass = 8;
	public const BDFJBJEIIJC TreeModel = 9;
	public const BDFJBJEIIJC WaterTile = 10;
	public const BDFJBJEIIJC FogTexture = 11;
	public const BDFJBJEIIJC SmallLight = 12;
	public const BDFJBJEIIJC FarLight = 13;
	public const BDFJBJEIIJC DynamicSmallLight = 14;
	public const BDFJBJEIIJC DynamicFarLight = 15;
	public const BDFJBJEIIJC ReflectionProb = 16;
	public const BDFJBJEIIJC Volume = 17;
	public const BDFJBJEIIJC HeightTerrainGrass = 18;
	public const BDFJBJEIIJC OffsetPersistence = 19;
	public const BDFJBJEIIJC Erosion = 20;
}
public enum JPILDNCENOD
{
	// Fields
	public const JPILDNCENOD None = 0;
	public const JPILDNCENOD Terrain = 1;
	public const JPILDNCENOD LOD = 2;
	public const JPILDNCENOD VO = 3;
	public const JPILDNCENOD Other = 4;
	public const JPILDNCENOD TerrainGrass = 5;
	public const JPILDNCENOD WaterTile = 6;
	public const JPILDNCENOD Navmesh = 7;
	public const JPILDNCENOD Occlusion = 8;
	public const JPILDNCENOD Particle = 9;
	public const JPILDNCENOD FogTexture = 10;
	public const JPILDNCENOD HLOD = 11;
	public const JPILDNCENOD LimitRegion = 12;
	public const JPILDNCENOD VOCollider = 13;
	public const JPILDNCENOD LODCollider = 14;
	public const JPILDNCENOD ReflectionProbTile = 15;
	public const JPILDNCENOD HLODBlock = 16;
}
public enum LJBGACOHAFA
{
	// Fields
	public const LJBGACOHAFA None = 0;
	public const LJBGACOHAFA StoneTint = 1;
}
public enum BPBFIOPIOGC
{
	// Fields
	public const BPBFIOPIOGC BottomCenter = 0;
	public const BPBFIOPIOGC Center = 1;
}
public enum IDNECOKMELE
{
	// Fields
	public const IDNECOKMELE Bottom = 0;
	public const IDNECOKMELE Center = 1;
}
public enum OCFCPCIIODA
{
	// Fields
	public const OCFCPCIIODA Never = 0;
	public const OCFCPCIIODA ExitStage = 1;
	public const OCFCPCIIODA Cooldown = 2;
}
public enum ICJOPDGPCDP
{
	// Fields
	public const ICJOPDGPCDP Any = 0;
	public const ICJOPDGPCDP InSet = 1;
	public const ICJOPDGPCDP Except = 2;
}
public enum POJHHINMOKH
{
	// Fields
	public const POJHHINMOKH Normal = 0;
	public const POJHHINMOKH Jump = 1;
	public const POJHHINMOKH Climb = 2;
	public const POJHHINMOKH Fly = 3;
	public const POJHHINMOKH Aim = 4;
	public const POJHHINMOKH FastAim = 5;
	public const POJHHINMOKH Swim = 6;
	public const POJHHINMOKH Ladder = 7;
	public const POJHHINMOKH Squat = 8;
	public const POJHHINMOKH CombatAir = 9;
	public const POJHHINMOKH Perform = 10;
	public const POJHHINMOKH CloseAll = 11;
}
public enum BIJPGMBCHDH
{
	// Fields
	public const BIJPGMBCHDH normalMove = 0;
	public const BIJPGMBCHDH combatMove = 1;
	public const BIJPGMBCHDH combatAir = 2;
	public const BIJPGMBCHDH combatSkillAir = 3;
	public const BIJPGMBCHDH performMove = 4;
	public const BIJPGMBCHDH combatSkillMove = 5;
}
public enum NEBIBHNLNNB
{
	// Fields
	public const NEBIBHNLNNB normalMove = 0;
	public const NEBIBHNLNNB combatNormal = 1;
	public const NEBIBHNLNNB combatBeHit = 2;
}
public enum MBNGDACLHIG
{
	// Fields
	public const MBNGDACLHIG Normal = 0;
	public const MBNGDACLHIG Strafe = 1;
}
public enum BEJLGNGIMHN
{
	// Fields
	public const BEJLGNGIMHN None = 0;
	public const BEJLGNGIMHN BlendMove = 1;
	public const BEJLGNGIMHN BlendMove3D = 2;
}
public enum OBCIOGPKGHI
{
	// Fields
	public const OBCIOGPKGHI None = 0;
	public const OBCIOGPKGHI CoreProudSkill = 1;
	public const OBCIOGPKGHI InherentProudSkill = 2;
	public const OBCIOGPKGHI AvatarSkill = 3;
}
public enum CMGJDEMDDNP
{
	// Fields
	public const CMGJDEMDDNP QUEST = 0;
	public const CMGJDEMDDNP FREE = 1;
	public const CMGJDEMDDNP NARRATOR = 2;
	public const CMGJDEMDDNP BLOSSOM = 3;
	public const CMGJDEMDDNP ACTIVITY = 4;
	public const CMGJDEMDDNP COOP = 5;
	public const CMGJDEMDDNP GADGET = 6;
	public const CMGJDEMDDNP UI = 7;
}
public enum MDIIMKEKKNC
{
	// Fields
	public const MDIIMKEKKNC DEFAULT = 0;
	public const MDIIMKEKKNC IOS = 1;
	public const MDIIMKEKKNC PC = 2;
	public const MDIIMKEKKNC ANDROID = 3;
	public const MDIIMKEKKNC PS4 = 4;
	public const MDIIMKEKKNC SWITCH = 5;
	public const MDIIMKEKKNC PS5 = 6;
}
public enum IHBLDKNNJLE
{
	// Fields
	public const IHBLDKNNJLE AllExcludeGWGO = 0;
	public const IHBLDKNNJLE CombatExcludeGWGO = 1;
	public const IHBLDKNNJLE AllAvatars = 2;
	public const IHBLDKNNJLE LocalAvatar = 3;
	public const IHBLDKNNJLE LocalTeam = 4;
	public const IHBLDKNNJLE AllTeams = 5;
	public const IHBLDKNNJLE AllVehicle = 6;
	public const IHBLDKNNJLE AllAvatarsOnVehicle = 7;
	public const IHBLDKNNJLE LocalVehicle = 8;
}
public enum MJLKOBFHIJK
{
	// Fields
	public const MJLKOBFHIJK None = 0;
	public const MJLKOBFHIJK NoReviveRegion = 1;
	public const MJLKOBFHIJK DeadRegion = 2;
	public const MJLKOBFHIJK ReturnRegion = 3;
	public const MJLKOBFHIJK CameraSceneLook = 4;
	public const MJLKOBFHIJK LevelAbility = 5;
	public const MJLKOBFHIJK AudioEvent = 6;
	public const MJLKOBFHIJK GlobalValue = 7;
	public const MJLKOBFHIJK Teleport = 8;
	public const MJLKOBFHIJK TeleportWithoutPaimonReminder = 9;
	public const MJLKOBFHIJK TeleportV2 = 10;
}
public enum FGONFBONCAN
{
	// Fields
	public const FGONFBONCAN Common = 0;
	public const FGONFBONCAN OneWay = 1;
}
public enum FPDFPJJBLBA
{
	// Fields
	public const FPDFPJJBLBA None = 0;
	public const FPDFPJJBLBA BlackScreen = 1;
	public const FPDFPJJBLBA SummerTime = 2;
	public const FPDFPJJBLBA NahidaDungeon = 3;
	public const FPDFPJJBLBA CommonDungeonWithVFX = 4;
	public const FPDFPJJBLBA CustomTimeBlackScreen = 5;
}
public enum JCGEAIODDGH
{
	// Fields
	public const JCGEAIODDGH Internal = -1;
	public const JCGEAIODDGH MoveForward = 23;
	public const JCGEAIODDGH MoveBackward = 26;
	public const JCGEAIODDGH MoveLeft = 24;
	public const JCGEAIODDGH MoveRight = 25;
	public const JCGEAIODDGH MoveHorizontal = 0;
	public const JCGEAIODDGH MoveVertical = 1;
	public const JCGEAIODDGH Move = 29;
	public const JCGEAIODDGH ViewHorizontal = 30;
	public const JCGEAIODDGH ViewVertical = 31;
	public const JCGEAIODDGH ChangeView = 32;
	public const JCGEAIODDGH OpenMap = 2;
	public const JCGEAIODDGH OpenCharacter = 3;
	public const JCGEAIODDGH OpenBag = 4;
	public const JCGEAIODDGH OpenGacha = 73;
	public const JCGEAIODDGH OpenChat = 75;
	public const JCGEAIODDGH OpenPaimon = 5;
	public const JCGEAIODDGH ToggleQuestBook = 6;
	public const JCGEAIODDGH ToAvatar1 = 7;
	public const JCGEAIODDGH ToAvatar2 = 8;
	public const JCGEAIODDGH ToAvatar3 = 9;
	public const JCGEAIODDGH ToAvatar4 = 66;
	public const JCGEAIODDGH ChangeWithSkill = 56;
	public const JCGEAIODDGH WheelMenuTrigger = 33;
	public const JCGEAIODDGH Skill1 = 16;
	public const JCGEAIODDGH Skill2 = 17;
	public const JCGEAIODDGH SprintOrSkill3 = 21;
	public const JCGEAIODDGH JumpOrSkill4 = 15;
	public const JCGEAIODDGH Skill5 = 20;
	public const JCGEAIODDGH ToggleAttackMode = 27;
	public const JCGEAIODDGH EnterFocusMode = 28;
	public const JCGEAIODDGH TalkOrPick = 22;
	public const JCGEAIODDGH LeftShoulder = 34;
	public const JCGEAIODDGH RightShoulder = 35;
	public const JCGEAIODDGH MenuBack = 42;
	public const JCGEAIODDGH MenuConfirm = 40;
	public const JCGEAIODDGH MenuLeft = 41;
	public const JCGEAIODDGH MenuUp = 63;
	public const JCGEAIODDGH LeftStickLeft = 50;
	public const JCGEAIODDGH LeftStickRight = 48;
	public const JCGEAIODDGH LeftStickUp = 47;
	public const JCGEAIODDGH LeftStickDown = 49;
	public const JCGEAIODDGH LeftStickVertical = 70;
	public const JCGEAIODDGH LeftStickHorizontal = 69;
	public const JCGEAIODDGH LeftStickMove = 128;
	public const JCGEAIODDGH LeftStickButton = 67;
	public const JCGEAIODDGH RightStickLeft = 62;
	public const JCGEAIODDGH RightStickRight = 60;
	public const JCGEAIODDGH RightStickUp = 59;
	public const JCGEAIODDGH RightStickDown = 61;
	public const JCGEAIODDGH DPadUp = 43;
	public const JCGEAIODDGH DPadRight = 44;
	public const JCGEAIODDGH DPadDown = 45;
	public const JCGEAIODDGH DPadLeft = 46;
	public const JCGEAIODDGH LeftTrigger = 51;
	public const JCGEAIODDGH RightTrigger = 52;
	public const JCGEAIODDGH ZoomCamera = 54;
	public const JCGEAIODDGH ResetCamera = 57;
	public const JCGEAIODDGH SlowMove = 55;
	public const JCGEAIODDGH Slip = 53;
	public const JCGEAIODDGH DebugMenu = 58;
	public const JCGEAIODDGH QuestTransport = 18;
	public const JCGEAIODDGH RightStickVertical = 64;
	public const JCGEAIODDGH RightStickHorizontal = 68;
	public const JCGEAIODDGH RightStickMove = 137;
	public const JCGEAIODDGH RightStickButton = 19;
	public const JCGEAIODDGH Help = 10;
	public const JCGEAIODDGH Multiplayer = 65;
	public const JCGEAIODDGH MenuRight = 71;
	public const JCGEAIODDGH MenuDown = 72;
	public const JCGEAIODDGH OpenNotify = 76;
	public const JCGEAIODDGH OpenDungeonFactor = 77;
	public const JCGEAIODDGH ToAvatar5 = 78;
	public const JCGEAIODDGH ToAvatar1TriggerSkill = 1000;
	public const JCGEAIODDGH ToAvatar2TriggerSkill = 1001;
	public const JCGEAIODDGH ToAvatar3TriggerSkill = 1002;
	public const JCGEAIODDGH ToAvatar4TriggerSkill = 1003;
	public const JCGEAIODDGH ToAvatar5TriggerSkill = 1004;
	public const JCGEAIODDGH OpenHandbook = 79;
	public const JCGEAIODDGH TrackQuest = 80;
	public const JCGEAIODDGH OpenActivityNormal = 82;
	public const JCGEAIODDGH OpenPushTips = 81;
	public const JCGEAIODDGH OpenBattlePass = 83;
	public const JCGEAIODDGH ChallengeInterrupt = 84;
	public const JCGEAIODDGH ChallengeInterruptJoystick = 85;
	public const JCGEAIODDGH HomeworldCreateCustomSuiteJoystick = 141;
	public const JCGEAIODDGH HomeworldFurnitureSearchJoystick = 156;
	public const JCGEAIODDGH Hide = 86;
	public const JCGEAIODDGH QuickUse = 87;
	public const JCGEAIODDGH ActivitySkill = 88;
	public const JCGEAIODDGH ExteraSelectUp = 89;
	public const JCGEAIODDGH ExteraSelectDown = 90;
	public const JCGEAIODDGH ExteraSelectLeft = 91;
	public const JCGEAIODDGH ExteraSelectRight = 92;
	public const JCGEAIODDGH MusicGame_Left_Up = 94;
	public const JCGEAIODDGH MusicGame_Left_Right = 95;
	public const JCGEAIODDGH MusicGame_Left_Down = 96;
	public const JCGEAIODDGH MusicGame_Left_Left = 97;
	public const JCGEAIODDGH MusicGame_Right_Up = 98;
	public const JCGEAIODDGH MusicGame_Right_Right = 99;
	public const JCGEAIODDGH MusicGame_Right_Down = 100;
	public const JCGEAIODDGH MusicGame_Right_Left = 101;
	public const JCGEAIODDGH MusicGame_Free1 = 102;
	public const JCGEAIODDGH MusicGame_Free2 = 103;
	public const JCGEAIODDGH MusicGame_Free3 = 104;
	public const JCGEAIODDGH MusicGame_Free4 = 105;
	public const JCGEAIODDGH MusicGame_Free5 = 106;
	public const JCGEAIODDGH MusicGame_Free6 = 107;
	public const JCGEAIODDGH MusicGame_Free7 = 108;
	public const JCGEAIODDGH MusicGame_Free8 = 109;
	public const JCGEAIODDGH MusicGame_Free9 = 110;
	public const JCGEAIODDGH MusicGame_Free10 = 111;
	public const JCGEAIODDGH MusicGame_Free11 = 112;
	public const JCGEAIODDGH MusicGame_Free12 = 113;
	public const JCGEAIODDGH MusicGame_Free13 = 114;
	public const JCGEAIODDGH MusicGame_Free14 = 115;
	public const JCGEAIODDGH MusicGame_Free15 = 116;
	public const JCGEAIODDGH MusicGame_Free16 = 117;
	public const JCGEAIODDGH MusicGame_Free17 = 118;
	public const JCGEAIODDGH MusicGame_Free18 = 119;
	public const JCGEAIODDGH MusicGame_Free19 = 120;
	public const JCGEAIODDGH MusicGame_Free20 = 121;
	public const JCGEAIODDGH MusicGame_Free21 = 122;
	public const JCGEAIODDGH MusicGame_Free22 = 162;
	public const JCGEAIODDGH MusicGame_Free23 = 163;
	public const JCGEAIODDGH MusicGame_Free24 = 164;
	public const JCGEAIODDGH MusicGame_Free25 = 165;
	public const JCGEAIODDGH MusicGame_Free26 = 166;
	public const JCGEAIODDGH MenuNext = 123;
	public const JCGEAIODDGH F1 = 124;
	public const JCGEAIODDGH F2 = 125;
	public const JCGEAIODDGH F3 = 126;
	public const JCGEAIODDGH Return = 127;
	public const JCGEAIODDGH OpenHomeworldHandbook = 129;
	public const JCGEAIODDGH OpenHomeworldEditor = 130;
	public const JCGEAIODDGH OpenTeamPage = 131;
	public const JCGEAIODDGH OpenFriendPage = 132;
	public const JCGEAIODDGH ObjectTurnUp = 133;
	public const JCGEAIODDGH ObjectTurnDown = 134;
	public const JCGEAIODDGH ObjectTurnLeft = 135;
	public const JCGEAIODDGH ObjectTurnRight = 136;
	public const JCGEAIODDGH MouseLeftButton = 138;
	public const JCGEAIODDGH MouseRightButton = 139;
	public const JCGEAIODDGH CameraMoveUp = 142;
	public const JCGEAIODDGH CameraMoveDown = 143;
	public const JCGEAIODDGH CustomLevelSwitchFloatMode = 144;
	public const JCGEAIODDGH CustomLevelDeployConfirm = 145;
	public const JCGEAIODDGH ArrowUp = 146;
	public const JCGEAIODDGH ArrowDown = 147;
	public const JCGEAIODDGH ArrowLeft = 149;
	public const JCGEAIODDGH ArrowRight = 148;
	public const JCGEAIODDGH LeftControl = 151;
	public const JCGEAIODDGH Space = 150;
	public const JCGEAIODDGH Undo = 152;
	public const JCGEAIODDGH Save = 153;
	public const JCGEAIODDGH ObjectTurnClockwise = 154;
	public const JCGEAIODDGH ObjectTurnAntiClockwise = 155;
	public const JCGEAIODDGH HerculesBattleForward = 157;
	public const JCGEAIODDGH HerculesBattleBackward = 158;
	public const JCGEAIODDGH HerculesBattleCancel = 159;
	public const JCGEAIODDGH VehicleSkill1 = 170;
	public const JCGEAIODDGH VehicleSkill2 = 171;
	public const JCGEAIODDGH VehicleSkill3 = 172;
	public const JCGEAIODDGH VehicleSkill4 = 173;
	public const JCGEAIODDGH VehicleSkill5 = 174;
	public const JCGEAIODDGH ActivityMapScale = 160;
	public const JCGEAIODDGH ActivityMapSetting = 161;
	public const JCGEAIODDGH AkaFesAstrolabeLeftTurn = 175;
	public const JCGEAIODDGH AkaFesAstrolabeRightTurn = 176;
	public const JCGEAIODDGH AkaFesAstrolabeHeightChange = 177;
}
public enum CJINABODBJE
{
	// Fields
	public const CJINABODBJE ButtonInput = 0;
	public const CJINABODBJE OneAxisInput = 1;
	public const CJINABODBJE TwoAxisInput = 2;
}
public enum JEJNJEAIPAL
{
	// Fields
	public const JEJNJEAIPAL Any = 0;
	public const JEJNJEAIPAL ButtonPressed = 1;
	public const JEJNJEAIPAL ButtonReleased = 2;
	public const JEJNJEAIPAL ButtonPressing = 3;
	public const JEJNJEAIPAL ButtonUnpressing = 4;
	public const JEJNJEAIPAL ButtonLongPressed = 5;
	public const JEJNJEAIPAL ButtonLongPressing = 6;
	public const JEJNJEAIPAL ButtonLongReleased = 7;
	public const JEJNJEAIPAL ButtonShortPressUp = 8;
	public const JEJNJEAIPAL ButtonRepeating = 9;
	public const JEJNJEAIPAL AxisActive = 10;
	public const JEJNJEAIPAL NegativeButtonRepeating = 11;
}
public enum NGNIGAFBBDN
{
	// Fields
	public const NGNIGAFBBDN Invalid = 0;
	public const NGNIGAFBBDN MoveEvent = 1;
	public const NGNIGAFBBDN ChangeViewEvent = 2;
	public const NGNIGAFBBDN OpenMapEvent = 3;
	public const NGNIGAFBBDN OpenCharacterEvent = 4;
	public const NGNIGAFBBDN OpenBagEvent = 5;
	public const NGNIGAFBBDN OpenGachaEvent = 6;
	public const NGNIGAFBBDN OpenChatEvent = 7;
	public const NGNIGAFBBDN OpenPaimonEvent = 8;
	public const NGNIGAFBBDN ToggleQuestBookEvent = 9;
	public const NGNIGAFBBDN ToAvatar1Event = 10;
	public const NGNIGAFBBDN ToAvatar2Event = 11;
	public const NGNIGAFBBDN ToAvatar3Event = 12;
	public const NGNIGAFBBDN ToAvatar4Event = 13;
	public const NGNIGAFBBDN TriggerChangeWithSkillEvent = 14;
	public const NGNIGAFBBDN CancelChangeWithSkillEvent = 15;
	public const NGNIGAFBBDN TriggerWheelMenuEvent = 16;
	public const NGNIGAFBBDN CloseWheelMenuEvent = 17;
	public const NGNIGAFBBDN TriggerSkill1Event = 18;
	public const NGNIGAFBBDN TriggerSkill2Event = 19;
	public const NGNIGAFBBDN TriggerSkill3Event = 20;
	public const NGNIGAFBBDN TriggerSkill4Event = 21;
	public const NGNIGAFBBDN TriggerSkill5Event = 22;
	public const NGNIGAFBBDN ReleaseSkill1Event = 23;
	public const NGNIGAFBBDN ReleaseSkill2Event = 24;
	public const NGNIGAFBBDN ReleaseSkill3Event = 25;
	public const NGNIGAFBBDN ReleaseSkill4Event = 26;
	public const NGNIGAFBBDN ReleaseSkill5Event = 27;
	public const NGNIGAFBBDN SelectingEvent = 28;
	public const NGNIGAFBBDN CancelSelectingEvent = 29;
	public const NGNIGAFBBDN ToggleAttackModeEvent = 30;
	public const NGNIGAFBBDN EnterFocusModeEvent = 31;
	public const NGNIGAFBBDN ExitFocusModeEvent = 32;
	public const NGNIGAFBBDN TalkOrPickEvent = 33;
	public const NGNIGAFBBDN LeftShoulderEvent = 34;
	public const NGNIGAFBBDN LeftShoulderReleaseEvent = 35;
	public const NGNIGAFBBDN RightShoulderEvent = 36;
	public const NGNIGAFBBDN RightShoulderReleaseEvent = 37;
	public const NGNIGAFBBDN MenuBackEvent = 38;
	public const NGNIGAFBBDN MenuBackingEvent = 39;
	public const NGNIGAFBBDN MenuBackingCancelEvent = 40;
	public const NGNIGAFBBDN MenuConfirmEvent = 41;
	public const NGNIGAFBBDN MenuConfirmingEvent = 42;
	public const NGNIGAFBBDN MenuConfirmingCancelEvent = 43;
	public const NGNIGAFBBDN MenuLeftEvent = 44;
	public const NGNIGAFBBDN MenuLeftPressingEvent = 45;
	public const NGNIGAFBBDN MenuLeftJustReleasedEvent = 46;
	public const NGNIGAFBBDN MenuUpEvent = 47;
	public const NGNIGAFBBDN MenuRightEvent = 48;
	public const NGNIGAFBBDN MenuDownEvent = 49;
	public const NGNIGAFBBDN LeftStickLeftEvent = 50;
	public const NGNIGAFBBDN LeftStickRightEvent = 51;
	public const NGNIGAFBBDN LeftStickUpEvent = 52;
	public const NGNIGAFBBDN LeftStickDownEvent = 53;
	public const NGNIGAFBBDN LeftStickEvent = 54;
	public const NGNIGAFBBDN RightStickEvent = 55;
	public const NGNIGAFBBDN LeftTriggerEvent = 56;
	public const NGNIGAFBBDN LeftTriggerReleaseEvent = 57;
	public const NGNIGAFBBDN LeftTriggerAxisEvent = 58;
	public const NGNIGAFBBDN RightTriggerEvent = 59;
	public const NGNIGAFBBDN RightTriggerReleaseEvent = 60;
	public const NGNIGAFBBDN RightTriggerAxisEvent = 61;
	public const NGNIGAFBBDN ZoomCameraEvent = 62;
	public const NGNIGAFBBDN ResetCameraEvent = 63;
	public const NGNIGAFBBDN EnterElementViewEvent = 64;
	public const NGNIGAFBBDN ExitElementViewEvent = 65;
	public const NGNIGAFBBDN ToggleSlowMoveEvent = 66;
	public const NGNIGAFBBDN ToggleSlowMoveTempEvent = 67;
	public const NGNIGAFBBDN ResetTempSlowMoveEvent = 68;
	public const NGNIGAFBBDN SlipEvent = 69;
	public const NGNIGAFBBDN DebugMenuEvent = 70;
	public const NGNIGAFBBDN LeftStickButtonEvent = 71;
	public const NGNIGAFBBDN RightStickButtonEvent = 72;
	public const NGNIGAFBBDN QuestTransportEvent = 73;
	public const NGNIGAFBBDN LeftStickVerticalEvent = 74;
	public const NGNIGAFBBDN LeftStickHorizontalEvent = 75;
	public const NGNIGAFBBDN LeftStickMoveEvent = 76;
	public const NGNIGAFBBDN RightStickVerticalEvent = 77;
	public const NGNIGAFBBDN RightStickHorizontalEvent = 78;
	public const NGNIGAFBBDN RightStickMoveEvent = 79;
	public const NGNIGAFBBDN RightStickLeftEvent = 80;
	public const NGNIGAFBBDN RightStickRightEvent = 81;
	public const NGNIGAFBBDN RightStickUpEvent = 82;
	public const NGNIGAFBBDN RightStickDownEvent = 83;
	public const NGNIGAFBBDN DPadUpEvent = 84;
	public const NGNIGAFBBDN DPadRightEvent = 85;
	public const NGNIGAFBBDN DPadDownEvent = 86;
	public const NGNIGAFBBDN DPadLeftEvent = 87;
	public const NGNIGAFBBDN KeyUpEvent = 88;
	public const NGNIGAFBBDN KeyDownEvent = 89;
	public const NGNIGAFBBDN KeyLeftEvent = 90;
	public const NGNIGAFBBDN KeyRightEvent = 91;
	public const NGNIGAFBBDN DPadUpPressingEvent = 92;
	public const NGNIGAFBBDN DPadRightPressingEvent = 93;
	public const NGNIGAFBBDN DPadDownPressingEvent = 94;
	public const NGNIGAFBBDN DPadLeftPressingEvent = 95;
	public const NGNIGAFBBDN DPadUpReleaseEvent = 96;
	public const NGNIGAFBBDN DPadRightReleaseEvent = 97;
	public const NGNIGAFBBDN DPadDownReleaseEvent = 98;
	public const NGNIGAFBBDN DPadLeftReleaseEvent = 99;
	public const NGNIGAFBBDN HelpEvent = 100;
	public const NGNIGAFBBDN MultiplayerEvent = 101;
	public const NGNIGAFBBDN ToPrevInteeEvent = 102;
	public const NGNIGAFBBDN ToNextInteeEvent = 103;
	public const NGNIGAFBBDN JoypadToggleInteeEvent = 104;
	public const NGNIGAFBBDN OpenNotifyEvent = 105;
	public const NGNIGAFBBDN OpenDungeonFactorEvent = 106;
	public const NGNIGAFBBDN OpenHandbookEvent = 107;
	public const NGNIGAFBBDN TrackQuestEvent = 108;
	public const NGNIGAFBBDN OpenActivityNormalEvent = 109;
	public const NGNIGAFBBDN OpenPushTipsEvent = 110;
	public const NGNIGAFBBDN OpenBattlePassEvent = 111;
	public const NGNIGAFBBDN ToAvatar5Event = 112;
	public const NGNIGAFBBDN OpenChatJoystickEvent = 113;
	public const NGNIGAFBBDN OpenChatCancelJoystickEvent = 114;
	public const NGNIGAFBBDN ChallengeInterruptEvent = 115;
	public const NGNIGAFBBDN ChallengeInterruptJoystickEvent = 116;
	public const NGNIGAFBBDN HomeworldCreateCustomSuiteJoystickEvent = 117;
	public const NGNIGAFBBDN HomeworldFurnitureSearchJoystickEvent = 118;
	public const NGNIGAFBBDN HideEvent = 119;
	public const NGNIGAFBBDN TriggerQuickUseEvent = 120;
	public const NGNIGAFBBDN ReleaseQuickUseEvent = 121;
	public const NGNIGAFBBDN TriggerActivitySkillEvent = 122;
	public const NGNIGAFBBDN ReleaseActivitySkillEvent = 123;
	public const NGNIGAFBBDN ExteraSelectUpEvent = 124;
	public const NGNIGAFBBDN ExteraSelectDownEvent = 125;
	public const NGNIGAFBBDN ExteraSelectLeftEvent = 126;
	public const NGNIGAFBBDN ExteraSelectRightEvent = 127;
	public const NGNIGAFBBDN MusicGameLeftUpEvent = 128;
	public const NGNIGAFBBDN MusicGameLeftRightEvent = 129;
	public const NGNIGAFBBDN MusicGameLeftDownEvent = 130;
	public const NGNIGAFBBDN MusicGameLeftLeftEvent = 131;
	public const NGNIGAFBBDN MusicGameRightUpEvent = 132;
	public const NGNIGAFBBDN MusicGameRightRightEvent = 133;
	public const NGNIGAFBBDN MusicGameRightDownEvent = 134;
	public const NGNIGAFBBDN MusicGameRightLeftEvent = 135;
	public const NGNIGAFBBDN MusicGameLeftUpReleasedEvent = 136;
	public const NGNIGAFBBDN MusicGameLeftRightReleasedEvent = 137;
	public const NGNIGAFBBDN MusicGameLeftDownReleasedEvent = 138;
	public const NGNIGAFBBDN MusicGameLeftLeftReleasedEvent = 139;
	public const NGNIGAFBBDN MusicGameRightUpReleasedEvent = 140;
	public const NGNIGAFBBDN MusicGameRightRightReleasedEvent = 141;
	public const NGNIGAFBBDN MusicGameRightDownReleasedEvent = 142;
	public const NGNIGAFBBDN MusicGameRightLeftReleasedEvent = 143;
	public const NGNIGAFBBDN MusicGameFree1Event = 144;
	public const NGNIGAFBBDN MusicGameFree2Event = 145;
	public const NGNIGAFBBDN MusicGameFree3Event = 146;
	public const NGNIGAFBBDN MusicGameFree4Event = 147;
	public const NGNIGAFBBDN MusicGameFree5Event = 148;
	public const NGNIGAFBBDN MusicGameFree6Event = 149;
	public const NGNIGAFBBDN MusicGameFree7Event = 150;
	public const NGNIGAFBBDN MusicGameFree8Event = 151;
	public const NGNIGAFBBDN MusicGameFree9Event = 152;
	public const NGNIGAFBBDN MusicGameFree10Event = 153;
	public const NGNIGAFBBDN MusicGameFree11Event = 154;
	public const NGNIGAFBBDN MusicGameFree12Event = 155;
	public const NGNIGAFBBDN MusicGameFree13Event = 156;
	public const NGNIGAFBBDN MusicGameFree14Event = 157;
	public const NGNIGAFBBDN MusicGameFree15Event = 158;
	public const NGNIGAFBBDN MusicGameFree16Event = 159;
	public const NGNIGAFBBDN MusicGameFree17Event = 160;
	public const NGNIGAFBBDN MusicGameFree18Event = 161;
	public const NGNIGAFBBDN MusicGameFree19Event = 162;
	public const NGNIGAFBBDN MusicGameFree20Event = 163;
	public const NGNIGAFBBDN MusicGameFree21Event = 164;
	public const NGNIGAFBBDN MenuNextEvent = 165;
	public const NGNIGAFBBDN F1Event = 166;
	public const NGNIGAFBBDN F2Event = 167;
	public const NGNIGAFBBDN F3Event = 168;
	public const NGNIGAFBBDN ReturnEvent = 169;
	public const NGNIGAFBBDN OpenHomeworldHandbookEvent = 170;
	public const NGNIGAFBBDN OpenHomeworldEditorEvent = 171;
	public const NGNIGAFBBDN OpenTeamPageEvent = 172;
	public const NGNIGAFBBDN OpenFriendPageEvent = 173;
	public const NGNIGAFBBDN ObjectTurnUpEvent = 174;
	public const NGNIGAFBBDN ObjectTurnDownEvent = 175;
	public const NGNIGAFBBDN ObjectTurnLeftEvent = 176;
	public const NGNIGAFBBDN ObjectTurnRightEvent = 177;
	public const NGNIGAFBBDN CameraMoveUpPressedEvent = 178;
	public const NGNIGAFBBDN CameraMoveUpReleasedEvent = 179;
	public const NGNIGAFBBDN CameraMoveDownPressedEvent = 180;
	public const NGNIGAFBBDN CameraMoveDownReleasedEvent = 181;
	public const NGNIGAFBBDN CustomLevelSwitchFloatModeEvent = 182;
	public const NGNIGAFBBDN CustomLevelDeployConfirmEvent = 183;
	public const NGNIGAFBBDN ArrowUpEvent = 184;
	public const NGNIGAFBBDN ArrowDownEvent = 185;
	public const NGNIGAFBBDN ArrowLeftEvent = 186;
	public const NGNIGAFBBDN ArrowRightEvent = 187;
	public const NGNIGAFBBDN LeftControlEvent = 188;
	public const NGNIGAFBBDN LeftControlReleasedEvent = 189;
	public const NGNIGAFBBDN SpaceEvent = 190;
	public const NGNIGAFBBDN SpaceReleasedEvent = 191;
	public const NGNIGAFBBDN UndoEvent = 192;
	public const NGNIGAFBBDN SaveEvent = 193;
	public const NGNIGAFBBDN ObjectTurnUpReleaseEvent = 194;
	public const NGNIGAFBBDN ObjectTurnDownReleaseEvent = 195;
	public const NGNIGAFBBDN ObjectTurnLeftReleaseEvent = 196;
	public const NGNIGAFBBDN ObjectTurnRightReleaseEvent = 197;
	public const NGNIGAFBBDN ObjectTurnClockwiseEvent = 198;
	public const NGNIGAFBBDN ObjectTurnAntiClockwiseEvent = 199;
	public const NGNIGAFBBDN ObjectTurnClockwiseReleaseEvent = 200;
	public const NGNIGAFBBDN ObjectTurnAntiClockwiseReleaseEvent = 201;
	public const NGNIGAFBBDN OpenMenuEvent = 202;
	public const NGNIGAFBBDN OpenMenuReleaseEvent = 203;
	public const NGNIGAFBBDN MouseLeftButtonEvent = 204;
	public const NGNIGAFBBDN HerculesBattleForwardPressEvent = 205;
	public const NGNIGAFBBDN HerculesBattleForwardReleaseEvent = 206;
	public const NGNIGAFBBDN HerculesBattleBackwardPressEvent = 207;
	public const NGNIGAFBBDN HerculesBattleBackwardReleaseEvent = 208;
	public const NGNIGAFBBDN HerculesBattleCancelEvent = 209;
	public const NGNIGAFBBDN ActivityMapScaleEvent = 210;
	public const NGNIGAFBBDN ActivityMapSettingEvent = 211;
	public const NGNIGAFBBDN MusicGameFree22Event = 212;
	public const NGNIGAFBBDN MusicGameFree23Event = 213;
	public const NGNIGAFBBDN MusicGameFree24Event = 214;
	public const NGNIGAFBBDN MusicGameFree25Event = 215;
	public const NGNIGAFBBDN MusicGameFree26Event = 216;
	public const NGNIGAFBBDN TriggerVehicleSkill1Event = 217;
	public const NGNIGAFBBDN TriggerVehicleSkill2Event = 218;
	public const NGNIGAFBBDN TriggerVehicleSkill3Event = 219;
	public const NGNIGAFBBDN TriggerVehicleSkill4Event = 220;
	public const NGNIGAFBBDN TriggerVehicleSkill5Event = 221;
	public const NGNIGAFBBDN ReleaseVehicleSkill1Event = 222;
	public const NGNIGAFBBDN ReleaseVehicleSkill2Event = 223;
	public const NGNIGAFBBDN ReleaseVehicleSkill3Event = 224;
	public const NGNIGAFBBDN ReleaseVehicleSkill4Event = 225;
	public const NGNIGAFBBDN ReleaseVehicleSkill5Event = 226;
	public const NGNIGAFBBDN AkaFesAstrolabeLeftTurnPressEvent = 227;
	public const NGNIGAFBBDN AkaFesAstrolabeLeftTurnReleaseEvent = 228;
	public const NGNIGAFBBDN AkaFesAstrolabeRightTurnPressEvent = 229;
	public const NGNIGAFBBDN AkaFesAstrolabeRightTurnReleaseEvent = 230;
	public const NGNIGAFBBDN AkaFesAstrolabeHeightChangeEvent = 231;
	public const NGNIGAFBBDN SlipReleaseEvent = 232;
	public const NGNIGAFBBDN SlowMovePresseEvent = 233;
	public const NGNIGAFBBDN SlowMoveReleaseEvent = 234;
	public const NGNIGAFBBDN AkaFesAstrolabeHeightChangeReleaseEvent = 235;
	public const NGNIGAFBBDN Count = 236;
}
public enum FKNPPAMBHFO
{
	// Fields
	public const FKNPPAMBHFO TouchScreen = 0;
	public const FKNPPAMBHFO KeyboardWithTouchScreen = 1;
	public const FKNPPAMBHFO KeyboardWithMouse = 2;
	public const FKNPPAMBHFO Joypad = 3;
}
public enum HHLGNHJEABM
{
	// Fields
	public const HHLGNHJEABM TwoAxis = 0;
	public const HHLGNHJEABM AllPress = 1;
}
public enum MoleMole.Config.ContextEventType
{
	// Fields
	public const MoleMole.Config.ContextEventType Invalid = 0;
	public const MoleMole.Config.ContextEventType ContextEnd = 1;
	public const MoleMole.Config.ContextEventType FrameEnd = 2;
	public const MoleMole.Config.ContextEventType CloseEvent = 3;
	public const MoleMole.Config.ContextEventType BackEvent = 4;
	public const MoleMole.Config.ContextEventType ConfirmEvent = 5;
	public const MoleMole.Config.ContextEventType ConfirmingEvent = 6;
	public const MoleMole.Config.ContextEventType ConfirmingCancelEvent = 7;
	public const MoleMole.Config.ContextEventType ToPrevPrimaryTabEvent = 8;
	public const MoleMole.Config.ContextEventType ToNextPrimaryTabEvent = 9;
	public const MoleMole.Config.ContextEventType ToPrevSecondaryTabEvent = 10;
	public const MoleMole.Config.ContextEventType ToNextSecondaryTabEvent = 11;
	public const MoleMole.Config.ContextEventType MenuNavigationUp = 12;
	public const MoleMole.Config.ContextEventType MenuNavigationDown = 13;
	public const MoleMole.Config.ContextEventType MenuNavigationLeft = 14;
	public const MoleMole.Config.ContextEventType MenuNavigationRight = 15;
	public const MoleMole.Config.ContextEventType IncreaseCountEvent = 16;
	public const MoleMole.Config.ContextEventType DecreaseCountEvent = 17;
	public const MoleMole.Config.ContextEventType TriggerInputEvent = 18;
	public const MoleMole.Config.ContextEventType LogoutConfirmingEvent = 19;
	public const MoleMole.Config.ContextEventType LogoutConfirmEndEvent = 20;
	public const MoleMole.Config.ContextEventType BackingEvent = 21;
	public const MoleMole.Config.ContextEventType BackingCancelEvent = 22;
	public const MoleMole.Config.ContextEventType OpenSortingDropdownEvent = 23;
	public const MoleMole.Config.ContextEventType OpenScreenDropdownEvent = 24;
	public const MoleMole.Config.ContextEventType RevertSortingOrderEvent = 25;
	public const MoleMole.Config.ContextEventType OpenDropdownEvent = 26;
	public const MoleMole.Config.ContextEventType ToNextDropdownOptionEvent = 27;
	public const MoleMole.Config.ContextEventType ToPrevDropdownOptionEvent = 28;
	public const MoleMole.Config.ContextEventType ConfirmDropdownSelectEvent = 29;
	public const MoleMole.Config.ContextEventType CancelDropdownSelectEvent = 30;
	public const MoleMole.Config.ContextEventType ScrollPrimaryScrollerEvent = 31;
	public const MoleMole.Config.ContextEventType ReturnToQuestEvent = 32;
	public const MoleMole.Config.ContextEventType ToAvatar1Event = 33;
	public const MoleMole.Config.ContextEventType ToAvatar2Event = 34;
	public const MoleMole.Config.ContextEventType ToAvatar3Event = 35;
	public const MoleMole.Config.ContextEventType ToAvatar4Event = 36;
	public const MoleMole.Config.ContextEventType OpenChatEvent = 37;
	public const MoleMole.Config.ContextEventType ToAvatar5Event = 38;
	public const MoleMole.Config.ContextEventType ActionNorthEvent = 39;
	public const MoleMole.Config.ContextEventType ActionEastEvent = 40;
	public const MoleMole.Config.ContextEventType ActionSouthEvent = 41;
	public const MoleMole.Config.ContextEventType ActionWestEvent = 42;
	public const MoleMole.Config.ContextEventType ShowItemDetailEvent = 43;
	public const MoleMole.Config.ContextEventType ShowPlayerLevelRewardEvent = 44;
	public const MoleMole.Config.ContextEventType ChangeTeamEvent = 45;
	public const MoleMole.Config.ContextEventType ChangeTeamNameEvent = 46;
	public const MoleMole.Config.ContextEventType FastTeamSelectEvent = 47;
	public const MoleMole.Config.ContextEventType SubmitFastTeamSelect = 48;
	public const MoleMole.Config.ContextEventType ShowHelpTips = 49;
	public const MoleMole.Config.ContextEventType BuyResin = 51;
	public const MoleMole.Config.ContextEventType ChangeFocusZone = 52;
	public const MoleMole.Config.ContextEventType ShowCycleDungeonOnly = 53;
	public const MoleMole.Config.ContextEventType ChangeCustomMarkName = 54;
	public const MoleMole.Config.ContextEventType RemoveCustomMark = 55;
	public const MoleMole.Config.ContextEventType OpenChatCancelEvent = 56;
	public const MoleMole.Config.ContextEventType IncreaseCountReleaseEvent = 57;
	public const MoleMole.Config.ContextEventType DecreaseCountReleaseEvent = 58;
	public const MoleMole.Config.ContextEventType ItemSourceSelectEvent = 59;
	public const MoleMole.Config.ContextEventType ChallengeInterruptEvent = 60;
	public const MoleMole.Config.ContextEventType ToNextScrollerOptionEvent = 61;
	public const MoleMole.Config.ContextEventType ToPrevScrollerOptionEvent = 62;
	public const MoleMole.Config.ContextEventType ConfirmScrollerSelectEvent = 63;
	public const MoleMole.Config.ContextEventType CancelScrollerSelectEvent = 64;
	public const MoleMole.Config.ContextEventType HomeworldCreateCustomSuiteEvent = 65;
	public const MoleMole.Config.ContextEventType HomeworldFurnitureSearchEvent = 66;
	public const MoleMole.Config.ContextEventType ToRewardDetailEvent = 100;
	public const MoleMole.Config.ContextEventType ToPrevRewardEvent = 101;
	public const MoleMole.Config.ContextEventType ToNextRewardEvent = 102;
	public const MoleMole.Config.ContextEventType ToPrevMainQuestEvent = 103;
	public const MoleMole.Config.ContextEventType ToNextMainQuestEvent = 104;
	public const MoleMole.Config.ContextEventType ToggleChapterFold = 105;
	public const MoleMole.Config.ContextEventType NavigateToQuestEvent = 106;
	public const MoleMole.Config.ContextEventType ScrollSubQuestEvent = 107;
	public const MoleMole.Config.ContextEventType ChapterSelectEvent = 108;
	public const MoleMole.Config.ContextEventType ChoosePrevChapterEvent = 109;
	public const MoleMole.Config.ContextEventType ChooseNextChapterEvent = 110;
	public const MoleMole.Config.ContextEventType ShowSubQuestDetailEvent = 111;
	public const MoleMole.Config.ContextEventType ToRewardPageEvent = 112;
	public const MoleMole.Config.ContextEventType ToggleQuestTrackingEvent = 113;
	public const MoleMole.Config.ContextEventType ToPrevTabEvent = 200;
	public const MoleMole.Config.ContextEventType ToNextTabEvent = 201;
	public const MoleMole.Config.ContextEventType UseEvent = 202;
	public const MoleMole.Config.ContextEventType DropEvent = 203;
	public const MoleMole.Config.ContextEventType ToPrevRowEvent = 204;
	public const MoleMole.Config.ContextEventType ToNextRowEvent = 205;
	public const MoleMole.Config.ContextEventType ToPrevSlotEvent = 206;
	public const MoleMole.Config.ContextEventType ToNextSlotEvent = 207;
	public const MoleMole.Config.ContextEventType ReNameEvent = 300;
	public const MoleMole.Config.ContextEventType UIZoomCameraEvent = 400;
	public const MoleMole.Config.ContextEventType UIDetails = 401;
	public const MoleMole.Config.ContextEventType MoveCursorEvent = 500;
	public const MoleMole.Config.ContextEventType ZoomInMapEvent = 501;
	public const MoleMole.Config.ContextEventType ZoomOutMapEvent = 502;
	public const MoleMole.Config.ContextEventType CommonLeftStickUpEvent = 600;
	public const MoleMole.Config.ContextEventType CommonLeftStickDownEvent = 601;
	public const MoleMole.Config.ContextEventType CommonLeftStickLeftEvent = 602;
	public const MoleMole.Config.ContextEventType CommonLeftStickRightEvent = 603;
	public const MoleMole.Config.ContextEventType CommonChangeViewEvent = 604;
	public const MoleMole.Config.ContextEventType CommonMenuUpEvent = 605;
	public const MoleMole.Config.ContextEventType CommonMenuLeftEvent = 606;
	public const MoleMole.Config.ContextEventType CommonRightStickLeftEvent = 607;
	public const MoleMole.Config.ContextEventType CommonRightStickRightEvent = 608;
	public const MoleMole.Config.ContextEventType CommonRightStickUpEvent = 630;
	public const MoleMole.Config.ContextEventType CommonRightStickDownEvent = 631;
	public const MoleMole.Config.ContextEventType CommonLeftStickButtonEvent = 610;
	public const MoleMole.Config.ContextEventType CommonRightStickButtonEvent = 611;
	public const MoleMole.Config.ContextEventType CommonRightTriggerEvent = 612;
	public const MoleMole.Config.ContextEventType CommonLeftTriggerEvent = 613;
	public const MoleMole.Config.ContextEventType CommonRightShoulderEvent = 614;
	public const MoleMole.Config.ContextEventType CommonLeftShoulderEvent = 615;
	public const MoleMole.Config.ContextEventType CommonLeftShoulderReleaseEvent = 616;
	public const MoleMole.Config.ContextEventType CommonRightShoulderReleaseEvent = 617;
	public const MoleMole.Config.ContextEventType CommonLeftStickVerticalEvent = 620;
	public const MoleMole.Config.ContextEventType CommonRightStickVerticalEvent = 621;
	public const MoleMole.Config.ContextEventType CommonLeftStickHorizontalEvent = 622;
	public const MoleMole.Config.ContextEventType CommonRightStickHorizontalEvent = 623;
	public const MoleMole.Config.ContextEventType Revive = 700;
	public const MoleMole.Config.ContextEventType Goddess_ContributeSome = 800;
	public const MoleMole.Config.ContextEventType Goddess_ContributeAll = 801;
	public const MoleMole.Config.ContextEventType Goddess_ScrollUpgradeReward = 802;
	public const MoleMole.Config.ContextEventType ToggleSpringAutoUseEvent = 803;
	public const MoleMole.Config.ContextEventType DialogSelectEvent = 900;
	public const MoleMole.Config.ContextEventType ToNextDialogEvent = 901;
	public const MoleMole.Config.ContextEventType VisitorLoginEvent = 1000;
	public const MoleMole.Config.ContextEventType SwitchServerLoginEvent = 1001;
	public const MoleMole.Config.ContextEventType GachaNoticeEvent = 1020;
	public const MoleMole.Config.ContextEventType GachaHistoryEvent = 1021;
	public const MoleMole.Config.ContextEventType GachaOnceEvent = 1022;
	public const MoleMole.Config.ContextEventType GachaTenTimesEvent = 1023;
	public const MoleMole.Config.ContextEventType GachaNextEvent = 1024;
	public const MoleMole.Config.ContextEventType BuyEvent = 1101;
	public const MoleMole.Config.ContextEventType TipsEvent = 1102;
	public const MoleMole.Config.ContextEventType BuyInfoEvent = 1103;
	public const MoleMole.Config.ContextEventType MallHelpEvent = 1104;
	public const MoleMole.Config.ContextEventType MaterialAddEvent = 1201;
	public const MoleMole.Config.ContextEventType McoinAddEvent = 1202;
	public const MoleMole.Config.ContextEventType HideEvent = 1301;
	public const MoleMole.Config.ContextEventType PhotographOpenEmotion = 1302;
	public const MoleMole.Config.ContextEventType QuickUseEvent = 1401;
	public const MoleMole.Config.ContextEventType ActivitySkillEvent = 1402;
	public const MoleMole.Config.ContextEventType ExteraSelectUpEvent = 1403;
	public const MoleMole.Config.ContextEventType ExteraSelectDownEvent = 1404;
	public const MoleMole.Config.ContextEventType ExteraSelectLeftEvent = 1405;
	public const MoleMole.Config.ContextEventType ExteraSelectRightEvent = 1406;
	public const MoleMole.Config.ContextEventType MusicGameLeftUpEvent = 1407;
	public const MoleMole.Config.ContextEventType MusicGameLeftRightEvent = 1408;
	public const MoleMole.Config.ContextEventType MusicGameLeftDownEvent = 1409;
	public const MoleMole.Config.ContextEventType MusicGameLeftLeftEvent = 1410;
	public const MoleMole.Config.ContextEventType MusicGameRightUpEvent = 1411;
	public const MoleMole.Config.ContextEventType MusicGameRightRightEvent = 1412;
	public const MoleMole.Config.ContextEventType MusicGameRightDownEvent = 1413;
	public const MoleMole.Config.ContextEventType MusicGameRightLeftEvent = 1414;
	public const MoleMole.Config.ContextEventType MusicGameLeftUpReleasedEvent = 1415;
	public const MoleMole.Config.ContextEventType MusicGameLeftRightReleasedEvent = 1416;
	public const MoleMole.Config.ContextEventType MusicGameLeftDownReleasedEvent = 1417;
	public const MoleMole.Config.ContextEventType MusicGameLeftLeftReleasedEvent = 1418;
	public const MoleMole.Config.ContextEventType MusicGameRightUpReleasedEvent = 1419;
	public const MoleMole.Config.ContextEventType MusicGameRightRightReleasedEvent = 1420;
	public const MoleMole.Config.ContextEventType MusicGameRightDownReleasedEvent = 1421;
	public const MoleMole.Config.ContextEventType MusicGameRightLeftReleasedEvent = 1422;
	public const MoleMole.Config.ContextEventType MusicGameFree1Event = 1423;
	public const MoleMole.Config.ContextEventType MusicGameFree2Event = 1424;
	public const MoleMole.Config.ContextEventType MusicGameFree3Event = 1425;
	public const MoleMole.Config.ContextEventType MusicGameFree4Event = 1426;
	public const MoleMole.Config.ContextEventType MusicGameFree5Event = 1427;
	public const MoleMole.Config.ContextEventType MusicGameFree6Event = 1428;
	public const MoleMole.Config.ContextEventType MusicGameFree7Event = 1429;
	public const MoleMole.Config.ContextEventType MusicGameFree8Event = 1430;
	public const MoleMole.Config.ContextEventType MusicGameFree9Event = 1431;
	public const MoleMole.Config.ContextEventType MusicGameFree10Event = 1432;
	public const MoleMole.Config.ContextEventType MusicGameFree11Event = 1433;
	public const MoleMole.Config.ContextEventType MusicGameFree12Event = 1434;
	public const MoleMole.Config.ContextEventType MusicGameFree13Event = 1435;
	public const MoleMole.Config.ContextEventType MusicGameFree14Event = 1436;
	public const MoleMole.Config.ContextEventType MusicGameFree15Event = 1437;
	public const MoleMole.Config.ContextEventType MusicGameFree16Event = 1438;
	public const MoleMole.Config.ContextEventType MusicGameFree17Event = 1439;
	public const MoleMole.Config.ContextEventType MusicGameFree18Event = 1440;
	public const MoleMole.Config.ContextEventType MusicGameFree19Event = 1441;
	public const MoleMole.Config.ContextEventType MusicGameFree20Event = 1442;
	public const MoleMole.Config.ContextEventType MusicGameFree21Event = 1443;
	public const MoleMole.Config.ContextEventType MusicGamePauseEvent = 1444;
	public const MoleMole.Config.ContextEventType OpenTeamPageEvent = 1445;
	public const MoleMole.Config.ContextEventType OpenFriendPageEvent = 1446;
	public const MoleMole.Config.ContextEventType CommonLeftTriggerPressEvent = 1447;
	public const MoleMole.Config.ContextEventType CommonLeftTriggerReleaseEvent = 1448;
	public const MoleMole.Config.ContextEventType CommonRightTriggerPressEvent = 1449;
	public const MoleMole.Config.ContextEventType CommonRightTriggerReleaseEvent = 1450;
	public const MoleMole.Config.ContextEventType ArrowUpEvent = 1451;
	public const MoleMole.Config.ContextEventType ArrowDownEvent = 1452;
	public const MoleMole.Config.ContextEventType ArrowLeftEvent = 1453;
	public const MoleMole.Config.ContextEventType ArrowRightEvent = 1454;
	public const MoleMole.Config.ContextEventType LeftControlEvent = 1455;
	public const MoleMole.Config.ContextEventType LeftControlReleasedEvent = 1456;
	public const MoleMole.Config.ContextEventType SpaceEvent = 1457;
	public const MoleMole.Config.ContextEventType SpaceReleasedEvent = 1458;
	public const MoleMole.Config.ContextEventType UndoEvent = 1459;
	public const MoleMole.Config.ContextEventType SaveEvent = 1460;
	public const MoleMole.Config.ContextEventType OpenMenuEvent = 1461;
	public const MoleMole.Config.ContextEventType OpenMenuReleaseEvent = 1462;
	public const MoleMole.Config.ContextEventType HerculesBattleForwardEvent = 1463;
	public const MoleMole.Config.ContextEventType HerculesBattleBackwardEvent = 1464;
	public const MoleMole.Config.ContextEventType HerculesBattleCancelEvent = 1465;
	public const MoleMole.Config.ContextEventType MusicGameFree22Event = 3501;
	public const MoleMole.Config.ContextEventType MusicGameFree23Event = 3502;
	public const MoleMole.Config.ContextEventType MusicGameFree24Event = 3503;
	public const MoleMole.Config.ContextEventType MusicGameFree25Event = 3504;
	public const MoleMole.Config.ContextEventType MusicGameFree26Event = 3505;
	public const MoleMole.Config.ContextEventType AkaFesAstrolabeLeftTurnEvent = 3506;
	public const MoleMole.Config.ContextEventType AkaFesAstrolabeRightTurnEvent = 3507;
	public const MoleMole.Config.ContextEventType AkaFesAstrolabeHeightChangeEvent = 3508;
}
public enum GDBCHNMJDGD
{
	// Fields
	public const GDBCHNMJDGD NONE = 0;
	public const GDBCHNMJDGD EASY_TOUCH = 1;
	public const GDBCHNMJDGD ACTION_PANEL = 2;
	public const GDBCHNMJDGD TEAM_BTN = 3;
	public const GDBCHNMJDGD MESSAGE_TIPS = 4;
	public const GDBCHNMJDGD INTEE_PANEL = 5;
	public const GDBCHNMJDGD AIM_CONTAINER = 6;
	public const GDBCHNMJDGD SELF_RTT = 7;
	public const GDBCHNMJDGD TOP_BTNS = 8;
	public const GDBCHNMJDGD MAP_INFO = 9;
	public const GDBCHNMJDGD CHAT_INFO = 10;
	public const GDBCHNMJDGD MOVE = 11;
	public const GDBCHNMJDGD GAME_INFO = 12;
	public const GDBCHNMJDGD DIALOG = 13;
	public const GDBCHNMJDGD MAIN_BTN = 14;
	public const GDBCHNMJDGD HP_BAR = 15;
	public const GDBCHNMJDGD SP_BAR = 16;
}
public enum DOEAEKIFGEL
{
	// Fields
	public const DOEAEKIFGEL NONE = 0;
	public const DOEAEKIFGEL ACTIVITY_NORMAL_BTN = 1;
	public const DOEAEKIFGEL PAIMON_MENU_BTN = 2;
	public const DOEAEKIFGEL GACHA_BTN = 3;
	public const DOEAEKIFGEL HANDBOOK_BTN = 4;
	public const DOEAEKIFGEL HOMEWORLD_HANDBOOK_BTN = 5;
	public const DOEAEKIFGEL BATTLE_PASS_BTN = 6;
	public const DOEAEKIFGEL BAG_BTN = 7;
	public const DOEAEKIFGEL HOMEWORLD_EDITOR_BTN = 8;
	public const DOEAEKIFGEL CHARACTER_BTN = 9;
	public const DOEAEKIFGEL GCG_HANDBOOK_BTN = 10;
	public const DOEAEKIFGEL QUEST_BTN = 11;
}
public enum EMBJHHOCONE
{
	// Fields
	public const EMBJHHOCONE None = 0;
	public const EMBJHHOCONE UnlockTips = 1;
	public const EMBJHHOCONE FinishTips = 2;
	public const EMBJHHOCONE RewardScroller = 3;
	public const EMBJHHOCONE ButtonGoto = 4;
	public const EMBJHHOCONE ButtonCheck = 5;
	public const EMBJHHOCONE Animator = 6;
	public const EMBJHHOCONE InfoTips = 7;
}
public enum MKCCLNBKAHB
{
	// Fields
	public const MKCCLNBKAHB CPU = 0;
	public const MKCCLNBKAHB Memory = 1;
	public const MKCCLNBKAHB GPUMemory = 2;
	public const MKCCLNBKAHB GPU = 3;
	public const MKCCLNBKAHB General = 4;
	public const MKCCLNBKAHB BinaryDefault = 5;
	public const MKCCLNBKAHB DeviceSpecific = 6;
	public const MKCCLNBKAHB Invalid = 7;
}
public enum ABGFDFNHFLH
{
	// Fields
	public const ABGFDFNHFLH PC = 0;
	public const ABGFDFNHFLH iOS = 1;
	public const ABGFDFNHFLH Android = 2;
	public const ABGFDFNHFLH PS4 = 3;
	public const ABGFDFNHFLH PS5 = 4;
	public const ABGFDFNHFLH Cloud = 5;
	public const ABGFDFNHFLH Switch = 6;
}
public enum JLOOOILHFOD
{
	// Fields
	public const JLOOOILHFOD Force = 0;
	public const JLOOOILHFOD Min = 1;
	public const JLOOOILHFOD Max = 2;
}
public enum DPKAIKFLKFG
{
	// Fields
	public const DPKAIKFLKFG Grade = 0;
	public const DPKAIKFLKFG Literally = 1;
	public const DPKAIKFLKFG TextMap = 2;
}
public enum FCLBHABJBNI
{
	// Fields
	public const FCLBHABJBNI IntPerfNum = 0;
	public const FCLBHABJBNI StringKeyPerfItem = 2;
	public const FCLBHABJBNI GradePerfItem = 3;
	public const FCLBHABJBNI BoolPerfItem = 4;
	public const FCLBHABJBNI CombinePerfItem = 5;
}
public enum BOIBPPKHIDO
{
	// Fields
	public const BOIBPPKHIDO Live = 0;
}
public enum LENDGJLNEBJ
{
	// Fields
	public const LENDGJLNEBJ ClearSky = 0;
	public const LENDGJLNEBJ Cloudy = 1;
	public const LENDGJLNEBJ Foggy = 2;
	public const LENDGJLNEBJ Rain = 3;
	public const LENDGJLNEBJ Snow = 4;
	public const LENDGJLNEBJ Storm = 5;
	public const LENDGJLNEBJ Skill = 6;
	public const LENDGJLNEBJ Desert = 7;
}
public enum JMFPJEENHGN
{
	// Fields
	public const JMFPJEENHGN None = 0;
	public const JMFPJEENHGN InRain = 1;
	public const JMFPJEENHGN AfterRain = 2;
	public const JMFPJEENHGN InSnow = 3;
	public const JMFPJEENHGN InStorm = 4;
}
public enum EPBACGOEGLK
{
	// Fields
	public const EPBACGOEGLK SetEmitOffsetPos = 0;
	public const EPBACGOEGLK SetEmitPlaySpeed = 1;
	public const EPBACGOEGLK SetEmitPlaySpeedWithLerp = 2;
	public const EPBACGOEGLK SetVelocityMultiplier = 3;
	public const EPBACGOEGLK SetEmitPosition = 4;
}
public enum FNGLHDACACA
{
	// Fields
	public const FNGLHDACACA None = 0;
	public const FNGLHDACACA Fly = 1;
}
public enum MIKIMDALIBE
{
	// Fields
	public const MIKIMDALIBE Collection_WindSeed = 1;
}
public enum FOPPELDIEPK
{
	// Fields
	public const FOPPELDIEPK WindSeed = 1;
}
public enum CCHJLCPCNFF
{
	// Fields
	public const CCHJLCPCNFF ActionPanel = 1;
	public const CCHJLCPCNFF FlyAttach = 2;
}
public enum JDAIPHJGDMN
{
	// Fields
	public const JDAIPHJGDMN Resident = 1;
	public const JDAIPHJGDMN Activity = 2;
}
public enum FLJHMGOLOIA
{
	// Fields
	public const FLJHMGOLOIA A = 1;
	public const FLJHMGOLOIA E = 2;
	public const FLJHMGOLOIA Q = 3;
}
public enum PAIJGMOPNBI
{
	// Fields
	public const PAIJGMOPNBI None = 1;
	public const PAIJGMOPNBI Graven = 2;
}
public enum BBAALPMAODP
{
	// Fields
	public const BBAALPMAODP None = 1;
	public const BBAALPMAODP Retract = 2;
	public const BBAALPMAODP RetractAndCreate = 3;
}
public enum BDJMFMGCDNM.AMAFDDGCNAD
{
	// Fields
	public uint value__; // 0x10
	public const BDJMFMGCDNM.AMAFDDGCNAD None = 0;
	public const BDJMFMGCDNM.AMAFDDGCNAD Ability = 1;
	public const BDJMFMGCDNM.AMAFDDGCNAD AbilityMixin = 2;
	public const BDJMFMGCDNM.AMAFDDGCNAD Modifier = 3;
	public const BDJMFMGCDNM.AMAFDDGCNAD ModifierMixin = 4;
	public const BDJMFMGCDNM.AMAFDDGCNAD Count = 5;
}
public enum LEPHMHEDPOG
{
	// Fields
	public const LEPHMHEDPOG LRUCached = 0;
	public const LEPHMHEDPOG AlwaysCached = 1;
	public const LEPHMHEDPOG DontCache = 2;
}
public enum JGMPGICGJMF
{
	// Fields
	public const JGMPGICGJMF No = 0;
	public const JGMPGICGJMF Once = 1;
	public const JGMPGICGJMF Always = 2;
}
public enum MLBNBAALOFE.NFLMEDDINHO
{
	// Fields
	public const MLBNBAALOFE.NFLMEDDINHO None = 0;
	public const MLBNBAALOFE.NFLMEDDINHO Warning = 1;
	public const MLBNBAALOFE.NFLMEDDINHO Error = 2;
}
public enum MLOPNHKHGJB.CMINEKGFDLD
{
	// Fields
	public const MLOPNHKHGJB.CMINEKGFDLD Queueing = 0;
	public const MLOPNHKHGJB.CMINEKGFDLD CheckMobileEnvironment = 1;
	public const MLOPNHKHGJB.CMINEKGFDLD CheckUpdate = 2;
	public const MLOPNHKHGJB.CMINEKGFDLD PickDownloads = 3;
	public const MLOPNHKHGJB.CMINEKGFDLD DownloadingFiles = 4;
	public const MLOPNHKHGJB.CMINEKGFDLD ApplyAudioDiff = 5;
	public const MLOPNHKHGJB.CMINEKGFDLD Md5Verify = 6;
	public const MLOPNHKHGJB.CMINEKGFDLD LoadingFiles = 7;
	public const MLOPNHKHGJB.CMINEKGFDLD Finish = 8;
}
public enum DKOCKHFFFPM
{
	// Fields
	public const DKOCKHFFFPM Common = 0;
	public const DKOCKHFFFPM Optional_A = 1;
	public const DKOCKHFFFPM TotalNum = 2;
}
public enum FHCCFCEDJOO.NBIMDFHKHOA
{
	// Fields
	public const FHCCFCEDJOO.NBIMDFHKHOA NonExist = 0;
	public const FHCCFCEDJOO.NBIMDFHKHOA Exist = 1;
	public const FHCCFCEDJOO.NBIMDFHKHOA MarkForDelete = 2;
}
public enum DCBDOBECPJF
{
	// Fields
	public const DCBDOBECPJF Normal = 0;
	public const DCBDOBECPJF TextLang = 1;
	public const DCBDOBECPJF AudioLang = 2;
	public const DCBDOBECPJF MidPkgTrial = 3;
	public const DCBDOBECPJF MidPkgFull = 4;
	public const DCBDOBECPJF PlayGoTrial = 5;
	public const DCBDOBECPJF PlayGoFull = 6;
	public const DCBDOBECPJF InGameSilence = 7;
	public const DCBDOBECPJF NextRes = 8;
	public const DCBDOBECPJF RedownloadUseless = 9;
	public const DCBDOBECPJF Optional_A = 10;
}
public enum OIAHGCGEEMP.HENJJLAPJJP
{
	// Fields
	public const OIAHGCGEEMP.HENJJLAPJJP NOT_ENABLE = 0;
	public const OIAHGCGEEMP.HENJJLAPJJP ENABLE_BUT_NOT_START = 1;
	public const OIAHGCGEEMP.HENJJLAPJJP START_BUT_NOT_COMPLETE = 2;
	public const OIAHGCGEEMP.HENJJLAPJJP COMPLETED = 3;
}
public enum LMFKFABAKGK
{
	// Fields
	public const LMFKFABAKGK None = 0;
	public const LMFKFABAKGK LuaHotfixData = 1;
	public const LMFKFABAKGK LuaHotfixCode = 2;
	public const LMFKFABAKGK InjectFix = 4;
}
public enum IJMDBOCFKIG.GPLDNIJNCLH
{
	// Fields
	public const IJMDBOCFKIG.GPLDNIJNCLH ONE_BY_ONE = 0;
	public const IJMDBOCFKIG.GPLDNIJNCLH DIR = 1;
}
public enum GCNPJGFIKCF.NJLCEKPHGDD
{
	// Fields
	public const GCNPJGFIKCF.NJLCEKPHGDD Idle = 0;
	public const GCNPJGFIKCF.NJLCEKPHGDD Downloading = 1;
	public const GCNPJGFIKCF.NJLCEKPHGDD Finish = 2;
	public const GCNPJGFIKCF.NJLCEKPHGDD Cancelled = 3;
	public const GCNPJGFIKCF.NJLCEKPHGDD Failed = 4;
}
public enum GAGPLFKCMKH.HHPFKBJIDHJ
{
	// Fields
	public const GAGPLFKCMKH.HHPFKBJIDHJ Prepare = 0;
	public const GAGPLFKCMKH.HHPFKBJIDHJ FetchLength = 1;
	public const GAGPLFKCMKH.HHPFKBJIDHJ Downloading = 2;
	public const GAGPLFKCMKH.HHPFKBJIDHJ Finish = 3;
}
public enum LFEELHJACMH.FPKEJBCBEPP
{
	// Fields
	public const LFEELHJACMH.FPKEJBCBEPP Idle = 0;
	public const LFEELHJACMH.FPKEJBCBEPP Downloading = 1;
	public const LFEELHJACMH.FPKEJBCBEPP Finish = 2;
	public const LFEELHJACMH.FPKEJBCBEPP Cancelled = 3;
	public const LFEELHJACMH.FPKEJBCBEPP Failed = 4;
}
public enum HIDEAIPFOHF.CLDEOOFEJDO
{
	// Fields
	public const HIDEAIPFOHF.CLDEOOFEJDO None = 0;
	public const HIDEAIPFOHF.CLDEOOFEJDO Unknown = -9000;
	public const HIDEAIPFOHF.CLDEOOFEJDO NetConnectionInterrupt = -9001;
	public const HIDEAIPFOHF.CLDEOOFEJDO RequestTimeout = -9002;
	public const HIDEAIPFOHF.CLDEOOFEJDO Md5NotMatchOnce = -9003;
	public const HIDEAIPFOHF.CLDEOOFEJDO Md5NotMatchFinally = -9004;
	public const HIDEAIPFOHF.CLDEOOFEJDO DiskFull = -9005;
	public const HIDEAIPFOHF.CLDEOOFEJDO FileOperationError = -9006;
	public const HIDEAIPFOHF.CLDEOOFEJDO SavePathNotExistOrPermissionDenied = -9007;
	public const HIDEAIPFOHF.CLDEOOFEJDO AlreadyDownloaded = -9008;
}
public enum HIDEAIPFOHF.AKMKPKGKAFK
{
	// Fields
	public const HIDEAIPFOHF.AKMKPKGKAFK Finish = 0;
	public const HIDEAIPFOHF.AKMKPKGKAFK Error = -1;
}
public enum NCMFDFNKIOB.FEMHNOJKDEA
{
	// Fields
	public const NCMFDFNKIOB.FEMHNOJKDEA Unknown = -1;
	public const NCMFDFNKIOB.FEMHNOJKDEA None = 0;
	public const NCMFDFNKIOB.FEMHNOJKDEA InvalidSavePath = 1;
	public const NCMFDFNKIOB.FEMHNOJKDEA InvalidUrl = 2;
	public const NCMFDFNKIOB.FEMHNOJKDEA InvalidDownloadInfo = 3;
	public const NCMFDFNKIOB.FEMHNOJKDEA UwrError = 4;
	public const NCMFDFNKIOB.FEMHNOJKDEA VerifyMd5OrFileSizeFailed = 5;
	public const NCMFDFNKIOB.FEMHNOJKDEA IOFailedInReceiveData = 6;
	public const NCMFDFNKIOB.FEMHNOJKDEA IOFailedInCompleteContent = 7;
	public const NCMFDFNKIOB.FEMHNOJKDEA NullBufferInReceiveData = 8;
	public const NCMFDFNKIOB.FEMHNOJKDEA CreateTempFileFailed = 9;
	public const NCMFDFNKIOB.FEMHNOJKDEA TimeOut = -9002;
	public const NCMFDFNKIOB.FEMHNOJKDEA DiskFull = -9005;
	public const NCMFDFNKIOB.FEMHNOJKDEA IOFailed = -9006;
	public const NCMFDFNKIOB.FEMHNOJKDEA PermissionDenied = -9007;
	public const NCMFDFNKIOB.FEMHNOJKDEA Cancelled = -9009;
	public const NCMFDFNKIOB.FEMHNOJKDEA NotSupportedException = -9201;
	public const NCMFDFNKIOB.FEMHNOJKDEA NotAValidMethodOrArgumentException = -9202;
	public const NCMFDFNKIOB.FEMHNOJKDEA AuthenticationOrDecryptionFailed = -9203;
}
public enum LKOBEDGCKEH.LDBMACMHCPL
{
	// Fields
	public const LKOBEDGCKEH.LDBMACMHCPL Idle = 0;
	public const LKOBEDGCKEH.LDBMACMHCPL Downloading = 1;
	public const LKOBEDGCKEH.LDBMACMHCPL Finish = 2;
	public const LKOBEDGCKEH.LDBMACMHCPL Failed = 3;
}
public enum ENADNFDNPJF.IDPIFPEDPEO
{
	// Fields
	public const ENADNFDNPJF.IDPIFPEDPEO Idle = 0;
	public const ENADNFDNPJF.IDPIFPEDPEO Downloading = 1;
	public const ENADNFDNPJF.IDPIFPEDPEO Combine = 2;
	public const ENADNFDNPJF.IDPIFPEDPEO Finish = 3;
	public const ENADNFDNPJF.IDPIFPEDPEO Failed = 4;
}
public enum CCPFHLOJBEH.DPONANJHMKN
{
	// Fields
	public uint value__; // 0x10
	public const CCPFHLOJBEH.DPONANJHMKN ORIGINAL_OWNER_THEN_DIRECT_OWNER = 0;
	public const CCPFHLOJBEH.DPONANJHMKN ONLY_ORIGINAL_OWNER = 1;
	public const CCPFHLOJBEH.DPONANJHMKN ONLY_DIRECT_OWNER = 2;
}
public enum APOPIPFDGOD
{
	// Fields
	public const APOPIPFDGOD Normal = 0;
	public const APOPIPFDGOD Focused = 1;
	public const APOPIPFDGOD Menu = 2;
	public const APOPIPFDGOD SneakIn = 4;
	public const APOPIPFDGOD Dialog = 8;
	public const APOPIPFDGOD Coop = 16;
	public const APOPIPFDGOD Video = 32;
	public const APOPIPFDGOD ElementView = 64;
	public const APOPIPFDGOD MusicGameSolo = 128;
	public const APOPIPFDGOD MusicGameFreePlay = 256;
}
public enum CGPBBMEBCIJ
{
	// Fields
	public const CGPBBMEBCIJ Unknown = 0;
	public const CGPBBMEBCIJ Minimum = 1;
	public const CGPBBMEBCIJ Full = 2;
}
public enum HFOAEPHNMFG
{
	// Fields
	public const HFOAEPHNMFG Cull = 1;
	public const HFOAEPHNMFG Wait = 2;
	public const HFOAEPHNMFG Pass = 0;
}
public enum KMNPKFFNKAF
{
	// Fields
	public const KMNPKFFNKAF None = 0;
	public const KMNPKFFNKAF Preview = 1;
	public const KMNPKFFNKAF Cutscene = 2;
	public const KMNPKFFNKAF Interaction = 4;
	public const KMNPKFFNKAF Gcg = 8;
}
public enum ICMNGKONKAN
{
	// Fields
	public const ICMNGKONKAN Default = 0;
	public const ICMNGKONKAN FirstPerson = 1;
	public const ICMNGKONKAN ThirdPerson = 2;
}
public enum GPHDDMEBKPH
{
	// Fields
	public const GPHDDMEBKPH Avatar = 0;
	public const GPHDDMEBKPH Camera = 1;
}
public enum GNEJPNKKILC
{
	// Fields
	public const GNEJPNKKILC Clear = 0;
	public const GNEJPNKKILC Ready = 1;
	public const GNEJPNKKILC Wait = 2;
	public const GNEJPNKKILC Failed = 4;
}
public enum ADKELGCECHE
{
	// Fields
	public const ADKELGCECHE None = 0;
	public const ADKELGCECHE Box = 1;
	public const ADKELGCECHE Sphere = 2;
}
public enum NPGFALDCEJJ
{
	// Fields
	public const NPGFALDCEJJ None = 0;
	public const NPGFALDCEJJ ChangeWeapon = 1;
	public const NPGFALDCEJJ WearRelic = 2;
	public const NPGFALDCEJJ TakeOffRelic = 3;
	public const NPGFALDCEJJ SelectAvatarRelic = 4;
	public const NPGFALDCEJJ AddEquipMaterial = 5;
	public const NPGFALDCEJJ TalentUnlock = 6;
	public const NPGFALDCEJJ ChangeAvatarSucess = 7;
	public const NPGFALDCEJJ ChangeAvatarFailed = 8;
	public const NPGFALDCEJJ SelectMainQuest = 9;
	public const NPGFALDCEJJ TeamAvatarHoldUp = 10;
	public const NPGFALDCEJJ TeamAvatarHoldDown = 11;
	public const NPGFALDCEJJ TeamAvatarClick = 12;
	public const NPGFALDCEJJ BagDropItem = 13;
	public const NPGFALDCEJJ MailDelete = 14;
	public const NPGFALDCEJJ ItemInCD = 15;
	public const NPGFALDCEJJ PickUp = 16;
	public const NPGFALDCEJJ PlayerLevelBtn = 17;
	public const NPGFALDCEJJ ChestPickupFail = 18;
	public const NPGFALDCEJJ EnterDungeonSuccess = 19;
}
public enum EEJOBBHMKOH
{
	// Fields
	public const EEJOBBHMKOH Unknown = 0;
	public const EEJOBBHMKOH Female = 1;
	public const EEJOBBHMKOH Male = 2;
	public const EEJOBBHMKOH Others = 3;
}
public enum CBLMFPDFJLD
{
	// Fields
	public const CBLMFPDFJLD Uncategorized = 0;
	public const CBLMFPDFJLD Listener = 1;
	public const CBLMFPDFJLD Static = 2;
	public const CBLMFPDFJLD Eco = 3;
	public const CBLMFPDFJLD MonoMultiPos = 4;
	public const CBLMFPDFJLD ExDrivenMultiPos = 5;
	public const CBLMFPDFJLD PeriodicMultiPos = 6;
	public const CBLMFPDFJLD Room = 7;
	public const CBLMFPDFJLD Portal = 8;
	public const CBLMFPDFJLD RoomTrigger = 9;
	public const CBLMFPDFJLD Count = 10;
}
public enum DMHLNJGJHDJ
{
	// Fields
	public const DMHLNJGJHDJ Drop = 0;
	public const DMHLNJGJHDJ Wait = 1;
	public const DMHLNJGJHDJ Success = 2;
}
public enum Policy
{
	// Fields
	public const Policy Never = 0;
	public const Policy ExitStage = 1;
	public const Policy Cooldown = 2;
}
public enum MusicOccasion
{
	// Fields
	public const MusicOccasion Unknown = 0;
	public const MusicOccasion Home = 1;
	public const MusicOccasion Game = 2;
}
public enum StimulusReaction
{
	// Fields
	public const StimulusReaction DoNothing = 0;
	public const StimulusReaction NormalTransition = 1;
	public const StimulusReaction AbortCurrent = 2;
	public const StimulusReaction AbortAndDirectTransition = 3;
}
public enum TransitionProposer
{
	// Fields
	public const TransitionProposer Start = 0;
	public const TransitionProposer Sync = 1;
	public const TransitionProposer LocalFixedTime = 2;
	public const TransitionProposer LocalRepetitive = 3;
	public const TransitionProposer GlobalFixedTime = 4;
	public const TransitionProposer GlobalRepetitive = 5;
	public const TransitionProposer LocalStimulus = 6;
	public const TransitionProposer GlobalStimulus = 7;
}
public enum AJABFIMPAHJ
{
	// Fields
	public const AJABFIMPAHJ Casual = 0;
	public const AJABFIMPAHJ Combat = 1;
	public const AJABFIMPAHJ Peace = 2;
}
public enum FFDGLGJHOBO
{
	// Fields
	public const FFDGLGJHOBO AkAPI_Wasapi = 1;
	public const FFDGLGJHOBO AkAPI_XAudio2 = 2;
	public const FFDGLGJHOBO AkAPI_DirectSound = 4;
	public const FFDGLGJHOBO AkAPI_Default = 7;
}
public enum JEIKCNHMBLI
{
	// Fields
	public const JEIKCNHMBLI None = 0;
	public const JEIKCNHMBLI AK_EndOfEvent = 1;
	public const JEIKCNHMBLI AK_EndOfDynamicSequenceItem = 2;
	public const JEIKCNHMBLI AK_Marker = 4;
	public const JEIKCNHMBLI AK_Duration = 8;
	public const JEIKCNHMBLI AK_SpeakerVolumeMatrix = 16;
	public const JEIKCNHMBLI AK_Starvation = 32;
	public const JEIKCNHMBLI AK_MusicPlaylistSelect = 64;
	public const JEIKCNHMBLI AK_MusicPlayStarted = 128;
	public const JEIKCNHMBLI AK_MusicSyncBeat = 256;
	public const JEIKCNHMBLI AK_MusicSyncBar = 512;
	public const JEIKCNHMBLI AK_MusicSyncEntry = 1024;
	public const JEIKCNHMBLI AK_MusicSyncExit = 2048;
	public const JEIKCNHMBLI AK_MusicSyncGrid = 4096;
	public const JEIKCNHMBLI AK_MusicSyncUserCue = 8192;
	public const JEIKCNHMBLI AK_MusicSyncPoint = 16384;
	public const JEIKCNHMBLI AK_MusicSyncAll = 32512;
	public const JEIKCNHMBLI AK_MIDIEvent = 65536;
	public const JEIKCNHMBLI AK_CallbackBits = 1048575;
	public const JEIKCNHMBLI AK_EnableGetSourcePlayPosition = 1048576;
	public const JEIKCNHMBLI AK_EnableGetMusicPlayPosition = 2097152;
	public const JEIKCNHMBLI AK_EnableGetSourceStreamBuffering = 4194304;
	public const JEIKCNHMBLI AK_Monitoring = 536870912;
	public const JEIKCNHMBLI AK_AudioSourceChange = 587202560;
	public const JEIKCNHMBLI AK_Bank = 1073741824;
	public const JEIKCNHMBLI AK_AudioInterruption = 570425344;
}
public enum CNECICIKMJH
{
	// Fields
	public const CNECICIKMJH DiffractionFlags_UseBuiltInParam = 1;
	public const CNECICIKMJH DiffractionFlags_UseObstruction = 2;
	public const CNECICIKMJH DiffractionFlags_CalcEmitterVirtualPosition = 8;
	public const CNECICIKMJH DefaultDiffractionFlags = 11;
}
public enum CIPJMJPGMBE
{
	// Fields
	public const CIPJMJPGMBE AkNoAlloc = 0;
	public const CIPJMJPGMBE AkMalloc = 1;
	public const CIPJMJPGMBE AkVirtualAlloc = 2;
	public const CIPJMJPGMBE AkAllocMask = 3;
	public const CIPJMJPGMBE AkFixedSizeBlocksMode = 8;
	public const CIPJMJPGMBE AkBlockMgmtMask = 8;
}
public enum MoleMole.Audio.Mmoron.AkMonitorErrorCode
{
	// Fields
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode NoError = 0;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode FileNotFound = 1;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CannotOpenFile = 2;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CannotStartStreamNoMemory = 3;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode IODevice = 4;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode IncompatibleIOSettings = 5;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PluginUnsupportedChannelConfiguration = 6;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PluginMediaUnavailable = 7;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PluginInitialisationFailed = 8;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PluginProcessingFailed = 9;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PluginExecutionInvalid = 10;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PluginAllocationFailed = 11;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode VorbisRequireSeekTable = 12;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode VorbisDecodeError = 13;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode AACDecodeError = 14;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode xWMACreateDecoderFailed = 15;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ATRAC9CreateDecoderFailed = 16;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ATRAC9CreateDecoderFailedChShortage = 17;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ATRAC9DecodeFailed = 18;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ATRAC9ClearContextFailed = 19;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ATRAC9LoopSectionTooSmall = 20;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode InvalidAudioFileHeader = 21;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode AudioFileHeaderTooLarge = 22;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode FileTooSmall = 23;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode TransitionNotAccurateChannel = 24;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode TransitionNotAccurateStarvation = 25;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode NothingToPlay = 26;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PlayFailed = 27;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode StingerCouldNotBeScheduled = 28;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode TooLongSegmentLookAhead = 29;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CannotScheduleMusicSwitch = 30;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode TooManySimultaneousMusicSegments = 31;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PlaylistStoppedForEditing = 32;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode MusicClipsRescheduledAfterTrackEdit = 33;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CannotPlaySource_Create = 34;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CannotPlaySource_VirtualOff = 35;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CannotPlaySource_TimeSkip = 36;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CannotPlaySource_InconsistentState = 37;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode MediaNotLoaded = 38;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode VoiceStarving = 39;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode StreamingSourceStarving = 40;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode XMADecoderSourceStarving = 41;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode XMADecodingError = 42;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode InvalidXMAData = 43;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PluginNotRegistered = 44;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CodecNotRegistered = 45;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode PluginVersionMismatch = 46;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode EventIDNotFound = 47;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode InvalidGroupID = 48;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode SelectedChildNotAvailable = 49;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode SelectedNodeNotAvailable = 50;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode SelectedMediaNotAvailable = 51;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode NoValidSwitch = 52;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode SelectedNodeNotAvailablePlay = 53;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode FeedbackVoiceStarving = 54;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode BankLoadFailed = 55;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode BankUnloadFailed = 56;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ErrorWhileLoadingBank = 57;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode InsufficientSpaceToLoadBank = 58;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode LowerEngineCommandListFull = 59;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode SeekNoMarker = 60;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CannotSeekContinuous = 61;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode SeekAfterEof = 62;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode UnknownGameObject = 63;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode UnknownEmitter = 64;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode UnknownListener = 65;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode GameObjectIsNotListener = 66;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode GameObjectIsNotEmitter = 67;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode UnknownGameObjectEvent = 68;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode GameObjectIsNotEmitterEvent = 69;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ExternalSourceNotResolved = 70;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode FileFormatMismatch = 71;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CommandQueueFull = 72;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode CommandTooLarge = 73;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode XMACreateDecoderLimitReached = 74;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode XMAStreamBufferTooSmall = 75;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ModulatorScopeError_Inst = 76;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode ModulatorScopeError_Obj = 77;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode SeekAfterEndOfPlaylist = 78;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode OpusRequireSeekTable = 79;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode OpusDecodeError = 80;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode OpusCreateDecoderFailed = 81;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode SourcePluginNotFound = 82;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode VirtualVoiceLimit = 83;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode AudioDeviceShareSetNotFound = 84;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode NotEnoughMemoryToStart = 85;
	public const MoleMole.Audio.Mmoron.AkMonitorErrorCode Num_ErrorCodes = 86;
}
public enum GIMJIDHKHLF
{
	// Fields
	public const GIMJIDHKHLF Message = 1;
	public const GIMJIDHKHLF Error = 2;
	public const GIMJIDHKHLF All = 3;
}
public enum LOHOFIJLMPC
{
	// Fields
	public const LOHOFIJLMPC MultiPositionType_SingleSource = 0;
	public const LOHOFIJLMPC MultiPositionType_MultiSources = 1;
	public const LOHOFIJLMPC MultiPositionType_MultiDirections = 2;
}
public enum EKGPCBMFJDN
{
	// Fields
	public const EKGPCBMFJDN Simple_Mode = 0;
	public const EKGPCBMFJDN Large_Mode = 1;
	public const EKGPCBMFJDN MultiPosition_Mode = 2;
}
public enum MoleMole.Audio.Mmoron.AkResult
{
	// Fields
	public const MoleMole.Audio.Mmoron.AkResult NotImplemented = 0;
	public const MoleMole.Audio.Mmoron.AkResult Success = 1;
	public const MoleMole.Audio.Mmoron.AkResult Fail = 2;
	public const MoleMole.Audio.Mmoron.AkResult PartialSuccess = 3;
	public const MoleMole.Audio.Mmoron.AkResult NotCompatible = 4;
	public const MoleMole.Audio.Mmoron.AkResult AlreadyConnected = 5;
	public const MoleMole.Audio.Mmoron.AkResult NameNotSet = 6;
	public const MoleMole.Audio.Mmoron.AkResult InvalidFile = 7;
	public const MoleMole.Audio.Mmoron.AkResult AudioFileHeaderTooLarge = 8;
	public const MoleMole.Audio.Mmoron.AkResult MaxReached = 9;
	public const MoleMole.Audio.Mmoron.AkResult InputsInUsed = 10;
	public const MoleMole.Audio.Mmoron.AkResult OutputsInUsed = 11;
	public const MoleMole.Audio.Mmoron.AkResult InvalidName = 12;
	public const MoleMole.Audio.Mmoron.AkResult NameAlreadyInUse = 13;
	public const MoleMole.Audio.Mmoron.AkResult InvalidID = 14;
	public const MoleMole.Audio.Mmoron.AkResult IDNotFound = 15;
	public const MoleMole.Audio.Mmoron.AkResult InvalidInstanceID = 16;
	public const MoleMole.Audio.Mmoron.AkResult NoMoreData = 17;
	public const MoleMole.Audio.Mmoron.AkResult NoSourceAvailable = 18;
	public const MoleMole.Audio.Mmoron.AkResult StateGroupAlreadyExists = 19;
	public const MoleMole.Audio.Mmoron.AkResult InvalidStateGroup = 20;
	public const MoleMole.Audio.Mmoron.AkResult ChildAlreadyHasAParent = 21;
	public const MoleMole.Audio.Mmoron.AkResult InvalidLanguage = 22;
	public const MoleMole.Audio.Mmoron.AkResult CannotAddItseflAsAChild = 23;
	public const MoleMole.Audio.Mmoron.AkResult UserNotInList = 29;
	public const MoleMole.Audio.Mmoron.AkResult NoTransitionPoint = 30;
	public const MoleMole.Audio.Mmoron.AkResult InvalidParameter = 31;
	public const MoleMole.Audio.Mmoron.AkResult ParameterAdjusted = 32;
	public const MoleMole.Audio.Mmoron.AkResult IsA3DSound = 33;
	public const MoleMole.Audio.Mmoron.AkResult NotA3DSound = 34;
	public const MoleMole.Audio.Mmoron.AkResult ElementAlreadyInList = 35;
	public const MoleMole.Audio.Mmoron.AkResult PathNotFound = 36;
	public const MoleMole.Audio.Mmoron.AkResult PathNoVertices = 37;
	public const MoleMole.Audio.Mmoron.AkResult PathNotRunning = 38;
	public const MoleMole.Audio.Mmoron.AkResult PathNotPaused = 39;
	public const MoleMole.Audio.Mmoron.AkResult PathNodeAlreadyInList = 40;
	public const MoleMole.Audio.Mmoron.AkResult PathNodeNotInList = 41;
	public const MoleMole.Audio.Mmoron.AkResult VoiceNotFound = 42;
	public const MoleMole.Audio.Mmoron.AkResult DataNeeded = 43;
	public const MoleMole.Audio.Mmoron.AkResult NoDataNeeded = 44;
	public const MoleMole.Audio.Mmoron.AkResult DataReady = 45;
	public const MoleMole.Audio.Mmoron.AkResult NoDataReady = 46;
	public const MoleMole.Audio.Mmoron.AkResult NoMoreSlotAvailable = 47;
	public const MoleMole.Audio.Mmoron.AkResult SlotNotFound = 48;
	public const MoleMole.Audio.Mmoron.AkResult ProcessingOnly = 49;
	public const MoleMole.Audio.Mmoron.AkResult MemoryLeak = 50;
	public const MoleMole.Audio.Mmoron.AkResult CorruptedBlockList = 51;
	public const MoleMole.Audio.Mmoron.AkResult InsufficientMemory = 52;
	public const MoleMole.Audio.Mmoron.AkResult Cancelled = 53;
	public const MoleMole.Audio.Mmoron.AkResult UnknownBankID = 54;
	public const MoleMole.Audio.Mmoron.AkResult IsProcessing = 55;
	public const MoleMole.Audio.Mmoron.AkResult BankReadError = 56;
	public const MoleMole.Audio.Mmoron.AkResult InvalidSwitchType = 57;
	public const MoleMole.Audio.Mmoron.AkResult VoiceDone = 58;
	public const MoleMole.Audio.Mmoron.AkResult UnknownEnvironment = 59;
	public const MoleMole.Audio.Mmoron.AkResult EnvironmentInUse = 60;
	public const MoleMole.Audio.Mmoron.AkResult UnknownObject = 61;
	public const MoleMole.Audio.Mmoron.AkResult NoConversionNeeded = 62;
	public const MoleMole.Audio.Mmoron.AkResult FormatNotReady = 63;
	public const MoleMole.Audio.Mmoron.AkResult WrongBankVersion = 64;
	public const MoleMole.Audio.Mmoron.AkResult DataReadyNoProcess = 65;
	public const MoleMole.Audio.Mmoron.AkResult FileNotFound = 66;
	public const MoleMole.Audio.Mmoron.AkResult DeviceNotReady = 67;
	public const MoleMole.Audio.Mmoron.AkResult CouldNotCreateSecBuffer = 68;
	public const MoleMole.Audio.Mmoron.AkResult BankAlreadyLoaded = 69;
	public const MoleMole.Audio.Mmoron.AkResult RenderedFX = 71;
	public const MoleMole.Audio.Mmoron.AkResult ProcessNeeded = 72;
	public const MoleMole.Audio.Mmoron.AkResult ProcessDone = 73;
	public const MoleMole.Audio.Mmoron.AkResult MemManagerNotInitialized = 74;
	public const MoleMole.Audio.Mmoron.AkResult StreamMgrNotInitialized = 75;
	public const MoleMole.Audio.Mmoron.AkResult SSEInstructionsNotSupported = 76;
	public const MoleMole.Audio.Mmoron.AkResult Busy = 77;
	public const MoleMole.Audio.Mmoron.AkResult UnsupportedChannelConfig = 78;
	public const MoleMole.Audio.Mmoron.AkResult PluginMediaNotAvailable = 79;
	public const MoleMole.Audio.Mmoron.AkResult MustBeVirtualized = 80;
	public const MoleMole.Audio.Mmoron.AkResult CommandTooLarge = 81;
	public const MoleMole.Audio.Mmoron.AkResult RejectedByFilter = 82;
	public const MoleMole.Audio.Mmoron.AkResult InvalidCustomPlatformName = 83;
	public const MoleMole.Audio.Mmoron.AkResult DLLCannotLoad = 84;
	public const MoleMole.Audio.Mmoron.AkResult DLLPathNotFound = 85;
	public const MoleMole.Audio.Mmoron.AkResult NoJavaVM = 86;
	public const MoleMole.Audio.Mmoron.AkResult OpenSLError = 87;
	public const MoleMole.Audio.Mmoron.AkResult PluginNotRegistered = 88;
	public const MoleMole.Audio.Mmoron.AkResult DataAlignmentError = 89;
}
public enum OKIGGJIFBBN
{
	// Fields
	public const OKIGGJIFBBN FrontLeft = 1;
	public const OKIGGJIFBBN FrontRight = 2;
	public const OKIGGJIFBBN FrontCenter = 4;
	public const OKIGGJIFBBN LowFrequency = 8;
	public const OKIGGJIFBBN BackLeft = 16;
	public const OKIGGJIFBBN BackRight = 32;
	public const OKIGGJIFBBN BackCenter = 256;
	public const OKIGGJIFBBN SideLeft = 512;
	public const OKIGGJIFBBN SideRight = 1024;
	public const OKIGGJIFBBN Top = 2048;
	public const OKIGGJIFBBN HeightFrontLeft = 4096;
	public const OKIGGJIFBBN HeightFrontCenter = 8192;
	public const OKIGGJIFBBN HeightFrontRight = 16384;
	public const OKIGGJIFBBN HeightBackLeft = 32768;
	public const OKIGGJIFBBN HeightBackCenter = 65536;
	public const OKIGGJIFBBN HeightBackRight = 131072;
	public const OKIGGJIFBBN Setup_Mono = 4;
	public const OKIGGJIFBBN Setup_0_1 = 8;
	public const OKIGGJIFBBN Setup_1_1 = 12;
	public const OKIGGJIFBBN Setup_Stereo = 3;
	public const OKIGGJIFBBN Setup_2_1 = 11;
	public const OKIGGJIFBBN Setup_3_Stereo = 7;
	public const OKIGGJIFBBN Setup_3_1 = 15;
	public const OKIGGJIFBBN Setup_4 = 1539;
	public const OKIGGJIFBBN Setup_4_1 = 1547;
	public const OKIGGJIFBBN Setup_5 = 1543;
	public const OKIGGJIFBBN Setup_5_1 = 1551;
	public const OKIGGJIFBBN Setup_6 = 1587;
	public const OKIGGJIFBBN Setup_6_1 = 1595;
	public const OKIGGJIFBBN Setup_7 = 1591;
	public const OKIGGJIFBBN Setup_7_1 = 1599;
	public const OKIGGJIFBBN Setup_Surround = 259;
	public const OKIGGJIFBBN Setup_Dpl2 = 1539;
	public const OKIGGJIFBBN Setup_Height_4 = 184320;
	public const OKIGGJIFBBN Setup_Height_5 = 192512;
	public const OKIGGJIFBBN Setup_Height_All = 258048;
	public const OKIGGJIFBBN Setup_Auro_222 = 22019;
	public const OKIGGJIFBBN Setup_Auro_8 = 185859;
	public const OKIGGJIFBBN Setup_Auro_9 = 185863;
	public const OKIGGJIFBBN Setup_Auro_9_1 = 185871;
	public const OKIGGJIFBBN Setup_Auro_10 = 187911;
	public const OKIGGJIFBBN Setup_Auro_10_1 = 187919;
	public const OKIGGJIFBBN Setup_Auro_11 = 196103;
	public const OKIGGJIFBBN Setup_Auro_11_1 = 196111;
	public const OKIGGJIFBBN Setup_Auro_11_740 = 185911;
	public const OKIGGJIFBBN Setup_Auro_11_1_740 = 185919;
	public const OKIGGJIFBBN Setup_Auro_13_751 = 196151;
	public const OKIGGJIFBBN Setup_Auro_13_1_751 = 196159;
	public const OKIGGJIFBBN Setup_Dolby_5_0_2 = 22023;
	public const OKIGGJIFBBN Setup_Dolby_5_1_2 = 22031;
	public const OKIGGJIFBBN Setup_Dolby_6_0_2 = 22067;
	public const OKIGGJIFBBN Setup_Dolby_6_1_2 = 22075;
	public const OKIGGJIFBBN Setup_Dolby_6_0_4 = 185907;
	public const OKIGGJIFBBN Setup_Dolby_6_1_4 = 185915;
	public const OKIGGJIFBBN Setup_Dolby_7_0_2 = 22071;
	public const OKIGGJIFBBN Setup_Dolby_7_1_2 = 22079;
	public const OKIGGJIFBBN Setup_Dolby_7_0_4 = 185911;
	public const OKIGGJIFBBN Setup_Dolby_7_1_4 = 185919;
	public const OKIGGJIFBBN Setup_All_Speakers = 261951;
	public const OKIGGJIFBBN Setup_1_0_Center = 4;
	public const OKIGGJIFBBN Setup_1_1_Center = 12;
	public const OKIGGJIFBBN Setup_2_0 = 3;
	public const OKIGGJIFBBN Setup_Front = 7;
	public const OKIGGJIFBBN Setup_Default_Plane = 1599;
	public const OKIGGJIFBBN SupportedStandardChannelMask = 261951;
}
public enum KPOANNIANKF
{
	// Fields
	public const KPOANNIANKF BANK = 0;
	public const KPOANNIANKF PCM = 1;
	public const KPOANNIANKF ADPCM = 2;
	public const KPOANNIANKF XMA = 3;
	public const KPOANNIANKF Vorbis = 4;
	public const KPOANNIANKF WiiADPCM = 5;
	public const KPOANNIANKF PCMEX = 7;
	public const KPOANNIANKF ExternalSource = 8;
	public const KPOANNIANKF XWMA = 9;
	public const KPOANNIANKF AAC = 10;
	public const KPOANNIANKF FilePackage = 11;
	public const KPOANNIANKF ATRAC9 = 12;
	public const KPOANNIANKF VAG = 13;
	public const KPOANNIANKF ProfilerCapture = 14;
	public const KPOANNIANKF AnalysisFile = 15;
	public const KPOANNIANKF MIDI = 16;
	public const KPOANNIANKF OpusNX = 17;
	public const KPOANNIANKF CAF = 18;
	public const KPOANNIANKF Opus = 19;
}
public enum LogSeverity
{
	// Fields
	public const LogSeverity Log = 0;
	public const LogSeverity LogDebug = 1;
	public const LogSeverity LogInfo = 2;
	public const LogSeverity LogWarning = 3;
	public const LogSeverity LogAssert = 4;
	public const LogSeverity LogError = 5;
	public const LogSeverity LogException = 6;
}
public enum CriAtomSource.Status
{
	// Fields
	public const CriAtomSource.Status Stop = 0;
	public const CriAtomSource.Status Prep = 1;
	public const CriAtomSource.Status Playing = 2;
	public const CriAtomSource.Status PlayEnd = 3;
	public const CriAtomSource.Status Error = 4;
}
public enum CriAtomEx.VoiceAllocationMethod
{
	// Fields
	public const CriAtomEx.VoiceAllocationMethod Once = 0;
	public const CriAtomEx.VoiceAllocationMethod Retry = 1;
}
public enum CriAtomEx.ResumeMode
{
	// Fields
	public const CriAtomEx.ResumeMode AllPlayback = 0;
	public const CriAtomEx.ResumeMode PausedPlayback = 1;
	public const CriAtomEx.ResumeMode PreparedPlayback = 2;
}
public enum CriAtomEx.PanType
{
	// Fields
	public const CriAtomEx.PanType Unknown = -1;
	public const CriAtomEx.PanType Pan3d = 0;
	public const CriAtomEx.PanType Pos3d = 1;
	public const CriAtomEx.PanType Auto = 2;
}
public enum CriAtomEx.Parameter
{
	// Fields
	public const CriAtomEx.Parameter Volume = 0;
	public const CriAtomEx.Parameter Pitch = 1;
	public const CriAtomEx.Parameter Pan3dAngle = 2;
	public const CriAtomEx.Parameter Pan3dDistance = 3;
	public const CriAtomEx.Parameter Pan3dVolume = 4;
	public const CriAtomEx.Parameter BusSendLevel0 = 9;
	public const CriAtomEx.Parameter BusSendLevel1 = 10;
	public const CriAtomEx.Parameter BusSendLevel2 = 11;
	public const CriAtomEx.Parameter BusSendLevel3 = 12;
	public const CriAtomEx.Parameter BusSendLevel4 = 13;
	public const CriAtomEx.Parameter BusSendLevel5 = 14;
	public const CriAtomEx.Parameter BusSendLevel6 = 15;
	public const CriAtomEx.Parameter BusSendLevel7 = 16;
	public const CriAtomEx.Parameter BandPassFilterCofLow = 17;
	public const CriAtomEx.Parameter BandPassFilterCofHigh = 18;
	public const CriAtomEx.Parameter BiquadFilterType = 19;
	public const CriAtomEx.Parameter BiquadFilterFreq = 20;
	public const CriAtomEx.Parameter BiquadFIlterQ = 21;
	public const CriAtomEx.Parameter BiquadFilterGain = 22;
	public const CriAtomEx.Parameter EnvelopeAttackTime = 23;
	public const CriAtomEx.Parameter EnvelopeHoldTime = 24;
	public const CriAtomEx.Parameter EnvelopeDecayTime = 25;
	public const CriAtomEx.Parameter EnvelopeReleaseTime = 26;
	public const CriAtomEx.Parameter EnvelopeSustainLevel = 27;
	public const CriAtomEx.Parameter StartTime = 28;
	public const CriAtomEx.Parameter Priority = 31;
}
public enum CriAtomExLatencyEstimator.Status
{
	// Fields
	public const CriAtomExLatencyEstimator.Status Stop = 0;
	public const CriAtomExLatencyEstimator.Status Processing = 1;
	public const CriAtomExLatencyEstimator.Status Done = 2;
	public const CriAtomExLatencyEstimator.Status Error = 3;
}
public enum CriAtomExAcbLoader.Status
{
	// Fields
	public const CriAtomExAcbLoader.Status Stop = 0;
	public const CriAtomExAcbLoader.Status Loading = 1;
	public const CriAtomExAcbLoader.Status Complete = 2;
	public const CriAtomExAcbLoader.Status Error = 3;
}
public enum CriAtomExPlayer.Status
{
	// Fields
	public const CriAtomExPlayer.Status Stop = 0;
	public const CriAtomExPlayer.Status Prep = 1;
	public const CriAtomExPlayer.Status Playing = 2;
	public const CriAtomExPlayer.Status PlayEnd = 3;
	public const CriAtomExPlayer.Status Error = 4;
}
public enum CriFsLoader.Status
{
	// Fields
	public const CriFsLoader.Status Stop = 0;
	public const CriFsLoader.Status Loading = 1;
	public const CriFsLoader.Status Complete = 2;
	public const CriFsLoader.Status Error = 3;
}
public enum CriFsInstaller.Status
{
	// Fields
	public const CriFsInstaller.Status Stop = 0;
	public const CriFsInstaller.Status Busy = 1;
	public const CriFsInstaller.Status Complete = 2;
	public const CriFsInstaller.Status Error = 3;
}
public enum CriFsBinder.Status
{
	// Fields
	public const CriFsBinder.Status None = 0;
	public const CriFsBinder.Status Analyze = 1;
	public const CriFsBinder.Status Complete = 2;
	public const CriFsBinder.Status Unbind = 3;
	public const CriFsBinder.Status Removed = 4;
	public const CriFsBinder.Status Invalid = 5;
	public const CriFsBinder.Status Error = 6;
}
public enum CriFsBindRequest.BindType
{
	// Fields
	public const CriFsBindRequest.BindType Cpk = 0;
	public const CriFsBindRequest.BindType Directory = 1;
	public const CriFsBindRequest.BindType File = 2;
}
public enum CriFsWebInstaller.Status
{
	// Fields
	public const CriFsWebInstaller.Status Stop = 0;
	public const CriFsWebInstaller.Status Busy = 1;
	public const CriFsWebInstaller.Status Complete = 2;
	public const CriFsWebInstaller.Status Error = 3;
}
public enum CriFsWebInstaller.Error
{
	// Fields
	public const CriFsWebInstaller.Error None = 0;
	public const CriFsWebInstaller.Error Timeout = 1;
	public const CriFsWebInstaller.Error Memory = 2;
	public const CriFsWebInstaller.Error LocalFs = 3;
	public const CriFsWebInstaller.Error DNS = 4;
	public const CriFsWebInstaller.Error Connection = 5;
	public const CriFsWebInstaller.Error SSL = 6;
	public const CriFsWebInstaller.Error HTTP = 7;
	public const CriFsWebInstaller.Error Internal = 8;
}
public enum CriManaMovieMaterial.MaxFrameDrop
{
	// Fields
	public const CriManaMovieMaterial.MaxFrameDrop Disabled = 0;
	public const CriManaMovieMaterial.MaxFrameDrop One = 1;
	public const CriManaMovieMaterial.MaxFrameDrop Two = 2;
	public const CriManaMovieMaterial.MaxFrameDrop Three = 3;
	public const CriManaMovieMaterial.MaxFrameDrop Four = 4;
	public const CriManaMovieMaterial.MaxFrameDrop Five = 5;
	public const CriManaMovieMaterial.MaxFrameDrop Six = 6;
	public const CriManaMovieMaterial.MaxFrameDrop Seven = 7;
	public const CriManaMovieMaterial.MaxFrameDrop Eight = 8;
	public const CriManaMovieMaterial.MaxFrameDrop Nine = 9;
	public const CriManaMovieMaterial.MaxFrameDrop Ten = 10;
	public const CriManaMovieMaterial.MaxFrameDrop Infinite = -1;
}
public enum CriManaMovieMaterial.RenderMode
{
	// Fields
	public const CriManaMovieMaterial.RenderMode Always = 0;
	public const CriManaMovieMaterial.RenderMode OnVisibility = 1;
	public const CriManaMovieMaterial.RenderMode Never = 2;
}
public enum CriVipMovieMaterial.RenderMode
{
	// Fields
	public const CriVipMovieMaterial.RenderMode Always = 0;
	public const CriVipMovieMaterial.RenderMode OnVisibility = 1;
	public const CriVipMovieMaterial.RenderMode Never = 2;
}
public enum CriAtomConfig.InGamePreviewSwitchMode
{
	// Fields
	public const CriAtomConfig.InGamePreviewSwitchMode Disable = 0;
	public const CriAtomConfig.InGamePreviewSwitchMode Enable = 1;
	public const CriAtomConfig.InGamePreviewSwitchMode FollowBuildSetting = 2;
	public const CriAtomConfig.InGamePreviewSwitchMode Default = 3;
}
public enum CriAtomConfig.LinuxOutput
{
	// Fields
	public const CriAtomConfig.LinuxOutput Default = 0;
	public const CriAtomConfig.LinuxOutput PulseAudio = 1;
	public const CriAtomConfig.LinuxOutput ALSA = 2;
}
public enum CriDisposableObjectManager.ModuleType
{
	// Fields
	public const CriDisposableObjectManager.ModuleType Atom = 0;
	public const CriDisposableObjectManager.ModuleType AtomMic = 1;
	public const CriDisposableObjectManager.ModuleType Fs = 2;
	public const CriDisposableObjectManager.ModuleType FsWeb = 3;
	public const CriDisposableObjectManager.ModuleType Mana = 4;
	public const CriDisposableObjectManager.ModuleType Lips = 5;
	public const CriDisposableObjectManager.ModuleType Vip = 6;
}
public enum QuadrupedEffector
{
	// Fields
	public const QuadrupedEffector FrontLeftFoot = 0;
	public const QuadrupedEffector FrontRightFoot = 1;
	public const QuadrupedEffector BackLeftFoot = 2;
	public const QuadrupedEffector BackRightFoot = 3;
	public const QuadrupedEffector NumLimbs = 4;
	public const QuadrupedEffector FrontHip = 4;
	public const QuadrupedEffector BackHip = 5;
	public const QuadrupedEffector NumEffectorTypes = 6;
}
public enum GPUInstState
{
	// Fields
	public const GPUInstState Unused = 0;
	public const GPUInstState Allocated = 1;
	public const GPUInstState Available = 2;
}
public enum EasingFunction.Ease
{
	// Fields
	public const EasingFunction.Ease EaseInQuad = 0;
	public const EasingFunction.Ease EaseOutQuad = 1;
	public const EasingFunction.Ease EaseInOutQuad = 2;
	public const EasingFunction.Ease EaseInCubic = 3;
	public const EasingFunction.Ease EaseOutCubic = 4;
	public const EasingFunction.Ease EaseInOutCubic = 5;
	public const EasingFunction.Ease EaseInQuart = 6;
	public const EasingFunction.Ease EaseOutQuart = 7;
	public const EasingFunction.Ease EaseInOutQuart = 8;
	public const EasingFunction.Ease EaseInQuint = 9;
	public const EasingFunction.Ease EaseOutQuint = 10;
	public const EasingFunction.Ease EaseInOutQuint = 11;
	public const EasingFunction.Ease EaseInSine = 12;
	public const EasingFunction.Ease EaseOutSine = 13;
	public const EasingFunction.Ease EaseInOutSine = 14;
	public const EasingFunction.Ease EaseInExpo = 15;
	public const EasingFunction.Ease EaseOutExpo = 16;
	public const EasingFunction.Ease EaseInOutExpo = 17;
	public const EasingFunction.Ease EaseInCirc = 18;
	public const EasingFunction.Ease EaseOutCirc = 19;
	public const EasingFunction.Ease EaseInOutCirc = 20;
	public const EasingFunction.Ease Linear = 21;
	public const EasingFunction.Ease Spring = 22;
	public const EasingFunction.Ease EaseInBounce = 23;
	public const EasingFunction.Ease EaseOutBounce = 24;
	public const EasingFunction.Ease EaseInOutBounce = 25;
	public const EasingFunction.Ease EaseInBack = 26;
	public const EasingFunction.Ease EaseOutBack = 27;
	public const EasingFunction.Ease EaseInOutBack = 28;
	public const EasingFunction.Ease EaseInElastic = 29;
	public const EasingFunction.Ease EaseOutElastic = 30;
	public const EasingFunction.Ease EaseInOutElastic = 31;
}
public enum P3D_BlendMode
{
	// Fields
	public const P3D_BlendMode AlphaBlend = 0;
	public const P3D_BlendMode AlphaBlendRgb = 1;
	public const P3D_BlendMode AlphaErase = 2;
	public const P3D_BlendMode AdditiveBlend = 3;
	public const P3D_BlendMode SubtractiveBlend = 4;
	public const P3D_BlendMode NormalBlend = 5;
	public const P3D_BlendMode Replace = 6;
	public const P3D_BlendMode CustomBlend = 7;
}
public enum P3D_CoordType
{
	// Fields
	public const P3D_CoordType UV1 = 0;
	public const P3D_CoordType UV2 = 1;
	public const P3D_CoordType UV3 = 2;
	public const P3D_CoordType UV4 = 3;
}
public enum P3D_Format
{
	// Fields
	public const P3D_Format TruecolorRGBA = 0;
	public const P3D_Format TruecolorRGB = 1;
	public const P3D_Format TruecolorA = 2;
}
public enum P3D_VertexColorBlendMode
{
	// Fields
	public const P3D_VertexColorBlendMode Replace = 0;
	public const P3D_VertexColorBlendMode AddSubtract = 1;
	public const P3D_VertexColorBlendMode Smooth = 2;
}
public enum P3D_VertexColorPaintMode
{
	// Fields
	public const P3D_VertexColorPaintMode RGB = 0;
	public const P3D_VertexColorPaintMode R = 1;
	public const P3D_VertexColorPaintMode G = 2;
	public const P3D_VertexColorPaintMode B = 3;
	public const P3D_VertexColorPaintMode A = 4;
}
public enum WindBoneLOD.QualityLevel
{
	// Fields
	public const WindBoneLOD.QualityLevel None = 0;
	public const WindBoneLOD.QualityLevel Low = 1;
	public const WindBoneLOD.QualityLevel Medium = 2;
	public const WindBoneLOD.QualityLevel High = 3;
	public const WindBoneLOD.QualityLevel ExtraHigh = 4;
}
public enum MutableString.ELengthLevel
{
	// Fields
	public const MutableString.ELengthLevel ELL_Short = 0;
	public const MutableString.ELengthLevel ELL_Med = 1;
	public const MutableString.ELengthLevel ELL_Long = 2;
	public const MutableString.ELengthLevel ELL_SuperLong = 3;
}
public enum ImageResizing.SlicingType
{
	// Fields
	public const ImageResizing.SlicingType Horizontal = 0;
	public const ImageResizing.SlicingType Vertical = 1;
	public const ImageResizing.SlicingType HorizontalAndVertical = 2;
}
public enum ImageResizing.ResizeMode
{
	// Fields
	public const ImageResizing.ResizeMode Stretch = 0;
	public const ImageResizing.ResizeMode Tile = 1;
}
public enum PBXSourceTree
{
	// Fields
	public const PBXSourceTree Absolute = 0;
	public const PBXSourceTree Source = 1;
	public const PBXSourceTree Group = 2;
	public const PBXSourceTree Build = 3;
	public const PBXSourceTree Developer = 4;
	public const PBXSourceTree Sdk = 5;
}
public enum BackgroundModesOptions
{
	// Fields
	public const BackgroundModesOptions None = 0;
	public const BackgroundModesOptions AudioAirplayPiP = 1;
	public const BackgroundModesOptions LocationUpdates = 2;
	public const BackgroundModesOptions VoiceOverIP = 4;
	public const BackgroundModesOptions NewsstandDownloads = 8;
	public const BackgroundModesOptions ExternalAccessoryCommunication = 16;
	public const BackgroundModesOptions UsesBluetoothLEAccessory = 32;
	public const BackgroundModesOptions ActsAsABluetoothLEAccessory = 64;
	public const BackgroundModesOptions BackgroundFetch = 128;
	public const BackgroundModesOptions RemoteNotifications = 256;
}
public enum MapsOptions
{
	// Fields
	public const MapsOptions None = 0;
	public const MapsOptions Airplane = 1;
	public const MapsOptions Bike = 2;
	public const MapsOptions Bus = 4;
	public const MapsOptions Car = 8;
	public const MapsOptions Ferry = 16;
	public const MapsOptions Pedestrian = 32;
	public const MapsOptions RideSharing = 64;
	public const MapsOptions StreetCar = 128;
	public const MapsOptions Subway = 256;
	public const MapsOptions Taxi = 512;
	public const MapsOptions Train = 1024;
	public const MapsOptions Other = 2048;
}
public enum DynamicOcclusion.PlaneAlignment
{
	// Fields
	public const DynamicOcclusion.PlaneAlignment Surface = 0;
	public const DynamicOcclusion.PlaneAlignment Beam = 1;
}
public enum ColorMode
{
	// Fields
	public const ColorMode Flat = 0;
	public const ColorMode Gradient = 1;
	public const ColorMode GradientVertical = 2;
}
public enum AttenuationEquation
{
	// Fields
	public const AttenuationEquation Linear = 0;
	public const AttenuationEquation Quadratic = 1;
	public const AttenuationEquation Blend = 2;
}
public enum Utils.FloatPackingPrecision
{
	// Fields
	public const Utils.FloatPackingPrecision High = 64;
	public const Utils.FloatPackingPrecision Low = 8;
	public const Utils.FloatPackingPrecision Undef = 0;
}
public enum VolumetricDustParticles.Direction
{
	// Fields
	public const VolumetricDustParticles.Direction Beam = 0;
	public const VolumetricDustParticles.Direction Random = 1;
}
public enum FbxCustomProperty.FbxCustomPropertyType
{
	// Fields
	public const FbxCustomProperty.FbxCustomPropertyType Color = 0;
	public const FbxCustomProperty.FbxCustomPropertyType Double4 = 1;
	public const FbxCustomProperty.FbxCustomPropertyType Double3 = 2;
	public const FbxCustomProperty.FbxCustomPropertyType Double2 = 3;
	public const FbxCustomProperty.FbxCustomPropertyType Matrix = 4;
	public const FbxCustomProperty.FbxCustomPropertyType Double = 5;
	public const FbxCustomProperty.FbxCustomPropertyType Bool = 6;
	public const FbxCustomProperty.FbxCustomPropertyType Long = 7;
	public const FbxCustomProperty.FbxCustomPropertyType String = 8;
}
public enum ObjectExportMask
{
	// Fields
	public const ObjectExportMask ExportMeshes = 1;
	public const ObjectExportMask ExportSkinnedMeshes = 2;
	public const ObjectExportMask ExportTerrains = 4;
	public const ObjectExportMask ExportCloth = 8;
	public const ObjectExportMask ExportCameras = 16;
	public const ObjectExportMask ExportLights = 32;
	public const ObjectExportMask ExportAll = 63;
}
public enum SkinnedMeshOptions
{
	// Fields
	public const SkinnedMeshOptions ExportCurrentPose = 0;
	public const SkinnedMeshOptions ExportTPose = 1;
}
public enum FbxLODScheme.LODScheme
{
	// Fields
	public const FbxLODScheme.LODScheme IgnoreLOD = 0;
	public const FbxLODScheme.LODScheme MainCamera = 1;
	public const FbxLODScheme.LODScheme OtherCameras = 2;
	public const FbxLODScheme.LODScheme AllCameras = 3;
	public const FbxLODScheme.LODScheme PerformCulling = 4;
	public const FbxLODScheme.LODScheme CullMainCamera = 5;
	public const FbxLODScheme.LODScheme CullOtherCameras = 6;
	public const FbxLODScheme.LODScheme CullAllCameras = 8;
}
public enum FbxTextureExportScheme.TextureElements
{
	// Fields
	public const FbxTextureExportScheme.TextureElements None = 0;
	public const FbxTextureExportScheme.TextureElements Meshes = 1;
	public const FbxTextureExportScheme.TextureElements SkinnedMeshes = 2;
	public const FbxTextureExportScheme.TextureElements MeshesAndSkinnedMeshes = 3;
	public const FbxTextureExportScheme.TextureElements Terrains = 4;
	public const FbxTextureExportScheme.TextureElements MeshesAndTerrains = 5;
	public const FbxTextureExportScheme.TextureElements SkinnedMeshesAndTerrains = 6;
	public const FbxTextureExportScheme.TextureElements MeshesAndSkinnedMeshesAndTerrains = 7;
	public const FbxTextureExportScheme.TextureElements Everything = 7;
}
public enum FbxTextureExportScheme.TextureSizes
{
	// Fields
	public const FbxTextureExportScheme.TextureSizes ScaleFull = 0;
	public const FbxTextureExportScheme.TextureSizes ScaleHalf = 1;
	public const FbxTextureExportScheme.TextureSizes ScaleQuarter = 2;
	public const FbxTextureExportScheme.TextureSizes ScaleEighth = 3;
	public const FbxTextureExportScheme.TextureSizes ScaleSixteenth = 4;
	public const FbxTextureExportScheme.TextureSizes Scale32nd = 5;
}
public enum UnityFbxExporterBinding.EType
{
	// Fields
	public const UnityFbxExporterBinding.EType ePoint = 0;
	public const UnityFbxExporterBinding.EType eDirectional = 1;
	public const UnityFbxExporterBinding.EType eSpot = 2;
	public const UnityFbxExporterBinding.EType eArea = 3;
	public const UnityFbxExporterBinding.EType eVolume = 4;
}
public enum UnityFbxExporterBinding.ETextureUse
{
	// Fields
	public const UnityFbxExporterBinding.ETextureUse eStandard = 0;
	public const UnityFbxExporterBinding.ETextureUse eShadowMap = 1;
	public const UnityFbxExporterBinding.ETextureUse eLightMap = 2;
	public const UnityFbxExporterBinding.ETextureUse eSphericalReflectionMap = 3;
	public const UnityFbxExporterBinding.ETextureUse eSphereReflectionMap = 4;
	public const UnityFbxExporterBinding.ETextureUse eBumpNormalMap = 5;
}
public enum UnityFbxExporterBinding.EAlphaSource
{
	// Fields
	public const UnityFbxExporterBinding.EAlphaSource eNone = 0;
	public const UnityFbxExporterBinding.EAlphaSource eRGBIntensity = 1;
	public const UnityFbxExporterBinding.EAlphaSource eBlack = 2;
}
public enum UnityFbxExporterBinding.TextureChannels
{
	// Fields
	public const UnityFbxExporterBinding.TextureChannels Diffuse = 0;
	public const UnityFbxExporterBinding.TextureChannels Emissive = 1;
	public const UnityFbxExporterBinding.TextureChannels Ambient = 2;
	public const UnityFbxExporterBinding.TextureChannels NormalMap = 3;
	public const UnityFbxExporterBinding.TextureChannels BumpMap = 4;
	public const UnityFbxExporterBinding.TextureChannels TransparentColor = 5;
	public const UnityFbxExporterBinding.TextureChannels Shininess = 6;
	public const UnityFbxExporterBinding.TextureChannels Specular = 7;
	public const UnityFbxExporterBinding.TextureChannels Reflection = 8;
}
public enum ButtonVisibility
{
	// Fields
	public const ButtonVisibility None = 0;
	public const ButtonVisibility InitializedObjects = 1;
	public const ButtonVisibility UninitializedObjects = 2;
}
public enum StringField.Mode
{
	// Fields
	public const StringField.Mode OnValueChange = 0;
	public const StringField.Mode OnSubmit = 1;
}
public enum Axis
{
	// Fields
	public const Axis X = 0;
	public const Axis Y = 1;
	public const Axis Z = 2;
}
public enum BipedNaming.BoneType
{
	// Fields
	public const BipedNaming.BoneType Unassigned = 0;
	public const BipedNaming.BoneType Spine = 1;
	public const BipedNaming.BoneType Head = 2;
	public const BipedNaming.BoneType Arm = 3;
	public const BipedNaming.BoneType Leg = 4;
	public const BipedNaming.BoneType Tail = 5;
	public const BipedNaming.BoneType Eye = 6;
}
public enum BipedNaming.BoneSide
{
	// Fields
	public const BipedNaming.BoneSide Center = 0;
	public const BipedNaming.BoneSide Left = 1;
	public const BipedNaming.BoneSide Right = 2;
}
public enum InterpolationMode
{
	// Fields
	public const InterpolationMode None = 0;
	public const InterpolationMode InOutCubic = 1;
	public const InterpolationMode InOutQuintic = 2;
	public const InterpolationMode InOutSine = 3;
	public const InterpolationMode InQuintic = 4;
	public const InterpolationMode InQuartic = 5;
	public const InterpolationMode InCubic = 6;
	public const InterpolationMode InQuadratic = 7;
	public const InterpolationMode InElastic = 8;
	public const InterpolationMode InElasticSmall = 9;
	public const InterpolationMode InElasticBig = 10;
	public const InterpolationMode InSine = 11;
	public const InterpolationMode InBack = 12;
	public const InterpolationMode OutQuintic = 13;
	public const InterpolationMode OutQuartic = 14;
	public const InterpolationMode OutCubic = 15;
	public const InterpolationMode OutInCubic = 16;
	public const InterpolationMode OutInQuartic = 17;
	public const InterpolationMode OutElastic = 18;
	public const InterpolationMode OutElasticSmall = 19;
	public const InterpolationMode OutElasticBig = 20;
	public const InterpolationMode OutSine = 21;
	public const InterpolationMode OutBack = 22;
	public const InterpolationMode OutBackCubic = 23;
	public const InterpolationMode OutBackQuartic = 24;
	public const InterpolationMode BackInCubic = 25;
	public const InterpolationMode BackInQuartic = 26;
}
public enum BehaviourPuppet.State
{
	// Fields
	public const BehaviourPuppet.State Puppet = 0;
	public const BehaviourPuppet.State Unpinned = 1;
	public const BehaviourPuppet.State GetUp = 2;
}
public enum BehaviourPuppet.NormalMode
{
	// Fields
	public const BehaviourPuppet.NormalMode Active = 0;
	public const BehaviourPuppet.NormalMode Unmapped = 1;
	public const BehaviourPuppet.NormalMode Kinematic = 2;
}
public enum SubBehaviourCOM.Mode
{
	// Fields
	public const SubBehaviourCOM.Mode FeetCentroid = 0;
	public const SubBehaviourCOM.Mode CenterOfPressure = 1;
}
public enum Muscle.Group
{
	// Fields
	public const Muscle.Group Hips = 0;
	public const Muscle.Group Spine = 1;
	public const Muscle.Group Head = 2;
	public const Muscle.Group Arm = 3;
	public const Muscle.Group Hand = 4;
	public const Muscle.Group Leg = 5;
	public const Muscle.Group Foot = 6;
	public const Muscle.Group Tail = 7;
	public const Muscle.Group Prop = 8;
}
public enum PuppetMaster.Mode
{
	// Fields
	public const PuppetMaster.Mode Active = 0;
	public const PuppetMaster.Mode Kinematic = 1;
	public const PuppetMaster.Mode Disabled = 2;
}
public enum PuppetMaster.UpdateMode
{
	// Fields
	public const PuppetMaster.UpdateMode Normal = 0;
	public const PuppetMaster.UpdateMode AnimatePhysics = 1;
	public const PuppetMaster.UpdateMode FixedUpdate = 2;
}
public enum PuppetMaster.State
{
	// Fields
	public const PuppetMaster.State Alive = 0;
	public const PuppetMaster.State Dead = 1;
	public const PuppetMaster.State Frozen = 2;
}
public enum MuscleRemoveMode
{
	// Fields
	public const MuscleRemoveMode Sever = 0;
	public const MuscleRemoveMode Explode = 1;
	public const MuscleRemoveMode Numb = 2;
}
public enum Weight.Mode
{
	// Fields
	public const Weight.Mode Float = 0;
	public const Weight.Mode Curve = 1;
}
public enum RagdollCreator.ColliderType
{
	// Fields
	public const RagdollCreator.ColliderType Box = 0;
	public const RagdollCreator.ColliderType Capsule = 1;
}
public enum RagdollCreator.JointType
{
	// Fields
	public const RagdollCreator.JointType Configurable = 0;
	public const RagdollCreator.JointType Character = 1;
}
public enum RagdollCreator.Direction
{
	// Fields
	public const RagdollCreator.Direction X = 0;
	public const RagdollCreator.Direction Y = 1;
	public const RagdollCreator.Direction Z = 2;
}
public enum RagdollEditor.Mode
{
	// Fields
	public const RagdollEditor.Mode Colliders = 0;
	public const RagdollEditor.Mode Joints = 1;
}
public enum PointerEventType
{
	// Fields
	public const PointerEventType Mouse = 0;
	public const PointerEventType Touch = 1;
}
public enum ControlRemappingDemo1.DialogHelper.DialogType
{
	// Fields
	public const ControlRemappingDemo1.DialogHelper.DialogType None = 0;
	public const ControlRemappingDemo1.DialogHelper.DialogType JoystickConflict = 1;
	public const ControlRemappingDemo1.DialogHelper.DialogType ElementConflict = 2;
	public const ControlRemappingDemo1.DialogHelper.DialogType KeyConflict = 3;
	public const ControlRemappingDemo1.DialogHelper.DialogType DeleteAssignmentConfirmation = 10;
	public const ControlRemappingDemo1.DialogHelper.DialogType AssignElement = 11;
}
public enum ControlRemappingDemo1.QueueEntry.State
{
	// Fields
	public const ControlRemappingDemo1.QueueEntry.State Waiting = 0;
	public const ControlRemappingDemo1.QueueEntry.State Confirmed = 1;
	public const ControlRemappingDemo1.QueueEntry.State Canceled = 2;
}
public enum ControlRemappingDemo1.UserResponse
{
	// Fields
	public const ControlRemappingDemo1.UserResponse Confirm = 0;
	public const ControlRemappingDemo1.UserResponse Cancel = 1;
	public const ControlRemappingDemo1.UserResponse Custom1 = 2;
	public const ControlRemappingDemo1.UserResponse Custom2 = 3;
}
public enum Common.SystemMessageType
{
	// Fields
	public const Common.SystemMessageType TRC_EMPTY_STORE = 0;
	public const Common.SystemMessageType TRC_PSN_CHAT_RESTRICTION = 1;
	public const Common.SystemMessageType TRC_PSN_UGC_RESTRICTION = 2;
	public const Common.SystemMessageType WARNING_SWITCH_TO_SIMULVIEW = 3;
	public const Common.SystemMessageType CAMERA_NOT_CONNECTED = 4;
	public const Common.SystemMessageType WARNING_PROFILE_PICTURE_AND_NAME_NOT_SHARED = 5;
}
public enum Common.UserMessageType
{
	// Fields
	public const Common.UserMessageType OK = 0;
	public const Common.UserMessageType YESNO = 1;
	public const Common.UserMessageType NONE = 2;
	public const Common.UserMessageType OK_CANCEL = 3;
	public const Common.UserMessageType CANCEL = 4;
}
public enum Common.CommonDialogResult
{
	// Fields
	public const Common.CommonDialogResult RESULT_BUTTON_NOT_SET = 0;
	public const Common.CommonDialogResult RESULT_BUTTON_OK = 1;
	public const Common.CommonDialogResult RESULT_BUTTON_CANCEL = 2;
	public const Common.CommonDialogResult RESULT_BUTTON_YES = 3;
	public const Common.CommonDialogResult RESULT_BUTTON_NO = 4;
	public const Common.CommonDialogResult RESULT_BUTTON_1 = 5;
	public const Common.CommonDialogResult RESULT_BUTTON_2 = 6;
	public const Common.CommonDialogResult RESULT_BUTTON_3 = 7;
	public const Common.CommonDialogResult RESULT_CANCELED = 8;
	public const Common.CommonDialogResult RESULT_ABORTED = 9;
	public const Common.CommonDialogResult RESULT_CLOSED = 10;
}
public enum Ime.EnterLabel
{
	// Fields
	public const Ime.EnterLabel DEFAULT = 0;
	public const Ime.EnterLabel SEND = 1;
	public const Ime.EnterLabel LABEL_SEARCH = 2;
	public const Ime.EnterLabel LABEL_GO = 3;
}
public enum Ime.InputMethod
{
	// Fields
	public const Ime.InputMethod DEFAULT = 0;
}
public enum Ime.Type
{
	// Fields
	public const Ime.Type DEFAULT = 0;
	public const Ime.Type BASIC_LATIN = 1;
	public const Ime.Type URL = 2;
	public const Ime.Type MAIL = 3;
	public const Ime.Type NUMBER = 4;
}
public enum Ime.HorizontalAlignment
{
	// Fields
	public const Ime.HorizontalAlignment LEFT = 0;
	public const Ime.HorizontalAlignment CENTER = 1;
	public const Ime.HorizontalAlignment RIGHT = 2;
}
public enum Ime.VerticalAlignment
{
	// Fields
	public const Ime.VerticalAlignment TOP = 0;
	public const Ime.VerticalAlignment CENTER = 1;
	public const Ime.VerticalAlignment BOTTOM = 2;
}
public enum Ime.PanelPriority
{
	// Fields
	public const Ime.PanelPriority DEFAULT = 0;
	public const Ime.PanelPriority ALPHABET = 1;
	public const Ime.PanelPriority SYMBOL = 2;
	public const Ime.PanelPriority ACCENT = 3;
}
public enum Ime.FlagsSupportedLanguages
{
	// Fields
	public long value__; // 0x10
	public const Ime.FlagsSupportedLanguages LANGUAGE_DANISH = 1;
	public const Ime.FlagsSupportedLanguages LANGUAGE_GERMAN = 2;
	public const Ime.FlagsSupportedLanguages LANGUAGE_ENGLISH_US = 4;
	public const Ime.FlagsSupportedLanguages LANGUAGE_SPANISH = 8;
	public const Ime.FlagsSupportedLanguages LANGUAGE_FRENCH = 16;
	public const Ime.FlagsSupportedLanguages LANGUAGE_ITALIAN = 32;
	public const Ime.FlagsSupportedLanguages LANGUAGE_DUTCH = 64;
	public const Ime.FlagsSupportedLanguages LANGUAGE_NORWEGIAN = 128;
	public const Ime.FlagsSupportedLanguages LANGUAGE_POLISH = 256;
	public const Ime.FlagsSupportedLanguages LANGUAGE_PORTUGUESE_PT = 512;
	public const Ime.FlagsSupportedLanguages LANGUAGE_RUSSIAN = 1024;
	public const Ime.FlagsSupportedLanguages LANGUAGE_FINNISH = 2048;
	public const Ime.FlagsSupportedLanguages LANGUAGE_SWEDISH = 4096;
	public const Ime.FlagsSupportedLanguages LANGUAGE_JAPANESE = 8192;
	public const Ime.FlagsSupportedLanguages LANGUAGE_KOREAN = 16384;
	public const Ime.FlagsSupportedLanguages LANGUAGE_SIMPLIFIED_CHINESE = 32768;
	public const Ime.FlagsSupportedLanguages LANGUAGE_TRADITIONAL_CHINESE = 65536;
	public const Ime.FlagsSupportedLanguages LANGUAGE_PORTUGUESE_BR = 131072;
	public const Ime.FlagsSupportedLanguages LANGUAGE_ENGLISH_GB = 262144;
	public const Ime.FlagsSupportedLanguages LANGUAGE_TURKISH = 524288;
	public const Ime.FlagsSupportedLanguages LANGUAGE_SPANISH_LA = 1048576;
}
public enum Ime.Option
{
	// Fields
	public const Ime.Option DEFAULT = 0;
	public const Ime.Option MULTILINE = 1;
	public const Ime.Option NO_AUTO_CAPITALIZATION = 2;
	public const Ime.Option PASSWORD = 4;
	public const Ime.Option LANGUAGES_FORCED = 8;
	public const Ime.Option EXT_KEYBOARD = 16;
	public const Ime.Option NO_LEARNING = 32;
	public const Ime.Option FIXED_POSITION = 64;
	public const Ime.Option DISABLE_COPY_PASTE = 128;
	public const Ime.Option DISABLE_RESUME = 256;
	public const Ime.Option DISABLE_AUTO_SPACE = 512;
}
public enum Ime.ExtOption
{
	// Fields
	public const Ime.ExtOption DEFAULT = 0;
	public const Ime.ExtOption SET_COLOR = 1;
	public const Ime.ExtOption SET_PRIORITY = 2;
	public const Ime.ExtOption PRIORITY_SHIFT = 4;
	public const Ime.ExtOption PRIORITY_FULL_WIDTH = 8;
	public const Ime.ExtOption PRIORITY_FIXED_PANEL = 16;
	public const Ime.ExtOption DISABLE_POINTER = 64;
	public const Ime.ExtOption ENABLE_ADDITIONAL_DICTIONARY = 128;
	public const Ime.ExtOption DISABLE_STARTUP_SE = 256;
	public const Ime.ExtOption DISABLE_LIST_FOR_EXT_KEYBOARD = 512;
	public const Ime.ExtOption HIDE_KEYPANEL_IF_EXT_KEYBOARD = 1024;
	public const Ime.ExtOption INIT_EXT_KEYBOARD_MODE = 2048;
	public const Ime.ExtOption ENABLE_ACCESSIBILITY = 4096;
	public const Ime.ExtOption ACCESSIBILITY_PANEL_FORCED = 8192;
}
public enum Ime.EnumImeDialogResult
{
	// Fields
	public const Ime.EnumImeDialogResult RESULT_OK = 0;
	public const Ime.EnumImeDialogResult RESULT_USER_CANCELED = 1;
	public const Ime.EnumImeDialogResult RESULT_ABORTED = 2;
}
public enum Ime.EnumImeDialogResultButton
{
	// Fields
	public const Ime.EnumImeDialogResultButton BUTTON_NONE = 0;
	public const Ime.EnumImeDialogResultButton BUTTON_CLOSE = 1;
	public const Ime.EnumImeDialogResultButton BUTTON_ENTER = 2;
}
public enum Messages.MessageType
{
	// Fields
	public const Messages.MessageType kDialog_NotSet = 0;
	public const Messages.MessageType kDialog_Log = 1;
	public const Messages.MessageType kDialog_LogWarning = 2;
	public const Messages.MessageType kDialog_LogError = 3;
	public const Messages.MessageType kDialog_GotDialogResult = 4;
	public const Messages.MessageType kDialog_GotIMEDialogResult = 5;
}
public enum Axis
{
	// Fields
	public const Axis None = 0;
	public const Axis X = 1;
	public const Axis Y = 2;
	public const Axis Z = 4;
	public const Axis NegX = 8;
	public const Axis NegY = 22;
	public const Axis NegZ = 50;
}
public enum SnapUnit
{
	// Fields
	public const SnapUnit Meter = 0;
	public const SnapUnit Centimeter = 1;
	public const SnapUnit Millimeter = 2;
	public const SnapUnit Inch = 3;
	public const SnapUnit Foot = 4;
	public const SnapUnit Yard = 5;
	public const SnapUnit Parsec = 6;
}
public enum LightningBoltQualitySetting
{
	// Fields
	public const LightningBoltQualitySetting UseScript = 0;
	public const LightningBoltQualitySetting LimitToQualitySetting = 1;
}
public enum CameraMode
{
	// Fields
	public const CameraMode Auto = 0;
	public const CameraMode Perspective = 1;
	public const CameraMode OrthographicXY = 2;
	public const CameraMode OrthographicXZ = 3;
	public const CameraMode Unknown = 4;
}
public enum LightningCustomTransformState
{
	// Fields
	public const LightningCustomTransformState Started = 0;
	public const LightningCustomTransformState Executing = 1;
	public const LightningCustomTransformState Ended = 2;
}
public enum EyeAdaptation
{
	// Fields
	public const EyeAdaptation Progressive = 0;
	public const EyeAdaptation Fixed = 1;
}
public enum FFX_FSR2.DebugViewMode
{
	// Fields
	public const FFX_FSR2.DebugViewMode Off = 0;
	public const FFX_FSR2.DebugViewMode ReprojectedHistoryColor = 1;
	public const FFX_FSR2.DebugViewMode UpscaledColor = 2;
	public const FFX_FSR2.DebugViewMode DisocclusionMask = 3;
	public const FFX_FSR2.DebugViewMode BlendingAlpha = 4;
	public const FFX_FSR2.DebugViewMode GlintLifetime = 5;
}
public enum FidelityFXSR.FSRQuality
{
	// Fields
	public const FidelityFXSR.FSRQuality FLOAT32 = 0;
	public const FidelityFXSR.FSRQuality FLOAT16 = 1;
	public const FidelityFXSR.FSRQuality FLOAT16MOBILE = 2;
	public const FidelityFXSR.FSRQuality FLOAT32CONSOLE = 3;
	public const FidelityFXSR.FSRQuality NVIDIAImageScaling = 4;
}
public enum FidelityFXSR.NISHDRMode
{
	// Fields
	public const FidelityFXSR.NISHDRMode None = 0;
	public const FidelityFXSR.NISHDRMode Linear = 1;
	public const FidelityFXSR.NISHDRMode PQ = 2;
}
public enum MHYBloomQuality
{
	// Fields
	public const MHYBloomQuality Low = 0;
	public const MHYBloomQuality Medium = 1;
	public const MHYBloomQuality High = 2;
}
public enum MHYBloomDebugOverlay
{
	// Fields
	public const MHYBloomDebugOverlay None = 0;
	public const MHYBloomDebugOverlay BrightPart = 1;
	public const MHYBloomDebugOverlay Sample4XSource = 2;
	public const MHYBloomDebugOverlay Downsampled = 3;
	public const MHYBloomDebugOverlay Blurred = 4;
	public const MHYBloomDebugOverlay ComposedBlurred = 5;
	public const MHYBloomDebugOverlay ComposedBloom = 6;
	public const MHYBloomDebugOverlay ComposedBloomTone = 7;
}
public enum MHYBloomHDRFormat
{
	// Fields
	public const MHYBloomHDRFormat ARGBHalf = 2;
	public const MHYBloomHDRFormat RGB111110Float = 22;
}
public enum MHYDepthOfFieldQuality
{
	// Fields
	public const MHYDepthOfFieldQuality Low = 0;
	public const MHYDepthOfFieldQuality Medium = 1;
	public const MHYDepthOfFieldQuality High = 2;
	public const MHYDepthOfFieldQuality Utra = 3;
}
public enum MHYDepthOfFieldFilterType
{
	// Fields
	public const MHYDepthOfFieldFilterType gassian = 0;
	public const MHYDepthOfFieldFilterType box = 1;
	public const MHYDepthOfFieldFilterType triangle = 2;
	public const MHYDepthOfFieldFilterType quadratic = 3;
}
public enum MHYDepthOfField.HoleFillMethod
{
	// Fields
	public const MHYDepthOfField.HoleFillMethod None = 0;
	public const MHYDepthOfField.HoleFillMethod Mirror = 1;
	public const MHYDepthOfField.HoleFillMethod OutwardBlurCoc = 2;
}
public enum MotionBlur.MotionBlurQuality
{
	// Fields
	public const MotionBlur.MotionBlurQuality Low = 0;
	public const MotionBlur.MotionBlurQuality High = 1;
	public const MotionBlur.MotionBlurQuality VeryHigh = 2;
}
public enum MotionBlur.DofQuality
{
	// Fields
	public const MotionBlur.DofQuality LowCircle = 0;
	public const MotionBlur.DofQuality MediumCircleQuater = 1;
	public const MotionBlur.DofQuality HighCircleQuater = 2;
	public const MotionBlur.DofQuality HighestCircleHalf = 3;
}
public enum ScreenSpaceReflectionPreset
{
	// Fields
	public const ScreenSpaceReflectionPreset Lower = 0;
	public const ScreenSpaceReflectionPreset Low = 1;
	public const ScreenSpaceReflectionPreset Medium = 2;
	public const ScreenSpaceReflectionPreset High = 3;
	public const ScreenSpaceReflectionPreset Higher = 4;
	public const ScreenSpaceReflectionPreset Ultra = 5;
	public const ScreenSpaceReflectionPreset Overkill = 6;
	public const ScreenSpaceReflectionPreset Custom = 7;
}
public enum ScreenSpaceReflectionResolution
{
	// Fields
	public const ScreenSpaceReflectionResolution Downsampled = 0;
	public const ScreenSpaceReflectionResolution FullSize = 1;
	public const ScreenSpaceReflectionResolution Supersampled = 2;
}
public enum SubpixelMorphologicalAntialiasing.SMAADebugPass
{
	// Fields
	public const SubpixelMorphologicalAntialiasing.SMAADebugPass Off = 0;
	public const SubpixelMorphologicalAntialiasing.SMAADebugPass Edges = 1;
	public const SubpixelMorphologicalAntialiasing.SMAADebugPass Weights = 2;
	public const SubpixelMorphologicalAntialiasing.SMAADebugPass Accumulation = 3;
}
public enum SubpixelMorphologicalAntialiasing.SMAAQualityPreset
{
	// Fields
	public const SubpixelMorphologicalAntialiasing.SMAAQualityPreset Low = 0;
	public const SubpixelMorphologicalAntialiasing.SMAAQualityPreset Medium = 1;
	public const SubpixelMorphologicalAntialiasing.SMAAQualityPreset High = 2;
	public const SubpixelMorphologicalAntialiasing.SMAAQualityPreset Ultra = 3;
}
public enum SubpixelMorphologicalAntialiasing.SMAAEdgeDetectionMethod
{
	// Fields
	public const SubpixelMorphologicalAntialiasing.SMAAEdgeDetectionMethod Luma = 1;
	public const SubpixelMorphologicalAntialiasing.SMAAEdgeDetectionMethod Color = 2;
	public const SubpixelMorphologicalAntialiasing.SMAAEdgeDetectionMethod Depth = 3;
}
public enum TemporalAntialiasing.TAAQuality
{
	// Fields
	public const TemporalAntialiasing.TAAQuality TAALow = 0;
	public const TemporalAntialiasing.TAAQuality TAAHigh = 1;
}
public enum ToonLightBufferDebugOverlay
{
	// Fields
	public const ToonLightBufferDebugOverlay None = 0;
	public const ToonLightBufferDebugOverlay AfterThreshold = 1;
	public const ToonLightBufferDebugOverlay Result = 2;
}
public enum HistogramMonitor.Channel
{
	// Fields
	public const HistogramMonitor.Channel Red = 0;
	public const HistogramMonitor.Channel Green = 1;
	public const HistogramMonitor.Channel Blue = 2;
	public const HistogramMonitor.Channel Master = 3;
}
public enum MonitorType
{
	// Fields
	public const MonitorType LightMeter = 0;
	public const MonitorType Histogram = 1;
	public const MonitorType Waveform = 2;
	public const MonitorType Vectorscope = 3;
}
public enum DebugOverlay
{
	// Fields
	public const DebugOverlay None = 0;
	public const DebugOverlay Custom = 1;
	public const DebugOverlay Depth = 2;
	public const DebugOverlay Normals = 3;
	public const DebugOverlay MotionVectors = 4;
	public const DebugOverlay NANTracker = 5;
	public const DebugOverlay ColorBlindnessSimulation = 6;
	public const DebugOverlay _ = 7;
	public const DebugOverlay AmbientOcclusion = 8;
	public const DebugOverlay BloomBuffer = 9;
	public const DebugOverlay BloomThreshold = 10;
	public const DebugOverlay DepthOfField = 11;
}
public enum ColorBlindnessType
{
	// Fields
	public const ColorBlindnessType Deuteranopia = 0;
	public const ColorBlindnessType Protanopia = 1;
	public const ColorBlindnessType Tritanopia = 2;
}
public enum PostProcessEvent
{
	// Fields
	public const PostProcessEvent BeforeTransparent = 0;
	public const PostProcessEvent BeforeStack = 1;
	public const PostProcessEvent AfterStack = 2;
}
public enum PostProcessLayer.Antialiasing
{
	// Fields
	public const PostProcessLayer.Antialiasing None = 0;
	public const PostProcessLayer.Antialiasing FastApproximateAntialiasing = 1;
	public const PostProcessLayer.Antialiasing miHoYoFXAA = 2;
	public const PostProcessLayer.Antialiasing SubpixelMorphologicalAntialiasing = 3;
	public const PostProcessLayer.Antialiasing TemporalAntialiasing = 4;
	public const PostProcessLayer.Antialiasing FFX_FSR_2 = 5;
}
public enum PostProcessLayer.ReflectionType
{
	// Fields
	public const PostProcessLayer.ReflectionType Character = 0;
	public const PostProcessLayer.ReflectionType HLOD = 1;
	public const PostProcessLayer.ReflectionType SceneMirror = 2;
}
public enum PostProcessLayer.ReflectionQuality
{
	// Fields
	public const PostProcessLayer.ReflectionQuality RES_5 = 5;
	public const PostProcessLayer.ReflectionQuality RES_10 = 10;
	public const PostProcessLayer.ReflectionQuality RES_25 = 25;
	public const PostProcessLayer.ReflectionQuality RES_33 = 33;
	public const PostProcessLayer.ReflectionQuality RES_40 = 40;
	public const PostProcessLayer.ReflectionQuality RES_50 = 50;
	public const PostProcessLayer.ReflectionQuality RES_75 = 75;
	public const PostProcessLayer.ReflectionQuality RES_100 = 100;
}
public enum PostProcessLayer.ReflectionDir
{
	// Fields
	public const PostProcessLayer.ReflectionDir Up = 0;
	public const PostProcessLayer.ReflectionDir Forward = 1;
}
public enum RenderTextureWrapper.Type
{
	// Fields
	public const RenderTextureWrapper.Type RenderTargetIdentify = 0;
	public const RenderTextureWrapper.Type BuiltinRenderTextureType = 1;
	public const RenderTextureWrapper.Type RenderTexture = 2;
	public const RenderTextureWrapper.Type Null = 3;
}
public enum PCTrailRendererData.DistortionPlaneType
{
	// Fields
	public const PCTrailRendererData.DistortionPlaneType X = 0;
	public const PCTrailRendererData.DistortionPlaneType Y = 1;
	public const PCTrailRendererData.DistortionPlaneType Z = 2;
	public const PCTrailRendererData.DistortionPlaneType XY = 3;
	public const PCTrailRendererData.DistortionPlaneType XZ = 4;
	public const PCTrailRendererData.DistortionPlaneType YZ = 5;
}
public enum AnimationPhaseType
{
	// Fields
	public const AnimationPhaseType Invalid = 0;
	public const AnimationPhaseType LeftStep = 1;
	public const AnimationPhaseType RightStep = 2;
	public const AnimationPhaseType LeftStart = 8;
	public const AnimationPhaseType RightStart = 9;
	public const AnimationPhaseType CustomLeft = 997;
	public const AnimationPhaseType CustomRight = 998;
	public const AnimationPhaseType Custom = 999;
	public const AnimationPhaseType SpecialBegin = 1000;
	public const AnimationPhaseType SpecialCustom = 1999;
}
public enum AnimationPhaseBlend
{
	// Fields
	public const AnimationPhaseBlend Full = 0;
	public const AnimationPhaseBlend OutOnly = 1;
	public const AnimationPhaseBlend InOnly = 2;
}
public enum AnimatorTiming
{
	// Fields
	public const AnimatorTiming ByValue = 0;
	public const AnimatorTiming ByTag = 1;
	public const AnimatorTiming ByParam = 2;
	public const AnimatorTiming ByWrapTime = 3;
	public const AnimatorTiming ByNormalizedTime = 4;
}
public enum CrossFadeComparison
{
	// Fields
	public const CrossFadeComparison Equal = 0;
	public const CrossFadeComparison Less = 1;
	public const CrossFadeComparison Greater = 2;
	public const CrossFadeComparison LEqual = 3;
	public const CrossFadeComparison GEqual = 4;
}
public enum ValueComparison
{
	// Fields
	public const ValueComparison Equal = 0;
	public const ValueComparison Less = 1;
	public const ValueComparison Greater = 2;
	public const ValueComparison LEqual = 3;
	public const ValueComparison GEqual = 4;
}
public enum PropSpace
{
	// Fields
	public const PropSpace None = 0;
	public const PropSpace World = 1;
	public const PropSpace Body = 2;
	public const PropSpace RightHand = 3;
	public const PropSpace LeftHand = 4;
}
public enum CrossFadeBase.FadeMirror
{
	// Fields
	public const CrossFadeBase.FadeMirror Auto = 0;
	public const CrossFadeBase.FadeMirror DoNotMirror = 1;
	public const CrossFadeBase.FadeMirror MirrorOnly = 2;
	public const CrossFadeBase.FadeMirror Opposite = 3;
	public const CrossFadeBase.FadeMirror DoNotChange = 4;
	public const CrossFadeBase.FadeMirror DoNotSet = 5;
}
public enum GaiaConstants.JobStatus
{
	// Fields
	public const GaiaConstants.JobStatus Idle = 0;
	public const GaiaConstants.JobStatus Queued = 1;
	public const GaiaConstants.JobStatus Started = 2;
	public const GaiaConstants.JobStatus CompletedCancelled = 3;
	public const GaiaConstants.JobStatus CompletedError = 4;
	public const GaiaConstants.JobStatus Completed = 5;
}
public enum GaiaConstants.OperationMode
{
	// Fields
	public const GaiaConstants.OperationMode DesignTime = 0;
	public const GaiaConstants.OperationMode RuntimeInterval = 1;
	public const GaiaConstants.OperationMode RuntimeTriggeredInterval = 2;
}
public enum GaiaConstants.NoiseType
{
	// Fields
	public const GaiaConstants.NoiseType None = 0;
	public const GaiaConstants.NoiseType Perlin = 1;
	public const GaiaConstants.NoiseType Billow = 2;
	public const GaiaConstants.NoiseType Ridged = 3;
}
public enum GaiaConstants.ImageFitnessFilterMode
{
	// Fields
	public const GaiaConstants.ImageFitnessFilterMode None = 0;
	public const GaiaConstants.ImageFitnessFilterMode ImageGreyScale = 1;
	public const GaiaConstants.ImageFitnessFilterMode ImageRedChannel = 2;
	public const GaiaConstants.ImageFitnessFilterMode ImageGreenChannel = 3;
	public const GaiaConstants.ImageFitnessFilterMode ImageBlueChannel = 4;
	public const GaiaConstants.ImageFitnessFilterMode ImageAlphaChannel = 5;
	public const GaiaConstants.ImageFitnessFilterMode TerrainTexture0 = 6;
	public const GaiaConstants.ImageFitnessFilterMode TerrainTexture1 = 7;
	public const GaiaConstants.ImageFitnessFilterMode TerrainTexture2 = 8;
	public const GaiaConstants.ImageFitnessFilterMode TerrainTexture3 = 9;
	public const GaiaConstants.ImageFitnessFilterMode TerrainTexture4 = 10;
	public const GaiaConstants.ImageFitnessFilterMode TerrainTexture5 = 11;
	public const GaiaConstants.ImageFitnessFilterMode TerrainTexture6 = 12;
	public const GaiaConstants.ImageFitnessFilterMode TerrainTexture7 = 13;
	public const GaiaConstants.ImageFitnessFilterMode PerlinNoise = 14;
	public const GaiaConstants.ImageFitnessFilterMode BillowNoise = 15;
	public const GaiaConstants.ImageFitnessFilterMode RidgedNoise = 16;
}
public enum GaiaConstants.FeatureType
{
	// Fields
	public const GaiaConstants.FeatureType Adhoc = 0;
	public const GaiaConstants.FeatureType Bases = 1;
	public const GaiaConstants.FeatureType Hills = 2;
	public const GaiaConstants.FeatureType Islands = 3;
	public const GaiaConstants.FeatureType Lakes = 4;
	public const GaiaConstants.FeatureType Mesas = 5;
	public const GaiaConstants.FeatureType Mountains = 6;
	public const GaiaConstants.FeatureType Plains = 7;
	public const GaiaConstants.FeatureType Rivers = 8;
	public const GaiaConstants.FeatureType Rocks = 9;
	public const GaiaConstants.FeatureType Valleys = 10;
	public const GaiaConstants.FeatureType Villages = 11;
	public const GaiaConstants.FeatureType Waterfalls = 12;
}
public enum GaiaConstants.GeneratorBorderStyle
{
	// Fields
	public const GaiaConstants.GeneratorBorderStyle None = 0;
	public const GaiaConstants.GeneratorBorderStyle Mountains = 1;
	public const GaiaConstants.GeneratorBorderStyle Water = 2;
}
public enum GaiaConstants.FeatureSource
{
	// Fields
	public const GaiaConstants.FeatureSource Stamp = 0;
	public const GaiaConstants.FeatureSource SimplexNoise = 1;
	public const GaiaConstants.FeatureSource BillowNoise = 2;
	public const GaiaConstants.FeatureSource RidgedNoise = 3;
	public const GaiaConstants.FeatureSource DerivedIQ = 4;
	public const GaiaConstants.FeatureSource DerivedSwiss = 5;
	public const GaiaConstants.FeatureSource DerivedJordan = 6;
	public const GaiaConstants.FeatureSource CellNoise = 7;
	public const GaiaConstants.FeatureSource MultiFractal = 8;
}
public enum GaiaConstants.FeatureOperation
{
	// Fields
	public const GaiaConstants.FeatureOperation RaiseHeight = 0;
	public const GaiaConstants.FeatureOperation LowerHeight = 1;
	public const GaiaConstants.FeatureOperation BlendHeight = 2;
	public const GaiaConstants.FeatureOperation StencilHeight = 3;
	public const GaiaConstants.FeatureOperation DifferenceHeight = 4;
}
public enum GaiaConstants.FeatureOperationType
{
	// Fields
	public const GaiaConstants.FeatureOperationType PreviewStamp = 0;
	public const GaiaConstants.FeatureOperationType ApplyStamp = 1;
	public const GaiaConstants.FeatureOperationType ApplyStampPre = 2;
	public const GaiaConstants.FeatureOperationType ApplyStampPost = 3;
}
public enum GaiaConstants.GaiaResolution
{
	// Fields
	public const GaiaConstants.GaiaResolution Resolution_64 = 0;
	public const GaiaConstants.GaiaResolution Resolution_128 = 1;
	public const GaiaConstants.GaiaResolution Resolution_256 = 2;
	public const GaiaConstants.GaiaResolution Resolution_512 = 3;
	public const GaiaConstants.GaiaResolution Resolution_1024 = 4;
	public const GaiaConstants.GaiaResolution Resolution_2048 = 5;
	public const GaiaConstants.GaiaResolution Resolution_4096 = 6;
	public const GaiaConstants.GaiaResolution Resolution_8192 = 7;
}
public enum GaiaConstants.GaiaHeightmapResolution
{
	// Fields
	public const GaiaConstants.GaiaHeightmapResolution Resolution_65 = 0;
	public const GaiaConstants.GaiaHeightmapResolution Resolution_129 = 1;
	public const GaiaConstants.GaiaHeightmapResolution Resolution_257 = 2;
	public const GaiaConstants.GaiaHeightmapResolution Resolution_513 = 3;
	public const GaiaConstants.GaiaHeightmapResolution Resolution_1025 = 4;
	public const GaiaConstants.GaiaHeightmapResolution Resolution_2049 = 5;
	public const GaiaConstants.GaiaHeightmapResolution Resolution_Custom = 6;
}
public enum GaiaConstants.SpawnerShape
{
	// Fields
	public const GaiaConstants.SpawnerShape Box = 0;
	public const GaiaConstants.SpawnerShape Sphere = 1;
}
public enum GaiaConstants.SpawnerLocation
{
	// Fields
	public const GaiaConstants.SpawnerLocation RandomLocation = 0;
	public const GaiaConstants.SpawnerLocation RandomLocationClustered = 1;
	public const GaiaConstants.SpawnerLocation EveryLocation = 2;
	public const GaiaConstants.SpawnerLocation EveryLocationJittered = 3;
}
public enum GaiaConstants.SpawnerLocationCheckType
{
	// Fields
	public const GaiaConstants.SpawnerLocationCheckType PointCheck = 0;
	public const GaiaConstants.SpawnerLocationCheckType BoundedAreaCheck = 1;
}
public enum GaiaConstants.SpawnerRuleSelector
{
	// Fields
	public const GaiaConstants.SpawnerRuleSelector All = 0;
	public const GaiaConstants.SpawnerRuleSelector Fittest = 1;
	public const GaiaConstants.SpawnerRuleSelector WeightedFittest = 2;
	public const GaiaConstants.SpawnerRuleSelector Random = 3;
}
public enum GaiaConstants.SpawnerResourceType
{
	// Fields
	public const GaiaConstants.SpawnerResourceType TerrainTexture = 0;
	public const GaiaConstants.SpawnerResourceType TerrainDetail = 1;
	public const GaiaConstants.SpawnerResourceType TerrainTree = 2;
	public const GaiaConstants.SpawnerResourceType GameObject = 3;
}
public enum GaiaConstants.StorageFormat
{
	// Fields
	public const GaiaConstants.StorageFormat PNG = 0;
	public const GaiaConstants.StorageFormat JPG = 1;
}
public enum GaiaConstants.ImageChannelWithNone
{
	// Fields
	public const GaiaConstants.ImageChannelWithNone None = 0;
	public const GaiaConstants.ImageChannelWithNone R = 1;
	public const GaiaConstants.ImageChannelWithNone G = 2;
	public const GaiaConstants.ImageChannelWithNone B = 3;
	public const GaiaConstants.ImageChannelWithNone A = 4;
}
public enum GaiaOperation.OperationType
{
	// Fields
	public const GaiaOperation.OperationType CreateTerrain = 0;
	public const GaiaOperation.OperationType FlattenTerrain = 1;
	public const GaiaOperation.OperationType SmoothTerrain = 2;
	public const GaiaOperation.OperationType ClearDetails = 3;
	public const GaiaOperation.OperationType ClearTrees = 4;
	public const GaiaOperation.OperationType Stamp = 5;
	public const GaiaOperation.OperationType StampUndo = 6;
	public const GaiaOperation.OperationType StampRedo = 7;
	public const GaiaOperation.OperationType Spawn = 8;
	public const GaiaOperation.OperationType SpawnReset = 9;
	public const GaiaOperation.OperationType Stamp2 = 10;
	public const GaiaOperation.OperationType Texture2 = 11;
}
public enum FractalGenerator.Fractals
{
	// Fields
	public const FractalGenerator.Fractals Perlin = 0;
	public const FractalGenerator.Fractals Billow = 1;
	public const FractalGenerator.Fractals RidgeMulti = 2;
	public const FractalGenerator.Fractals fBM = 3;
}
public enum fsDataType
{
	// Fields
	public const fsDataType Array = 0;
	public const fsDataType Object = 1;
	public const fsDataType Double = 2;
	public const fsDataType Int64 = 3;
	public const fsDataType UInt64 = 4;
	public const fsDataType Boolean = 5;
	public const fsDataType String = 6;
	public const fsDataType Null = 7;
}
public enum fsMemberSerialization
{
	// Fields
	public const fsMemberSerialization OptIn = 0;
	public const fsMemberSerialization OptOut = 1;
	public const fsMemberSerialization Default = 2;
}
public enum CTSConstants.ShaderType
{
	// Fields
	public const CTSConstants.ShaderType Unity = 0;
	public const CTSConstants.ShaderType miHoYo = 1;
}
public enum CTSConstants.TextureSize
{
	// Fields
	public const CTSConstants.TextureSize Texture_64 = 0;
	public const CTSConstants.TextureSize Texture_128 = 1;
	public const CTSConstants.TextureSize Texture_256 = 2;
	public const CTSConstants.TextureSize Texture_512 = 3;
	public const CTSConstants.TextureSize Texture_1024 = 4;
	public const CTSConstants.TextureSize Texture_2048 = 5;
	public const CTSConstants.TextureSize Texture_4096 = 6;
	public const CTSConstants.TextureSize Texture_8192 = 7;
}
public enum CTSConstants.TextureType
{
	// Fields
	public const CTSConstants.TextureType Albedo = 0;
	public const CTSConstants.TextureType Normal = 1;
	public const CTSConstants.TextureType AmbientOcclusion = 2;
	public const CTSConstants.TextureType Height = 3;
	public const CTSConstants.TextureType Splat = 4;
	public const CTSConstants.TextureType Emission = 5;
}
public enum SMAlignment
{
	// Fields
	public byte value__; // 0x10
	public const SMAlignment UpperLeft = 0;
	public const SMAlignment UpperCenter = 1;
	public const SMAlignment UpperRight = 2;
	public const SMAlignment MiddleRight = 3;
	public const SMAlignment LowerRight = 4;
	public const SMAlignment LowerCenter = 5;
	public const SMAlignment LowerLeft = 6;
	public const SMAlignment MiddleLeft = 7;
}
public enum SMMode
{
	// Fields
	public byte value__; // 0x10
	public const SMMode Active = 0;
	public const SMMode Inactive = 1;
	public const SMMode Passive = 2;
}
public enum SMRenderMode
{
	// Fields
	public byte value__; // 0x10
	public const SMRenderMode Overlay = 0;
	public const SMRenderMode Camera = 1;
}
public enum SMStyle
{
	// Fields
	public byte value__; // 0x10
	public const SMStyle Minimal = 0;
	public const SMStyle StatsOnly = 1;
	public const SMStyle Standard = 2;
	public const SMStyle Full = 3;
}
public enum SMTheme
{
	// Fields
	public byte value__; // 0x10
	public const SMTheme Default = 0;
	public const SMTheme Plain = 1;
	public const SMTheme Opaque = 2;
	public const SMTheme Oblique = 3;
}
public enum PoolType
{
	// Fields
	public const PoolType INVALID = -1;
	public const PoolType MAIN_THREAD = 0;
	public const PoolType MULTI_THREAD = 1;
}
public enum SchedulerType
{
	// Fields
	public const SchedulerType INVALID = -1;
	public const SchedulerType UPDATE = 0;
	public const SchedulerType LATE_PRE_UPDATE = 1;
	public const SchedulerType LATE_POST_UPDATE = 2;
	public const SchedulerType AFTER_RES_TO_UPDATE_END = 3;
	public const SchedulerType LATE_POST_UPDATE_TO_NEXT_BEFORE_LATE_UPDATE = 4;
	public const SchedulerType RENDER_TO_NEXT_BEFORE_RES = 5;
	public const SchedulerType RENDER_TO_NEXT_BEFORE_LATE_UPDATE = 6;
	public const SchedulerType RENDER_TO_NEXT_BEFORE_NETWORK = 7;
	public const SchedulerType AFTER_NETWORK_TO_RENDER = 8;
	public const SchedulerType AFTER_ENTITY_TO_EFFECT_END = 9;
	public const SchedulerType AFTER_LATE_UPDATE_POST = 10;
	public const SchedulerType COUNT = 11;
}
public enum SchedulerGlobalType
{
	// Fields
	public const SchedulerGlobalType INVALID = -1;
	public const SchedulerGlobalType RENDER_TO_NEXT_BEFORE_LATE_UPDATE = 0;
	public const SchedulerGlobalType COUNT = 1;
}
public enum SchedulerBackgroundType
{
	// Fields
	public const SchedulerBackgroundType INVALID = -1;
	public const SchedulerBackgroundType CONFIG_LOADER = 0;
	public const SchedulerBackgroundType CONFIG_VALIDATION = 1;
	public const SchedulerBackgroundType SOCKET_MGR = 2;
	public const SchedulerBackgroundType SDK_INVOKE = 3;
	public const SchedulerBackgroundType PARTICLE_LOADER = 4;
	public const SchedulerBackgroundType NATIVE_CONFIG_UPDATE = 5;
	public const SchedulerBackgroundType COUNT = 6;
}
public enum SchedulerTaskType
{
	// Fields
	public const SchedulerTaskType INVALID = -1;
	public const SchedulerTaskType BEFORE = 0;
	public const SchedulerTaskType AFTER = 1;
	public const SchedulerTaskType COUNT = 2;
}
public enum ThreadTaskMgr.PoolType
{
	// Fields
	public const ThreadTaskMgr.PoolType INVALID = -1;
	public const ThreadTaskMgr.PoolType MAIN_THREAD = 0;
	public const ThreadTaskMgr.PoolType MULTI_THREAD = 1;
}
public enum BenchCase.CASE
{
	// Fields
	public const BenchCase.CASE NO_DEPENDENCY = 0;
	public const BenchCase.CASE SIMPLE_DEPENDENCTY = 1;
	public const BenchCase.CASE OVER_LAY_SAME = 2;
	public const BenchCase.CASE OVER_LAY_SAME_REVERSE = 3;
	public const BenchCase.CASE OVER_LAY_WITH_LONG = 4;
	public const BenchCase.CASE OVER_LAY_WITH_LONG_REVERSE = 5;
	public const BenchCase.CASE MULTI_WAIT = 6;
}
public enum CameraStateBlenderConfig.BlendType
{
	// Fields
	public const CameraStateBlenderConfig.BlendType SPH = 0;
	public const CameraStateBlenderConfig.BlendType POS = 1;
}
public enum CameraStateBlenderConfig.PoleType
{
	// Fields
	public const CameraStateBlenderConfig.PoleType TARGET_BACK = 0;
	public const CameraStateBlenderConfig.PoleType KEEP_X = 1;
	public const CameraStateBlenderConfig.PoleType KEEP_XY = 2;
	public const CameraStateBlenderConfig.PoleType KEEP_SceneLookTarget = 3;
	public const CameraStateBlenderConfig.PoleType NONE = 4;
}
public enum CameraStateBlenderConfig.ZoomType
{
	// Fields
	public const CameraStateBlenderConfig.ZoomType KEEP_Z = 0;
	public const CameraStateBlenderConfig.ZoomType CUSTOM_Z = 1;
	public const CameraStateBlenderConfig.ZoomType NONE = 2;
}
public enum CameraStateMgr.CmdType
{
	// Fields
	public const CameraStateMgr.CmdType SPAWN = 0;
	public const CameraStateMgr.CmdType UNSPAWN = 1;
}
public enum AttributeType
{
	// Fields
	public const AttributeType Boolean = 0;
	public const AttributeType Int64 = 1;
	public const AttributeType Double = 2;
	public const AttributeType String = 3;
}
public enum ComparisonOp
{
	// Fields
	public const ComparisonOp Equal = 0;
	public const ComparisonOp Notequal = 1;
	public const ComparisonOp Greaterthan = 2;
	public const ComparisonOp Greaterthanorequal = 3;
	public const ComparisonOp Lessthan = 4;
	public const ComparisonOp Lessthanorequal = 5;
	public const ComparisonOp Distance = 6;
	public const ComparisonOp Anyof = 7;
	public const ComparisonOp Notanyof = 8;
	public const ComparisonOp Oneof = 9;
	public const ComparisonOp Notoneof = 10;
	public const ComparisonOp Contains = 11;
}
public enum ExternalAccountType
{
	// Fields
	public const ExternalAccountType Epic = 0;
	public const ExternalAccountType Steam = 1;
	public const ExternalAccountType Psn = 2;
	public const ExternalAccountType Xbl = 3;
	public const ExternalAccountType Discord = 4;
	public const ExternalAccountType Gog = 5;
	public const ExternalAccountType Nintendo = 6;
	public const ExternalAccountType Uplay = 7;
	public const ExternalAccountType Openid = 8;
	public const ExternalAccountType Apple = 9;
	public const ExternalAccountType Google = 10;
	public const ExternalAccountType Oculus = 11;
	public const ExternalAccountType Itchio = 12;
	public const ExternalAccountType Amazon = 13;
}
public enum ExternalCredentialType
{
	// Fields
	public const ExternalCredentialType Epic = 0;
	public const ExternalCredentialType SteamAppTicket = 1;
	public const ExternalCredentialType PsnIdToken = 2;
	public const ExternalCredentialType XblXstsToken = 3;
	public const ExternalCredentialType DiscordAccessToken = 4;
	public const ExternalCredentialType GogSessionTicket = 5;
	public const ExternalCredentialType NintendoIdToken = 6;
	public const ExternalCredentialType NintendoNsaIdToken = 7;
	public const ExternalCredentialType UplayAccessToken = 8;
	public const ExternalCredentialType OpenidAccessToken = 9;
	public const ExternalCredentialType DeviceidAccessToken = 10;
	public const ExternalCredentialType AppleIdToken = 11;
	public const ExternalCredentialType GoogleIdToken = 12;
	public const ExternalCredentialType OculusUseridNonce = 13;
	public const ExternalCredentialType ItchioJwt = 14;
	public const ExternalCredentialType ItchioKey = 15;
	public const ExternalCredentialType EpicIdToken = 16;
	public const ExternalCredentialType AmazonAccessToken = 17;
}
public enum LoginStatus
{
	// Fields
	public const LoginStatus NotLoggedIn = 0;
	public const LoginStatus UsingLocalProfile = 1;
	public const LoginStatus LoggedIn = 2;
}
public enum Result
{
	// Fields
	public const Result Success = 0;
	public const Result NoConnection = 1;
	public const Result InvalidCredentials = 2;
	public const Result InvalidUser = 3;
	public const Result InvalidAuth = 4;
	public const Result AccessDenied = 5;
	public const Result MissingPermissions = 6;
	public const Result TokenNotAccount = 7;
	public const Result TooManyRequests = 8;
	public const Result AlreadyPending = 9;
	public const Result InvalidParameters = 10;
	public const Result InvalidRequest = 11;
	public const Result UnrecognizedResponse = 12;
	public const Result IncompatibleVersion = 13;
	public const Result NotConfigured = 14;
	public const Result AlreadyConfigured = 15;
	public const Result NotImplemented = 16;
	public const Result Canceled = 17;
	public const Result NotFound = 18;
	public const Result OperationWillRetry = 19;
	public const Result NoChange = 20;
	public const Result VersionMismatch = 21;
	public const Result LimitExceeded = 22;
	public const Result Disabled = 23;
	public const Result DuplicateNotAllowed = 24;
	public const Result MissingParametersDEPRECATED = 25;
	public const Result InvalidSandboxId = 26;
	public const Result TimedOut = 27;
	public const Result PartialResult = 28;
	public const Result MissingRole = 29;
	public const Result MissingFeature = 30;
	public const Result InvalidSandbox = 31;
	public const Result InvalidDeployment = 32;
	public const Result InvalidProduct = 33;
	public const Result InvalidProductUserID = 34;
	public const Result ServiceFailure = 35;
	public const Result CacheDirectoryMissing = 36;
	public const Result CacheDirectoryInvalid = 37;
	public const Result InvalidState = 38;
	public const Result RequestInProgress = 39;
	public const Result AuthAccountLocked = 1001;
	public const Result AuthAccountLockedForUpdate = 1002;
	public const Result AuthInvalidRefreshToken = 1003;
	public const Result AuthInvalidToken = 1004;
	public const Result AuthAuthenticationFailure = 1005;
	public const Result AuthInvalidPlatformToken = 1006;
	public const Result AuthWrongAccount = 1007;
	public const Result AuthWrongClient = 1008;
	public const Result AuthFullAccountRequired = 1009;
	public const Result AuthHeadlessAccountRequired = 1010;
	public const Result AuthPasswordResetRequired = 1011;
	public const Result AuthPasswordCannotBeReused = 1012;
	public const Result AuthExpired = 1013;
	public const Result AuthScopeConsentRequired = 1014;
	public const Result AuthApplicationNotFound = 1015;
	public const Result AuthScopeNotFound = 1016;
	public const Result AuthAccountFeatureRestricted = 1017;
	public const Result AuthPinGrantCode = 1020;
	public const Result AuthPinGrantExpired = 1021;
	public const Result AuthPinGrantPending = 1022;
	public const Result AuthExternalAuthNotLinked = 1030;
	public const Result AuthExternalAuthRevoked = 1032;
	public const Result AuthExternalAuthInvalid = 1033;
	public const Result AuthExternalAuthRestricted = 1034;
	public const Result AuthExternalAuthCannotLogin = 1035;
	public const Result AuthExternalAuthExpired = 1036;
	public const Result AuthExternalAuthIsLastLoginType = 1037;
	public const Result AuthExchangeCodeNotFound = 1040;
	public const Result AuthOriginatingExchangeCodeSessionExpired = 1041;
	public const Result AuthPersistentAuthAccountNotActive = 1050;
	public const Result AuthMFARequired = 1060;
	public const Result AuthParentalControls = 1070;
	public const Result AuthNoRealId = 1080;
	public const Result FriendsInviteAwaitingAcceptance = 2000;
	public const Result FriendsNoInvitation = 2001;
	public const Result FriendsAlreadyFriends = 2003;
	public const Result FriendsNotFriends = 2004;
	public const Result FriendsTargetUserTooManyInvites = 2005;
	public const Result FriendsLocalUserTooManyInvites = 2006;
	public const Result FriendsTargetUserFriendLimitExceeded = 2007;
	public const Result FriendsLocalUserFriendLimitExceeded = 2008;
	public const Result PresenceDataInvalid = 3000;
	public const Result PresenceDataLengthInvalid = 3001;
	public const Result PresenceDataKeyInvalid = 3002;
	public const Result PresenceDataKeyLengthInvalid = 3003;
	public const Result PresenceDataValueInvalid = 3004;
	public const Result PresenceDataValueLengthInvalid = 3005;
	public const Result PresenceRichTextInvalid = 3006;
	public const Result PresenceRichTextLengthInvalid = 3007;
	public const Result PresenceStatusInvalid = 3008;
	public const Result EcomEntitlementStale = 4000;
	public const Result EcomCatalogOfferStale = 4001;
	public const Result EcomCatalogItemStale = 4002;
	public const Result EcomCatalogOfferPriceInvalid = 4003;
	public const Result EcomCheckoutLoadError = 4004;
	public const Result SessionsSessionInProgress = 5000;
	public const Result SessionsTooManyPlayers = 5001;
	public const Result SessionsNoPermission = 5002;
	public const Result SessionsSessionAlreadyExists = 5003;
	public const Result SessionsInvalidLock = 5004;
	public const Result SessionsInvalidSession = 5005;
	public const Result SessionsSandboxNotAllowed = 5006;
	public const Result SessionsInviteFailed = 5007;
	public const Result SessionsInviteNotFound = 5008;
	public const Result SessionsUpsertNotAllowed = 5009;
	public const Result SessionsAggregationFailed = 5010;
	public const Result SessionsHostAtCapacity = 5011;
	public const Result SessionsSandboxAtCapacity = 5012;
	public const Result SessionsSessionNotAnonymous = 5013;
	public const Result SessionsOutOfSync = 5014;
	public const Result SessionsTooManyInvites = 5015;
	public const Result SessionsPresenceSessionExists = 5016;
	public const Result SessionsDeploymentAtCapacity = 5017;
	public const Result SessionsNotAllowed = 5018;
	public const Result PlayerDataStorageFilenameInvalid = 6000;
	public const Result PlayerDataStorageFilenameLengthInvalid = 6001;
	public const Result PlayerDataStorageFilenameInvalidChars = 6002;
	public const Result PlayerDataStorageFileSizeTooLarge = 6003;
	public const Result PlayerDataStorageFileSizeInvalid = 6004;
	public const Result PlayerDataStorageFileHandleInvalid = 6005;
	public const Result PlayerDataStorageDataInvalid = 6006;
	public const Result PlayerDataStorageDataLengthInvalid = 6007;
	public const Result PlayerDataStorageStartIndexInvalid = 6008;
	public const Result PlayerDataStorageRequestInProgress = 6009;
	public const Result PlayerDataStorageUserThrottled = 6010;
	public const Result PlayerDataStorageEncryptionKeyNotSet = 6011;
	public const Result PlayerDataStorageUserErrorFromDataCallback = 6012;
	public const Result PlayerDataStorageFileHeaderHasNewerVersion = 6013;
	public const Result PlayerDataStorageFileCorrupted = 6014;
	public const Result ConnectExternalTokenValidationFailed = 7000;
	public const Result ConnectUserAlreadyExists = 7001;
	public const Result ConnectAuthExpired = 7002;
	public const Result ConnectInvalidToken = 7003;
	public const Result ConnectUnsupportedTokenType = 7004;
	public const Result ConnectLinkAccountFailed = 7005;
	public const Result ConnectExternalServiceUnavailable = 7006;
	public const Result ConnectExternalServiceConfigurationFailure = 7007;
	public const Result ConnectLinkAccountFailedMissingNintendoIdAccountDEPRECATED = 7008;
	public const Result SocialOverlayLoadError = 8000;
	public const Result LobbyNotOwner = 9000;
	public const Result LobbyInvalidLock = 9001;
	public const Result LobbyLobbyAlreadyExists = 9002;
	public const Result LobbySessionInProgress = 9003;
	public const Result LobbyTooManyPlayers = 9004;
	public const Result LobbyNoPermission = 9005;
	public const Result LobbyInvalidSession = 9006;
	public const Result LobbySandboxNotAllowed = 9007;
	public const Result LobbyInviteFailed = 9008;
	public const Result LobbyInviteNotFound = 9009;
	public const Result LobbyUpsertNotAllowed = 9010;
	public const Result LobbyAggregationFailed = 9011;
	public const Result LobbyHostAtCapacity = 9012;
	public const Result LobbySandboxAtCapacity = 9013;
	public const Result LobbyTooManyInvites = 9014;
	public const Result LobbyDeploymentAtCapacity = 9015;
	public const Result LobbyNotAllowed = 9016;
	public const Result LobbyMemberUpdateOnly = 9017;
	public const Result LobbyPresenceLobbyExists = 9018;
	public const Result TitleStorageUserErrorFromDataCallback = 10000;
	public const Result TitleStorageEncryptionKeyNotSet = 10001;
	public const Result TitleStorageFileCorrupted = 10002;
	public const Result TitleStorageFileHeaderHasNewerVersion = 10003;
	public const Result ModsModSdkProcessIsAlreadyRunning = 11000;
	public const Result ModsModSdkCommandIsEmpty = 11001;
	public const Result ModsModSdkProcessCreationFailed = 11002;
	public const Result ModsCriticalError = 11003;
	public const Result ModsToolInternalError = 11004;
	public const Result ModsIPCFailure = 11005;
	public const Result ModsInvalidIPCResponse = 11006;
	public const Result ModsURILaunchFailure = 11007;
	public const Result ModsModIsNotInstalled = 11008;
	public const Result ModsUserDoesNotOwnTheGame = 11009;
	public const Result ModsOfferRequestByIdInvalidResult = 11010;
	public const Result ModsCouldNotFindOffer = 11011;
	public const Result ModsOfferRequestByIdFailure = 11012;
	public const Result ModsPurchaseFailure = 11013;
	public const Result ModsInvalidGameInstallInfo = 11014;
	public const Result ModsCannotGetManifestLocation = 11015;
	public const Result ModsUnsupportedOS = 11016;
	public const Result AntiCheatClientProtectionNotAvailable = 12000;
	public const Result AntiCheatInvalidMode = 12001;
	public const Result AntiCheatClientProductIdMismatch = 12002;
	public const Result AntiCheatClientSandboxIdMismatch = 12003;
	public const Result AntiCheatProtectMessageSessionKeyRequired = 12004;
	public const Result AntiCheatProtectMessageValidationFailed = 12005;
	public const Result AntiCheatProtectMessageInitializationFailed = 12006;
	public const Result AntiCheatPeerAlreadyRegistered = 12007;
	public const Result AntiCheatPeerNotFound = 12008;
	public const Result AntiCheatPeerNotProtected = 12009;
	public const Result AntiCheatClientDeploymentIdMismatch = 12010;
	public const Result AntiCheatDeviceIdAuthIsNotSupported = 12011;
	public const Result TooManyParticipants = 13000;
	public const Result RoomAlreadyExists = 13001;
	public const Result UserKicked = 13002;
	public const Result UserBanned = 13003;
	public const Result RoomWasLeft = 13004;
	public const Result ReconnectionTimegateExpired = 13005;
	public const Result ProgressionSnapshotSnapshotIdUnavailable = 14000;
	public const Result ParentEmailMissing = 15000;
	public const Result UserGraduated = 15001;
	public const Result AndroidJavaVMNotStored = 17000;
	public const Result UnexpectedError = 2147483647;
}
public enum KeyCombination
{
	// Fields
	public const KeyCombination ModifierShift = 16;
	public const KeyCombination KeyTypeMask = 65535;
	public const KeyCombination ModifierMask = -65536;
	public const KeyCombination Shift = 65536;
	public const KeyCombination Control = 131072;
	public const KeyCombination Alt = 262144;
	public const KeyCombination Meta = 524288;
	public const KeyCombination ValidModifierMask = 983040;
	public const KeyCombination None = 0;
	public const KeyCombination Space = 1;
	public const KeyCombination Backspace = 2;
	public const KeyCombination Tab = 3;
	public const KeyCombination Escape = 4;
	public const KeyCombination PageUp = 5;
	public const KeyCombination PageDown = 6;
	public const KeyCombination End = 7;
	public const KeyCombination Home = 8;
	public const KeyCombination Insert = 9;
	public const KeyCombination Delete = 10;
	public const KeyCombination Left = 11;
	public const KeyCombination Up = 12;
	public const KeyCombination Right = 13;
	public const KeyCombination Down = 14;
	public const KeyCombination Key0 = 15;
	public const KeyCombination Key1 = 16;
	public const KeyCombination Key2 = 17;
	public const KeyCombination Key3 = 18;
	public const KeyCombination Key4 = 19;
	public const KeyCombination Key5 = 20;
	public const KeyCombination Key6 = 21;
	public const KeyCombination Key7 = 22;
	public const KeyCombination Key8 = 23;
	public const KeyCombination Key9 = 24;
	public const KeyCombination KeyA = 25;
	public const KeyCombination KeyB = 26;
	public const KeyCombination KeyC = 27;
	public const KeyCombination KeyD = 28;
	public const KeyCombination KeyE = 29;
	public const KeyCombination KeyF = 30;
	public const KeyCombination KeyG = 31;
	public const KeyCombination KeyH = 32;
	public const KeyCombination KeyI = 33;
	public const KeyCombination KeyJ = 34;
	public const KeyCombination KeyK = 35;
	public const KeyCombination KeyL = 36;
	public const KeyCombination KeyM = 37;
	public const KeyCombination KeyN = 38;
	public const KeyCombination KeyO = 39;
	public const KeyCombination KeyP = 40;
	public const KeyCombination KeyQ = 41;
	public const KeyCombination KeyR = 42;
	public const KeyCombination KeyS = 43;
	public const KeyCombination KeyT = 44;
	public const KeyCombination KeyU = 45;
	public const KeyCombination KeyV = 46;
	public const KeyCombination KeyW = 47;
	public const KeyCombination KeyX = 48;
	public const KeyCombination KeyY = 49;
	public const KeyCombination KeyZ = 50;
	public const KeyCombination Numpad0 = 51;
	public const KeyCombination Numpad1 = 52;
	public const KeyCombination Numpad2 = 53;
	public const KeyCombination Numpad3 = 54;
	public const KeyCombination Numpad4 = 55;
	public const KeyCombination Numpad5 = 56;
	public const KeyCombination Numpad6 = 57;
	public const KeyCombination Numpad7 = 58;
	public const KeyCombination Numpad8 = 59;
	public const KeyCombination Numpad9 = 60;
	public const KeyCombination NumpadAsterisk = 61;
	public const KeyCombination NumpadPlus = 62;
	public const KeyCombination NumpadMinus = 63;
	public const KeyCombination NumpadPeriod = 64;
	public const KeyCombination NumpadDivide = 65;
	public const KeyCombination F1 = 66;
	public const KeyCombination F2 = 67;
	public const KeyCombination F3 = 68;
	public const KeyCombination F4 = 69;
	public const KeyCombination F5 = 70;
	public const KeyCombination F6 = 71;
	public const KeyCombination F7 = 72;
	public const KeyCombination F8 = 73;
	public const KeyCombination F9 = 74;
	public const KeyCombination F10 = 75;
	public const KeyCombination F11 = 76;
	public const KeyCombination F12 = 77;
	public const KeyCombination F13 = 78;
	public const KeyCombination F14 = 79;
	public const KeyCombination F15 = 80;
	public const KeyCombination F16 = 81;
	public const KeyCombination F17 = 82;
	public const KeyCombination F18 = 83;
	public const KeyCombination F19 = 84;
	public const KeyCombination F20 = 85;
	public const KeyCombination F21 = 86;
	public const KeyCombination F22 = 87;
	public const KeyCombination F23 = 88;
	public const KeyCombination F24 = 89;
	public const KeyCombination OemPlus = 90;
	public const KeyCombination OemComma = 91;
	public const KeyCombination OemMinus = 92;
	public const KeyCombination OemPeriod = 93;
	public const KeyCombination Oem1 = 94;
	public const KeyCombination Oem2 = 95;
	public const KeyCombination Oem3 = 96;
	public const KeyCombination Oem4 = 97;
	public const KeyCombination Oem5 = 98;
	public const KeyCombination Oem6 = 99;
	public const KeyCombination Oem7 = 100;
	public const KeyCombination Oem8 = 101;
	public const KeyCombination MaxKeyType = 102;
}
public enum NotificationLocation
{
	// Fields
	public const NotificationLocation TopLeft = 0;
	public const NotificationLocation TopRight = 1;
	public const NotificationLocation BottomLeft = 2;
	public const NotificationLocation BottomRight = 3;
}
public enum ReadResult
{
	// Fields
	public const ReadResult RrContinuereading = 1;
	public const ReadResult RrFailrequest = 2;
	public const ReadResult RrCancelrequest = 3;
}
public enum OnlineSessionPermissionLevel
{
	// Fields
	public const OnlineSessionPermissionLevel PublicAdvertised = 0;
	public const OnlineSessionPermissionLevel JoinViaPresence = 1;
	public const OnlineSessionPermissionLevel InviteOnly = 2;
}
public enum OnlineSessionState
{
	// Fields
	public const OnlineSessionState NoSession = 0;
	public const OnlineSessionState Creating = 1;
	public const OnlineSessionState Pending = 2;
	public const OnlineSessionState Starting = 3;
	public const OnlineSessionState InProgress = 4;
	public const OnlineSessionState Ending = 5;
	public const OnlineSessionState Ended = 6;
	public const OnlineSessionState Destroying = 7;
}
public enum SessionAttributeAdvertisementType
{
	// Fields
	public const SessionAttributeAdvertisementType DontAdvertise = 0;
	public const SessionAttributeAdvertisementType Advertise = 1;
}
public enum RTCAudioInputStatus
{
	// Fields
	public const RTCAudioInputStatus Idle = 0;
	public const RTCAudioInputStatus Recording = 1;
	public const RTCAudioInputStatus RecordingSilent = 2;
	public const RTCAudioInputStatus RecordingDisconnected = 3;
	public const RTCAudioInputStatus Failed = 4;
}
public enum RTCAudioOutputStatus
{
	// Fields
	public const RTCAudioOutputStatus Idle = 0;
	public const RTCAudioOutputStatus Playing = 1;
	public const RTCAudioOutputStatus Failed = 2;
}
public enum RTCAudioStatus
{
	// Fields
	public const RTCAudioStatus Unsupported = 0;
	public const RTCAudioStatus Enabled = 1;
	public const RTCAudioStatus Disabled = 2;
	public const RTCAudioStatus AdminDisabled = 3;
	public const RTCAudioStatus NotListeningDisabled = 4;
}
public enum JoinRoomFlags
{
	// Fields
	public uint value__; // 0x10
	public const JoinRoomFlags None = 0;
	public const JoinRoomFlags EnableEcho = 1;
}
public enum RTCParticipantStatus
{
	// Fields
	public const RTCParticipantStatus Joined = 0;
	public const RTCParticipantStatus Left = 1;
}
public enum PlayerReportsCategory
{
	// Fields
	public const PlayerReportsCategory Invalid = 0;
	public const PlayerReportsCategory Cheating = 1;
	public const PlayerReportsCategory Exploiting = 2;
	public const PlayerReportsCategory OffensiveProfile = 3;
	public const PlayerReportsCategory VerbalAbuse = 4;
	public const PlayerReportsCategory Scamming = 5;
	public const PlayerReportsCategory Spamming = 6;
	public const PlayerReportsCategory Other = 7;
}
public enum Status
{
	// Fields
	public const Status Offline = 0;
	public const Status Online = 1;
	public const Status Away = 2;
	public const Status ExtendedAway = 3;
	public const Status DoNotDisturb = 4;
}
public enum ReadResult
{
	// Fields
	public const ReadResult ContinueReading = 1;
	public const ReadResult FailRequest = 2;
	public const ReadResult CancelRequest = 3;
}
public enum WriteResult
{
	// Fields
	public const WriteResult ContinueWriting = 1;
	public const WriteResult CompleteRequest = 2;
	public const WriteResult FailRequest = 3;
	public const WriteResult CancelRequest = 4;
}
public enum ConnectionClosedReason
{
	// Fields
	public const ConnectionClosedReason Unknown = 0;
	public const ConnectionClosedReason ClosedByLocalUser = 1;
	public const ConnectionClosedReason ClosedByPeer = 2;
	public const ConnectionClosedReason TimedOut = 3;
	public const ConnectionClosedReason TooManyConnections = 4;
	public const ConnectionClosedReason InvalidMessage = 5;
	public const ConnectionClosedReason InvalidData = 6;
	public const ConnectionClosedReason ConnectionFailed = 7;
	public const ConnectionClosedReason ConnectionClosed = 8;
	public const ConnectionClosedReason NegotiationFailed = 9;
	public const ConnectionClosedReason UnexpectedError = 10;
}
public enum ConnectionEstablishedType
{
	// Fields
	public const ConnectionEstablishedType NewConnection = 0;
	public const ConnectionEstablishedType Reconnection = 1;
}
public enum NATType
{
	// Fields
	public const NATType Unknown = 0;
	public const NATType Open = 1;
	public const NATType Moderate = 2;
	public const NATType Strict = 3;
}
public enum PacketReliability
{
	// Fields
	public const PacketReliability UnreliableUnordered = 0;
	public const PacketReliability ReliableUnordered = 1;
	public const PacketReliability ReliableOrdered = 2;
}
public enum RelayControl
{
	// Fields
	public const RelayControl NoRelays = 0;
	public const RelayControl AllowRelays = 1;
	public const RelayControl ForceRelays = 2;
}
public enum ModEnumerationType
{
	// Fields
	public const ModEnumerationType Installed = 0;
	public const ModEnumerationType AllAvailable = 1;
}
public enum MetricsAccountIdType
{
	// Fields
	public const MetricsAccountIdType Epic = 0;
	public const MetricsAccountIdType External = 1;
}
public enum UserControllerType
{
	// Fields
	public const UserControllerType Unknown = 0;
	public const UserControllerType MouseKeyboard = 1;
	public const UserControllerType GamepadControl = 2;
	public const UserControllerType TouchControl = 3;
}
public enum LogCategory
{
	// Fields
	public const LogCategory Core = 0;
	public const LogCategory Auth = 1;
	public const LogCategory Friends = 2;
	public const LogCategory Presence = 3;
	public const LogCategory UserInfo = 4;
	public const LogCategory HttpSerialization = 5;
	public const LogCategory Ecom = 6;
	public const LogCategory P2P = 7;
	public const LogCategory Sessions = 8;
	public const LogCategory RateLimiter = 9;
	public const LogCategory PlayerDataStorage = 10;
	public const LogCategory Analytics = 11;
	public const LogCategory Messaging = 12;
	public const LogCategory Connect = 13;
	public const LogCategory Overlay = 14;
	public const LogCategory Achievements = 15;
	public const LogCategory Stats = 16;
	public const LogCategory Ui = 17;
	public const LogCategory Lobby = 18;
	public const LogCategory Leaderboards = 19;
	public const LogCategory Keychain = 20;
	public const LogCategory IdentityProvider = 21;
	public const LogCategory TitleStorage = 22;
	public const LogCategory Mods = 23;
	public const LogCategory AntiCheat = 24;
	public const LogCategory Reports = 25;
	public const LogCategory Sanctions = 26;
	public const LogCategory ProgressionSnapshots = 27;
	public const LogCategory Kws = 28;
	public const LogCategory Rtc = 29;
	public const LogCategory RTCAdmin = 30;
	public const LogCategory Inventory = 31;
	public const LogCategory ReceiptValidator = 32;
	public const LogCategory CustomInvites = 33;
	public const LogCategory AllCategories = 2147483647;
}
public enum LogLevel
{
	// Fields
	public const LogLevel Off = 0;
	public const LogLevel Fatal = 100;
	public const LogLevel Error = 200;
	public const LogLevel Warning = 300;
	public const LogLevel Info = 400;
	public const LogLevel Verbose = 500;
	public const LogLevel VeryVerbose = 600;
}
public enum LobbyAttributeVisibility
{
	// Fields
	public const LobbyAttributeVisibility Public = 0;
	public const LobbyAttributeVisibility Private = 1;
}
public enum LobbyMemberStatus
{
	// Fields
	public const LobbyMemberStatus Joined = 0;
	public const LobbyMemberStatus Left = 1;
	public const LobbyMemberStatus Disconnected = 2;
	public const LobbyMemberStatus Kicked = 3;
	public const LobbyMemberStatus Promoted = 4;
	public const LobbyMemberStatus Closed = 5;
}
public enum LobbyPermissionLevel
{
	// Fields
	public const LobbyPermissionLevel Publicadvertised = 0;
	public const LobbyPermissionLevel Joinviapresence = 1;
	public const LobbyPermissionLevel Inviteonly = 2;
}
public enum LeaderboardAggregation
{
	// Fields
	public const LeaderboardAggregation Min = 0;
	public const LeaderboardAggregation Max = 1;
	public const LeaderboardAggregation Sum = 2;
	public const LeaderboardAggregation Latest = 3;
}
public enum KWSPermissionStatus
{
	// Fields
	public const KWSPermissionStatus Granted = 0;
	public const KWSPermissionStatus Rejected = 1;
	public const KWSPermissionStatus Pending = 2;
}
public enum FriendsStatus
{
	// Fields
	public const FriendsStatus NotFriends = 0;
	public const FriendsStatus InviteSent = 1;
	public const FriendsStatus InviteReceived = 2;
	public const FriendsStatus Friends = 3;
}
public enum EcomItemType
{
	// Fields
	public const EcomItemType Durable = 0;
	public const EcomItemType Consumable = 1;
	public const EcomItemType Other = 2;
}
public enum OwnershipStatus
{
	// Fields
	public const OwnershipStatus NotOwned = 0;
	public const OwnershipStatus Owned = 1;
}
public enum AuthScopeFlags
{
	// Fields
	public const AuthScopeFlags NoFlags = 0;
	public const AuthScopeFlags BasicProfile = 1;
	public const AuthScopeFlags FriendsList = 2;
	public const AuthScopeFlags Presence = 4;
	public const AuthScopeFlags FriendsManagement = 8;
	public const AuthScopeFlags Email = 16;
}
public enum AuthTokenType
{
	// Fields
	public const AuthTokenType Client = 0;
	public const AuthTokenType User = 1;
}
public enum LinkAccountFlags
{
	// Fields
	public const LinkAccountFlags NoFlags = 0;
	public const LinkAccountFlags NintendoNsaId = 1;
}
public enum LoginCredentialType
{
	// Fields
	public const LoginCredentialType Password = 0;
	public const LoginCredentialType ExchangeCode = 1;
	public const LoginCredentialType PersistentAuth = 2;
	public const LoginCredentialType DeviceCode = 3;
	public const LoginCredentialType Developer = 4;
	public const LoginCredentialType RefreshToken = 5;
	public const LoginCredentialType AccountPortal = 6;
	public const LoginCredentialType ExternalAuth = 7;
}
public enum AntiCheatCommonClientAction
{
	// Fields
	public const AntiCheatCommonClientAction Invalid = 0;
	public const AntiCheatCommonClientAction RemovePlayer = 1;
}
public enum AntiCheatCommonClientActionReason
{
	// Fields
	public const AntiCheatCommonClientActionReason Invalid = 0;
	public const AntiCheatCommonClientActionReason InternalError = 1;
	public const AntiCheatCommonClientActionReason InvalidMessage = 2;
	public const AntiCheatCommonClientActionReason AuthenticationFailed = 3;
	public const AntiCheatCommonClientActionReason NullClient = 4;
	public const AntiCheatCommonClientActionReason HeartbeatTimeout = 5;
	public const AntiCheatCommonClientActionReason ClientViolation = 6;
	public const AntiCheatCommonClientActionReason BackendViolation = 7;
	public const AntiCheatCommonClientActionReason TemporaryCooldown = 8;
	public const AntiCheatCommonClientActionReason TemporaryBanned = 9;
	public const AntiCheatCommonClientActionReason PermanentBanned = 10;
}
public enum AntiCheatCommonClientAuthStatus
{
	// Fields
	public const AntiCheatCommonClientAuthStatus Invalid = 0;
	public const AntiCheatCommonClientAuthStatus LocalAuthComplete = 1;
	public const AntiCheatCommonClientAuthStatus RemoteAuthComplete = 2;
}
public enum AntiCheatCommonClientFlags
{
	// Fields
	public const AntiCheatCommonClientFlags None = 0;
	public const AntiCheatCommonClientFlags Admin = 1;
}
public enum AntiCheatCommonClientInput
{
	// Fields
	public const AntiCheatCommonClientInput Unknown = 0;
	public const AntiCheatCommonClientInput MouseKeyboard = 1;
	public const AntiCheatCommonClientInput Gamepad = 2;
	public const AntiCheatCommonClientInput TouchInput = 3;
}
public enum AntiCheatCommonClientPlatform
{
	// Fields
	public const AntiCheatCommonClientPlatform Unknown = 0;
	public const AntiCheatCommonClientPlatform Windows = 1;
	public const AntiCheatCommonClientPlatform Mac = 2;
	public const AntiCheatCommonClientPlatform Linux = 3;
	public const AntiCheatCommonClientPlatform Xbox = 4;
	public const AntiCheatCommonClientPlatform PlayStation = 5;
	public const AntiCheatCommonClientPlatform Nintendo = 6;
	public const AntiCheatCommonClientPlatform iOS = 7;
	public const AntiCheatCommonClientPlatform Android = 8;
}
public enum AntiCheatCommonClientType
{
	// Fields
	public const AntiCheatCommonClientType ProtectedClient = 0;
	public const AntiCheatCommonClientType UnprotectedClient = 1;
	public const AntiCheatCommonClientType AIBot = 2;
}
public enum AntiCheatCommonEventParamType
{
	// Fields
	public const AntiCheatCommonEventParamType Invalid = 0;
	public const AntiCheatCommonEventParamType ClientHandle = 1;
	public const AntiCheatCommonEventParamType String = 2;
	public const AntiCheatCommonEventParamType UInt32 = 3;
	public const AntiCheatCommonEventParamType Int32 = 4;
	public const AntiCheatCommonEventParamType UInt64 = 5;
	public const AntiCheatCommonEventParamType Int64 = 6;
	public const AntiCheatCommonEventParamType Vector3f = 7;
	public const AntiCheatCommonEventParamType Quat = 8;
}
public enum AntiCheatCommonEventType
{
	// Fields
	public const AntiCheatCommonEventType Invalid = 0;
	public const AntiCheatCommonEventType GameEvent = 1;
	public const AntiCheatCommonEventType PlayerEvent = 2;
}
public enum AntiCheatCommonPlayerMovementState
{
	// Fields
	public const AntiCheatCommonPlayerMovementState None = 0;
	public const AntiCheatCommonPlayerMovementState Crouching = 1;
	public const AntiCheatCommonPlayerMovementState Prone = 2;
	public const AntiCheatCommonPlayerMovementState Mounted = 3;
	public const AntiCheatCommonPlayerMovementState Swimming = 4;
	public const AntiCheatCommonPlayerMovementState Falling = 5;
	public const AntiCheatCommonPlayerMovementState Flying = 6;
	public const AntiCheatCommonPlayerMovementState OnLadder = 7;
}
public enum AntiCheatCommonPlayerTakeDamageResult
{
	// Fields
	public const AntiCheatCommonPlayerTakeDamageResult None = 0;
	public const AntiCheatCommonPlayerTakeDamageResult Downed = 1;
	public const AntiCheatCommonPlayerTakeDamageResult Eliminated = 2;
}
public enum AntiCheatCommonPlayerTakeDamageSource
{
	// Fields
	public const AntiCheatCommonPlayerTakeDamageSource None = 0;
	public const AntiCheatCommonPlayerTakeDamageSource Player = 1;
	public const AntiCheatCommonPlayerTakeDamageSource NonPlayerCharacter = 2;
	public const AntiCheatCommonPlayerTakeDamageSource World = 3;
}
public enum AntiCheatCommonPlayerTakeDamageType
{
	// Fields
	public const AntiCheatCommonPlayerTakeDamageType None = 0;
	public const AntiCheatCommonPlayerTakeDamageType PointDamage = 1;
	public const AntiCheatCommonPlayerTakeDamageType RadialDamage = 2;
	public const AntiCheatCommonPlayerTakeDamageType DamageOverTime = 3;
}
public enum AntiCheatClientMode
{
	// Fields
	public const AntiCheatClientMode Invalid = 0;
	public const AntiCheatClientMode ClientServer = 1;
	public const AntiCheatClientMode PeerToPeer = 2;
}
public enum AntiCheatClientViolationType
{
	// Fields
	public const AntiCheatClientViolationType Invalid = 0;
	public const AntiCheatClientViolationType IntegrityCatalogNotFound = 1;
	public const AntiCheatClientViolationType IntegrityCatalogError = 2;
	public const AntiCheatClientViolationType IntegrityCatalogCertificateRevoked = 3;
	public const AntiCheatClientViolationType IntegrityCatalogMissingMainExecutable = 4;
	public const AntiCheatClientViolationType GameFileMismatch = 5;
	public const AntiCheatClientViolationType RequiredGameFileNotFound = 6;
	public const AntiCheatClientViolationType UnknownGameFileForbidden = 7;
	public const AntiCheatClientViolationType SystemFileUntrusted = 8;
	public const AntiCheatClientViolationType ForbiddenModuleLoaded = 9;
	public const AntiCheatClientViolationType CorruptedMemory = 10;
	public const AntiCheatClientViolationType ForbiddenToolDetected = 11;
	public const AntiCheatClientViolationType InternalAntiCheatViolation = 12;
	public const AntiCheatClientViolationType CorruptedNetworkMessageFlow = 13;
	public const AntiCheatClientViolationType VirtualMachineNotAllowed = 14;
	public const AntiCheatClientViolationType ForbiddenSystemConfiguration = 15;
}
public enum PlatformFlags
{
	// Fields
	public ulong value__; // 0x10
	public const PlatformFlags None = 0;
	public const PlatformFlags LoadingInEditor = 1;
	public const PlatformFlags DisableOverlay = 2;
	public const PlatformFlags DisableSocialOverlay = 4;
	public const PlatformFlags Reserved1 = 8;
	public const PlatformFlags WindowsEnableOverlayD3D9 = 16;
	public const PlatformFlags WindowsEnableOverlayD3D10 = 32;
	public const PlatformFlags WindowsEnableOverlayOpengl = 64;
}
public enum JSONTextMode
{
	// Fields
	public const JSONTextMode Compact = 0;
	public const JSONTextMode Indent = 1;
}
public enum KCPErrorCode
{
	// Fields
	public const KCPErrorCode ERR_Success = 0;
	public const KCPErrorCode ERR_KcpCantConnect = 102001;
	public const KCPErrorCode ERR_KcpChannelTimeout = 102002;
	public const KCPErrorCode ERR_KcpRemoteDisconnect = 102003;
	public const KCPErrorCode ERR_PeerDisconnect = 102004;
	public const KCPErrorCode ERR_SocketCantSend = 102005;
	public const KCPErrorCode ERR_SocketError = 102006;
	public const KCPErrorCode ERR_KcpWaitSendSizeTooLarge = 102007;
	public const KCPErrorCode ERR_KcpPeeksizeGreaterThanBuffer = 102008;
	public const KCPErrorCode ERR_KcpRecvMsgFailed = 102009;
	public const KCPErrorCode ERR_KcpReconnectFailed = 102010;
}
public enum FileDownloadStatus
{
	// Fields
	public const FileDownloadStatus Pending = 2;
	public const FileDownloadStatus Downloading = 1;
	public const FileDownloadStatus Pause = 3;
	public const FileDownloadStatus Success = 4;
	public const FileDownloadStatus Failed = 5;
	public const FileDownloadStatus Default = 0;
}
public enum FileDownloadErrorCode
{
	// Fields
	public const FileDownloadErrorCode Null = 0;
	public const FileDownloadErrorCode Default = -9000;
	public const FileDownloadErrorCode NetworkError = -9001;
	public const FileDownloadErrorCode Timeout = -9002;
	public const FileDownloadErrorCode MD5Retry = -9003;
	public const FileDownloadErrorCode MD5Failure = -9004;
	public const FileDownloadErrorCode DiskOutOfSpace = -9005;
	public const FileDownloadErrorCode FileException = -9006;
	public const FileDownloadErrorCode PermissionDenied = -9007;
	public const FileDownloadErrorCode FileExists = -9008;
	public const FileDownloadErrorCode TaskCancel = -9009;
}
public enum ThunderNotificationEvent
{
	// Fields
	public const ThunderNotificationEvent AllProgress = 0;
	public const ThunderNotificationEvent StateChange = 1;
	public const ThunderNotificationEvent DownloadOver = 2;
}
public enum ActionType
{
	// Fields
	[OriginalNameAttribute]
	public const ActionType Click = 0;
	[OriginalNameAttribute]
	public const ActionType Impression = 1;
	[OriginalNameAttribute]
	public const ActionType Pageview = 2;
	[OriginalNameAttribute]
	public const ActionType Pagehide = 3;
	[OriginalNameAttribute]
	public const ActionType Refresh = 4;
	[OriginalNameAttribute]
	public const ActionType Loadmore = 5;
}
public enum SecurityTunnel.ErrorCode
{
	// Fields
	public const SecurityTunnel.ErrorCode ConnectGateFailure = 1000;
	public const SecurityTunnel.ErrorCode ConnectGateFailureAll = 1001;
	public const SecurityTunnel.ErrorCode ReadStream = 1002;
	public const SecurityTunnel.ErrorCode Timeout = 1003;
	public const SecurityTunnel.ErrorCode WriteStream = 1004;
	public const SecurityTunnel.ErrorCode FileTransfer = 1005;
	public const SecurityTunnel.ErrorCode CryptoInit = 1006;
	public const SecurityTunnel.ErrorCode Encryption = 1007;
	public const SecurityTunnel.ErrorCode Decryption = 1008;
	public const SecurityTunnel.ErrorCode SecurityMessage = 1009;
	public const SecurityTunnel.ErrorCode Login = 1010;
	public const SecurityTunnel.ErrorCode PingTimeout = 1011;
	public const SecurityTunnel.ErrorCode Logout = 1012;
	public const SecurityTunnel.ErrorCode RSAError = 1013;
}
public enum SecurityTunnel.ServerEvent
{
	// Fields
	public const SecurityTunnel.ServerEvent Login = 57345;
	public const SecurityTunnel.ServerEvent Logout = 57346;
	public const SecurityTunnel.ServerEvent SecureMessage = 57347;
	public const SecurityTunnel.ServerEvent SecureInitMessage = 57348;
	public const SecurityTunnel.ServerEvent Ping = 57349;
}
public enum SecurityTunnel.SDKEvent
{
	// Fields
	public const SecurityTunnel.SDKEvent File = 45057;
	public const SecurityTunnel.SDKEvent Buffer = 45058;
}
public enum SecurityTunnel.TunnelState
{
	// Fields
	public const SecurityTunnel.TunnelState Disconnected = 0;
	public const SecurityTunnel.TunnelState Connecting = 1;
	public const SecurityTunnel.TunnelState ExchangingSecret = 2;
	public const SecurityTunnel.TunnelState Connected = 3;
}
public enum MiHoYoSDKRC4Encryptor.EncoderMode
{
	// Fields
	public const MiHoYoSDKRC4Encryptor.EncoderMode Default = 0;
	public const MiHoYoSDKRC4Encryptor.EncoderMode Base64Encoder = 1;
	public const MiHoYoSDKRC4Encryptor.EncoderMode HexEncoder = 2;
}
public enum Provider
{
	// Fields
	public const Provider Aliyun = 0;
	public const Provider Amazon = 1;
}
public enum KCPLogLevel
{
	// Fields
	public const KCPLogLevel Debug = 0;
	public const KCPLogLevel Info = 1;
	public const KCPLogLevel Warning = 2;
	public const KCPLogLevel Error = 3;
}
public enum ClipShapeManager.CurveBinding.BindingType
{
	// Fields
	public const ClipShapeManager.CurveBinding.BindingType INVALID = -1;
	public const ClipShapeManager.CurveBinding.BindingType BLEND_SHAPE = 0;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_POS_X = 1;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_POS_Y = 2;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_POS_Z = 3;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_EULER_X = 4;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_EULER_Y = 5;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_EULER_Z = 6;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_SCALE_X = 7;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_SCALE_Y = 8;
	public const ClipShapeManager.CurveBinding.BindingType TRANS_SCALE_Z = 9;
	public const ClipShapeManager.CurveBinding.BindingType MAT_FLOAT = 10;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_POS_X = 11;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_POS_Y = 12;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_POS_Z = 13;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_POS_X = 14;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_POS_Y = 15;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_POS_Z = 16;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_ROT_X = 17;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_ROT_Y = 18;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_ROT_Z = 19;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_ROT_X = 20;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_ROT_Y = 21;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_ROT_Z = 22;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_SCALE_X = 23;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_SCALE_Y = 24;
	public const ClipShapeManager.CurveBinding.BindingType EYE_LEFT_SCALE_Z = 25;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_SCALE_X = 26;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_SCALE_Y = 27;
	public const ClipShapeManager.CurveBinding.BindingType EYE_RIGHT_SCALE_Z = 28;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_POS_X = 29;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_POS_Y = 30;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_POS_Z = 31;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_POS_X = 32;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_POS_Y = 33;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_POS_Z = 34;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_ROT_X = 35;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_ROT_Y = 36;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_ROT_Z = 37;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_ROT_X = 38;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_ROT_Y = 39;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_ROT_Z = 40;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_SCALE_X = 41;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_SCALE_Y = 42;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_LEFT_SCALE_Z = 43;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_SCALE_X = 44;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_SCALE_Y = 45;
	public const ClipShapeManager.CurveBinding.BindingType EYE_BALL_RIGHT_SCALE_Z = 46;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_UP_ROT_X = 47;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_UP_ROT_Y = 48;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_UP_ROT_Z = 49;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_ROT_X = 50;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_ROT_Y = 51;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_ROT_Z = 52;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_UP_SCALE_X = 53;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_UP_SCALE_Y = 54;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_UP_SCALE_Z = 55;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_SCALE_X = 56;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_SCALE_Y = 57;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_SCALE_Z = 58;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_POS_X = 59;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_POS_Y = 60;
	public const ClipShapeManager.CurveBinding.BindingType TEETH_DOWN_POS_Z = 61;
	public const ClipShapeManager.CurveBinding.BindingType GO_ACTIVE = 62;
}
public enum ElementManager.Type
{
	// Fields
	public const ElementManager.Type NONE = -1;
	public const ElementManager.Type CLIP = 0;
	public const ElementManager.Type FRAME = 1;
}
public enum EyeKey.TickFrom
{
	// Fields
	public byte value__; // 0x10
	public const EyeKey.TickFrom FromLateUpdate = 0;
	public const EyeKey.TickFrom FromEntity = 1;
}
public enum EyeKey.EyeKeyController
{
	// Fields
	public const EyeKey.EyeKeyController EmoSync = 0;
	public const EyeKey.EyeKeyController LookAtEyeCtrl = 1;
}
public enum EmoStateManager.EmoState
{
	// Fields
	public const EmoStateManager.EmoState INVALID = -1;
	public const EmoStateManager.EmoState BLENDING = 0;
	public const EmoStateManager.EmoState BLINKING = 1;
}
public enum TransitionType
{
	// Fields
	public const TransitionType None = 0;
	public const TransitionType Blend = 1;
	public const TransitionType Post = 2;
}
public enum BaseMarker.POST_TYPE
{
	// Fields
	public const BaseMarker.POST_TYPE DEFAULT = 0;
	public const BaseMarker.POST_TYPE FORCE_NO_POST = 1;
	public const BaseMarker.POST_TYPE FORCE_POST = 2;
}
public enum SequenceClipBakeData.ClipBinding.Type
{
	// Fields
	public const SequenceClipBakeData.ClipBinding.Type INVALID = -1;
	public const SequenceClipBakeData.ClipBinding.Type MAIN = 0;
	public const SequenceClipBakeData.ClipBinding.Type POST = 1;
	public const SequenceClipBakeData.ClipBinding.Type BLINK = 2;
}
public enum SequenceClipBakeData.BlinkType
{
	// Fields
	public const SequenceClipBakeData.BlinkType None = 0;
	public const SequenceClipBakeData.BlinkType EnableBlink = 1;
	public const SequenceClipBakeData.BlinkType DisableBlink = 2;
}
public enum FrameShapeElement.TYPE
{
	// Fields
	public const FrameShapeElement.TYPE INVALID = -1;
	public const FrameShapeElement.TYPE MOUTH = 0;
	public const FrameShapeElement.TYPE EYE_LEFT = 1;
	public const FrameShapeElement.TYPE EYE_RIGHT = 2;
}
public enum MessagePackType
{
	// Fields
	public byte value__; // 0x10
	public const MessagePackType Unknown = 0;
	public const MessagePackType Integer = 1;
	public const MessagePackType Nil = 2;
	public const MessagePackType Boolean = 3;
	public const MessagePackType Float = 4;
	public const MessagePackType String = 5;
	public const MessagePackType Binary = 6;
	public const MessagePackType Array = 7;
	public const MessagePackType Map = 8;
	public const MessagePackType Extension = 9;
}
public enum Sphere3Sphere3IntrTypes
{
	// Fields
	public const Sphere3Sphere3IntrTypes Empty = 0;
	public const Sphere3Sphere3IntrTypes Point = 1;
	public const Sphere3Sphere3IntrTypes Circle = 2;
	public const Sphere3Sphere3IntrTypes Sphere0 = 3;
	public const Sphere3Sphere3IntrTypes Sphere0Point = 4;
	public const Sphere3Sphere3IntrTypes Sphere1 = 5;
	public const Sphere3Sphere3IntrTypes Sphere1Point = 6;
	public const Sphere3Sphere3IntrTypes Same = 7;
}
public enum IntersectionTypes
{
	// Fields
	public const IntersectionTypes Empty = 0;
	public const IntersectionTypes Point = 1;
	public const IntersectionTypes Segment = 2;
	public const IntersectionTypes Ray = 3;
	public const IntersectionTypes Line = 4;
	public const IntersectionTypes Polygon = 5;
	public const IntersectionTypes Plane = 6;
	public const IntersectionTypes Polyhedron = 7;
	public const IntersectionTypes Other = 8;
}
public enum ProjectionPlanes
{
	// Fields
	public const ProjectionPlanes XY = 0;
	public const ProjectionPlanes XZ = 1;
	public const ProjectionPlanes YZ = 2;
}
public enum Orientations
{
	// Fields
	public const Orientations CW = 0;
	public const Orientations CCW = 1;
	public const Orientations None = 2;
}
public enum SplineTypes
{
	// Fields
	public const SplineTypes Open = 0;
	public const SplineTypes Closed = 1;
}
public enum SplinePlaneTypes
{
	// Fields
	public const SplinePlaneTypes XZ = 0;
	public const SplinePlaneTypes XY = 1;
	public const SplinePlaneTypes YZ = 2;
}
public enum RecorderState
{
	// Fields
	public const RecorderState Recording = 0;
	public const RecorderState Paused = 1;
	public const RecorderState PreProcessing = 2;
}
public enum SValue.Type
{
	// Fields
	public const SValue.Type Nil = 0;
	public const SValue.Type Boolean = 1;
	public const SValue.Type Int8 = 2;
	public const SValue.Type UInt8 = 3;
	public const SValue.Type Char = 4;
	public const SValue.Type Int16 = 5;
	public const SValue.Type UInt16 = 6;
	public const SValue.Type Int32 = 7;
	public const SValue.Type UInt32 = 8;
	public const SValue.Type Int64 = 9;
	public const SValue.Type UInt64 = 10;
	public const SValue.Type Single = 11;
	public const SValue.Type Double = 12;
	public const SValue.Type String = 13;
	public const SValue.Type Object = 14;
	public const SValue.Type Vector2 = 15;
	public const SValue.Type Vector3 = 16;
	public const SValue.Type Vector4 = 17;
	public const SValue.Type Vector4i = 18;
	public const SValue.Type Quaternion = 19;
	public const SValue.Type Color4f = 20;
	public const SValue.Type Color32 = 21;
}
public enum EasyTouchTrigger.ETTParameter
{
	// Fields
	public const EasyTouchTrigger.ETTParameter None = 0;
	public const EasyTouchTrigger.ETTParameter Gesture = 1;
	public const EasyTouchTrigger.ETTParameter Finger_Id = 2;
	public const EasyTouchTrigger.ETTParameter Touch_Count = 3;
	public const EasyTouchTrigger.ETTParameter Start_Position = 4;
	public const EasyTouchTrigger.ETTParameter Position = 5;
	public const EasyTouchTrigger.ETTParameter Delta_Position = 6;
	public const EasyTouchTrigger.ETTParameter Swipe_Type = 7;
	public const EasyTouchTrigger.ETTParameter Swipe_Length = 8;
	public const EasyTouchTrigger.ETTParameter Swipe_Vector = 9;
	public const EasyTouchTrigger.ETTParameter Delta_Pinch = 10;
	public const EasyTouchTrigger.ETTParameter Twist_Anlge = 11;
	public const EasyTouchTrigger.ETTParameter ActionTime = 12;
	public const EasyTouchTrigger.ETTParameter DeltaTime = 13;
	public const EasyTouchTrigger.ETTParameter PickedObject = 14;
	public const EasyTouchTrigger.ETTParameter PickedUIElement = 15;
}
public enum EasyTouchTrigger.ETTType
{
	// Fields
	public const EasyTouchTrigger.ETTType Object3D = 0;
	public const EasyTouchTrigger.ETTType UI = 1;
}
public enum QuickBase.DirectAction
{
	// Fields
	public const QuickBase.DirectAction None = 0;
	public const QuickBase.DirectAction Rotate = 1;
	public const QuickBase.DirectAction RotateLocal = 2;
	public const QuickBase.DirectAction Translate = 3;
	public const QuickBase.DirectAction TranslateLocal = 4;
	public const QuickBase.DirectAction Scale = 5;
}
public enum QuickBase.AffectedAxesAction
{
	// Fields
	public const QuickBase.AffectedAxesAction X = 0;
	public const QuickBase.AffectedAxesAction Y = 1;
	public const QuickBase.AffectedAxesAction Z = 2;
	public const QuickBase.AffectedAxesAction XY = 3;
	public const QuickBase.AffectedAxesAction XZ = 4;
	public const QuickBase.AffectedAxesAction YZ = 5;
	public const QuickBase.AffectedAxesAction XYZ = 6;
}
public enum QuickLongTap.ActionTriggering
{
	// Fields
	public const QuickLongTap.ActionTriggering Start = 0;
	public const QuickLongTap.ActionTriggering InProgress = 1;
	public const QuickLongTap.ActionTriggering End = 2;
}
public enum QuickPinch.ActionTiggering
{
	// Fields
	public const QuickPinch.ActionTiggering InProgress = 0;
	public const QuickPinch.ActionTiggering End = 1;
}
public enum QuickPinch.ActionPinchDirection
{
	// Fields
	public const QuickPinch.ActionPinchDirection All = 0;
	public const QuickPinch.ActionPinchDirection PinchIn = 1;
	public const QuickPinch.ActionPinchDirection PinchOut = 2;
}
public enum QuickSwipe.ActionTriggering
{
	// Fields
	public const QuickSwipe.ActionTriggering InProgress = 0;
	public const QuickSwipe.ActionTriggering End = 1;
}
public enum QuickSwipe.SwipeDirection
{
	// Fields
	public const QuickSwipe.SwipeDirection Vertical = 0;
	public const QuickSwipe.SwipeDirection Horizontal = 1;
	public const QuickSwipe.SwipeDirection DiagonalRight = 2;
	public const QuickSwipe.SwipeDirection DiagonalLeft = 3;
	public const QuickSwipe.SwipeDirection Up = 4;
	public const QuickSwipe.SwipeDirection UpRight = 5;
	public const QuickSwipe.SwipeDirection Right = 6;
	public const QuickSwipe.SwipeDirection DownRight = 7;
	public const QuickSwipe.SwipeDirection Down = 8;
	public const QuickSwipe.SwipeDirection DownLeft = 9;
	public const QuickSwipe.SwipeDirection Left = 10;
	public const QuickSwipe.SwipeDirection UpLeft = 11;
	public const QuickSwipe.SwipeDirection All = 12;
}
public enum QuickTap.ActionTriggering
{
	// Fields
	public const QuickTap.ActionTriggering Simple_Tap = 0;
	public const QuickTap.ActionTriggering Double_Tap = 1;
}
public enum QuickTouch.ActionTriggering
{
	// Fields
	public const QuickTouch.ActionTriggering Start = 0;
	public const QuickTouch.ActionTriggering Down = 1;
	public const QuickTouch.ActionTriggering Up = 2;
}
public enum QuickTwist.ActionTiggering
{
	// Fields
	public const QuickTwist.ActionTiggering InProgress = 0;
	public const QuickTwist.ActionTiggering End = 1;
}
public enum QuickTwist.ActionRotationDirection
{
	// Fields
	public const QuickTwist.ActionRotationDirection All = 0;
	public const QuickTwist.ActionRotationDirection Clockwise = 1;
	public const QuickTwist.ActionRotationDirection Counterclockwise = 2;
}
public enum EasyTouch.GesturePriority
{
	// Fields
	public const EasyTouch.GesturePriority Tap = 0;
	public const EasyTouch.GesturePriority Slips = 1;
}
public enum EasyTouch.DoubleTapDetection
{
	// Fields
	public const EasyTouch.DoubleTapDetection BySystem = 0;
	public const EasyTouch.DoubleTapDetection ByTime = 1;
}
public enum EasyTouch.GestureType
{
	// Fields
	public const EasyTouch.GestureType Tap = 0;
	public const EasyTouch.GestureType Drag = 1;
	public const EasyTouch.GestureType Swipe = 2;
	public const EasyTouch.GestureType None = 3;
	public const EasyTouch.GestureType LongTap = 4;
	public const EasyTouch.GestureType Pinch = 5;
	public const EasyTouch.GestureType Twist = 6;
	public const EasyTouch.GestureType Cancel = 7;
	public const EasyTouch.GestureType Acquisition = 8;
}
public enum EasyTouch.SwipeDirection
{
	// Fields
	public const EasyTouch.SwipeDirection None = 0;
	public const EasyTouch.SwipeDirection Left = 1;
	public const EasyTouch.SwipeDirection Right = 2;
	public const EasyTouch.SwipeDirection Up = 3;
	public const EasyTouch.SwipeDirection Down = 4;
	public const EasyTouch.SwipeDirection UpLeft = 5;
	public const EasyTouch.SwipeDirection UpRight = 6;
	public const EasyTouch.SwipeDirection DownLeft = 7;
	public const EasyTouch.SwipeDirection DownRight = 8;
	public const EasyTouch.SwipeDirection Other = 9;
	public const EasyTouch.SwipeDirection All = 10;
}
public enum EasyTouch.TwoFingerPickMethod
{
	// Fields
	public const EasyTouch.TwoFingerPickMethod Finger = 0;
	public const EasyTouch.TwoFingerPickMethod Average = 1;
}
public enum EasyTouch.EvtType
{
	// Fields
	public const EasyTouch.EvtType None = 0;
	public const EasyTouch.EvtType On_TouchStart = 1;
	public const EasyTouch.EvtType On_TouchDown = 2;
	public const EasyTouch.EvtType On_TouchUp = 3;
	public const EasyTouch.EvtType On_SimpleTap = 4;
	public const EasyTouch.EvtType On_DoubleTap = 5;
	public const EasyTouch.EvtType On_LongTapStart = 6;
	public const EasyTouch.EvtType On_LongTap = 7;
	public const EasyTouch.EvtType On_LongTapEnd = 8;
	public const EasyTouch.EvtType On_DragStart = 9;
	public const EasyTouch.EvtType On_Drag = 10;
	public const EasyTouch.EvtType On_DragEnd = 11;
	public const EasyTouch.EvtType On_SwipeStart = 12;
	public const EasyTouch.EvtType On_Swipe = 13;
	public const EasyTouch.EvtType On_SwipeEnd = 14;
	public const EasyTouch.EvtType On_TouchStart2Fingers = 15;
	public const EasyTouch.EvtType On_TouchDown2Fingers = 16;
	public const EasyTouch.EvtType On_TouchUp2Fingers = 17;
	public const EasyTouch.EvtType On_SimpleTap2Fingers = 18;
	public const EasyTouch.EvtType On_DoubleTap2Fingers = 19;
	public const EasyTouch.EvtType On_LongTapStart2Fingers = 20;
	public const EasyTouch.EvtType On_LongTap2Fingers = 21;
	public const EasyTouch.EvtType On_LongTapEnd2Fingers = 22;
	public const EasyTouch.EvtType On_Twist = 23;
	public const EasyTouch.EvtType On_TwistEnd = 24;
	public const EasyTouch.EvtType On_Pinch = 25;
	public const EasyTouch.EvtType On_PinchIn = 26;
	public const EasyTouch.EvtType On_PinchOut = 27;
	public const EasyTouch.EvtType On_PinchEnd = 28;
	public const EasyTouch.EvtType On_DragStart2Fingers = 29;
	public const EasyTouch.EvtType On_Drag2Fingers = 30;
	public const EasyTouch.EvtType On_DragEnd2Fingers = 31;
	public const EasyTouch.EvtType On_SwipeStart2Fingers = 32;
	public const EasyTouch.EvtType On_Swipe2Fingers = 33;
	public const EasyTouch.EvtType On_SwipeEnd2Fingers = 34;
	public const EasyTouch.EvtType On_EasyTouchIsReady = 35;
	public const EasyTouch.EvtType On_Cancel = 36;
	public const EasyTouch.EvtType On_Cancel2Fingers = 37;
	public const EasyTouch.EvtType On_OverUIElement = 38;
	public const EasyTouch.EvtType On_UIElementTouchUp = 39;
	public const EasyTouch.EvtType On_OverUIElementSwipe = 40;
	public const EasyTouch.EvtType On_OverUIElementLongTap = 41;
}
public enum AssetJobPriority
{
	// Fields
	public const AssetJobPriority Lowest = 0;
	public const AssetJobPriority Lower = 1;
	public const AssetJobPriority Low = 2;
	public const AssetJobPriority Medium = 3;
	public const AssetJobPriority High = 4;
	public const AssetJobPriority Entity = 5;
	public const AssetJobPriority Higher = 6;
	public const AssetJobPriority Highest = 7;
}
public enum AssetLocation
{
	// Fields
	public const AssetLocation None = 0;
	public const AssetLocation EditorOnly = 1;
	public const AssetLocation Internal = 2;
	public const AssetLocation Streaming = 3;
	public const AssetLocation Medium = 4;
	public const AssetLocation External = 5;
}
public enum BundleLoadResult
{
	// Fields
	public const BundleLoadResult Undefined = 0;
	public const BundleLoadResult Succeeded = 1;
	public const BundleLoadResult FileNotExists = 2;
	public const BundleLoadResult DownloadFailed = 3;
	public const BundleLoadResult LoadFailed = 4;
	public const BundleLoadResult AbortedByUser = 5;
	public const BundleLoadResult AbortedBySystem = 6;
}
public enum ResourceLoadFailureReason
{
	// Fields
	public const ResourceLoadFailureReason NoSuchAsset = 0;
	public const ResourceLoadFailureReason BundleFileDoesNotExist = 1;
	public const ResourceLoadFailureReason ErrorDownloadingBundle = 2;
	public const ResourceLoadFailureReason ErrorLoadingBundle = 3;
	public const ResourceLoadFailureReason TimeOut = 4;
	public const ResourceLoadFailureReason UserAborted = 5;
	public const ResourceLoadFailureReason SystemAborted = 6;
	public const ResourceLoadFailureReason Unspecified = 7;
	public const ResourceLoadFailureReason HandleNotMatch = 8;
	public const ResourceLoadFailureReason BatchFail = 9;
}
public enum FileLocation
{
	// Fields
	public const FileLocation External = 0;
	public const FileLocation Streaming = 1;
	public const FileLocation Memory = 2;
	public const FileLocation NonExist = 3;
}
public enum AssetRegion
{
	// Fields
	public const AssetRegion Origin = 0;
	public const AssetRegion CN = 1;
	public const AssetRegion OS = 2;
}
public enum ETimeout<T>
{
	// Fields
	public const ETimeout<T> ETO_NoTimeout = 0;
	public const ETimeout<T> ETO_TimeoutWithCurrentTick = 1;
	public const ETimeout<T> ETO_TimeoutWithNoCurrentTick = 2;
}
public enum BalanceTickUtility.EngineTickStage
{
	// Fields
	public const BalanceTickUtility.EngineTickStage ETS_Undefined = 0;
	public const BalanceTickUtility.EngineTickStage ETS_LateUpdate = 1;
}
public enum BalanceTickUtility.TestPlanesResults
{
	// Fields
	public const BalanceTickUtility.TestPlanesResults Inside = 0;
	public const BalanceTickUtility.TestPlanesResults Intersect = 1;
	public const BalanceTickUtility.TestPlanesResults Outside = 2;
}
public enum CloudGame.Vendor
{
	// Fields
	public const CloudGame.Vendor None = 0;
	public const CloudGame.Vendor WeLing = 1;
	public const CloudGame.Vendor Mihoyo = 2;
}
public enum CloudGame.PlatformType
{
	// Fields
	public const CloudGame.PlatformType CloudAndroid = 0;
	public const CloudGame.PlatformType CloudIos = 1;
	public const CloudGame.PlatformType CloudPc = 2;
	public const CloudGame.PlatformType CloudWeb = 3;
	public const CloudGame.PlatformType CloudMac = 4;
	public const CloudGame.PlatformType CloudTv = 5;
	public const CloudGame.PlatformType CloudThirdPartyMobile = 6;
	public const CloudGame.PlatformType CloudThirdPartyPc = 7;
}
public enum SceneSurfaceMaterial
{
	// Fields
	public const SceneSurfaceMaterial Invalid = 0;
	public const SceneSurfaceMaterial Grass = 1;
	public const SceneSurfaceMaterial Dirt = 2;
	public const SceneSurfaceMaterial Rock = 3;
	public const SceneSurfaceMaterial Snow = 4;
	public const SceneSurfaceMaterial Water = 5;
	public const SceneSurfaceMaterial Tile = 6;
	public const SceneSurfaceMaterial Sand = 7;
	public const SceneSurfaceMaterial Wood = 8;
	public const SceneSurfaceMaterial Iron = 9;
	public const SceneSurfaceMaterial Tree = 10;
	public const SceneSurfaceMaterial Ice = 11;
	public const SceneSurfaceMaterial Marble = 12;
	public const SceneSurfaceMaterial Carpet = 13;
	public const SceneSurfaceMaterial WoodLog = 14;
	public const SceneSurfaceMaterial Cloud = 15;
	public const SceneSurfaceMaterial Coin = 16;
	public const SceneSurfaceMaterial SnowRock = 17;
	public const SceneSurfaceMaterial ElectricWater = 18;
	public const SceneSurfaceMaterial Sakura = 19;
	public const SceneSurfaceMaterial BlackMud = 20;
	public const SceneSurfaceMaterial TransparentBrick = 21;
	public const SceneSurfaceMaterial Desert = 22;
}
public enum GlobalVars.WorldType
{
	// Fields
	public const GlobalVars.WorldType Invalid = -1;
	public const GlobalVars.WorldType Login = 0;
	public const GlobalVars.WorldType Home = 1;
	public const GlobalVars.WorldType Level = 2;
	public const GlobalVars.WorldType DevLevel = 3;
	public const GlobalVars.WorldType BundleDownload = 4;
	public const GlobalVars.WorldType LevelTestScene = 5;
	public const GlobalVars.WorldType TestCutscene = 6;
	public const GlobalVars.WorldType ScenicScanLevel = 7;
	public const GlobalVars.WorldType TalkPreview = 8;
	public const GlobalVars.WorldType ProfileEffects = 9;
	public const GlobalVars.WorldType RagdollScene = 10;
	public const GlobalVars.WorldType MoveTestScene = 11;
	public const GlobalVars.WorldType PSPrepare = 12;
}
public enum GlobalVars.LevelSubType
{
	// Fields
	public const GlobalVars.LevelSubType NormalLevel = 0;
	public const GlobalVars.LevelSubType StreamingLevel = 1;
}
public enum GlobalVars.CurToLastFrameCountType
{
	// Fields
	public const GlobalVars.CurToLastFrameCountType LoadingFinish = 0;
	public const GlobalVars.CurToLastFrameCountType InLevelMainPageHide = 1;
	public const GlobalVars.CurToLastFrameCountType IsReconnectFinish = 2;
}
public enum GlobalVars.EffectPoolRemoveStrategy
{
	// Fields
	public const GlobalVars.EffectPoolRemoveStrategy DelayRemove = 0;
	public const GlobalVars.EffectPoolRemoveStrategy BudgetRemove = 1;
	public const GlobalVars.EffectPoolRemoveStrategy NeverRemove = 2;
}
public enum GlobalVars.ForcePreloadIconsType
{
	// Fields
	public const GlobalVars.ForcePreloadIconsType All = 0;
	public const GlobalVars.ForcePreloadIconsType Essential = 1;
	public const GlobalVars.ForcePreloadIconsType EssentialInBattle = 2;
}
public enum GlobalVars.MusicSystem
{
	// Fields
	public const GlobalVars.MusicSystem None = 0;
	public const GlobalVars.MusicSystem Legacy = 1;
	public const GlobalVars.MusicSystem Experimental = 2;
}
public enum GlobalVars.LangType
{
	// Fields
	public const GlobalVars.LangType NotInit = -1;
	public const GlobalVars.LangType Chinese = 0;
	public const GlobalVars.LangType English = 1;
	public const GlobalVars.LangType Vietnamese = 2;
	public const GlobalVars.LangType Thai = 3;
	public const GlobalVars.LangType French = 4;
	public const GlobalVars.LangType German = 5;
}
public enum GlobalVars.PackageType
{
	// Fields
	public const GlobalVars.PackageType None = 0;
	public const GlobalVars.PackageType Less = 1;
	public const GlobalVars.PackageType Medium = 2;
	public const GlobalVars.PackageType PlayGo = 3;
	public const GlobalVars.PackageType Full = 4;
}
public enum DefaultBlendModes
{
	// Fields
	public const DefaultBlendModes Off = 0;
	public const DefaultBlendModes AlphaBlend = 1;
	public const DefaultBlendModes Additive = 2;
	public const DefaultBlendModes SoftAdditive = 3;
	public const DefaultBlendModes Custom = 4;
}
public enum MiHoYoZWriteMode
{
	// Fields
	public const MiHoYoZWriteMode Off = 0;
	public const MiHoYoZWriteMode On = 1;
}
public enum ReportErrorCode
{
	// Fields
	public const ReportErrorCode None = 0;
	public const ReportErrorCode NETWORK_DISCONNECT_GOBACKHOME = 4001;
	public const ReportErrorCode NETWORK_RECONNECT_GATE_FAIL = 4002;
	public const ReportErrorCode NETWORK_CONNECT_CLIENT_NOT_NULL = 4003;
	public const ReportErrorCode NETWORK_CONNECT_CLIENT_INIT_FAIL = 4004;
	public const ReportErrorCode NETWORK_LOGIN_EXCEPTION = 4005;
	public const ReportErrorCode NETWORK_CONNECT_GATE_FAIL = 4006;
	public const ReportErrorCode NETWORK_DISCONNECT_STATE = 4007;
	public const ReportErrorCode NETWORK_SEND_PACKET_ERROR = 4008;
	public const ReportErrorCode NETWORK_RECEIVE_PACKET_ERROR = 4009;
	public const ReportErrorCode NETWORK_EXCEPTION = 4010;
	public const ReportErrorCode NETWORK_ERROR = 4011;
	public const ReportErrorCode DISPATCH_GLOBAL_GET_TIMEOUT = 4201;
	public const ReportErrorCode DISPATCH_GLOBAL_GET_ERROR = 4202;
	public const ReportErrorCode DISPATCH_GLOBAL_PARSE_EXCEPTION = 4203;
	public const ReportErrorCode DISPATCH_GLOBAL_PARSE_INVALID = 4204;
	public const ReportErrorCode DISPATCH_GLOBAL_CONFIG_PARSE_FAIL = 4205;
	public const ReportErrorCode DISPATCH_REGION_GET_TIMEOUT = 4206;
	public const ReportErrorCode DISPATCH_REGION_GET_ERROR = 4207;
	public const ReportErrorCode DISPATCH_REGION_PARSE_EXCEPTION = 4208;
	public const ReportErrorCode DISPATCH_REGION_PARSE_INVALID = 4209;
	public const ReportErrorCode DISPATCH_CONFIG_PARSE_EXCEPTION = 4210;
	public const ReportErrorCode DISPATCH_GLOBAL_CONFIG_PARSE_INVALID = 4211;
	public const ReportErrorCode DISPATCH_REGION_RSP_INVALID = 4212;
	public const ReportErrorCode DISPATCH_REGION_ERR_WITH_CODE = 4213;
	public const ReportErrorCode DISPATCH_REGION_DECRYPT_FAIL = 4214;
	public const ReportErrorCode DISPATCH_REGION_LOAD_PATCH_CONNECT_ERROR = 4215;
	public const ReportErrorCode LOGIN_TOKEN_GET_FAIL = 4301;
	public const ReportErrorCode LOGIN_PLAYER_LOGIN__FAIL = 4302;
	public const ReportErrorCode LOGIN_ENTER_SCENE_READY_FAIL = 4303;
	public const ReportErrorCode LOGIN_INIT_FINISH_FAIL = 4304;
	public const ReportErrorCode LOGIN_ENTER_SCENE_DONE_FAIL = 4305;
	public const ReportErrorCode LOGIN_POST_ENTER_SCENE_FAIL = 4306;
	public const ReportErrorCode LOGIN_ENTERTOKEN_INVALID = 4307;
	public const ReportErrorCode LOGIN_TASK_TIMEOUT = 4308;
	public const ReportErrorCode LOGIN_SEED_DERYPT_FAIL = 4309;
	public const ReportErrorCode LOGIN_GEN_RANDOM_FAIL = 4310;
	public const ReportErrorCode SDK_INIT_FAIL = 4401;
	public const ReportErrorCode SDK_LOGIN_FAIL = 4402;
	public const ReportErrorCode SDK_LOGOUT_FAIL = 4403;
	public const ReportErrorCode SDK_PAY_FAIL = 4404;
	public const ReportErrorCode SDK_GETTIER_FAIL = 4405;
	public const ReportErrorCode SDK_GET_MALLPRODUCT_FAIL = 4406;
	public const ReportErrorCode SDK_GET_BPPRODUCT_FAIL = 4407;
	public const ReportErrorCode SDK_HASPRODUCT_FAIL = 4408;
	public const ReportErrorCode Unknown = -9000;
	public const ReportErrorCode TimeOut = -9002;
	public const ReportErrorCode VerifyMd5OrFileSizeFailed = -9004;
	public const ReportErrorCode DiskFull = -9005;
	public const ReportErrorCode IOFailed = -9006;
	public const ReportErrorCode InvalidSavePath = -9007;
	public const ReportErrorCode InvalidRequest = -9008;
	public const ReportErrorCode Cancelled = -9009;
	public const ReportErrorCode FetchFileLengthFailed = -9010;
	public const ReportErrorCode DownloadLengthNotEqualToExpected = -9011;
	public const ReportErrorCode WebException_Success = -9100;
	public const ReportErrorCode WebException_NameResolutionFailure = -9101;
	public const ReportErrorCode WebException_ConnectFailure = -9102;
	public const ReportErrorCode WebException_ReceiveFailure = -9103;
	public const ReportErrorCode WebException_SendFailure = -9104;
	public const ReportErrorCode WebException_PipelineFailure = -9105;
	public const ReportErrorCode WebException_RequestCanceled = -9106;
	public const ReportErrorCode WebException_ProtocolError = -9107;
	public const ReportErrorCode WebException_ConnectionClosed = -9108;
	public const ReportErrorCode WebException_TrustFailure = -9109;
	public const ReportErrorCode WebException_SecureChannelFailure = -9110;
	public const ReportErrorCode WebException_ServerProtocolViolation = -9111;
	public const ReportErrorCode WebException_KeepAliveFailure = -9112;
	public const ReportErrorCode WebException_Pending = -9113;
	public const ReportErrorCode WebException_Timeout = -9114;
	public const ReportErrorCode WebException_ProxyNameResolutionFailure = -9115;
	public const ReportErrorCode WebException_UnknownError = -9116;
	public const ReportErrorCode WebException_MessageLengthLimitExceeded = -9117;
	public const ReportErrorCode WebException_CacheEntryNotFound = -9118;
	public const ReportErrorCode WebException_RequestProhibitedByCachePolicy = -9119;
	public const ReportErrorCode WebException_RequestProhibitedByProxy = -9120;
	public const ReportErrorCode NotSupportedException = -9201;
	public const ReportErrorCode NotAValidMethodOrArgumentException = -9202;
	public const ReportErrorCode AuthenticationOrDecryptionFailed = -9203;
	public const ReportErrorCode SharingViolation = -9204;
	public const ReportErrorCode CouldNotFindFile = -9205;
	public const ReportErrorCode AliveKeeperNotWorking = -9301;
	public const ReportErrorCode NextResMergeError = -9321;
	public const ReportErrorCode ResetAudioLangFileError = -9331;
	public const ReportErrorCode ApplyAudioDiffError = -9341;
	public const ReportErrorCode SaveDownloadLogError = -9351;
	public const ReportErrorCode OtherErrorInFilesDownloadManager = -9359;
	public const ReportErrorCode NotAllFilesInResVersionExist = -9901;
	public const ReportErrorCode NotAllFilesInDataVersionExist = -9902;
	public const ReportErrorCode NotAllFilesInSilenceVersionExist = -9903;
	public const ReportErrorCode CancelledByUser = -9904;
	public const ReportErrorCode CannotReachNetwork = -9905;
	public const ReportErrorCode CheckWritableFailed = -9906;
	public const ReportErrorCode NotEnoughSpace = -9907;
	public const ReportErrorCode VerifyMd5Failed = -9908;
	public const ReportErrorCode CopyRemoteVersionFileFailed = -9909;
	public const ReportErrorCode WriteRevisionFileFailed = -9910;
	public const ReportErrorCode DownloadRemoteVersionFileFailed = -9911;
	public const ReportErrorCode OverwriteOldFileFailed = -9912;
	public const ReportErrorCode DownloadStuck = -9913;
	public const ReportErrorCode NotAllDownloadFilesExist = -9991;
	public const ReportErrorCode DownloaderStatusFailed = -9992;
	public const ReportErrorCode DownloadUnexpectedException = -9999;
	public const ReportErrorCode AiStucked = 3000;
	public const ReportErrorCode AiLog = 3001;
	public const ReportErrorCode UploadLogError = 2000;
	public const ReportErrorCode SECError = 5000;
	public const ReportErrorCode Audio_NotDialogSpeechPoster = 6000;
	public const ReportErrorCode Audio_MissingDialogVoicePlugin = 6001;
}
public enum SuperDebug.LogRequestType
{
	// Fields
	public const SuperDebug.LogRequestType LOG = 0;
	public const SuperDebug.LogRequestType ASSERT = 1;
	public const SuperDebug.LogRequestType WARNING = 2;
	public const SuperDebug.LogRequestType ERROR = 3;
	public const SuperDebug.LogRequestType VERY_IMPORTANT = 4;
	public const SuperDebug.LogRequestType Alert = 5;
}
public enum ErrorLevel
{
	// Fields
	public const ErrorLevel Low = 0;
	public const ErrorLevel Medium = 1;
	public const ErrorLevel High = 2;
	public const ErrorLevel Urgent = 3;
}
public enum ErrorCategory
{
	// Fields
	public const ErrorCategory None = 0;
	public const ErrorCategory UI = 1;
	public const ErrorCategory Combat = 2;
	public const ErrorCategory Network = 3;
	public const ErrorCategory Performance = 4;
	public const ErrorCategory Audio = 5;
	public const ErrorCategory AI = 6;
	public const ErrorCategory Hotfix = 7;
	public const ErrorCategory Security = 8;
	public const ErrorCategory SDK = 9;
	public const ErrorCategory Input = 10;
	public const ErrorCategory Entity = 11;
	public const ErrorCategory SECTR = 12;
	public const ErrorCategory Level = 13;
	public const ErrorCategory Camera = 14;
	public const ErrorCategory Dowload = 15;
	public const ErrorCategory Resource = 16;
	public const ErrorCategory DataStruct = 17;
	public const ErrorCategory SliceFrame = 18;
	public const ErrorCategory Quest = 19;
	public const ErrorCategory NPC = 20;
	public const ErrorCategory Talk = 21;
	public const ErrorCategory Effect = 22;
	public const ErrorCategory ObjectPool = 23;
	public const ErrorCategory Homeworld = 24;
	public const ErrorCategory Token = 25;
	public const ErrorCategory Cutscene = 26;
	public const ErrorCategory Enviro = 27;
	public const ErrorCategory CustomLevel = 28;
	public const ErrorCategory Gcg = 29;
	public const ErrorCategory System = 30;
	public const ErrorCategory GreyTest = 31;
	public const ErrorCategory QuestResource = 32;
	public const ErrorCategory LowMemory = 33;
}
public enum NativeCacheLevel
{
	// Fields
	public byte value__; // 0x10
	public const NativeCacheLevel None = 0;
	public const NativeCacheLevel Compress = 1;
	public const NativeCacheLevel FileCache = 2;
}
public enum NativeBufferType
{
	// Fields
	public byte value__; // 0x10
	public const NativeBufferType ByteArray = 0;
	public const NativeBufferType Pointer = 1;
}
public enum ErrorType
{
	// Fields
	public const ErrorType None = 0;
	public const ErrorType Network = 1;
}
public enum NativePlayer.RendererResource.RendererType
{
	// Fields
	public const NativePlayer.RendererResource.RendererType None = 0;
	public const NativePlayer.RendererResource.RendererType PlatformDefault = 1;
}
public enum NativePlayer.Status
{
	// Fields
	public const NativePlayer.Status Stop = 0;
	public const NativePlayer.Status Playing = 1;
	public const NativePlayer.Status Error = 2;
}
public enum NativePlayer.NativePlayerNativeMethods.RenderEventAction
{
	// Fields
	public const NativePlayer.NativePlayerNativeMethods.RenderEventAction UPDATE = 0;
	public const NativePlayer.NativePlayerNativeMethods.RenderEventAction INITIALIZE = 256;
	public const NativePlayer.NativePlayerNativeMethods.RenderEventAction RENDER = 512;
	public const NativePlayer.NativePlayerNativeMethods.RenderEventAction DESTROY = 768;
	public const NativePlayer.NativePlayerNativeMethods.RenderEventAction EARLYINITIALIZE = 1024;
}
public enum CodecType
{
	// Fields
	public const CodecType Unknown = 0;
	public const CodecType SofdecPrime = 1;
	public const CodecType H264 = 5;
	public const CodecType VP9 = 9;
}
public enum AlphaType
{
	// Fields
	public const AlphaType CompoOpaq = 0;
	public const AlphaType CompoAlphaFull = 1;
	public const AlphaType CompoAlpha3Step = 2;
	public const AlphaType CompoAlpha32Bit = 3;
}
public enum Player.Status
{
	// Fields
	public const Player.Status Stop = 0;
	public const Player.Status Dechead = 1;
	public const Player.Status WaitPrep = 2;
	public const Player.Status Prep = 3;
	public const Player.Status Ready = 4;
	public const Player.Status Playing = 5;
	public const Player.Status PlayEnd = 6;
	public const Player.Status Error = 7;
	public const Player.Status StopProcessing = 8;
	public const Player.Status ReadyForRendering = 9;
}
public enum Player.SetMode
{
	// Fields
	public const Player.SetMode New = 0;
	public const Player.SetMode Append = 1;
	public const Player.SetMode AppendRepeatedly = 2;
}
public enum Player.MovieEventSyncMode
{
	// Fields
	public const Player.MovieEventSyncMode FrameTime = 0;
	public const Player.MovieEventSyncMode PlayBackTime = 1;
}
public enum Player.AudioTrack
{
	// Fields
	public const Player.AudioTrack Off = 0;
	public const Player.AudioTrack Auto = 1;
}
public enum Player.TimerType
{
	// Fields
	public const Player.TimerType None = 0;
	public const Player.TimerType System = 1;
	public const Player.TimerType Audio = 2;
	public const Player.TimerType User = 3;
	public const Player.TimerType Manual = 4;
}
public enum Player.CriManaUnityPlayer_RenderEventAction
{
	// Fields
	public const Player.CriManaUnityPlayer_RenderEventAction UPDATE = 0;
	public const Player.CriManaUnityPlayer_RenderEventAction INITIALIZE = 256;
	public const Player.CriManaUnityPlayer_RenderEventAction RENDER = 512;
	public const Player.CriManaUnityPlayer_RenderEventAction DESTROY = 768;
}
public enum AppMemoryLevel
{
	// Fields
	public const AppMemoryLevel Normal = 0;
	public const AppMemoryLevel Warning = 1;
	public const AppMemoryLevel Urgent = 2;
	public const AppMemoryLevel Critical = 3;
}
public enum CinemachineBrain.UpdateMethod
{
	// Fields
	public const CinemachineBrain.UpdateMethod FixedUpdate = 0;
	public const CinemachineBrain.UpdateMethod LateUpdate = 1;
	public const CinemachineBrain.UpdateMethod SmartUpdate = 2;
}
public enum CinemachineCollider.ResolutionStrategy
{
	// Fields
	public const CinemachineCollider.ResolutionStrategy PullCameraForward = 0;
	public const CinemachineCollider.ResolutionStrategy PreserveCameraHeight = 1;
	public const CinemachineCollider.ResolutionStrategy PreserveCameraDistance = 2;
}
public enum CinemachineConfiner.Mode
{
	// Fields
	public const CinemachineConfiner.Mode Confine2D = 0;
	public const CinemachineConfiner.Mode Confine3D = 1;
}
public enum CinemachineDollyCart.UpdateMethod
{
	// Fields
	public const CinemachineDollyCart.UpdateMethod Update = 0;
	public const CinemachineDollyCart.UpdateMethod FixedUpdate = 1;
}
public enum CinemachineMainTargetGroup.FramingMode
{
	// Fields
	public const CinemachineMainTargetGroup.FramingMode Horizontal = 0;
	public const CinemachineMainTargetGroup.FramingMode Vertical = 1;
	public const CinemachineMainTargetGroup.FramingMode HorizontalAndVertical = 2;
}
public enum CinemachineTargetGroup.PositionMode
{
	// Fields
	public const CinemachineTargetGroup.PositionMode GroupCenter = 0;
	public const CinemachineTargetGroup.PositionMode GroupAverage = 1;
}
public enum CinemachineTargetGroup.RotationMode
{
	// Fields
	public const CinemachineTargetGroup.RotationMode Manual = 0;
	public const CinemachineTargetGroup.RotationMode GroupAverage = 1;
}
public enum CinemachineTargetGroup.UpdateMethod
{
	// Fields
	public const CinemachineTargetGroup.UpdateMethod Update = 0;
	public const CinemachineTargetGroup.UpdateMethod FixedUpdate = 1;
	public const CinemachineTargetGroup.UpdateMethod LateUpdate = 2;
}
public enum CinemachineFramingTransposer.FramingMode
{
	// Fields
	public const CinemachineFramingTransposer.FramingMode Horizontal = 0;
	public const CinemachineFramingTransposer.FramingMode Vertical = 1;
	public const CinemachineFramingTransposer.FramingMode HorizontalAndVertical = 2;
	public const CinemachineFramingTransposer.FramingMode None = 3;
}
public enum CinemachineFramingTransposer.AdjustmentMode
{
	// Fields
	public const CinemachineFramingTransposer.AdjustmentMode ZoomOnly = 0;
	public const CinemachineFramingTransposer.AdjustmentMode DollyOnly = 1;
	public const CinemachineFramingTransposer.AdjustmentMode DollyThenZoom = 2;
}
public enum CinemachineGroupComposer.FramingMode
{
	// Fields
	public const CinemachineGroupComposer.FramingMode Horizontal = 0;
	public const CinemachineGroupComposer.FramingMode Vertical = 1;
	public const CinemachineGroupComposer.FramingMode HorizontalAndVertical = 2;
}
public enum CinemachineGroupComposer.AdjustmentMode
{
	// Fields
	public const CinemachineGroupComposer.AdjustmentMode ZoomOnly = 0;
	public const CinemachineGroupComposer.AdjustmentMode DollyOnly = 1;
	public const CinemachineGroupComposer.AdjustmentMode DollyThenZoom = 2;
}
public enum CinemachineOrbitalTransposer.Heading.HeadingDefinition
{
	// Fields
	public const CinemachineOrbitalTransposer.Heading.HeadingDefinition PositionDelta = 0;
	public const CinemachineOrbitalTransposer.Heading.HeadingDefinition Velocity = 1;
	public const CinemachineOrbitalTransposer.Heading.HeadingDefinition TargetForward = 2;
	public const CinemachineOrbitalTransposer.Heading.HeadingDefinition WorldForward = 3;
}
public enum CinemachineTrackedDolly.CameraUpMode
{
	// Fields
	public const CinemachineTrackedDolly.CameraUpMode Default = 0;
	public const CinemachineTrackedDolly.CameraUpMode Path = 1;
	public const CinemachineTrackedDolly.CameraUpMode PathNoRoll = 2;
	public const CinemachineTrackedDolly.CameraUpMode FollowTarget = 3;
	public const CinemachineTrackedDolly.CameraUpMode FollowTargetNoRoll = 4;
}
public enum CinemachineTransposer.BindingMode
{
	// Fields
	public const CinemachineTransposer.BindingMode LockToTargetOnAssign = 0;
	public const CinemachineTransposer.BindingMode LockToTargetWithWorldUp = 1;
	public const CinemachineTransposer.BindingMode LockToTargetNoRoll = 2;
	public const CinemachineTransposer.BindingMode LockToTarget = 3;
	public const CinemachineTransposer.BindingMode WorldSpace = 4;
	public const CinemachineTransposer.BindingMode SimpleFollowWithWorldUp = 5;
}
public enum CinemachineBlendDefinition.Style
{
	// Fields
	public const CinemachineBlendDefinition.Style Cut = 0;
	public const CinemachineBlendDefinition.Style EaseInOut = 1;
	public const CinemachineBlendDefinition.Style EaseIn = 2;
	public const CinemachineBlendDefinition.Style EaseOut = 3;
	public const CinemachineBlendDefinition.Style HardIn = 4;
	public const CinemachineBlendDefinition.Style HardOut = 5;
	public const CinemachineBlendDefinition.Style Linear = 6;
	public const CinemachineBlendDefinition.Style Spherical_Linear = 7;
}
public enum CinemachineCore.Stage
{
	// Fields
	public const CinemachineCore.Stage Body = 0;
	public const CinemachineCore.Stage Aim = 1;
	public const CinemachineCore.Stage Noise = 2;
}
public enum CinemachineCore.UpdateFilter
{
	// Fields
	public const CinemachineCore.UpdateFilter Fixed = 0;
	public const CinemachineCore.UpdateFilter ForcedFixed = 1;
	public const CinemachineCore.UpdateFilter Late = 2;
	public const CinemachineCore.UpdateFilter ForcedLate = 3;
}
public enum CinemachinePathBase.PositionUnits
{
	// Fields
	public const CinemachinePathBase.PositionUnits PathUnits = 0;
	public const CinemachinePathBase.PositionUnits Distance = 1;
}
public enum AdjustEnvironment
{
	// Fields
	public const AdjustEnvironment Sandbox = 0;
	public const AdjustEnvironment Production = 1;
}
public enum AdjustLogLevel
{
	// Fields
	public const AdjustLogLevel Verbose = 1;
	public const AdjustLogLevel Debug = 2;
	public const AdjustLogLevel Info = 3;
	public const AdjustLogLevel Warn = 4;
	public const AdjustLogLevel Error = 5;
	public const AdjustLogLevel Assert = 6;
	public const AdjustLogLevel Suppress = 7;
}
